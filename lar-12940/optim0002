      PROGRAM OPTIM(INPUT=201B,OUTPUT=201B,TAPE5=201B,TAPE6=OUTPUT       OPTIM       2
     *, DEBUG=OUTPUT,TAPE7=201B,TAPE8=201B,TAPE9=201B,TAPE11)            OPTIM       3
C                                                                        OPTIM       4
C          ** THIS PROGRAM SYNTHESIZES A FIXED-RANGE, FUEL AND TIME      OPTIM       5
C          **     OPTIMAL TRAJECTORY FOR A CTOL AIRCRAFT.                OPTIM       6
C          ** CONTROLS ARE V AND THRUST.                                 OPTIM       7
C          ** THE INDEPENDENT VARIABLE IS ENERGY.                        OPTIM       8
C                                                                        OPTIM       9
      IMPLICIT REAL(M)                                                   OPTIM      10
      REAL LAMBDA,LAMBS, LAMBDX                                          OPTIM      11
      INTEGER MFGR                                                       OPTIM      12
      EXTERNAL FBOUND, FCOST, FOPT,FCLIMB,FCLMB2                         OPTIM      13
      COMMON/CLIMB/MACH, D, ICLIMB,TDUMMY, TRSTDR                        OPTIM      14
      COMMON/COST/EPR, ICOST, FC, TC,  DTEMPK, W, FUELDT, FFLOW          OPTIM      15
      COMMON /CRURNG/ ECRUZ, FCRUZ, HCRUZ, IL1, IL2, IW, PFW             OPTIM      16
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, THSMAX,MFGR   OPTIM      17
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS, MXVTAS,VTAS2     OPTIM      18
      COMMON /EPSILN/ EPSIL1, EPSIL2, ISPLMT                             OPTIM      19
      COMMON/GRAF/CGRAF(200,12),DGRAF(200,12),JCLIMB,JDESCN,IGRAF        OPTIM      20
      COMMON/HDCOM/HEADER(8)                                             OPTIM      21
      COMMON/III/IPRINT, IDRAG                                           OPTIM      22
      COMMON /IO/ ANS(4), WS(11), EOPTS(11), HSTARS(11), MSTARS(11),     OPTIM      23
     1 PISTRS(11), LAMBS(11), VTASOP(11), FUELFL(11), CRDIST(11),        OPTIM      24
     2CRTIME(11), MNCOST(2), MOPIAS(2), MOPTAS(2), MACHOP(2), FDTOPT(2), OPTIM      25
     3 OPTALT(2), HOPT(2), EPRS(2),IWMAX,IOPARM,HTO, VTO, HOLNDG,VOLNDG, OPTIM      26
     4  ETO, DEIN                                                        OPTIM      27
      COMMON/OPT/OPTMAK,IOPT,EDTMX                                       OPTIM      28
      COMMON/PRTCOM/LESPRT                                               OPTIM      29
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    OPTIM      30
     1 DLLDEE(2, 10),IWMAXX, WTO, WCRUZ ,CRUZCT,HHCRUZ(50,10),           OPTIM      31
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         OPTIM      32
      COMMON /WINDY/IWIND, PSIA, VWA                                     OPTIM      33
      COMMON /ACFT/ IAC, SAC, HMAX                                       OPTIM      34
      COMMON/TITLER/TITLE(8)                                             OPTIM      35
      DIMENSION CARD(8)                                                  OPTIM      36
      DATA FS2KNT / 1.68781 /                                            OPTIM      37
C                                                                        OPTIM      38
C                                                                        OPTIM      39
 1000 FORMAT(8A10)                                                       OPTIM      40
 2100 FORMAT(1H1, 20X, 8A10)                                             OPTIM      41
 1001 FORMAT(20I4)                                                       OPTIM      42
 2000 FORMAT(2X,8H    ITAB,8H  IPRINT,8H  IOPARM,8H   IWIND,             OPTIM      43
     1      8H    MFGR,8H  NOBTBL,8H    IDCT,8H  ISPLMT,8H   IGRAF,      OPTIM      44
     2      8H    ITOA, 8H     IAC,8H  LESPRT/ 1X, 15I8)                 OPTIM      45
 2001 FORMAT(8H0ITAB  %, I3, 27H  GENERATE NEW CRUISE TABLE  )           OPTIM      46
 2002 FORMAT(8H0ITAB  %, I3, 22H  USE OLD CRUISE TABLE  )                OPTIM      47
 2003 FORMAT(8H0IPRINT%, I3, 25H  CONTROLS EXTRA PRINTOUT)               OPTIM      48
 2004 FORMAT(8H0IOPARM%, I3, 17H  OPTIMIZE V ONLY  )                     OPTIM      49
 2005 FORMAT(8H0IOPARM%, I3, 24H  OPTIMIZE WITH V AND PI )               OPTIM      50
 2006 FORMAT(8H0IWIND %, I3, 9H  NO WIND)                                OPTIM      51
 2007 FORMAT(8H0IWIND %, I3, 12H  INPUT WIND)                            OPTIM      52
 2008 FORMAT(8H0MFGR  %, I3, 36H  FUEL FLOW RATE FROM CURVE FIT DATA)    OPTIM      53
 2009 FORMAT(8H0MFGR  %, I3, 32H  FUEL FLOW RATE FROM SFC TABLES)        OPTIM      54
 2010 FORMAT(8H0NOBTBL%, I3, 34H  CONTROLS PRINTOUT OF ENGINE DATA)      OPTIM      55
 2011 FORMAT(8H0IDCT  %, I3, 30H  NORMAL THREE-PART TRAJECTORY)          OPTIM      56
 2012 FORMAT(8H0IDCT  %, I3, 46H  CRUISE ALTITUDE FIXED  THREE-PART TRAJ OPTIM      57
     1ECTORY)                                                            OPTIM      58
 2013 FORMAT(8H0IDCT  %, I3, 26H INITIAL RANGE-TO-GO (RO)  ,             OPTIM      59
     1 51HAND WEIGHT (WO) SPECIFIED. FIND OPTIMUM HO AND VO. )           OPTIM      60
 2014 FORMAT(8H0IDCT  %, I3, 35H RO, WO, AND HO SPECIFIED. FIND VO.)     OPTIM      61
 2015 FORMAT(8H0ISPLMT%, I3, 30H  NO KIAS LIMIT BELOW 10000FT )          OPTIM      62
 2016 FORMAT(8H0ISPLMT%, I3, 31H  250 KIAS LIMIT BELOW 10000FT )         OPTIM      63
 2017 FORMAT(8H0ITOA  %, I3, 26H  REGULAR OPTIMIZATION RUN  )            OPTIM      64
 2018 FORMAT(8H0ITOA  %, I3, 35H  FIXED TIME OF ARRIVAL CONSTRAINT )     OPTIM      65
 2019 FORMAT(8H0IAC   %, I3, 25H  TRI-JET AIRCRAFT MODEL )               OPTIM      66
 2020 FORMAT(8H0IAC   %, I3, 26H  TWIN-JET AIRCRAFT MODEL )              OPTIM      67
 2021 FORMAT(8H0LESPRT%, I3, 20H  NORMAL PRINT-OUT  )                    OPTIM      68
 2022 FORMAT(8H0LESPRT%, I3, 20H  MINIMUM PRINT-OUT )                    OPTIM      69
 2023 FORMAT(8H0MFGR  %, I3, 39H  THRUST/DRAG/FUEL FLOW FROM CURVE FITS) OPTIM      70
 2024 FORMAT(8H0MFGR  %, I3, 47H  THRUST/DRAG FROM CURVE FITS; FDOT FROM OPTIM      71
     1 TABLES)                                                           OPTIM      72
 2025 FORMAT(8H0IGRAF %, I3, 32H  NO DATA SET WRITTEN ON UNIT 11)        OPTIM      73
 2026 FORMAT(8H0IGRAF %, I3, 47H  DATA SET WRITTEN ON UNIT 11, NO PRINTE OPTIM      74
     1R PLOTS)                                                           OPTIM      75
 2027 FORMAT(8H0IGRAF %, I3, 47H  DATA SET WRITTEN ON UNIT 11, BASIC PLO OPTIM      76
     1TS MADE)                                                           OPTIM      77
 2028 FORMAT(8H0IGRAF %, I3, 45H  DATA SET WRITTEN ON UNIT 11, ALL PLOTS OPTIM      78
     1MADE )                                                             OPTIM      79
 1300 FORMAT(1H1)                                                        OPTIM      80
 1350 FORMAT(10X,*OPTIMAL TRAJECTORY FOR A CONTROL AIRCRAFT*//)          OPTIM      81
 1400 FORMAT(1H0,25X,19HLIST OF INPUT CARDS,//)                          OPTIM      82
 1450 FORMAT(10X,80H0000000001111111111222222222233333333334444444444555 OPTIM      83
     .5555555666666666677777777778/10X,80H123456789012345678901234567890 OPTIM      84
     .12345678901234567890123456789012345678901234567890)                OPTIM      85
  110 FORMAT(10X,8A10)                                                   OPTIM      86
C                                                                        OPTIM      87
C                                                                        OPTIM      88
      READ(5,1000)TITLE                                                  OPTIM      89
      CALL BANNER                                                        OPTIM      90
      CALL BANNER                                                        OPTIM      91
      WRITE(6,1300)                                                      OPTIM      92
      WRITE(6,1350)                                                      OPTIM      93
      WRITE(6,1400)                                                      OPTIM      94
      WRITE(6,1450)                                                      OPTIM      95
  120 CONTINUE                                                           OPTIM      96
      READ(5,1000)CARD                                                   OPTIM      97
      IF(EOF(5))300,200                                                  OPTIM      98
  200 CONTINUE                                                           OPTIM      99
      WRITE(6,110)CARD                                                   OPTIM     100
      GO TO 120                                                          OPTIM     101
  300 REWIND 5                                                           OPTIM     102
      WRITE(6,1450)                                                      OPTIM     103
      WRITE(6,1300)                                                      OPTIM     104
      READ(5,1000) HEADER                                                OPTIM     105
      WRITE(6,2100) HEADER                                               OPTIM     106
      READ(5,1001) ITAB, IPRINT, IOPARM, IWIND,MFGR,NOBTBL, IDCT,        OPTIM     107
     1     ISPLMT, IGRAF, ITOA, IAC, LESPRT                              OPTIM     108
      WRITE(6,2000) ITAB, IPRINT, IOPARM, IWIND, MFGR,NOBTBL, IDCT,      OPTIM     109
     1     ISPLMT, IGRAF, ITOA, IAC, LESPRT                              OPTIM     110
      IF (ITAB .EQ. 0)  WRITE(6, 2001) ITAB                              OPTIM     111
      IF (ITAB .EQ. 1)  WRITE(6, 2002) ITAB                              OPTIM     112
      WRITE(6, 2003) IPRINT                                              OPTIM     113
      IF (IOPARM .EQ. 0)  WRITE(6, 2004) IOPARM                          OPTIM     114
      IF (IOPARM .EQ. 1)  WRITE(6, 2005) IOPARM                          OPTIM     115
      IF (IWIND .EQ. 0)  WRITE(6, 2006) IWIND                            OPTIM     116
      IF (IWIND .EQ. 1)  WRITE(6, 2007) IWIND                            OPTIM     117
      IF (MFGR .EQ. 1)  WRITE(6,2008) MFGR                               OPTIM     118
      IF (MFGR .EQ. 2)  WRITE(6,2009) MFGR                               OPTIM     119
      IF (MFGR .EQ. 3)  WRITE(6,2023) MFGR                               OPTIM     120
      IF (MFGR .EQ. 4)  WRITE(6,2024) MFGR                               OPTIM     121
      WRITE(6, 2010) NOBTBL                                              OPTIM     122
      IF (IDCT .EQ. 0)  WRITE(6, 2011) IDCT                              OPTIM     123
      IF (IDCT .EQ. 1)  WRITE(6, 2012) IDCT                              OPTIM     124
      IF (IDCT .EQ. 2)  WRITE(6, 2013) IDCT                              OPTIM     125
      IF (IDCT .EQ. 3)  WRITE(6, 2014) IDCT                              OPTIM     126
      IF (ISPLMT .EQ. 0)  WRITE(6, 2015) ISPLMT                          OPTIM     127
      IF (ISPLMT .EQ. 1)  WRITE(6, 2016) ISPLMT                          OPTIM     128
      IF (IGRAF .EQ. 0) WRITE(6, 2025) IGRAF                             OPTIM     129
      IF (IGRAF .EQ. 1) WRITE(6, 2026) IGRAF                             OPTIM     130
      IF (IGRAF .EQ. 2) WRITE(6, 2027) IGRAF                             OPTIM     131
      IF (IGRAF .GT. 2) WRITE(6, 2028) IGRAF                             OPTIM     132
      IF (ITOA .EQ. 0)  WRITE(6,2017) ITOA                               OPTIM     133
      IF (ITOA .GT. 0)  WRITE(6,2018) ITOA                               OPTIM     134
      IF (IAC .EQ. 0)  IAC = 2                                           OPTIM     135
C           DEFAULT--IF NO AIRCRAFT SPECIFIED, USE TRI-JET MODEL         OPTIM     136
      IF (IAC .LE. 2)  WRITE(6, 2019) IAC                                OPTIM     137
      IF (IAC .EQ. 3)  WRITE(6, 2020) IAC                                OPTIM     138
      IF (LESPRT.LE.1) WRITE(6,2021) LESPRT                              OPTIM     139
      IF (LESPRT.GT.1) WRITE(6,2022) LESPRT                              OPTIM     140
      SAC = 1560.                                                        OPTIM     141
      HMAX = 39999.                                                      OPTIM     142
      IF (IAC .EQ. 3)  GO TO 13                                          OPTIM     143
      IF (NOBTBL .EQ. 0)  GO TO 10                                       OPTIM     144
      CALL CPMEPR                                                        OPTIM     145
      CALL PAGE                                                          OPTIM     146
      GO TO 15                                                           OPTIM     147
   10 CALL CPMNOW                                                        OPTIM     148
      GO TO 15                                                           OPTIM     149
   13 CONTINUE                                                           OPTIM     150
      IF (NOBTBL .EQ. 1)  CALL EPRNT3                                    OPTIM     151
      SAC = 980.                                                         OPTIM     152
      HMAX = 39999.                                                      OPTIM     153
   15 CONTINUE                                                           OPTIM     154
      IF (ITOA .EQ. 1)  CALL OPTTOA(IDCT, ITOA)                          OPTIM     155
      PC = 0.                                                            OPTIM     156
      IMFD = 0                                                           OPTIM     157
      IF (ITAB .NE. 0)  GO TO 20                                         OPTIM     158
      CALL CRUZOP                                                        OPTIM     159
   20 CALL CRUTBL(ITAB, WCRUZ, LAMBDA, RANGE                             OPTIM     160
     1,  IPRINT, EF, IDCT, PC)                                           OPTIM     161
      LAMBDX = LAMBDA                                                    OPTIM     162
      EPSIL2 = .162 * LAMBDX                                             OPTIM     163
      EPSIL1 = EPSIL2 * 2.                                               OPTIM     164
C                                                                        OPTIM     165
      WTO = W                                                            OPTIM     166
      IPC = 1                                                            OPTIM     167
      IF (IDCT .GT. 1)  GO TO 25                                         OPTIM     168
      IF (IDCT .EQ. 1)  GO TO 36                                         OPTIM     169
      IF (IOPARM .EQ. 0)  PC = 0.5                                       OPTIM     170
      GO TO 30                                                           OPTIM     171
   25 CONTINUE                                                           OPTIM     172
      LAMBDA = LAMBDA / FS2KNT                                           OPTIM     173
      TDIST = 0.                                                         OPTIM     174
      WLNDG = WTO - 940.                                                 OPTIM     175
      ICLIMB = 2                                                         OPTIM     176
      EF = ECRUZ                                                         OPTIM     177
   30 CONTINUE                                                           OPTIM     178
      ISPLIZ = 1                                                         OPTIM     179
      IF (IDCT .GT. 1)  GO TO 45                                         OPTIM     180
      IF (IDCT .EQ. 0)  GO TO 35                                         OPTIM     181
      GO TO 40                                                           OPTIM     182
   35 WCRUZ = WTO - FULEST(RANGE,IOPARM,ETO,FC,TC,PC,ECRUZ,EF)           OPTIM     183
      GO TO 40                                                           OPTIM     184
   36 ISPLIZ = 0                                                         OPTIM     185
   40 ICLIMB = 1                                                         OPTIM     186
      CALL UPDOWN(EF,1,WTO,WLNDG,ECRUZ,WCRUZ,IDCT)                       OPTIM     187
      ICLIMB = 2                                                         OPTIM     188
      CALL WATEST(ECRUZ, WLNDG, RANGE, 0, PC, IOPARM,IDCT, IMFD)         OPTIM     189
      IF ((IDCT.EQ.1).OR.(IOPARM.EQ.0)) LAMBDA = LAMBDA/FS2KNT           OPTIM     190
   45 CALL UPDOWN(EF,1,WTO,WLNDG,ECRUZ,WCRUZ,IDCT)                       OPTIM     191
   50 CALL VOPTRJ(WLNDG,TDIST,PC,LAMBDA,ISPLIZ,RANGE,IOPARM,EF,1         OPTIM     192
     1,    IDCT, TTIME, IMFD, IPC)                                       OPTIM     193
   55 CALL UPDOWN(EF,1,WTO,WLNDG,ECRUZ,WCRUZ,IDCT)                       OPTIM     194
      CALL VOPTRJ(WLNDG,TDIST,PC,LAMBDA,ISPLIZ,RANGE,IOPARM,EF,2         OPTIM     195
     1,    IDCT, TTIME, IMFD, IPC)                                       OPTIM     196
C   IF (IDCT .GT. 0)  PCCOMP WRITES GRAF DATASET                         OPTIM     197
C          AND THEN STOPS                                                OPTIM     198
   60 CALL PCCOMP(PC,IPC,X3,RANGE,TDIST,LINEAR,IOPARM,ISPLIZ,IDCT        OPTIM     199
     1,    ITOA, WTO)                                                    OPTIM     200
     2,   RETURNS(50)                                                    OPTIM     201
      GO TO 35                                                           OPTIM     202
C          THE STOP STATEMENT IS CONTAINED IN SUBROUTINE PCCOMP          OPTIM     203
      END                                                                OPTIM     204
      SUBROUTINE OPTTOA(IDCT, ITOA)                                      OPTTOA      2
C  EXECUTIVE TO COMPUTE VARIABLE COST OF TIME SO THAT INPUT TIME-OF-     OPTTOA      3
C    ARRIVAL IS ACHIEVED. THE LOWER BOUND ON TIME COST IS SET SO THAT    OPTTOA      4
C    CRUISE AIRSPEED IS NOT LESS THAN THAT WHICH PRODUCES MINIMUM FUEL   OPTTOA      5
C    FLOW RATE.                                                          OPTTOA      6
C                                                                        OPTTOA      7
      IMPLICIT REAL(M)                                                   OPTTOA      8
      REAL LAMBDA,LAMBS                                                  OPTTOA      9
      INTEGER MFGR                                                       OPTTOA     10
      EXTERNAL FBOUND, FCOST, FOPT,FCLIMB,FCLMB2                         OPTTOA     11
      COMMON/CLIMB/MACH, D, ICLIMB,TDUMMY, TRSTDR                        OPTTOA     12
      COMMON/COST/EPR, ICOST, FC, TC,  DTEMPK, W, FUELDT, FFLOW          OPTTOA     13
      COMMON /CRURNG/ ECRUZ, FCRUZ, HCRUZ, IL1, IL2, IW, PFW             OPTTOA     14
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, THSMAX,MFGR   OPTTOA     15
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS, MXVTAS,VTAS2     OPTTOA     16
      COMMON /EPSILN/ EPSIL1, EPSIL2, ISPLMT                             OPTTOA     17
      COMMON /EXTRA/ FBCRUZ(50,10), MBPTAS(50,10), EB(50,10), VKTASI,    OPTTOA     18
     1 FCRUZI,TTIME,MBFF(11),HBFF(11),FBFF(11),TBFF(11),EBFF(11),        OPTTOA     19
     2 EBOPT(11)                                                         OPTTOA     20
      COMMON /GRAF/ CGRAF(200,12), DGRAF(200,12), JCLIMB, JDESCN, IGRAF  OPTTOA     21
      COMMON/III/IPRINT, IDRAG                                           OPTTOA     22
      COMMON /IO/ ANS(4), WS(11), EOPTS(11), HSTARS(11), MSTARS(11),     OPTTOA     23
     1 PISTRS(11), LAMBS(11), VTASOP(11), FUELFL(11), CRDIST(11),        OPTTOA     24
     2CRTIME(11), MNCOST(2), MOPIAS(2), MOPTAS(2), MACHOP(2), FDTOPT(2), OPTTOA     25
     3 OPTALT(2), HOPT(2), EPRS(2),IWMAX,IOPARM,HTO, VTO, HOLNDG,VOLNDG, OPTTOA     26
     4  ETO, DEIN                                                        OPTTOA     27
      COMMON/OPT/OPTMAK,IOPT,EDTMX                                       OPTTOA     28
      COMMON /PRTCOM/ LESPRT                                             OPTTOA     29
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    OPTTOA     30
     1 DLLDEE(2, 10),IWMAXX, WTO, WCRUZ ,CRUZCT,HHCRUZ(50,10),           OPTTOA     31
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         OPTTOA     32
      COMMON /WINDY/IWIND, PSIA, VWA                                     OPTTOA     33
C                                                                        OPTTOA     34
      DIMENSION C(3,3), CC(20,3), TM(3), TEM(20)                         OPTTOA     35
      DATA TEP, DTC, FS2KNT / 10., 300., 1.68781  /                      OPTTOA     36
C                                                                        OPTTOA     37
 1000 FORMAT(8F10.2)                                                     OPTTOA     38
 1001 FORMAT(20H0 AIRCRAFT HEADING =  F10.0, 2X, 3HDEG)                  OPTTOA     39
 1003 FORMAT(16H0FUEL COST($/LB) F9.4,2X,17HTIME COST($/HR)=  F7.2,2X,   OPTTOA     40
     1 18HTEMP VAR (DEG K) =, F7.2,20HA/C HEADING (DEG) = ,F7.2)         OPTTOA     41
 1004 FORMAT(5X,13HON PASS NO.  ,I2,16H  FLIGHT TIME IS,F10.2,           OPTTOA     42
     1  34H SEC. FOR THE COST OF TIME SET AT ,F10.3, 6H  $/HR)           OPTTOA     43
 1005 FORMAT(15H0 RUN CONVERGED )                                        OPTTOA     44
 1006 FORMAT(36H0 RUN DID NOT CONVERGE AFTER 9 TRIES )                   OPTTOA     45
 1008 FORMAT(26H0  MINIMUM FUEL RATE TIME- , F10.3)                      OPTTOA     46
 1009 FORMAT(38H0  TEND EXCEEDS MINIMUM FUEL RATE TIME )                 OPTTOA     47
 2020 FORMAT(40H0WEIGHT FOR FIRST CRUISE TABLE (MAXIMUM) , F9.0 /        OPTTOA     48
     1       40H WEIGHT FOR FINAL CRUISE TABLE (MINIMUM) , F9.0 /        OPTTOA     49
     2       32H WEIGHT DECREMENT BETWEEN TABLES , 8X, F9.0)             OPTTOA     50
 2021 FORMAT(//// 11H0CARD INPUT                                         OPTTOA     51
     1 , 5X, 16HW INITIAL WEIGHT  ,2X,F10.2                              OPTTOA     52
     2 , 2X, 5HRANGE 2X,F10.2                                            OPTTOA     53
     3 , 2X, 21HDEIN ENERGY INCREMENT , F10.2                            OPTTOA     54
     4 , 2X, 21HFIXED CRUISE ALTITUDE  , F10.2                           OPTTOA     55
     5 / 16X, 15HTIME OF ARRIVAL , F13.2, 2X, 3HSEC)                     OPTTOA     56
 2022 FORMAT( 11H0CARD INPUT                                             OPTTOA     57
     1, 5X,  22HHTO INITIAL ALTITUDE  , F13.2                            OPTTOA     58
     2, 5X,  22HVTO INITIAL SPEED KIAS   , F13.2 /                       OPTTOA     59
     3 16X,  22HHOLNDG FINAL ALTITUDE , F13.2                            OPTTOA     60
     4, 5X,  23HVOLNDG FINAL SPEED KIAS  , F12.2)                        OPTTOA     61
C                                                                        OPTTOA     62
      READ (5, 1000) FC, TC, DTEMPK, PSIA                                OPTTOA     63
C                                                                        OPTTOA     64
C          W IN /COST/ USED FOR WEIGHT FOR FIRST CRUISE TABLE GENERATED  OPTTOA     65
C         WTO IN /VTRCRU/ USED FOR TAKE-OFF WEIGHT                       OPTTOA     66
C                                                                        OPTTOA     67
      READ(5,1000)  WT, WN, DEW                                          OPTTOA     68
      READ(5, 1000) WTO, RANGE, DEIN, HCRU, TEND                         OPTTOA     69
      READ(5, 1000) HTO, VTO, HOLNDG, VOLNDG                             OPTTOA     70
      IF (IWIND .EQ. 0)  GO TO 10                                        OPTTOA     71
      CALL WINDIN                                                        OPTTOA     72
      WRITE(6, 1001) PSIA                                                OPTTOA     73
      GO TO 15                                                           OPTTOA     74
   10 VWA = 0.                                                           OPTTOA     75
   15 WRITE(6,1003) FC, TC, DTEMPK, PSIA                                 OPTTOA     76
      WRITE(6,2020) WT, WN, DEW                                          OPTTOA     77
      WRITE(6, 2021) WTO, RANGE, DEIN, HCRU, TEND                        OPTTOA     78
      WRITE(6, 2022) HTO, VTO, HOLNDG, VOLNDG                            OPTTOA     79
C                                                                        OPTTOA     80
C  GET FUEL OPTIMUM RESULTS WITH TC=0.                                   OPTTOA     81
      TC = 0.                                                            OPTTOA     82
      ISET = 0.                                                          OPTTOA     83
      IF1 = 0                                                            OPTTOA     84
      JSET = 0                                                           OPTTOA     85
      IMFD = 0                                                           OPTTOA     86
      ISPLIZ = 0                                                         OPTTOA     87
      PC = 0.                                                            OPTTOA     88
   20 CONTINUE                                                           OPTTOA     89
C                                                                        OPTTOA     90
C  SEQUENCE TO COMPUTE THE OPTIMUM PROFILE                               OPTTOA     91
C                                                                        OPTTOA     92
      CALL CRUTOA(IDCT, RANGE, HCRU, WT, WN, DEW, PC, IF1)               OPTTOA     93
      EPSIL2 = .162*LAMBDA                                               OPTTOA     94
      EPSIL1 = EPSIL2*2.                                                 OPTTOA     95
   21 W = WTO                                                            OPTTOA     96
      IPC = 2                                                            OPTTOA     97
      IF (IDCT .GT. 1)  GO TO 25                                         OPTTOA     98
      EF = ECRUZ                                                         OPTTOA     99
      IF (IDCT .EQ. 1)  GO TO 40                                         OPTTOA    100
      GO TO 35                                                           OPTTOA    101
   25 CONTINUE                                                           OPTTOA    102
      LAMBDA = LAMBDA / FS2KNT                                           OPTTOA    103
      TDIST = 0.                                                         OPTTOA    104
      WLNDG = WTO - 940.                                                 OPTTOA    105
      ICLIMB = 2                                                         OPTTOA    106
      EF = ECRUZ                                                         OPTTOA    107
      GO TO 45                                                           OPTTOA    108
   35 WCRUZ = WTO - FULEST(RANGE,IOPARM,ETO,FC,TC,PC,ECRUZ,EF)           OPTTOA    109
   40 ICLIMB = 1                                                         OPTTOA    110
      CALL UPDOWN(EF,1,WTO,WLNDG,ECRUZ,WCRUZ,IDCT)                       OPTTOA    111
      ICLIMB = 2                                                         OPTTOA    112
      CALL WATEST(ECRUZ,WLNDG,RANGE,0,PC,IOPARM,IDCT,IMFD)               OPTTOA    113
      IF ((IDCT.EQ.1).OR.(IOPARM.EQ.0)) LAMBDA = LAMBDA/FS2KNT           OPTTOA    114
   45 CALL UPDOWN(EF,1,WTO,WLNDG,ECRUZ,WCRUZ,IDCT)                       OPTTOA    115
      CALL VOPTRJ(WLNDG,TDIST,PC,LAMBDA,ISPLIZ,RANGE,IOPARM,EF,1         OPTTOA    116
     1,    IDCT, TTIME, IMFD, IPC)                                       OPTTOA    117
      CALL UPDOWN(EF,1,WTO,WLNDG,ECRUZ,WCRUZ,IDCT)                       OPTTOA    118
      CALL VOPTRJ(WLNDG,TDIST,PC,LAMBDA,ISPLIZ,RANGE,IOPARM,EF,2         OPTTOA    119
     1,    IDCT, TTIME, IMFD, IPC)                                       OPTTOA    120
      WRITE(6, 1004) ISET, TTIME, TC                                     OPTTOA    121
      IF (ABS(TEND-TTIME) .LE. TEP)  GO TO 200                           OPTTOA    122
      IF (JSET .LT. 0)  GO TO 150                                        OPTTOA    123
      IF (ISET .EQ. 0)  GO TO 100                                        OPTTOA    124
      IF (ISET .EQ. 1)  GO TO 110                                        OPTTOA    125
      IF (ISET .EQ. 2)  GO TO 120                                        OPTTOA    126
      IF (ISET .GE. 3)  GO TO 135                                        OPTTOA    127
  100 CONTINUE                                                           OPTTOA    128
      ISET = 1                                                           OPTTOA    129
      IF1 = 1                                                            OPTTOA    130
      IF (TEND .LT. TTIME)  GO TO 105                                    OPTTOA    131
      JSET = -1                                                          OPTTOA    132
      GO TO 150                                                          OPTTOA    133
  105 JSET = 1                                                           OPTTOA    134
      C(1,1) = TC*TC                                                     OPTTOA    135
      C(1,2) = TC                                                        OPTTOA    136
      C(1,3) = 1.                                                        OPTTOA    137
      TM(1) = TTIME                                                      OPTTOA    138
      TC = TC + DTC                                                      OPTTOA    139
      GO TO 20                                                           OPTTOA    140
  110 CONTINUE                                                           OPTTOA    141
      ISET = 2                                                           OPTTOA    142
      C(2,1) = TC * TC                                                   OPTTOA    143
      C(2,2) = TC                                                        OPTTOA    144
      C(2,3) = 1.                                                        OPTTOA    145
      TM(2) = TTIME                                                      OPTTOA    146
      IF (TEND .GT. TTIME)  GO TO 115                                    OPTTOA    147
      TC = TC + DTC                                                      OPTTOA    148
      GO TO 20                                                           OPTTOA    149
  115 CONTINUE                                                           OPTTOA    150
      A2 = (TM(1) -TM(2))/(C(1,2)-TC)                                    OPTTOA    151
      A3 = (-TC*TM(1)+C(1,2)*TM(2))/(C(1,2)-TC)                          OPTTOA    152
      TC = (TEND-A3)/A2                                                  OPTTOA    153
      GO TO 20                                                           OPTTOA    154
  120 CONTINUE                                                           OPTTOA    155
      ISET = 3                                                           OPTTOA    156
  122 C(3,1) = TC*TC                                                     OPTTOA    157
      C(3,2) = TC                                                        OPTTOA    158
      C(3,3) = 1.                                                        OPTTOA    159
      TM(3) = TTIME                                                      OPTTOA    160
      IF (JSET .LT. 0)  GO TO 125                                        OPTTOA    161
      IF (TEND .GT. TTIME)  GO TO 125                                    OPTTOA    162
      ISET = 2                                                           OPTTOA    163
      DO 123 I=1,2                                                       OPTTOA    164
      IP = I + 1                                                         OPTTOA    165
      TM(I) = TM(IP)                                                     OPTTOA    166
      DO 123 J=1,3                                                       OPTTOA    167
  123 C(I,J) = C(IP,J)                                                   OPTTOA    168
      TC = TC + DTC                                                      OPTTOA    169
      GO TO 20                                                           OPTTOA    170
  125 DO 130 I=1,3                                                       OPTTOA    171
      DO 128 J=1,3                                                       OPTTOA    172
  128 CC(J,I) = C(J,I)                                                   OPTTOA    173
  130 TEM(I) = TM(I)                                                     OPTTOA    174
      CALL MATINV(CC, 3, TEM, 1, DETERM)                                 OPTTOA    175
      A1 = TEM(1)                                                        OPTTOA    176
      A2 = TEM(2)                                                        OPTTOA    177
      A3 = TEM(3)                                                        OPTTOA    178
      DET = A2*A2 - 4. * A1 * (A3-TEND)                                  OPTTOA    179
      IF (DET .LE. 0)  GO TO 131                                         OPTTOA    180
      SDET = SQRT(DET)                                                   OPTTOA    181
      GO TO 132                                                          OPTTOA    182
  131 SDET = 0.                                                          OPTTOA    183
      ISET = 9                                                           OPTTOA    184
  132 TC1 = (-A2 + SDET) / (2.*A1)                                       OPTTOA    185
      TC2 = (-A2 - SDET) / (2.*A1)                                       OPTTOA    186
      ACT1 = ABS(TC1-TC)                                                 OPTTOA    187
      ACT2 = ABS(TC2-TC)                                                 OPTTOA    188
      TC = TC1                                                           OPTTOA    189
      IF (ACT2 .LT. ACT1)  TC = TC2                                      OPTTOA    190
      WRITE(6,*) TC, TC1, TC2                                            OPTTOA    191
      GO TO 20                                                           OPTTOA    192
  135 CONTINUE                                                           OPTTOA    193
      ISET = ISET + 1                                                    OPTTOA    194
      IF (ISET .GT. 9)  GO TO 300                                        OPTTOA    195
C                                                                        OPTTOA    196
C  DETERMINE WHICH DATA TO ELIMINATE FOR QUADRATIC FIT                   OPTTOA    197
C                                                                        OPTTOA    198
      IF (ISET .EQ. 4  .OR.  ISET .EQ. 7)  GO TO 138                     OPTTOA    199
      IF (ISET .EQ. 5  .OR.  ISET .EQ. 8)  GO TO 139                     OPTTOA    200
      IF (ISET .EQ. 6  .OR.  ISET .EQ. 9)  GO TO 140                     OPTTOA    201
  138 C(1,1) = TC * TC                                                   OPTTOA    202
      C(1,2) = TC                                                        OPTTOA    203
      TM(1) = TTIME                                                      OPTTOA    204
      GO TO 125                                                          OPTTOA    205
  139 C(2,1) = TC*TC                                                     OPTTOA    206
      C(2,2) = TC                                                        OPTTOA    207
      TM(2) = TTIME                                                      OPTTOA    208
      GO TO 125                                                          OPTTOA    209
  140 C(3,1) = TC*TC                                                     OPTTOA    210
      C(3,2) = TC                                                        OPTTOA    211
      TM(3) = TTIME                                                      OPTTOA    212
      GO TO 125                                                          OPTTOA    213
  150 CONTINUE                                                           OPTTOA    214
      IF (ISET .EQ. 2)  GO TO 160                                        OPTTOA    215
      IF (ISET .EQ. 3)  GO TO 170                                        OPTTOA    216
      IF (ISET .GE. 4)  GO TO 135                                        OPTTOA    217
C                                                                        OPTTOA    218
C   COMPUTE TIME FOR MINIMUM FUEL RATE FLIGHT                            OPTTOA    219
C                                                                        OPTTOA    220
      ISET = 2                                                           OPTTOA    221
      CALL WCFM2(WTO, WCRUZ, HCRU, IDCT)                                 OPTTOA    222
      LAMBDA = 0.                                                        OPTTOA    223
      CALL SERCHD(WS, WCRUZ, IWMAX, PF, IW, LIMIT)                       OPTTOA    224
      HCRUZ = HBFF(IW) + PF*(HBFF(IW+1) - HBFF(IW))                      OPTTOA    225
      ECRUZ =EBOPT(IW) + PF*(EBOPT(IW+1)-EBOPT(IW))                      OPTTOA    226
      FCRUZ = FBFF(IW) + PF*(FBFF(IW+1) - FBFF(IW))                      OPTTOA    227
      EF = ECRUZ                                                         OPTTOA    228
      C(1,1) = 0.                                                        OPTTOA    229
      C(1,2) = 0.                                                        OPTTOA    230
      C(1,3) = 1.                                                        OPTTOA    231
      TM(1) = TTIME                                                      OPTTOA    232
      TC = -FC * FCRUZ                                                   OPTTOA    233
      W = WTO                                                            OPTTOA    234
      IMFD = 1                                                           OPTTOA    235
      IF (IDCT .GT. 1)  GO TO 45                                         OPTTOA    236
      GO TO 40                                                           OPTTOA    237
  160 CONTINUE                                                           OPTTOA    238
C                                                                        OPTTOA    239
C   PRINT MIN FUEL RATE RESULTS AND ITERATE ON SOLUTION                  OPTTOA    240
      WRITE(6,1008) TTIME                                                OPTTOA    241
      IF (TTIME .LT. TEND)  GO TO 250                                    OPTTOA    242
      C(2,1) = TC*TC                                                     OPTTOA    243
      C(2,2) = TC                                                        OPTTOA    244
      C(2,3) = 1.                                                        OPTTOA    245
      TM(2) = TTIME                                                      OPTTOA    246
      IMFD = 0                                                           OPTTOA    247
      ISET = 3                                                           OPTTOA    248
      GO TO 115                                                          OPTTOA    249
  170 CONTINUE                                                           OPTTOA    250
      ISET = 4                                                           OPTTOA    251
      GO TO 122                                                          OPTTOA    252
  200 CONTINUE                                                           OPTTOA    253
C                                                                        OPTTOA    254
C  NORMAL CONVERGENCE                                                    OPTTOA    255
      WRITE(6, 1005)                                                     OPTTOA    256
      GO TO 350                                                          OPTTOA    257
  250 CONTINUE                                                           OPTTOA    258
      WRITE(6,1009)                                                      OPTTOA    259
      GO TO 350                                                          OPTTOA    260
  300 CONTINUE                                                           OPTTOA    261
      WRITE(6, 1006)                                                     OPTTOA    262
  350 CONTINUE                                                           OPTTOA    263
      IF (IGRAF.EQ.0) GO TO 400                                          OPTTOA    264
      CALL PCCOMP(PC, IPC, X3, RANGE, TDIST, LINEAR, IOPARM,             OPTTOA    265
     1    ISPLIZ, IDCT, ITOA, WTO)                                       OPTTOA    266
     2,    RETURNS(400)                                                  OPTTOA    267
  400 STOP                                                               OPTTOA    268
      END                                                                OPTTOA    269
      SUBROUTINE BANNER                                                  BANNER      2
      COMMON/TITLER/TITLE(8)                                             BANNER      3
C                                                                        BANNER      4
C                      I / O   F O R M A T S                             BANNER      5
C                                                                        BANNER      6
   10 FORMAT(3X,12(1HO),3X,12(1HP),3X,12(1HT),2X,4(1HI),2X,1HM,15X,1HM,  BANNER      7
     .       3X,3(1HU),6X,3(1HU),3X,1HM,15X,1HM)                         BANNER      8
   20 FORMAT(3X,12(1HO),3X,12(1HP),3X,2HTT,3X,2HTT,3X,2HTT,3X,2HII,3X,   BANNER      9
     .       2HMM,13X,2HMM,3X,3(1HU),6X,3(1HU),3X,2HMM,13X,2HMM)         BANNER     10
   30 FORMAT(3X,3(1HO),6X,3(1HO),3X,2HPP,8X,2HPP,3X,1HT,4X,2HTT,4X,1HT,  BANNER     11
     .       3X,2HII,3X,3(1HM),11X,3(1HM),3X,3(1HU),6X,3(1HU),3X,3(1HM), BANNER     12
     .       11X,3(1HM))                                                 BANNER     13
   40 FORMAT(3X,3(1HO),6X,3(1HO),3X,2HPP,8X,2HPP,8X,2HTT,8X,2HII,3X,     BANNER     14
     .       4(1HM),9X,4(1HM),3X,3(1HU),6X,3(1HU),3X,4(1HM),9X,4(1HM))   BANNER     15
   50 FORMAT(3X,3(1HO),6X,3(1HO),3X,12(1HP),8X,2HTT,8X,2HII,3X,5(1HM),   BANNER     16
     .       7X,2HMM,1X,2HMM,3X,3(1HU),6X,3(1HU),3X,5(1HM),7X,2HMM,1X,   BANNER     17
     .       2HMM)                                                       BANNER     18
   60 FORMAT(3X,3(1HO),6X,3(1HO),3X,12(1HP),8X,2HTT,8X,2HII,3X,3(1HM),   BANNER     19
     .       1X,2HMM,5X,2HMM,2X,2HMM,3X,3(1HU),6X,3(1HU),3X,3(1HM),1X,   BANNER     20
     .       2HMM,5X,2HMM,2X,2HMM)                                       BANNER     21
   70 FORMAT(3X,3(1HO),6X,3(1HO),3X,2HPP,18X,2HTT,8X,2HII,3X,3(1HM),2X,  BANNER     22
     .       2HMM,3X,2HMM,3X,2HMM,3X,3(1HU),6X,3(1HU),3X,3(1HM),2X,2HMM, BANNER     23
     .       3X,2HMM,3X,2HMM)                                            BANNER     24
   80 FORMAT(3X,3(1HO),6X,3(1HO),3X,2HPP,18X,2HTT,8X,2HII,3X,3(1HM),3X,  BANNER     25
     .       2HMM,1X,2HMM,4X,2HMM,3X,3(1HU),6X,3(1HU),3X,3(1HM),3X,2HMM, BANNER     26
     .       1X,2HMM,4X,2HMM)                                            BANNER     27
   90 FORMAT(3X,3(1HO),6X,3(1HO),3X,2HPP,18X,2HTT,8X,2HII,3X,3(1HM),4X,  BANNER     28
     .       2HMM,6X,2HMM,3X,3(1HU),6X,3(1HU),3X,3(1HM),4X,2HMM,6X,2HMM) BANNER     29
  100 FORMAT(3X,3(1HO),6X,3(1HO),3X,2HPP,18X,2HTT,8X,2HII,3X,3(1HM),12X, BANNER     30
     .       2HMM,3X,3(1HU),6X,3(1HU),3X,3(1HM),12X,2HMM)                BANNER     31
  110 FORMAT(3X,12(1HO),3X,2HPP,18X,2HTT,8X,2HII,3X,3(1HM),12X,2HMM,3X,  BANNER     32
     .       3(1HU),6X,3(1HU),3X,3(1HM),12X,2HMM)                        BANNER     33
  120 FORMAT(3X,12(1HO),3X,2HPP,17X,4(1HT),6X,4(1HI),2X,3(1HM),12X,2HMM, BANNER     34
     .       3X,12(1HU),3X,3(1HM),12X,2HMM)                              BANNER     35
  130 FORMAT(1H1)                                                        BANNER     36
  135 FORMAT(7(/))                                                       BANNER     37
  140 FORMAT(16X,47HNASA-LANGLEY RESEARCH CENTER , CDC CYBER SERIES,/)   BANNER     38
  150 FORMAT(16X,41HOPTIMAL TRAJECTORY FOR A CONTROL AIRCRAFT,/)         BANNER     39
  160 FORMAT(16X,7HNOS 1.2,8X,11HFTN 4.6 452,//)                         BANNER     40
  170 FORMAT(16X,13HDATE OF RUN  ,A10)                                   BANNER     41
  180 FORMAT(16X,13HTIME OF RUN  ,A10,//)                                BANNER     42
  190 FORMAT(3X,105(1H*))                                                BANNER     43
  200 FORMAT(16X,*TITLE%*,8A10/)                                         BANNER     44
      CALL DATE(A)                                                       BANNER     45
      CALL TIME(B)                                                       BANNER     46
      WRITE(6,130)                                                       BANNER     47
      WRITE(6,135)                                                       BANNER     48
      WRITE(6,190)                                                       BANNER     49
      WRITE(6,10)                                                        BANNER     50
      WRITE(6,20)                                                        BANNER     51
      WRITE(6,30)                                                        BANNER     52
      WRITE(6,40)                                                        BANNER     53
      WRITE(6,50)                                                        BANNER     54
      WRITE(6,60)                                                        BANNER     55
      WRITE(6,70)                                                        BANNER     56
      WRITE(6,80)                                                        BANNER     57
      WRITE(6,90)                                                        BANNER     58
      WRITE(6,100)                                                       BANNER     59
      WRITE(6,110)                                                       BANNER     60
      WRITE(6,120)                                                       BANNER     61
      WRITE(6,190)                                                       BANNER     62
      WRITE(6,140)                                                       BANNER     63
      WRITE(6,150)                                                       BANNER     64
      WRITE(6,160)                                                       BANNER     65
      WRITE(6,170) A                                                     BANNER     66
      WRITE(6,180) B                                                     BANNER     67
      WRITE(6,200)TITLE                                                  BANNER     68
      WRITE(6,190)                                                       BANNER     69
      END                                                                BANNER     70
      SUBROUTINE AT62(ZFT,ANS)                                           AT62        2
C                                                                        AT62        3
C          ** GENERATION OF ATMOSPHERIC DENSITY, PRESSURE, TEMPERATURE,  AT62        4
C          **   AND SPEED OF SOUND AS A FUNCTION OF ALTITUDE.            AT62        5
C                                                                        AT62        6
      REAL PH,HZ,A,B,WA,WB,D1,D2,D3,PZ                                   AT62        7
      DIMENSION ANS(4)                                                   AT62        8
      DIMENSION HT(8),TH(8),THD(8),PH(8)                                 AT62        9
      DIMENSION ZT(13),TZ(13),TZD(13),HZ(13),A(13),B(13)                 AT62       10
      DIMENSION WA(13),WB(13),WC(13)                                     AT62       11
      DIMENSION D1(13),D2(13),D3(13)                                     AT62       12
      DIMENSION PZ(13)                                                   AT62       13
      DATA HT/0.,11.,20.,32.,47.,52.,61.,79./                            AT62       14
      DATA TH/288.15,216.65,216.65,228.65,270.65,270.65,252.65,180.65/   AT62       15
      DATA THD/-6.5,0.,1.,2.8,0.,-2.,-4.,0./                             AT62       16
      DATA PH/101325.,22632.0638,5474.88855,868.018647,110.906298,       AT62       17
     P59.0009367,18.2100724,1.03771164/                                  AT62       18
      DATA ZT/90.,100.,110.,120.,150.,160.,170.,190.,230.,300.,400.,     AT62       19
     Z500.,600./                                                         AT62       20
      DATA TZ/180.65, 210.65, 260.65, 360.65, 960.65, 1110.65, 1210.65,  AT62       21
     T 1350.65, 1550.65, 1830.65, 2160.65, 2420.65, 2590.65/             AT62       22
      DATA TZD/3.,5.,10.,20.,15.,10.,7.,5.,4.,3.3,2.6,1.7,1.1/           AT62       23
      DATA HZ/88.7433565,98.4509829,108.128578,117.776280,146.541401,    AT62       24
     H156.070901,165.571187,184.484657,221.966870,286.476269,376.312415, AT62       25
     K463.526097,548.230014/                                             AT62       26
      DATA A/.99999916,.99999897,.99999877,.99999832,.99999776,.99999746 AT62       27
     A,.99999698,.99999592,.99999355,.99998878,.99998131,.99997196,      AT62       28
     C.99996075/                                                         AT62       29
      DATA B/.00015734766,.00015734953,.00015735140,.00015735513,        AT62       30
     B.00015735887,.00015736074,.00015736355,.00015736915,.00015737943,  AT62       31
     D.00015739532,.00015741401,.00015743271,.00015745140/               AT62       32
      DATA WA/21.998808, 15.798995, 31.044527, 40.387675, 29.538575,     AT62       33
     W32.268971, 27.789444, 32.166670, 30.241635, 34.561172,             AT62       34
     W36.099504, 38.195672, 18.258073/                                   AT62       35
      DATA WB/.15479092, .27878720, .0015957013, -.15412343,-.0094687678 AT62       36
     W, -.043598715, .0091016009, -.036974463, -.020235026,              AT62       37
     W-.049031942, -.056723605, -.065108273, .0013503901/                AT62       38
      DATA WC/-.85994958E-3, -.14799309E-2, -.21996960E-3, .42886012E-3, AT62       39
     W-.53322091E-4, .53333994E-4, -.10166693E-3, .19585867E-4,          AT62       40
     W-.16804213E-4, .31190648E-4, .40805227E-4, .49189895E-4,           AT62       41
     W-.61923241E-5/                                                     AT62       42
      DATA D1/.0017834765,.0010654122,.00053055610,.00026454351,         AT62       43
     D.00035360997,.00053348782,.00076836496,.0010889831,.0013783559,    AT62       44
     D.0016975137,.0022189663,.0037023997,.0067578185/                   AT62       45
      DATA D2/-11.281753,-6.7098914,-3.3278396,-1.6546388,-2.2171667,    AT62       46
     D-3.3643151,-4.8850055,-7.0083025,-8.9810162,-11.235530,-15.122423, AT62       47
     D-27.520411,-59.311259/                                             AT62       48
      DATA D3/.016920782,.024329051,.039545102,.057409044,.016199137,    AT62       49
     D.0093014845,.0059339235,.0037645169,.0026065966,.0018120459,       AT62       50
     D.0011923023,.00064736059,.00033627561/                             AT62       51
      DATA PZ/.16438012,.030075034,.0073545270,.0025216927,              AT62       52
     P.00050617890,.00036943532,.00027926462,.00016852498,.69605367E-4,  AT62       53
     P.18838777E-4,.40304321E-5,.10956964E-5,.34502614E-6/               AT62       54
      ALT=ZFT*0.3048                                                     AT62       55
      Z=ALT/1000.                                                        AT62       56
      IF(Z.LT.-5.)Z=-5.                                                  AT62       57
      IF(Z.GT.700.)Z=700.                                                AT62       58
      IF(Z.GT.90.)GO TO 90                                               AT62       59
      DEN=1.0+0.00015733831*Z                                            AT62       60
      H=Z/DEN                                                            AT62       61
      GMW=28.9644                                                        AT62       62
      IF(H.GE.47.)GO TO 47                                               AT62       63
      IF(H.GE.20.)GO TO 20                                               AT62       64
      J=1                                                                AT62       65
      IF(H.GE.11.)J=2                                                    AT62       66
      GO TO 65                                                           AT62       67
   20 J=3                                                                AT62       68
      IF(H.GE.32.)J=4                                                    AT62       69
      GO TO 65                                                           AT62       70
   47 IF(H.GE.61.)GO TO 61                                               AT62       71
      J=5                                                                AT62       72
      IF(H.GE.52.)J=6                                                    AT62       73
      GO TO 65                                                           AT62       74
   61 J=7                                                                AT62       75
      IF(H.GE.79.)J=8                                                    AT62       76
   65 TM = TH(J) + THD(J)*(H-HT(J))                                      AT62       77
      IF (THD(J).EQ.0.) GO TO 70                                         AT62       78
      PLOG=-34.163195*ALOG(TM/TH(J))/THD(J)                              AT62       79
      GO TO 80                                                           AT62       80
   70 PLOG = -34.163195 * (H-HT(J))/TM                                   AT62       81
   80 PB = PH(J)                                                         AT62       82
      GO TO 200                                                          AT62       83
   90 IF(Z.LT.170.) GO TO 100                                            AT62       84
      IF (Z.LT.300.) GO TO 95                                            AT62       85
      IF (Z.LT.500.) GO TO 92                                            AT62       86
      J=13                                                               AT62       87
      IF(Z.LT.600.)J=12                                                  AT62       88
      GO TO 150                                                          AT62       89
   92 J = 11                                                             AT62       90
      IF(Z.LT.400.)J=10                                                  AT62       91
      GO TO 150                                                          AT62       92
   95 J = 9                                                              AT62       93
      IF(Z.LT.230.)J=8                                                   AT62       94
      IF(Z.LT.190.)J=7                                                   AT62       95
      GO TO 150                                                          AT62       96
  100 IF (Z.LT.120.) GO TO 120                                           AT62       97
      J=6                                                                AT62       98
      IF(Z.LT.160.)J=5                                                   AT62       99
      IF(Z.LT.150.)J=4                                                   AT62      100
      GO TO 150                                                          AT62      101
  120 J = 3                                                              AT62      102
      IF(Z.LT.110.)J=2                                                   AT62      103
      IF(Z.LT.100.)J=1                                                   AT62      104
  150 GMW = WA(J) + Z * (WB(J)+Z*WC(J))                                  AT62      105
      TM=TZ(J)+TZD(J)*(Z-ZT(J))                                          AT62      106
      DEN=A(J)+Z*B(J)                                                    AT62      107
      H=Z/DEN                                                            AT62      108
      DELTAH=H-HZ(J)                                                     AT62      109
      PLOG=D1(J)*DELTAH+D2(J)*ALOG(1.0+D3(J)*DELTAH)                     AT62      110
      PB=PZ(J)                                                           AT62      111
  200 P = PB *EXP(PLOG)                                                  AT62      112
      ANS(1)=6.75944794D-6*P/TM                                          AT62      113
      ANS(2)=P*0.020885434                                               AT62      114
      ANS(3)=GMW*TM/28.9644                                              AT62      115
      ANS(4)=894.50046                                                   AT62      116
      ARG1=4325.73899D0*TM                                               AT62      117
      IF(ZFT.LT.300000.)ANS(4)=SQRT(ARG1)                                AT62      118
      RETURN                                                             AT62      119
      END                                                                AT62      120
      BLOCK DATA                                                         BLKDAT      2
C                                                                        BLKDAT      3
C   THIS PROGRAM CONTAINS ENGINE DATA FOR THE TWIN-JET TURBOFAN ENGINE   BLKDAT      4
C                                                                        BLKDAT      5
      COMMON/ENGDAT/AM1(6), AH1(8), ATIDLC(48), AWIDLC(48),              BLKDAT      6
     1              ATIDLO(48), AWIDLO(48), AM5(6), AHBC(6),             BLKDAT      7
     2              AT(9), AEMXCL(9), AEMXCR(9),   AM8(10), AEPR8(14),   BLKDAT      8
     3              AFNCR(140),  AEPR9(7), AH9(4), AWCR(28),             BLKDAT      9
     4              AM10(4), AEPR10(3), ADWCR(12)                        BLKDAT     10
      COMMON/COMARO/JC(17)                                               BLKDAT     11
      DATA JC/17*0/                                                      BLKDAT     12
C                                                                        BLKDAT     13
C   TABLES 1 AND 2 - IDLE THRUST AND FUEL FLOW FOR BLEEDS CLOSED         BLKDAT     14
C                                                                        BLKDAT     15
      DATA AM1/0.,.2,.4,.6,.8,1./, AH1/0.,12300.,13700.,15000.,          BLKDAT     16
     1         17300.,22000.,27500.,45000./,                             BLKDAT     17
     2     ATIDLC/1140.,810.,850.,880.,930.,1030.,1130.,1350.,           BLKDAT     18
     3            580.,460.,440.,450.,490.,560.,640.,880.,               BLKDAT     19
     3            75.,115.,120.,125.,170.,280.,390.,745.,                BLKDAT     20
     4            -190.,-100.,-95.,-85.,-70.,60.,230.,635.,              BLKDAT     21
     5            -660.,-400.,-380.,-360.,-330.,-250.,20.,505.,          BLKDAT     22
     6            -950.,-610.,-580.,-550.,-500.,-425.,-350.,400./,       BLKDAT     23
     7     AWIDLC/1020.,590.,540.,540.,540.,540.,540.,540.,              BLKDAT     24
     8            1045.,620.,575.,540.,540.,540.,540.,540.,              BLKDAT     25
     9            1130.,660.,620.,580.,540.,540.,540.,540.,              BLKDAT     26
     *            1230.,730.,680.,640.,580.,540.,540.,540.,              BLKDAT     27
     1            1420.,845.,790.,745.,670.,540.,540.,540.,              BLKDAT     28
     2            1870.,1110.,1040.,980.,890.,710.,540.,540./            BLKDAT     29
C                                                                        BLKDAT     30
C   TABLES 3 AND 4 - IDLE THRUST AND FUEL FLOW FOR BLEEDS OPEN           BLKDAT     31
C                                                                        BLKDAT     32
      DATA ATIDLO/830.,530.,570.,580.,625.,710.,800.,1000.,              BLKDAT     33
     1            350.,215.,200.,210.,270.,340.,410.,650.,               BLKDAT     34
     2            -100.,-50.,-40.,-40.,0.,100.,225.,440.,                BLKDAT     35
     3            -560.,-350.,-330.,-315.,-300.,-110.,50.,330.,          BLKDAT     36
     4            -1040.,-720.,-700.,-680.,-640.,-570.,-225.,170.,       BLKDAT     37
     5            -1350.,-950.,-915.,-900.,-850.,-770.,-700.,0./,        BLKDAT     38
     6     AWIDLO/920.,540.,540.,540.,540.,540.,540.,540.,               BLKDAT     39
     7            960.,585.,540.,540.,540.,540.,540.,540.,               BLKDAT     40
     8            1010.,610.,580.,540.,540.,540.,540.,540.,              BLKDAT     41
     9            1100.,670.,625.,590.,540.,540.,540.,540.,              BLKDAT     42
     *            1270.,760.,710.,680.,605.,540.,540.,540.,              BLKDAT     43
     2            1675.,1025.,960.,910.,805.,650.,540.,540./             BLKDAT     44
C                                                                        BLKDAT     45
C   TABLE 5 - ALTITIDE FOR SURGE BLEED CLOSURE                           BLKDAT     46
C                                                                        BLKDAT     47
      DATA AM5/0.,.2,.4,.6,.601,1./,                                     BLKDAT     48
     1     AHBC/30000.,30000.,27500.,22000.,0.,0./                       BLKDAT     49
C                                                                        BLKDAT     50
C   TABLES 6 AND 7 - MAXIMUM EPR FOR CLIMB AND CRUISE                    BLKDAT     51
C                                                                        BLKDAT     52
      DATA AT/ -60., -30., -20., -10.,   0.,  10.,  20.,  30.,  60./,    BLKDAT     53
     1 AEMXCL/2.340,2.245,2.190,2.120,2.040,1.928,1.854,1.793,1.606/,    BLKDAT     54
     2 AEMXCR/2.250,2.130,2.082,2.018,1.930,1.816,1.708,1.636,1.440/     BLKDAT     55
C                                                                        BLKDAT     56
C   TABLE 9 - CORRECTED THRUST                                           BLKDAT     57
C                                                                        BLKDAT     58
      DATA AM8/0.,.1,.2,.3,.4,.5,.6,.7,.8,.9/,                           BLKDAT     59
     1   AEPR8/1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.,2.1,2.2,2.3,2.4/,  BLKDAT     60
     2  AFNCR/                                                           BLKDAT     61
     3  2080.,1840.,1800.,1740.,1740.,1960.,2160.,2450.,2750.,3200.,     BLKDAT     62
     4  3700.,3300.,3100.,2950.,2950.,3060.,3350.,3750.,4100.,4660.,     BLKDAT     63
     5  5210.,4850.,4450.,4250.,4200.,4300.,4600.,4980.,5300.,6000.,     BLKDAT     64
     6  6750.,6200.,5800.,5500.,5500.,5600.,5900.,6250.,6700.,7400.,     BLKDAT     65
     7  8020.,7450.,6950.,6700.,6750.,6800.,7050.,7400.,8000.,8850.,     BLKDAT     66
     8  9400.,8700.,8100.,7820.,7900.,8000.,8250.,8700.,9400.,10300.,    BLKDAT     67
     9  10780.,10000.,9350.,9000.,9100.,9200.,9500.,9960.,10700.,11700., BLKDAT     68
     *  11850.,11100.,10450.,10100.,10200.,10350.,10600.,10800.,12000.,  BLKDAT     69
     1  13200.,    13000.,12200.,11700.,11200.,11250.,11350.,11780.,     BLKDAT     70
     2  12000.,13400.,14600.,    14140.,13240.,12700.,12300.,12350.,     BLKDAT     71
     3  12600.,13000.,13620.,14780.,16050.,    15300.,14350.,13750.,     BLKDAT     72
     4  13450.,13450.,13700.,14200.,15100.,16200.,17680.,    16400.,     BLKDAT     73
     5  15450.,14850.,14500.,14600.,14780.,15550.,16350.,17650.,19250.,  BLKDAT     74
     6      17400.,16500.,15900.,15600.,15750.,15950.,16800.,17750.,     BLKDAT     75
     7  19100.,20950.,    18500.,17650.,17000.,16650.,16950.,17050.,     BLKDAT     76
     8  18000.,19150.,20600.,22300./                                     BLKDAT     77
C                                                                        BLKDAT     78
C   TABLE 9 - CORRECTED FUEL FLOW                                        BLKDAT     79
C                                                                        BLKDAT     80
      DATA AH9/0.,25000.,35000.,45000./,                                 BLKDAT     81
     1     AEPR9/1.1,1.3,1.5,1.7,1.9,2.1,2.3/,                           BLKDAT     82
     2     AWCR /2250.,3320.,4350.,5850.,7325.,9000.,11100.,             BLKDAT     83
     3           2250.,3320.,4350.,5850.,7325.,9000.,11100.,             BLKDAT     84
     4           2390.,3400.,4625.,6000.,7500.,9300.,11380.,             BLKDAT     85
     5           2550.,3500.,4740.,6120.,7690.,9575.,11850./             BLKDAT     86
C                                                                        BLKDAT     87
C   TABLE 10 - MACH NO CORRECTION TO CORRECTED FUEL FLOW                 BLKDAT     88
C                                                                        BLKDAT     89
      DATA AM10/0.,.4,.8,1./,                                            BLKDAT     90
     1     AEPR10/1.1,1.3,1.6/,                                          BLKDAT     91
     2     ADWCR/950.,455.,0.,   410.,255.,0.,   0.,0.,0.,   0.,0.,0./   BLKDAT     92
      END                                                                BLKDAT     93
      SUBROUTINE CDRAG(MACH, CL, GEAR,DGFLAP, CD)                        CDRAG       2
C----------------------------------------------------------------------- CDRAG       3
C                                                                        CDRAG       4
C PURPOSE%  CALLS APPROPRIATE ROUTINE TO COMPUTE THE DRAG COEFFICIENT,   CDRAG       5
C     CD, BASED ON THE AIRCRAFT MODEL SELECTED BY INPUT VARIABLE  IAC.   CDRAG       6
C                                                                        CDRAG       7
C----------------------------------------------------------------------- CDRAG       8
      INTEGER GEAR                                                       CDRAG       9
      REAL MACH                                                          CDRAG      10
      COMMON /ACFT/ IAC, SAC, HMAX                                       CDRAG      11
      COMMON /COMARO/     JCL01F,FFLAPS,JCL01A,JCL02H,JCL02M,JCL03H,     CDRAG      12
     1    JCL03M,JCL15F,JCL15A,JCL16M,JCD01F,JCD01A,JCD02M,JCD02C,       CDRAG      13
     2    JCD05F,JCD05A,JCD06M                                           CDRAG      14
C                                                                        CDRAG      15
      GO TO (10,20,30,40),IAC                                            CDRAG      16
C                                                                        CDRAG      17
   10 CONTINUE                                                           CDRAG      18
C     CALL CDRAG1 (MACH, CL, GEAR, DGFLAP, CD)                           CDRAG      19
      GO TO 890                                                          CDRAG      20
C                                                                        CDRAG      21
   20 CONTINUE                                                           CDRAG      22
      CALL CDRAG2 (MACH, CL, GEAR, DGFLAP, CD)                           CDRAG      23
      GO TO 890                                                          CDRAG      24
C                                                                        CDRAG      25
   30 CONTINUE                                                           CDRAG      26
      ALPHA = -1000.                                                     CDRAG      27
      CALL CDRAG3 (MACH,ALPHA,CL,GEAR,DGFLAP,CD)                         CDRAG      28
      GO TO 890                                                          CDRAG      29
C                                                                        CDRAG      30
   40 CONTINUE                                                           CDRAG      31
C     CALL CDRAG4 (MACH, CL, GEAR, DGFLAP, CD)                           CDRAG      32
      GO TO 890                                                          CDRAG      33
C                                                                        CDRAG      34
  890 CONTINUE                                                           CDRAG      35
      RETURN                                                             CDRAG      36
      END                                                                CDRAG      37
      SUBROUTINE CDRAG2(EM,CL,DUM1,DUM2,CD)                              CDRAG2      2
      DIMENSION COEFF(25),CLP(5),EMP(5)                                  CDRAG2      3
      DATA COEFF/                                                        CDRAG2      4
     X17126735713344704636B,60621550770303514450B,17205654670747225006B, CDRAG2      5
     X60553744667726575207B,17217714624434124706B,60672544215744107625B, CDRAG2      6
     X17146454675020450470B,60601627634604436157B,17214462062355217304B, CDRAG2      7
     X60563275354600165230B,17064231707606222502B,60652444503704766653B, CDRAG2      8
     X17155104112137505256B,60610241721624102440B,17174011730752207124B, CDRAG2      9
     X60752200135101074133B,17067422114026562636B,60660614373111035727B, CDRAG2     10
     X17135472200246263105B,60641534332443721730B,16755744215147400005B, CDRAG2     11
     X60753752226570335135B,17054024404005456461B,60711171765147054272B, CDRAG2     12
     X17074164570167503311B/                                             CDRAG2     13
      CD = 0.                                                            CDRAG2     14
      IX = 1                                                             CDRAG2     15
      EMM = EM                                                           CDRAG2     16
      IF(EM .LT. .7) EMM = .7                                            CDRAG2     17
      EMM = 1./(.95-EMM)                                                 CDRAG2     18
      CLP(1) = 1.                                                        CDRAG2     19
      EMP(1) = 1.                                                        CDRAG2     20
      DO 50 I=2,5                                                        CDRAG2     21
      CLP(I) = CLP(I-1)*CL                                               CDRAG2     22
      EMP(I) = EMP(I-1)*EMM                                              CDRAG2     23
50    CONTINUE                                                           CDRAG2     24
      DO 100 I=1,5                                                       CDRAG2     25
      DO 100 J=1,5                                                       CDRAG2     26
      CD = CD + COEFF(IX)*EMP(I)*CLP(J)                                  CDRAG2     27
      IX = IX+1                                                          CDRAG2     28
 100  CONTINUE                                                           CDRAG2     29
      RETURN                                                             CDRAG2     30
      END                                                                CDRAG2     31
      SUBROUTINE CDRAG3(EM,DUM,CL,DUM1,DUM2,CD)                          CDRAG3      2
      DIMENSION COEFF(40)                                                CDRAG3      3
      DATA COEFF/                                                        CDRAG3      4
     X17124743704632525423B,60662072046063061661B,17145157235606634324B, CDRAG3      5
     X17145753132606327331B,60611073335235300644B,17047203116473701221B, CDRAG3      6
     X17104507321565116760B,60660224040533016255B,60633520226076410412B, CDRAG3      7
     X17164672506736664607B,60750475074530632313B,60713102603564420373B, CDRAG3      8
     X17104437721175020244B,17115366542277137165B,60633247102110223445B, CDRAG3      9
     X17004013202550471500B,17027336407562106003B,60731046776071746020B, CDRAG3     10
     X60713752627753411244B,17114044645526105272B,61043757367630606325B, CDRAG3     11
     X61020671014402674572B,16777053474071552705B,17015026653535714473B, CDRAG3     12
     X60733224764756612060B/                                             CDRAG3     13
      IERR = 0                                                           CDRAG3     14
      CD = 0.                                                            CDRAG3     15
      IX = 1                                                             CDRAG3     16
      EMM = EM                                                           CDRAG3     17
      IF(EM .LT. .6) EMM = .6                                            CDRAG3     18
      IF(CL .LE. .5) GO TO 50                                            CDRAG3     19
      IF (EM .LE. .6 .OR. EM .GE. .68) GO TO 50                          CDRAG3     20
      EMM = .6                                                           CDRAG3     21
 50   CONTINUE                                                           CDRAG3     22
      EMM = 1./(.9-EMM)                                                  CDRAG3     23
      DO 100 I=1,5                                                       CDRAG3     24
      EMI = EMM**(I-1)                                                   CDRAG3     25
      DO 100 J=1,5                                                       CDRAG3     26
      CD = CD + COEFF(IX)*EMI*CL**(J-1)                                  CDRAG3     27
      IX = IX+1                                                          CDRAG3     28
 100  CONTINUE                                                           CDRAG3     29
      IF(CL .LE. .5) GO TO 600                                           CDRAG3     30
      IF (EM .LE. .6 .OR. EM .GE. .68) GO TO 600                         CDRAG3     31
      YZERO = CD                                                         CDRAG3     32
      EMM = .68                                                          CDRAG3     33
      EMSAV = EMM                                                        CDRAG3     34
      EMM = 1./(.9-EMM)                                                  CDRAG3     35
      IX = 1                                                             CDRAG3     36
      CDSAV = 0.                                                         CDRAG3     37
      DO 200 I=1,5                                                       CDRAG3     38
      EMI = EMM**(I-1)                                                   CDRAG3     39
      DO  200 J=1,5                                                      CDRAG3     40
C                                                                        CDRAG3     41
      CDSAV = CDSAV+COEFF(IX)*EMI*CL**(J-1)                              CDRAG3     42
      IX = IX+1                                                          CDRAG3     43
 200  CONTINUE                                                           CDRAG3     44
      Y1 = CDSAV                                                         CDRAG3     45
      X = EM - .6                                                        CDRAG3     46
      YPRIME = 0.                                                        CDRAG3     47
      IX = 6                                                             CDRAG3     48
      DO 300 I=1,4                                                       CDRAG3     49
      TEMP = 0.                                                          CDRAG3     50
      DO 250 J=1,5                                                       CDRAG3     51
      TEMP = TEMP + COEFF(IX)*CL**(J-1)                                  CDRAG3     52
      IX = IX+1                                                          CDRAG3     53
 250  CONTINUE                                                           CDRAG3     54
      FACT = I                                                           CDRAG3     55
      YPRIME = YPRIME+TEMP*FACT*EMM**(I-1)                               CDRAG3     56
 300  CONTINUE                                                           CDRAG3     57
      YPRIME = YPRIME*EMM**2                                             CDRAG3     58
      A = YZERO                                                          CDRAG3     59
      X1 =EMSAV - .6                                                     CDRAG3     60
      PART1 = 3.*(Y1-YZERO)                                              CDRAG3     61
      PART2 = X1*YPRIME                                                  CDRAG3     62
      PART3 = 2.*(Y1-YZERO)                                              CDRAG3     63
      C = (PART1 - PART2)/X1**2                                          CDRAG3     64
      D = (PART2-PART3)/X1**3                                            CDRAG3     65
      CD = YZERO + C*X**2+D*X**3                                         CDRAG3     66
 600  CONTINUE                                                           CDRAG3     67
      RETURN                                                             CDRAG3     68
      END                                                                CDRAG3     69
      SUBROUTINE CLIFT2(MACH, H, ALPHAP, DF, GEAR, CL, ITRIM)            CLIFT2      2
C                                                                        CLIFT2      3
C       **COMPUTES THE TWIN-JET MODEL LIFT COEFFICIENT CL AS A FUNCTION  CLIFT2      4
C       ** OF M, ALTITUDE,ALPHA,LANDING GEAR,AND FLAP POSITION           CLIFT2      5
C                                                                        CLIFT2      6
      INTEGER GEAR                                                       CLIFT2      7
      REAL MACH                                                          CLIFT2      8
      COMMON /COMARO/ IFLAP, FFLAPS, DUMDUM(15)                          CLIFT2      9
      DIMENSION FLAPS(7), CL216(3,7), CL217(5), ALT(3), CL219(3,3),      CLIFT2     10
     1 CL17(3,7), CL18(3), CL218(7,3),L218(3)                            CLIFT2     11
      COMMON /COMTRM/ CL0, CLDA, CLGEAR                                  CLIFT2     12
C                                                                        CLIFT2     13
C                                                                        CLIFT2     14
      DATA FLAPS/0., 2., 5., 15., 25., 30., 40./                         CLIFT2     15
      DATA ALT/0.,20000.,40000./                                         CLIFT2     16
      DATA L218/7,5,4/                                                   CLIFT2     17
      DATA CL216/                       .012578 , .101778,  -.001426,    CLIFT2     18
     1    .06282,   .105492,  -.000959, .133972,  .109409,  -.000737,    CLIFT2     19
     2    .297618,  .117523,  -.000866, .604512,  .110909,  -.000483,    CLIFT2     20
     3    .891152,  .108086,  -.000499, 1.207021, .106244,  -.000104/    CLIFT2     21
      DATA CL217/   1.129635, 1.044612, -9.53392, 20.1947, -13.5972/     CLIFT2     22
      DATA CL218/   .017578,  -.12377,  1.72797,  -7.56877, 6.78399,     CLIFT2     23
     1    18.7373,  -28.9716,                                            CLIFT2     24
     2    .017364,  .017688,  -.172465, .369741, -.292488,  2*0.,        CLIFT2     25
     3    .017732,  .003925,  .02681,   -.065259,3*0./                   CLIFT2     26
      DATA CL219/                       .088103,  -.022472, -.002787,    CLIFT2     27
     1    .088353,  -.018279, .019896,  .08963,   -.033409, .063451/     CLIFT2     28
      DATA CL17/                        .036537,  -.000448, -.000122,    CLIFT2     29
     1    .036537,  -.000448, -.000122, .018362,  .003372,  -.000329,    CLIFT2     30
     2    .012889,  -.002635, .000025,  -.012501, -.00536,  .000615,     CLIFT2     31
     3    -.013979, -.002833, .00007,   -.039666, -.002491, -.000002/    CLIFT2     32
      DATA CL18/                        .127893,  -.496562, .576844/     CLIFT2     33
C                                                                        CLIFT2     34
      CLBASC = 0.                                                        CLIFT2     35
C                                                                        CLIFT2     36
  100 DO 200 I=1,7                                                       CLIFT2     37
      IF (DF .GE. FLAPS(I)) GO TO 200                                    CLIFT2     38
      GO TO 201                                                          CLIFT2     39
  200 CONTINUE                                                           CLIFT2     40
  201 I = I - 1                                                          CLIFT2     41
      I2 = I + 1                                                         CLIFT2     42
      FFLAPS= (DF - FLAPS(I))/(FLAPS(I+1) - FLAPS(I))                    CLIFT2     43
      DO 202 J= 1,3                                                      CLIFT2     44
      IF(H .GE. ALT(J)) GO TO 202                                        CLIFT2     45
      GO TO 203                                                          CLIFT2     46
  202 CONTINUE                                                           CLIFT2     47
  203 J = J - 1                                                          CLIFT2     48
      J2 = J + 1                                                         CLIFT2     49
      FALT = (H - ALT(J)) /(ALT(J2) - ALT(J))                            CLIFT2     50
C                                                                        CLIFT2     51
C                                                                        CLIFT2     52
C                                                                        CLIFT2     53
      IF (ITRIM .EQ. 1) GO TO 204                                        CLIFT2     54
      CLBSC1 = POLYE1(ALPHAP, 3, CL216(1,I))                             CLIFT2     55
      CLBSC2 = POLYE1(ALPHAP, 3, CL216(1,I2))                            CLIFT2     56
      CLBASC = CLBSC1 +FFLAPS *(CLBSC2  - CLBSC1)                        CLIFT2     57
C                                                                        CLIFT2     58
C                                                                        CLIFT2     59
      IF ( DF .NE. 0. ) GO TO 204                                        CLIFT2     60
      CLBMAX = POLYE1(MACH,5,CL217)                                      CLIFT2     61
      IF( CLBASC .GT. CLBMAX) CLBASC = CLBMAX                            CLIFT2     62
C                                                                        CLIFT2     63
C                                                                        CLIFT2     64
C                                                                        CLIFT2     65
  204 CL01 = POLYE1(MACH, L218(J ), CL218(1,J))                          CLIFT2     66
      CL02 = POLYE1 (MACH, L218(J2), CL218(1,J2))                        CLIFT2     67
      CL0 = CL01 + FALT*(CL02-CL01) - .0175                              CLIFT2     68
C                                                                        CLIFT2     69
C                                                                        CLIFT2     70
      CLDA1= POLYE1(MACH, 3, CL219(1, J))                                CLIFT2     71
      CLDA2 = POLYE1(MACH, 3, CL219(1, J2))                              CLIFT2     72
      CLDA = CLDA1 + FALT*(CLDA2 - CLDA1) -.088                          CLIFT2     73
C                                                                        CLIFT2     74
      IF (GEAR .EQ. 0) GO TO 229                                         CLIFT2     75
      IF( DF .LT. 2.) GO TO 227                                          CLIFT2     76
      CLGR1 = POLYE1(ALPHAP,3,CL17(I,1))                                 CLIFT2     77
      CLGR2 = POLYE1(ALPHAP,3,CL17(1,I2))                                CLIFT2     78
      CLGEAR = CLGR1 +FFLAPS*(CLGR2 - CLGR1)                             CLIFT2     79
      GO TO 230                                                          CLIFT2     80
  227 IF (MACH .GT. .4  ) GO TO 228                                      CLIFT2     81
      CLGEAR = .02                                                       CLIFT2     82
      GO TO 230                                                          CLIFT2     83
  228 CLGEAR = POLYE1(MACH, 3, CL18)                                     CLIFT2     84
      GO TO 230                                                          CLIFT2     85
  229 CLGEAR = 0.                                                        CLIFT2     86
  230 IALT = J                                                           CLIFT2     87
      IFLAP = I                                                          CLIFT2     88
      CL = CLBASC + CL0 + CLDA*ALPHAP + CLGEAR                           CLIFT2     89
      RETURN                                                             CLIFT2     90
      END                                                                CLIFT2     91
      SUBROUTINE CLIFT3 (MACH,H,ALPHA,DGFLAP,GEAR,CL,ITRIM)              CLIFT3      2
C----------------------------------------------------------------------- CLIFT3      3
C                                                                        CLIFT3      4
C PURPOSE%  COMPUTES  CL,  THE LIFT COEFFICIENT, FOR THE TWIN-JET MODEL. CLIFT3      5
C                                                                        CLIFT3      6
C METHOD%  THE LIFT COEFFICIENT IS FOUND FROM TABLES WHICH               CLIFT3      7
C     ARE FUNCTIONS OF MACH NUMBER, ALTITUDE, ANGLE OF ATTACK OF THE     CLIFT3      8
C     WING CHORD PLANE, FLAP DEFLECTION, AND GEAR POSITION.              CLIFT3      9
C                                                                        CLIFT3     10
C ARGUMENTS%                                                             CLIFT3     11
C     MACH   = MACH NUMBER (REAL),                                       CLIFT3     12
C     H      = ALTITUDE (FT),                                            CLIFT3     13
C     ALPHA  = ANGLE OF ATTACK (DEG),                                    CLIFT3     14
C     DGFLAP = FLAP DEFLECTION (DEG),                                    CLIFT3     15
C     GEAR   = GEAR POSITION (INTEGER; 0 = UP, 1 = DOWN)                 CLIFT3     16
C     CL     = LIFT COEFFICIENT (OUTPUT),                                CLIFT3     17
C     ITRIM  = DUMMY VARIABLE; NO LONGER USED.                           CLIFT3     18
C                                                                        CLIFT3     19
C----------------------------------------------------------------------- CLIFT3     20
      INTEGER GEAR                                                       CLIFT3     21
      REAL MACH,MACH2,MACH3,MACH16                                       CLIFT3     22
      COMMON /COMARO/     JCL01F,FFLAPS,JCL01A,JCL02H,JCL02M,JCL03H,     CLIFT3     23
     1    JCL03M,JCL15F,JCL15A,JCL16M,JCD01F,JCD01A,JCD02M,JCD02C,       CLIFT3     24
     2    JCD05F,JCD05A,JCD06M                                           CLIFT3     25
      DIMENSION FLAPS1(9),ALPHA1(12),CL01(9,12), ALT2(3),MACH2(14),      CLIFT3     26
     1  CL02(3,14), ALT3(4),MACH3(13),CL03(4,13), FLAP15(9),ALFA15(11),  CLIFT3     27
     2  CL15(9,11), MACH16(7),CL16(7)                                    CLIFT3     28
      COMMON /COMTRM/ CL0,CLDA,CLGEAR                                    CLIFT3     29
C((                                                                      CLIFT3     30
C     NAMELIST / CHKOUT/ JCL01A,FALFA1,CLBASC,                           CLIFT3     31
C    1    JCL01F,FFLAPS,Z1,Z2,CL0M,CLDA,CL0,CLGEAR,DCLGR,CLGMR           CLIFT3     32
C))                                                                      CLIFT3     33
      DATA ZERODP/0.E0/, ONEDP/1.E0/                                     CLIFT3     34
C                                                                        CLIFT3     35
      DATA FLAPS1/0.,1.,2.,5.,10.,15.,25.,30.,40./, NF1/9/, NA1/12/      CLIFT3     36
      DATA ALPHA1/-8.,-4.,0.,4.,9.,11.,13.,14.4,16.,17.3,20.,24./        CLIFT3     37
      DATA CL01/                                                         CLIFT3     38
     1  -0.57, -0.57, -0.52, -0.46, -0.44, -0.38, -0.38, -1.20, -1.32,   CLIFT3     39
     2  -0.24, -0.24, -0.19, -0.13, -0.08,  0.00,  0.07,  0.08,  0.36,   CLIFT3     40
     3   0.13,  0.17,  0.21,  0.31,  0.38,  0.52,  0.65,  0.82,  1.26,   CLIFT3     41
     4   0.50,  0.60,  0.64,  0.74,  0.82,  1.02,  1.21,  1.42,  1.78,   CLIFT3     42
     5   1.02,  1.18,  1.21,  1.33,  1.38,  1.63,  1.85,  2.06,  2.39,   CLIFT3     43
     6   1.14,  1.38,  1.42,  1.55,  1.65,  1.86,  2.07,  2.28,  2.58,   CLIFT3     44
     7   1.19,  1.60,  1.64,  1.74,  1.87,  2.05,  2.24,  2.45,  2.75,   CLIFT3     45
     8   1.18,  1.74,  1.78,  1.88,  2.01,  2.16,  2.35,  2.55,  2.86,   CLIFT3     46
     9   1.15,  1.88,  1.92,  2.00,  2.10,  2.25,  2.42,  2.63,  2.98,   CLIFT3     47
     1   1.13,  1.90,  1.92,  2.00,  2.12,  2.26,  2.43,  2.64,  3.01,   CLIFT3     48
     2   1.11,  1.84,  1.85,  1.92,  2.05,  2.16,  2.34,  2.53,  2.86,   CLIFT3     49
     3   1.10,  1.80,  1.83,  1.90,  2.00,  2.13,  2.28,  2.40,  2.65/   CLIFT3     50
C                                                                        CLIFT3     51
      DATA ALT2/0.,20000.,35000./, NA2/3/                                CLIFT3     52
      DATA MACH2/0.,0.1,0.2,0.3,0.4,0.6,0.7,0.775,0.8,0.823,0.84,0.873,  CLIFT3     53
     1  0.884,0.9/, NM2/14/                                              CLIFT3     54
      DATA CL02/                 .0000,  .0000,  .0000,                  CLIFT3     55
     1   .0000,  .0000,  .0000, -.0004, -.0004, -.0004,                  CLIFT3     56
     3  -.0017, -.0017, -.0017, -.0052, -.0038, -.0037,                  CLIFT3     57
     5  -.0160, -.0072, -.0030, -.0257, -.0102, -.0020,                  CLIFT3     58
     7  -.0375, -.0137, -.0018, -.0392, -.0130, +.0005,                  CLIFT3     59
     9  -.0435, -.0106, +.0070, -.0540, -.0138, +.0070,                  CLIFT3     60
     1  -.0815, -.0557, -.0412, -.0845, -.0575, -.0450,                  CLIFT3     61
     3  -.0700, -.0500, -.0415/                                          CLIFT3     62
C                                                                        CLIFT3     63
      DATA ALT3/0.,13000.,23000.,35000./, NA3/4/                         CLIFT3     64
      DATA MACH3/0.,0.15,0.3,0.4,0.5,0.6,0.7,0.725,0.75,0.775,0.8,       CLIFT3     65
     1  0.85,0.9/, NM3/13/                                               CLIFT3     66
      DATA CL03/                                                         CLIFT3     67
     1   .00000, .00000, .00000, .00000,-.00090,-.00040, .00000, .00000, CLIFT3     68
     3  -.00290,-.00140,-.00045, .00000,-.00490,-.00215,-.00055,+.00050, CLIFT3     69
     5  -.00675,-.00215,-.00050,+.00205,-.00700,-.00050,+.00160,+.00650, CLIFT3     70
     7  -.00450,+.00300,+.00700,+.01400,-.00450,+.00355,+.00855,+.01600, CLIFT3     71
     9  -.00875,+.00340,+.01000,+.01750,-.01600,+.00100,+.01025,+.01715, CLIFT3     72
     1  -.02300,-.00250,+.00625,+.01300,-.03835,-.01725,-.01100,-.00525, CLIFT3     73
     3  -.03835,-.02575,-.02050,-.01600/                                 CLIFT3     74
C                                                                        CLIFT3     75
      DATA FLAP15/0.,1.,2.,5.,10.,15.,25.,30.,40./, NF15/9/              CLIFT3     76
      DATA ALFA15/-8.,0.,4.,6.,9.,11.,17.,18.,21.,23.,24./, NA15/11/     CLIFT3     77
      DATA CL15/                                                         CLIFT3     78
     1   .044,  .059,  .072,  .087,  .092,  .092,  .072,  .059,  .027,   CLIFT3     79
     2   .044,  .031,  .024,  .014,  .011,  .011, -.012, -.019, -.037,   CLIFT3     80
     3   .039,  .021,  .013,  .002, -.001, -.001, -.025, -.038, -.056,   CLIFT3     81
     4   .035,  .019,  .011,  .000, -.004, -.004, -.030, -.040, -.058,   CLIFT3     82
     5   .026,  .013,  .006, -.003, -.007, -.007, -.034, -.043, -.055,   CLIFT3     83
     6   .018,  .006,  .000, -.007, -.010, -.023, -.039, -.046, -.055,   CLIFT3     84
     7  -.014, -.024, -.029, -.029, -.029, -.048, -.060, -.065, -.075,   CLIFT3     85
     8  -.021, -.031, -.036, -.034, -.034, -.049, -.060, -.065, -.071,   CLIFT3     86
     9  -.043, -.052, -.057, -.053, -.050, -.028, -.033, -.033, -.022,   CLIFT3     87
     1  -.059, -.068, -.071, -.061, -.061, -.014, -.017, -.007, -.002,   CLIFT3     88
     2  -.067, -.076, -.080, -.067, -.067, -.011, -.014, -.001,  .000/   CLIFT3     89
C                                                                        CLIFT3     90
      DATA MACH16/0.,0.35,0.45,0.55,0.65,0.75,0.9/, NM16/7/              CLIFT3     91
      DATA CL16/                                                         CLIFT3     92
     1   1.00, 1.00, 1.08, 1.36, 1.92, 2.76, 4.72/                       CLIFT3     93
C                                                                        CLIFT3     94
      CALL LOC8 (ALPHA1,NA1,ALPHA,JCL01A,FALFA1,IXTRAP)                  CLIFT3     95
C                                                                        CLIFT3     96
C ----COMPUTE CLBASIC FOR FLAPS UP CONDITION                             CLIFT3     97
C                                                                        CLIFT3     98
      IF(DGFLAP .GT. ZERODP) GO TO 10                                    CLIFT3     99
      JCL01F = 1                                                         CLIFT3    100
      FFLAPS = ZERODP                                                    CLIFT3    101
      CLBASC = (ONEDP-FALFA1)*CL01(1,JCL01A)+FALFA1*CL01(1,JCL01A+1)     CLIFT3    102
      GO TO 20                                                           CLIFT3    103
C                                                                        CLIFT3    104
C ---- COMPUTE CLBASIC FOR FLAPS DOWN CONDITION                          CLIFT3    105
C                                                                        CLIFT3    106
   10 CONTINUE                                                           CLIFT3    107
      CALL LOC8 (FLAPS1,NF1,DGFLAP,JCL01F,FFLAPS,IXTRAP)                 CLIFT3    108
      ONEMFF = ONEDP-FFLAPS                                              CLIFT3    109
      Z1 = FFLAPS*CL01(JCL01F+1,JCL01A)+ONEMFF*CL01(JCL01F,JCL01A)       CLIFT3    110
      Z2 = FFLAPS*CL01(JCL01F+1,JCL01A+1)+                               CLIFT3    111
     1  ONEMFF*CL01(JCL01F,JCL01A+1)                                     CLIFT3    112
      CLBASC = (ONEDP-FALFA1)*Z1+FALFA1*Z2                               CLIFT3    113
C                                                                        CLIFT3    114
C ----ADJUST  CL  FOR MACH NUMBER EFFECTS ON CLBASIC AND LIFT-CURVE      CLIFT3    115
C     SLOPE                                                              CLIFT3    116
C                                                                        CLIFT3    117
   20 CONTINUE                                                           CLIFT3    118
      CL0M = DBLTBL(CL02,ALT2,NA2,MACH2,NM2,H,MACH,JCL02H,JCL02M,IXTRAP) CLIFT3    119
      CLDA = DBLTBL(CL03,ALT3,NA3,MACH3,NM3,H,MACH,JCL03H,JCL03M,IXTRAP) CLIFT3    120
      CL0 = CLBASC+CL0M+CLDA*ALPHA                                       CLIFT3    121
C                                                                        CLIFT3    122
C ----ADJUST  CL  FOR GEAR DOWN CONDITION                                CLIFT3    123
C                                                                        CLIFT3    124
      IF(GEAR .NE. 0) GO TO 30                                           CLIFT3    125
      CLGEAR = ZERODP                                                    CLIFT3    126
      GO TO 40                                                           CLIFT3    127
   30 CONTINUE                                                           CLIFT3    128
      DCLGR = DBLTBL(CL15,FLAP15,NF15,ALFA15,NA15,DGFLAP,ALPHA,JCL15F,   CLIFT3    129
     1    JCL15A,IXTRAP)                                                 CLIFT3    130
      CLGMR = SGLTBL(CL16, MACH16, NM16, MACH, JCL16M, IXTRAP)           CLIFT3    131
      CLGEAR = DCLGR*CLGMR                                               CLIFT3    132
   40 CONTINUE                                                           CLIFT3    133
C                                                                        CLIFT3    134
      CL = CL0+CLGEAR                                                    CLIFT3    135
C                                                                        CLIFT3    136
  890 CONTINUE                                                           CLIFT3    137
C((                                                                      CLIFT3    138
C     WRITE(6,CHKOUT)                                                    CLIFT3    139
C))                                                                      CLIFT3    140
      RETURN                                                             CLIFT3    141
      END                                                                CLIFT3    142
      SUBROUTINE CPMEPR                                                  CPMEPR      2
C                                                                        CPMEPR      3
C          ** SUBROUTINE CPMEPR IS CALLED WHEN FLAG NOBTBL NE 0,.        CPMEPR      4
C           **READS TRI-JET ENGINE DATA TABLE ON DEVICE 09,              CPMEPR      5
C           **FILLS THE ARRAYS IN COMMON/ENGTFF/                         CPMEPR      6
C          ** PRINTS OUT TABLES IN OUTPUT.                               CPMEPR      7
C          ** SUBROUTINE CMPNOW READS TABLES BUT DOES NOT PRINT THEM.    CPMEPR      8
C                                                                        CPMEPR      9
      REAL MACHNO                                                        CPMEPR     10
      REAL MACH24,MACH27,MACHN1,MACHN2                                   CPMEPR     11
      COMMON/ENGTFF/ALT(10),MACHNO(10), FNIDL(10,10),WFIDL(10,10)        CPMEPR     12
     1,ALT24(7),TEMP(13),EPRMAX(13,7),ALTFF(10)                          CPMEPR     13
     2,EPR(14),FNMAX(14,10)                                              CPMEPR     14
     3,DECL(21),DECD(21,10),MACH24(10)                                   CPMEPR     15
     4,ALT27(9),THRUST(30,9),MACH27(8,9),TSFC(30,8,9)                    CPMEPR     16
     5,MACHN1(10),MACHN2(10)                                             CPMEPR     17
C                                                                        CPMEPR     18
      WRITE(6,51)                                                        CPMEPR     19
   51 FORMAT(42H0TABLES 1 AND 2, IDLE THRUST AND FUEL FLOW)              CPMEPR     20
      WRITE(6,54)                                                        CPMEPR     21
 54   FORMAT(20H0IDLE THRUST IN LBS.)                                    CPMEPR     22
      READ(9,49)(MACHNO(I),I=1,10)                                       CPMEPR     23
 49   FORMAT(10F7.3)                                                     CPMEPR     24
         WRITE(6,53)(MACHNO(I),I=1,10)                                   CPMEPR     25
 53   FORMAT(15H0ALT/MACH NO   ,10F10.3)                                 CPMEPR     26
      DO 100 I=1,10                                                      CPMEPR     27
      READ(9,50) ALT(I),(FNIDL(I,J),J=1,10)                              CPMEPR     28
 50   FORMAT(11F7.2)                                                     CPMEPR     29
  100 WRITE(6,52) ALT(I),(FNIDL(I,J),J=1,10)                             CPMEPR     30
 52   FORMAT(1H F10.0,5X,10F10.0)                                        CPMEPR     31
      WRITE(6,61)                                                        CPMEPR     32
 61   FORMAT(22H0FUEL FLOW IN LBS./HR.)                                  CPMEPR     33
      READ(9,49)(MACHN1(I),I=1,10)                                       CPMEPR     34
      WRITE(6,53)(MACHN1(I),I=1,10)                                      CPMEPR     35
      DO 101 I=1,10                                                      CPMEPR     36
      READ(9,50) ALTFF(I),(WFIDL(I,J),J=1,10)                            CPMEPR     37
 101  WRITE(6,52)ALTFF(I),(WFIDL(I,J),J=1,10)                            CPMEPR     38
      WRITE(6,55)                                                        CPMEPR     39
   55 FORMAT(36H1TABLE NO. 3, MAXIMUM CONTINUOUS EPR)                    CPMEPR     40
      WRITE(6,57)                                                        CPMEPR     41
 57   FORMAT(9H0TEMP/ALT)                                                CPMEPR     42
      READ(9,56)(ALT24(I),I=1,7)                                         CPMEPR     43
 56   FORMAT(8F7.0)                                                      CPMEPR     44
      WRITE(6,58)(ALT24(I),I=1,5)                                        CPMEPR     45
 58   FORMAT( 1H 10X,5F10.0)                                             CPMEPR     46
      DO 102 I=1,13                                                      CPMEPR     47
      READ(9,59)TEMP(I),(EPRMAX(I,J),J=1,7)                              CPMEPR     48
 59   FORMAT(8F7.3)                                                      CPMEPR     49
102   WRITE(6,60)TEMP(I),(EPRMAX(I,J),J=1,5)                             CPMEPR     50
 60   FORMAT(1H 8F10.3)                                                  CPMEPR     51
      WRITE(6,62)                                                        CPMEPR     52
   62 FORMAT(47H TABLE NO. 4, THRUST(FN/DELTA) VS. EPR AND MACH)         CPMEPR     53
      READ(9,49)(MACHN2(I),I=1,10)                                       CPMEPR     54
      WRITE(6,63)(MACHN2(I),I=1,10)                                      CPMEPR     55
   63 FORMAT(13H0EPR/MACH NO.,F7.3,9F10.3)                               CPMEPR     56
      DO 104 I=1,14                                                      CPMEPR     57
      READ(9,64)EPR(I),(FNMAX(I,J),J=1,10)                               CPMEPR     58
 64   FORMAT(F7.2,10F7.0)                                                CPMEPR     59
165   FORMAT(F7.2,10F7.0)                                                CPMEPR     60
104   WRITE(6,65)EPR(I),(FNMAX(I,J),J=1,10)                              CPMEPR     61
 65   FORMAT(1H F10.2,5X,10F10.0)                                        CPMEPR     62
      READ(9,47)(MACH24(I),I=1,10)                                       CPMEPR     63
 47   FORMAT(10F7.3)                                                     CPMEPR     64
      DO 105 I=1,21                                                      CPMEPR     65
      READ(9,68)DECL(I),(DECD(I,J),J=1,10)                               CPMEPR     66
 68   FORMAT(11F7.5)                                                     CPMEPR     67
  105 CONTINUE                                                           CPMEPR     68
      DO 107 I=1,9                                                       CPMEPR     69
      WRITE(6,70)                                                        CPMEPR     70
   70 FORMAT(12H1TABLE NO. 5)                                            CPMEPR     71
      WRITE(6,71)                                                        CPMEPR     72
 71   FORMAT(28H0WEIGHTED AVERAGE TSFC TABLE)                            CPMEPR     73
 73   FORMAT(6H PAGE ,I1,5X, 6HALT = ,F7.0)                              CPMEPR     74
      READ(9,72)ALT27(I),(MACH27(J,I),J=1,8)                             CPMEPR     75
 72   FORMAT(F7.0,8F7.4)                                                 CPMEPR     76
      WRITE(6,73)I,ALT27(I)                                              CPMEPR     77
      WRITE(6,74)(MACH27(J,I),J=1,8)                                     CPMEPR     78
 74   FORMAT(14H0THRUST/MACHNO,F7.5,7F10.4)                              CPMEPR     79
      DO 108 K=1,30                                                      CPMEPR     80
      READ(9,75)THRUST(K,I),(TSFC(K,J,I),J=1,8)                          CPMEPR     81
 75   FORMAT(F7.0,8F7.4)                                                 CPMEPR     82
108   WRITE(6,76)THRUST(K,I),(TSFC(K,J,I),J=1,8)                         CPMEPR     83
 76   FORMAT(1H F6.0,4X,8F10.4)                                          CPMEPR     84
107   CONTINUE                                                           CPMEPR     85
      RETURN                                                             CPMEPR     86
      END                                                                CPMEPR     87
      SUBROUTINE CPMNOW                                                  CPMNOW      2
C                                                                        CPMNOW      3
C          ** SUBROUTINE CPMNOW IS CALLED WHEN FLAG NOBTBL .EQ. 0        CPMNOW      4
C           ** READS TRI-JET ENGINE DATA TABLE ON DEVICE 09,             CPMNOW      5
C           ** FILLS THE ARRAYS IN COMMON /ENGTFF/                       CPMNOW      6
C          ** DOES NOT PRINT OUT TABLES IN OUTPUT.                       CPMNOW      7
C          ** SUBROUTINE CMPEPR READS AND WRITES.                        CPMNOW      8
C                                                                        CPMNOW      9
      REAL MACHNO                                                        CPMNOW     10
      REAL MACH24,MACH27,MACHN1,MACHN2                                   CPMNOW     11
      COMMON /ENGTFF/ ALT(10), MACHNO(10),FNIDL(10,10),WFIDL(10,10)      CPMNOW     12
     1,ALT24(7),TEMP(13),EPRMAX(13,7),ALTFF(10)                          CPMNOW     13
     2,EPR(14),FNMAX(14,10)                                              CPMNOW     14
     3,DECL(21),DECD(21,10),MACH24(10)                                   CPMNOW     15
     4,ALT27(9),THRUST(30,9),MACH27(8,9),TSFC(30,8,9)                    CPMNOW     16
     5,MACHN1(10),MACHN2(10)                                             CPMNOW     17
C                                                                        CPMNOW     18
      READ(9,49)(MACHNO(I),I=1,10)                                       CPMNOW     19
 49   FORMAT(10F7.3)                                                     CPMNOW     20
      DO 100 I=1,10                                                      CPMNOW     21
      READ(9,50) ALT(I),(FNIDL(I,J),J=1,10)                              CPMNOW     22
 50   FORMAT(11F7.2)                                                     CPMNOW     23
  100 CONTINUE                                                           CPMNOW     24
      READ(9,49)(MACHN1(I),I=1,10)                                       CPMNOW     25
      DO 101 I=1,10                                                      CPMNOW     26
      READ(9,50) ALTFF(I),(WFIDL(I,J),J=1,10)                            CPMNOW     27
  101 CONTINUE                                                           CPMNOW     28
      READ(9,56)(ALT24(I),I=1,7)                                         CPMNOW     29
 56   FORMAT(8F7.0)                                                      CPMNOW     30
      DO 102 I=1,13                                                      CPMNOW     31
      READ(9,59)TEMP(I),(EPRMAX(I,J),J=1,7)                              CPMNOW     32
 59   FORMAT(8F7.3)                                                      CPMNOW     33
  102 CONTINUE                                                           CPMNOW     34
      READ(9,49)(MACHN2(I),I=1,10)                                       CPMNOW     35
      DO 104 I=1,14                                                      CPMNOW     36
      READ(9,64)EPR(I),(FNMAX(I,J),J=1,10)                               CPMNOW     37
 64   FORMAT(F7.2,10F7.0)                                                CPMNOW     38
  104 CONTINUE                                                           CPMNOW     39
      READ(9,47)(MACH24(I),I=1,10)                                       CPMNOW     40
 47   FORMAT(10F7.3)                                                     CPMNOW     41
      DO 105 I=1,21                                                      CPMNOW     42
      READ(9,68)DECL(I),(DECD(I,J),J=1,10)                               CPMNOW     43
 68   FORMAT(11F7.5)                                                     CPMNOW     44
  105 CONTINUE                                                           CPMNOW     45
      DO 107 I=1,9                                                       CPMNOW     46
      READ(9,72)ALT27(I),(MACH27(J,I),J=1,8)                             CPMNOW     47
 72   FORMAT(F7.0,8F7.4)                                                 CPMNOW     48
      DO 108 K=1,30                                                      CPMNOW     49
      READ(9,75)THRUST(K,I),(TSFC(K,J,I),J=1,8)                          CPMNOW     50
 75   FORMAT(F7.0,8F7.4)                                                 CPMNOW     51
  108 CONTINUE                                                           CPMNOW     52
107   CONTINUE                                                           CPMNOW     53
      RETURN                                                             CPMNOW     54
      END                                                                CPMNOW     55
      SUBROUTINE CRUTBL(ITAB, WCRUZ, LAMBDA,                             CRUTBL      2
     1  RANGE, IPRINT, EF, IDCT, PC)                                     CRUTBL      3
C                                                                        CRUTBL      4
C          ** GENERATES THE CRUISE CONDITIONS (ENERGY, ALTITUDE, M, EPR  CRUTBL      5
C          **   SETTING, COST (LAMDA), FUEL FLOW RATE) AS A FUNCTION OF  CRUTBL      6
C          **   CRUISE WEIGHT.                                           CRUTBL      7
C                                                                        CRUTBL      8
      IMPLICIT REAL(M)                                                   CRUTBL      9
      REAL LAMBDA,LAMBS,LLCRUZ                                           CRUTBL     10
      COMMON /CLIMB/ MACH, D, ICLIMB, TDUMMY, TRSTDR                     CRUTBL     11
      COMMON /COST/ EPR, ICOST, FC, TC, DTEMPK, W, FUELDT, FFLOW         CRUTBL     12
      COMMON/CDCOM/NCORD,PRPLT(200,12),YMIN(12),YMAX(12),CRNG            CRUTBL     13
      COMMON /CRURNG/ ECRUZ, FCRUZ, HCRUZ, IL1, IL2, IW, PFW             CRUTBL     14
      COMMON /DRAGMN/ RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRMAX,MFGR CRUTBL     15
      COMMON /IO/ ANS(4), WS(11), EOPTS(11), HSTARS(11), MSTARS(11),     CRUTBL     16
     1 PISTRS(11), LAMBS(11), VTASOP(11), FUELFL(11), CRDIST(11),        CRUTBL     17
     2CRTIME(11), MNCOST(2), MOPIAS(2), MOPTAS(2), MACHOP(2), FDTOPT(2), CRUTBL     18
     3 OPTALT(2), HOPT(2), EPRS(2),IWMAX,IOPARM,HTO, VTO, HOLNDG, VOLNDG CRUTBL     19
     4 , ETO, DEIN                                                       CRUTBL     20
      COMMON/PRTCOM/LESPRT                                               CRUTBL     21
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    CRUTBL     22
     1 DLLDEE(2, 10),IWMAXX, WTO, WCRUZ1,CRUZCT,HHCRUZ(50,10),           CRUTBL     23
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         CRUTBL     24
      COMMON /WINDY/IWIND, PSIA, VWA                                     CRUTBL     25
C                                                                        CRUTBL     26
   20 FORMAT(20I4)                                                       CRUTBL     27
   21 FORMAT(8F10.2)                                                     CRUTBL     28
   24 FORMAT(22H0 AIRCRAFT CRUISE WT =  F10.0, 2X, 3HLBS)                CRUTBL     29
   25 FORMAT( 16H0FUEL COST($/LB) F9.4, 2X,17HTIME COST($/HR)=  F7.2,2X, CRUTBL     30
     1 18HTEMP VAR (DEG K) =, F7.2,20HA/C HEADING (DEG) = ,F7.2)         CRUTBL     31
   29 FORMAT( 12H0NO WIND RUN)                                           CRUTBL     32
   31 FORMAT(20H0 AIRCRAFT HEADING =  F10.0, 2X, 3HDEG)                  CRUTBL     33
   91 FORMAT(24H0    ALT   MN DRAG   MAX 9X, 31H**** MINIMUM COST/DISTAN CRUTBL     34
     1CE **** 12X,29H**** MINIMUM FUEL/TIME   ****  8X,13HMIN COST/DIST  CRUTBL     35
     2 / 5X, 2HFT 5X,13HSPEED   SPEED 12X, 5HSPEED 11X,14HPWR SETG  FUEL CRUTBL     36
     3       13X, 5HSPEED 8X, 8HPWR SETG 4X, 4HFUEL 8X 4HFUEL            CRUTBL     37
     4 / 13X, 11HKIAS   KIAS 6X, 19HKIAS    KTAS   MACH6X,3HEPR5X,4H$/NM CRUTBL     38
     5   5X, 37HKIAS   KTAS   MACH      EPR     LB/HR 8X, 5HLB/HR)       CRUTBL     39
  100 FORMAT(1H 3F7.0, 2X, 2F7.0, F7.3, 2X, F8.3, F7.2, 2X, 2F7.0, F7.3, CRUTBL     40
     1 2X, F8.3, F7.0, F10.0)                                            CRUTBL     41
  101 FORMAT(10H OPT ALT = F7.0, 3H FT 21X, 11HOPT SPEED = ,F6.4,5H MACH CRUTBL     42
     1 F7.0, 5H KIAS, F7.0, 5H KTAS 9X, 14HMIN (FDOT/V) = F6.3, 5H $/NM/ CRUTBL     43
     2 23H CRUISE POWER SETTING = F7.4, 4H EPR 7X,                       CRUTBL     44
     3 23HOPTIMUM CRUISE ENERGY = F7.0, 3H FT  22X,                      CRUTBL     45
     4 15HMIN FUEL RATE = F6.0, 6H LB/HR )                               CRUTBL     46
  104 FORMAT(10H OPT ALT = F7.0, 3H FT 21X, 11HOPT SPEED = ,F6.4,5H MACH CRUTBL     47
     1 F7.0, 5H KIAS, F7.0, 5H KTAS 9X, 12HMIN (FDOT) = F6.0 /           CRUTBL     48
     2 23H CRUISE POWER SETTING = F7.4, 4H EPR )                         CRUTBL     49
  105 FORMAT(26H0MINIMIZING FUEL/DISTANCE%)                              CRUTBL     50
  106 FORMAT(22H0MINIMIZING FUEL/TIME%)                                  CRUTBL     51
  191 FORMAT(35H0 D(LAMBDA)/DE = A E + B IN $/NM**2/10H CRUISE WT 8X,    CRUTBL     52
     1 1HA 14X, 1HB)                                                     CRUTBL     53
  192 FORMAT(1H0 F10.0, 2E15.7)                                          CRUTBL     54
  193 FORMAT (30X, 20HCRUISE TABLE SUMMARY  )                            CRUTBL     55
  194 FORMAT (20X, 41HCRUISE TABLE WITH ESTIMATED CRUISE WEIGHT  )       CRUTBL     56
  196 FORMAT(1H0 F10.0, F10.0, F10.4, F10.0, F10.4, F10.3, 2F10.2)       CRUTBL     57
  198 FORMAT(81H0CRUISE WT    OPT E   OPT MACH    OPT H   PWR SETG    LA CRUTBL     58
     1MBDA     KTAS   FUEL FLOW  /1H 5X, 2HLB 9X, 2HFT 18X, 2HFT 7X,     CRUTBL     59
     24H EPR 6X, 4H$/NM 15X, 5HLB/HR)                                    CRUTBL     60
  199 FORMAT (40X, 24HCRUISE PERFORMANCE TABLE  )                        CRUTBL     61
  223 FORMAT(18H0CRUISE DIST  TIME 6X, 35HWEIGHT    ENERGY  ALTITUDE  MA CRUTBL     62
     1CH NO 7X,35HKTAS   GRD SPEED   LAMBDA  PWR SETG/1H 5X, 2HNM 4X,    CRUTBL     63
     2 9HHR%MN%SEC 5X,2HLB 9X,2HFT 8X,2HFT 28X, 4HKNOT 6X, 4H$/NM 6X,    CRUTBL     64
     3 4H EPR)                                                           CRUTBL     65
  225 FORMAT(1H0 F10.2, 2X, 2(I2, 1H%), I2, 3F10.0, F10.4, 2F10.2,       CRUTBL     66
     1 2F10.3)                                                           CRUTBL     67
  400 FORMAT(8E15.7)                                                     CRUTBL     68
  500 FORMAT(18H0INITIAL ALTITUDE% ,2X, F8.1,12H FT; ENERGY%, 2X,        CRUTBL     69
     1 F8.1, 14H FT; AIRSPEED% , 2X, F8.3,14H KT; WEIGHT%   ,F8.0, 2HLB) CRUTBL     70
  501 FORMAT( 40HERROR RETURN.  DRAG GREATER THAN THRUST )               CRUTBL     71
 2021 FORMAT(//// 11H0CARD INPUT                                         CRUTBL     72
     1 , 5X, 16HW INITIAL WEIGHT  ,2X,F10.2                              CRUTBL     73
     2 , 2X, 5HRANGE 2X,F10.2                                            CRUTBL     74
     3 , 2X, 21HDEIN ENERGY INCREMENT , F10.2                            CRUTBL     75
     4 , 2X, 21HFIXED CRUISE ALTITUDE  , F10.2)                          CRUTBL     76
 2022 FORMAT( 11H0CARD INPUT                                             CRUTBL     77
     1, 5X,  22HHTO INITIAL ALTITUDE  , F13.2                            CRUTBL     78
     2, 5X,  22HVTO INITIAL SPEED KIAS   , F13.2 /                       CRUTBL     79
     3 16X,  22HHOLNDG FINAL ALTITUDE , F13.2                            CRUTBL     80
     4, 5X,  23HVOLNDG FINAL SPEED KIAS  , F12.2)                        CRUTBL     81
C                                                                        CRUTBL     82
      DATA FS2KNT, G / 1.68781, 32.2 /                                   CRUTBL     83
      DATA BLANK / 1H  /                                                 CRUTBL     84
C                                                                        CRUTBL     85
      IF (ITAB .EQ. 0) GO TO 200                                         CRUTBL     86
      READ (8,400)  FC, TC, DTEMPK, PSIA                                 CRUTBL     87
   26 IF( IWIND .EQ. 0) GO TO 28                                         CRUTBL     88
      CALL WINDIN                                                        CRUTBL     89
      WRITE(6, 31) PSIA                                                  CRUTBL     90
      GO TO 30                                                           CRUTBL     91
   28 WRITE(6, 29)                                                       CRUTBL     92
      VWA = 0.                                                           CRUTBL     93
   30 WRITE(6, 25) FC, TC, DTEMPK, PSIA                                  CRUTBL     94
C                                                                        CRUTBL     95
C                                                                        CRUTBL     96
      IW = 0                                                             CRUTBL     97
  85  READ (8, 400) W                                                    CRUTBL     98
      IF( W .LT. 0.) GO TO 402                                           CRUTBL     99
      IW = IW+ 1                                                         CRUTBL    100
      WSS(IW) = W                                                        CRUTBL    101
      IF( IPRINT .EQ. 0) GO TO 92                                        CRUTBL    102
      WRITE(6, 24) W                                                     CRUTBL    103
      WRITE(6, 91)                                                       CRUTBL    104
   92 FDTOPZ= 0.                                                         CRUTBL    105
      EZ = 0.                                                            CRUTBL    106
      JJCRUZ(IW) = 0                                                     CRUTBL    107
C                                                                        CRUTBL    108
C   MAKIAS AND FABIAS ARE READ IN FROM THE CRUISE TABLE AND PRINTED.     CRUTBL    109
C      THESE VALUES ARE NOT USED AGAIN IN THE PROGRAM                    CRUTBL    110
  390 READ (8, 400) H, MAKIAS, FBIAS, (MOPIAS(I), MOPTAS(I), MACHOP(I),  CRUTBL    111
     1 EPRS(I), FDTOPT(I), I=1,2),FUELDT                                 CRUTBL    112
      IF ( H .LT. -10.) GO TO 401                                        CRUTBL    113
      E = H + (MOPTAS(1) *FS2KNT)**2/64.4                                CRUTBL    114
      IF( IPRINT .EQ. 0) GO TO 93                                        CRUTBL    115
      WRITE(6, 100) H, MAKIAS, FBIAS, (MOPIAS(I), MOPTAS(I), MACHOP(I),  CRUTBL    116
     1 EPRS(I), FDTOPT(I), I = 1,2), FUELDT                              CRUTBL    117
   93 JJCRUZ(IW) = JJCRUZ(IW) + 1                                        CRUTBL    118
      JJ= JJCRUZ(IW)                                                     CRUTBL    119
      FFCRUZ(JJ, IW) = FUELDT                                            CRUTBL    120
      HHCRUZ(JJ, IW) =H                                                  CRUTBL    121
      LLCRUZ(JJ, IW) = FDTOPT(1)                                         CRUTBL    122
      EPCRUZ(JJ,IW) = EPRS(1)                                            CRUTBL    123
      EECRUZ(JJ, IW) = E                                                 CRUTBL    124
      FDTOPZ= FDTOPT(1)                                                  CRUTBL    125
      EZ = E                                                             CRUTBL    126
      GO TO 390                                                          CRUTBL    127
  401 READ (8, 400) HOPT(1), OPTMAK, OPTIAS, OPTTAS, MNCOST(1), EPR,EOPT CRUTBL    128
     1 , FUELD1                                                          CRUTBL    129
  102 IF( IPRINT .EQ. 0) GO TO 94                                        CRUTBL    130
      WRITE(6, 105)                                                      CRUTBL    131
      WRITE(6, 101) HOPT(1), OPTMAK, OPTIAS, OPTTAS, MNCOST(1), EPR,EOPT CRUTBL    132
     1 , FUELD1                                                          CRUTBL    133
C                                                                        CRUTBL    134
C                                                                        CRUTBL    135
      LCALL = 2                                                          CRUTBL    136
   94 CALL SERCH1 (HHCRUZ(1, IW),HOPT(1),JJ,PF,JJOPT, LCALL)             CRUTBL    137
      JJOPT1 = JJOPT + 1                                                 CRUTBL    138
      JSUM = JJ + JJOPT1                                                 CRUTBL    139
      DO 391 I= JJOPT1, JJ                                               CRUTBL    140
      J = JSUM - I                                                       CRUTBL    141
      HHCRUZ(J+1, IW) = HHCRUZ(J, IW)                                    CRUTBL    142
      FFCRUZ(J+1, IW) = FFCRUZ(J, IW)                                    CRUTBL    143
      LLCRUZ(J+1, IW) = LLCRUZ(J, IW)                                    CRUTBL    144
      EPCRUZ(J+1,IW) = EPCRUZ(J,IW)                                      CRUTBL    145
  391 EECRUZ(J+1, IW) = EECRUZ(J, IW)                                    CRUTBL    146
      LLCRUZ(JJOPT1, IW) = MNCOST(1)                                     CRUTBL    147
      EECRUZ(JJOPT1, IW) = EOPT                                          CRUTBL    148
      HHCRUZ(JJOPT1, IW) = HOPT(1)                                       CRUTBL    149
      FFCRUZ(JJOPT1, IW) = FUELD1                                        CRUTBL    150
      EPCRUZ(JJOPT1,IW) = EPR                                            CRUTBL    151
      JJCRUZ(IW) = JJCRUZ(IW) + 1                                        CRUTBL    152
C                                                                        CRUTBL    153
C                                                                        CRUTBL    154
      READ (8, 400) HOPT(2), OPTMAK, OPTIAS, OPTTAS, MNCOST(2), EPR      CRUTBL    155
  103 IF( IPRINT .EQ. 0) GO TO 85                                        CRUTBL    156
      WRITE(6, 106)                                                      CRUTBL    157
      WRITE(6, 104) HOPT(2), OPTMAK, OPTIAS, OPTTAS, MNCOST(2), EPR      CRUTBL    158
      CALL PAGE                                                          CRUTBL    159
      GO TO 85                                                           CRUTBL    160
C                                                                        CRUTBL    161
C                                                                        CRUTBL    162
  402 READ(8, 20) IWMAX                                                  CRUTBL    163
      IWMAXX= IWMAX                                                      CRUTBL    164
      READ (8, 400) (DLLDEE(1,J), DLLDEE(2,J), J=1, IWMAX)               CRUTBL    165
      IF (LESPRT.GT.1) GO TO 107                                         CRUTBL    166
      WRITE(6,191)                                                       CRUTBL    167
      WRITE(6, 192) (WSS(I), DLLDEE(1,I), DLLDEE(2,I), I=1, IWMAX)       CRUTBL    168
  107 CONTINUE                                                           CRUTBL    169
      CALL PAGE                                                          CRUTBL    170
      WRITE (6, 193)                                                     CRUTBL    171
      WRITE( 6, 198)                                                     CRUTBL    172
      DO 197 I= 1, IWMAX                                                 CRUTBL    173
      READ (8, 400) WS(I), EOPTS(I), MSTARS(I), HSTARS(I), PISTRS(I),    CRUTBL    174
     1 LAMBS(I), VTASOP(I),FUELFL(I)                                     CRUTBL    175
  197 WRITE(6, 196)WS(I), EOPTS(I), MSTARS(I), HSTARS(I), PISTRS(I),     CRUTBL    176
     1 LAMBS(I), VTASOP(I),FUELFL(I)                                     CRUTBL    177
C                                                                        CRUTBL    178
C                                                                        CRUTBL    179
  200 READ(5, 21) W, RANGE, DEIN, HCRU                                   CRUTBL    180
      READ(5, 21) HTO, VTO, HOLNDG, VOLNDG                               CRUTBL    181
      IF (DEIN .EQ. BLANK)  DEIN = 500.                                  CRUTBL    182
      WRITE(6, 2021) W, RANGE, DEIN, HCRU                                CRUTBL    183
      WRITE (6, 2022) HTO, VTO, HOLNDG, VOLNDG                           CRUTBL    184
      WTO = W                                                            CRUTBL    185
      IF (IDCT .EQ. 2) GO TO 250                                         JULY24      1
      CALL AT62(HTO, ANS)                                                CRUTBL    187
      TEMPK = ANS(3) + DTEMPK                                            CRUTBL    188
      P = ANS(2)                                                         CRUTBL    189
      VI = VTO * FS2KNT                                                  CRUTBL    190
      MACHI = SQRT(5.*(((((VI/2496.46)**2 +1.)**3.5 - 1.)*               CRUTBL    191
     1    (2116.22/P) + 1.)**(2./7.)-1.))                                CRUTBL    192
      VO = 65.76*MACHI * SQRT(TEMPK)                                     CRUTBL    193
      ETO=HTO+ .5*  (VO)**2/G                                            CRUTBL    194
      IF (IDCT .EQ. 0)  GO TO 249                                        CRUTBL    195
      CALL WCEST(EF,HCRU,PC,IDCT)                                        JULY24      2
C          THE VALUES WCRUZ1 AND PFW RETURNED BY WCEST VIA COMMONS       CRUTBL    197
      WCRUZ = WCRUZ1                                                     CRUTBL    198
      PF = PFW                                                           CRUTBL    199
      GO TO 252                                                          CRUTBL    200
  249 WCRUZ = WTO-FULEST(RANGE,IOPARM,ETO,FC,TC,PC,ECRUZ,EF)             CRUTBL    201
      GO TO 251                                                          CRUTBL    202
  250 WCRUZ = WTO                                                        CRUTBL    203
  251 CONTINUE                                                           CRUTBL    204
      WCRUZ1 = WCRUZ                                                     CRUTBL    205
      LCALL = 101                                                        CRUTBL    206
      CALL SERCHD(WS, WCRUZ, IWMAX, PF, IW, LCALL)                       CRUTBL    207
  252 IWND1 = IW + 1                                                     CRUTBL    208
      IWCRUZ = IW                                                        CRUTBL    209
      EOPT  = EOPTS (IW) + PF*(EOPTS (IW + 1) - EOPTS (IW))              CRUTBL    210
      HSTAR = HSTARS(IW) + PF*(HSTARS(IW + 1) - HSTARS(IW))              CRUTBL    211
      MSTAR = MSTARS(IW) + PF*(MSTARS(IW + 1) - MSTARS(IW))              CRUTBL    212
      EPRTAR= PISTRS(IW) + PF*(PISTRS(IW + 1) - PISTRS(IW))              CRUTBL    213
      LAMBDA= LAMBS (IW) + PF*(LAMBS (IW + 1) - LAMBS (IW))              CRUTBL    214
      CRUZCT = LAMBDA                                                    CRUTBL    215
      FUELDT = FUELFL(IW) + PF*(FUELFL(IW+1) - FUELFL(IW))               CRUTBL    216
C                                                                        CRUTBL    217
C                                                                        CRUTBL    218
      IF( PF .EQ. 1.) GO TO 195                                          CRUTBL    219
      ISUM = IWMAX + IWND1                                               CRUTBL    220
      DO 220 I= IWND1,IWMAX                                              CRUTBL    221
      J= ISUM - I                                                        CRUTBL    222
      WS(J+ 1) = WS(J)                                                   CRUTBL    223
      EOPTS(J+ 1) = EOPTS(J)                                             CRUTBL    224
      HSTARS(J+ 1) = HSTARS(J)                                           CRUTBL    225
      MSTARS(J+1) = MSTARS(J)                                            CRUTBL    226
      PISTRS(J+1) = PISTRS(J)                                            CRUTBL    227
       LAMBS(J+1) = LAMBS(J)                                             CRUTBL    228
  220 FUELFL(J+1) = FUELFL(J)                                            CRUTBL    229
      WS(IWND1) = WCRUZ                                                  CRUTBL    230
      EOPTS(IWND1) = EOPT                                                CRUTBL    231
      HSTARS(IWND1) = HSTAR                                              CRUTBL    232
      MSTARS(IWND1) = MSTAR                                              CRUTBL    233
      PISTRS (IWND1) = EPRTAR                                            CRUTBL    234
      LAMBS(IWND1) = LAMBDA                                              CRUTBL    235
      FUELFL (IWND1) = FUELDT                                            CRUTBL    236
      IWMAX = IWMAX + 1                                                  CRUTBL    237
  195 CALL PAGE                                                          CRUTBL    238
      WRITE (6, 194)                                                     CRUTBL    239
      IWMAXZ = IWMAX - 1                                                 CRUTBL    240
      WRITE(6,198)                                                       CRUTBL    241
      DO 297 I= 1, IWMAX                                                 CRUTBL    242
      CALL AT62(HSTARS(I), ANS)                                          CRUTBL    243
      TEMPK = ANS(3) + DTEMPK                                            CRUTBL    244
      A = 65.76 * SQRT(TEMPK)                                            CRUTBL    245
      VTASOP(I) = MSTARS(I) * A / FS2KNT                                 CRUTBL    246
  297 WRITE(6, 196) WS(I),EOPTS(I),MSTARS(I),HSTARS(I),PISTRS(I),        CRUTBL    247
     1 LAMBS(I), VTASOP(I),FUELFL(I)                                     CRUTBL    248
      GO TO 230                                                          CRUTBL    249
C                                                                        CRUTBL    250
C                                                                        CRUTBL    251
      ENTRY PERTBL                                                       CRUTBL    252
C                                                                        CRUTBL    253
C     CALCULATE CRUISE PERFORMANCE TABLE                                 CRUTBL    254
C                                                                        CRUTBL    255
C                                                                        CRUTBL    256
      CRDIST(1) = 0.                                                     CRUTBL    257
      CRTIME(1) = 0.                                                     CRUTBL    258
      VWA1 = 0.                                                          CRUTBL    259
      VWA2 = 0.                                                          CRUTBL    260
      DO 221 I= IWND1, IWMAXZ                                            CRUTBL    261
      IF( IWIND .EQ. 0) GO TO 2210                                       CRUTBL    262
      CALL WIND(HSTARS(I), PSIA, VWA1)                                   CRUTBL    263
      CALL WIND(HSTARS(I + 1), PSIA, VWA2)                               CRUTBL    264
 2210 VG1 = VTASOP(I) + VWA1/FS2KNT                                      CRUTBL    265
      VG2 = VTASOP(I+1) + VWA2/FS2KNT                                    CRUTBL    266
      AVEVEL = VG1 + VG2                                                 CRUTBL    267
      CRUZD =  (WS(I) -WS(I+1))*AVEVEL/(FUELFL(I) + FUELFL(I+1))         CRUTBL    268
      AVEVEL = AVEVEL/2.                                                 CRUTBL    269
      J = I+2 - IWND1                                                    CRUTBL    270
      CRDIST(J) = CRDIST(J - 1) + CRUZD                                  CRUTBL    271
  221 CRTIME(J) =CRTIME(J-1) + CRUZD*3600./AVEVEL                        CRUTBL    272
      LAST = J                                                           CRUTBL    273
      ILAST = 0                                                          CRUTBL    274
      IF( RANGE  .GE. CRDIST(LAST)) GO TO 222                            CRUTBL    275
      LCALL = 3                                                          CRUTBL    276
      CALL SERCH1(CRDIST, RANGE , LAST,PFC, ILAST, LCALL)                CRUTBL    277
      LAST = ILAST + 1                                                   CRUTBL    278
C                                                                        CRUTBL    279
C                                                                        CRUTBL    280
  222 CALL PAGE                                                          CRUTBL    281
      WRITE (6, 199)                                                     CRUTBL    282
      WRITE(6, 223)                                                      CRUTBL    283
      DEDIST = 100.                                                      CRUTBL    284
      LCALL = 4                                                          CRUTBL    285
      IPR = 0                                                            CRUTBL    286
      CRUZD = 0.                                                         CRUTBL    287
      CRUZT = 0.                                                         CRUTBL    288
      CALL ICLOCK (CRUZT, IHR, IMIN, ISEC)                               CRUTBL    289
      IF ( IWIND .EQ. 0) GO TO 213                                       CRUTBL    290
      CALL WIND(HSTARS(IWND1), PSIA, VWA)                                CRUTBL    291
      GSPRNT = VTASOP(IWND1) + VWA/FS2KNT                                CRUTBL    292
      GO TO 214                                                          CRUTBL    293
  213 GSPRNT = VTASOP(IWND1)                                             CRUTBL    294
  214 WRITE(6, 225) CRUZD, IHR, IMIN, ISEC, WS(IWND1 ), EOPTS(IWND1 ),   CRUTBL    295
     1 HSTARS(IWND1 ), MSTARS(IWND1 ), VTASOP(IWND1 ), GSPRNT,           CRUTBL    296
     2 LAMBS(IWND1 ), PISTRS(IWND1 )                                     CRUTBL    297
      GO TO 228                                                          CRUTBL    298
  224 CALL SERCH1(CRDIST, CRUZD, LAST, PF, IDIST, LCALL)                 CRUTBL    299
 2241 CRUZT = CRTIME(IDIST) + PF *(CRTIME(IDIST +1) - CRTIME(IDIST))     CRUTBL    300
      CALL ICLOCK (CRUZT, IHR, IMIN, ISEC)                               CRUTBL    301
      IW = IDIST + IWCRUZ                                                CRUTBL    302
      WT = WS(IW) + PF*(WS(IW+1) - WS(IW))                               CRUTBL    303
      EPRNT = EOPTS(IW) + PF*(EOPTS(IW+1) - EOPTS(IW))                   CRUTBL    304
      HPRNT = HSTARS(IW) + PF *(HSTARS(IW+1) - HSTARS(IW))               CRUTBL    305
      MPRNT = MSTARS(IW) + PF*(MSTARS(IW+1) - MSTARS(IW))                CRUTBL    306
      VPRNT = VTASOP(IW) + PF*(VTASOP(IW+1) - VTASOP(IW))                CRUTBL    307
      COSTNT = LAMBS(IW) + PF*(LAMBS(IW+1) - LAMBS(IW))                  CRUTBL    308
      PIPRNT = PISTRS(IW) + PF*(PISTRS(IW+1) - PISTRS(IW))               CRUTBL    309
      IF ( IWIND .EQ. 0) GO TO 226                                       CRUTBL    310
      CALL WIND(HPRNT, PSIA, VWA)                                        CRUTBL    311
      GSPRNT = VPRNT + VWA/FS2KNT                                        CRUTBL    312
      GO TO 227                                                          CRUTBL    313
  226 GSPRNT = VPRNT                                                     CRUTBL    314
  227 WRITE(6, 225)  CRUZD, IHR, IMIN, ISEC, WT, EPRNT, HPRNT, MPRNT,    CRUTBL    315
     1 VPRNT,GSPRNT, COSTNT, PIPRNT                                      CRUTBL    316
  228 CONTINUE                                                           CRUTBL    317
      CRUZD = CRUZD + DEDIST                                             CRUTBL    318
      IF (CRUZD .LT. CRNG) GO TO 224                                     CRUTBL    319
      CRUZD = CRNG                                                       CRUTBL    320
      IF (IPR.EQ.1) GO TO 900                                            CRUTBL    321
      IPR = 1                                                            CRUTBL    322
      GO TO 224                                                          CRUTBL    323
  230 CONTINUE                                                           CRUTBL    324
      IF (IDCT .LE. 1)  GO TO 900                                        CRUTBL    325
      IF (IDCT .EQ. 3)  GO TO 298                                        CRUTBL    326
C                                                                        CRUTBL    327
C          COMPUTE OPTIMUM CRUISE ALTITUDE AND AIRSPEED                  CRUTBL    328
C                                                                        CRUTBL    329
      CALL WLEFHV (3, ECRUZ, EF, PC, VGVNT, VCKTAS)                      CRUTBL    330
      VTO = VCKTAS                                                       CRUTBL    331
      ETO = ECRUZ                                                        CRUTBL    332
      HTO = HCRUZ                                                        CRUTBL    333
      HO = HTO                                                           CRUTBL    334
      GO TO 299                                                          CRUTBL    335
  298 CONTINUE                                                           CRUTBL    336
C          COMPUTE OPTIMUM AIRSPEED FOR A FIXED ALTITUDE                 CRUTBL    337
      H = HTO                                                            CRUTBL    338
      CALL VCCOMP (HTO, ETO, MAKIAS, FBIAS, IF1)                         CRUTBL    339
      IF (TRSTDR .LE. 0)  GO TO 310                                      CRUTBL    340
      HO = HTO                                                           CRUTBL    341
      LAMBDA = FDTOPT(1)                                                 CRUTBL    342
      HCRUZ = HO                                                         CRUTBL    343
      WCRUZ = WTO                                                        CRUTBL    344
      ECRUZ = ETO                                                        CRUTBL    345
      FCRUZ = FFLOW                                                      CRUTBL    346
      VTO = MOPTAS(1)                                                    CRUTBL    347
  299 CONTINUE                                                           CRUTBL    348
      WRITE (6, 500) HO, ETO, VTO, W                                     CRUTBL    349
      GO TO 900                                                          CRUTBL    350
  310 WRITE (6, 501)                                                     CRUTBL    351
  900 CONTINUE                                                           CRUTBL    352
      RETURN                                                             CRUTBL    353
      END                                                                CRUTBL    354
      SUBROUTINE CRUTOA(IDCT, RANGE, HCRU, WT, WN, DEW, PC, IF1)         CRUTOA      2
C   GENERATES THE OPTIMUM CRUISE TABLE AS A FUNCTION OF ALTITUDE,        CRUTOA      3
C    AIRSPEED, AND WEIGHT.  INTERPOLATES THIS TABLE TO OBTAIN CRUISE     CRUTOA      4
C    CONDITIONS (ENERGY, ALTITUDE, EPR, FDOT, LAMBDA, AND VELOCITY)      CRUTOA      5
C    BASED ON ESTIMATED INITIAL CRUISE WEIGHT.                           CRUTOA      6
C                                                                        CRUTOA      7
      IMPLICIT REAL(M)                                                   CRUTOA      8
      REAL LAMBDA,LAMBS,LLCRUZ                                           CRUTOA      9
      EXTERNAL FBOUND, FCOST, FOPT,FCLIMB,FCLMB2                         CRUTOA     10
C                                                                        CRUTOA     11
      COMMON /COMARO/ IFLAP, FFLAPS, DUMDUM(15)                          CRUTOA     12
      COMMON /CLIMB/ MACH, D, ICLIMB, TDUMMY, TRSTDR                     CRUTOA     13
      COMMON /COST/ EPR, ICOST, FC, TC, DTEMPK, W, FUELDT, FFLOW         CRUTOA     14
      COMMON /CRURNG/ ECRUZ,FCRUZ,HCRUZ,IL1,IL2,IW,PFW                   CRUTOA     15
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRMAX,MFGR   CRUTOA     16
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS, MXVTAS,VTAS2     CRUTOA     17
      COMMON /EXTRA/ FBCRUZ(50,10),MBPTAS(50,10),EB(50,10),VKTASI,       CRUTOA     18
     1  FCRUZI,TTIME,MBFF(11),HBFF(11),FBFF(11),TBFF(11),EBFF(11),       CRUTOA     19
     2  EBOPT(11)                                                        CRUTOA     20
      COMMON/III/IPRINT, IDRAG                                           CRUTOA     21
      COMMON /IO/ ANS(4), WS(11), EOPTS(11), HSTARS(11), MSTARS(11),     CRUTOA     22
     1 EPRSTR(11), LAMBS(11), VTASOP(11), FUELFL(11), CRDIST(11),        CRUTOA     23
     2CRTIME(11), MNCOST(2), MOPIAS(2), MOPTAS(2), MACHOP(2), FDTOPT(2), CRUTOA     24
     3 OPTALT(2), HOPT(2), EPRS(2),IWMAX,IOPARM                          CRUTOA     25
     4 ,HTO, VTO, HOLNDG, VOLNDG, ETO, DEIN                              CRUTOA     26
      COMMON/OPT/OPTMAK,IOPT,EDTMX                                       CRUTOA     27
      COMMON/PRTCOM/LESPRT                                               CRUTOA     28
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    CRUTOA     29
     1 DLLDEE(2, 10),IWMAXX, WTO, WCRUZ1,CRUZCT,HHCRUZ(50,10),           CRUTOA     30
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         CRUTOA     31
      COMMON /WINDY/IWIND, PSIA, VWA                                     CRUTOA     32
      COMMON /ACFT/ IAC, SAC, HMAX                                       CRUTOA     33
C                                                                        CRUTOA     34
C         WTO IN /VTRCRU/ USED FOR TAKE-OFF WEIGHT                       CRUTOA     35
C                                                                        CRUTOA     36
   24 FORMAT(22H0AIRCRAFT CRUISE WT =  F10.0, 5H  LBS)                   CRUTOA     37
   91 FORMAT(24H0    ALT   MN DRAG   MAX 9X, 31H**** MINIMUM COST/DISTAN CRUTOA     38
     1CE **** 12X,29H**** MINIMUM FUEL/TIME   ****  8X,13HMIN COST/DIST  CRUTOA     39
     2 / 5X, 2HFT 5X,13HSPEED   SPEED 12X, 5HSPEED 11X,14HPWR SETG  FUEL CRUTOA     40
     3       13X, 5HSPEED 8X, 8HPWR SETG 4X, 4HFUEL 8X 4HFUEL            CRUTOA     41
     4 / 13X, 11HKIAS   KIAS 6X, 19HKIAS    KTAS   MACH6X,3HEPR5X,4H$/NM CRUTOA     42
     5   5X, 37HKIAS   KTAS   MACH      EPR     LB/HR 8X, 5HLB/HR)       CRUTOA     43
  100 FORMAT(1H 3F8.0, 1X, 2F8.0, F7.3, F10.3, F8.2, 2X, 2F7.0, F7.3,    CRUTOA     44
     1 2X, F8.3, F9.0, F13.0)                                            CRUTOA     45
  101 FORMAT(10H OPT ALT = F7.0, 3H FT 21X, 11HOPT SPEED = ,F6.4,5H MACH CRUTOA     46
     1 F7.0, 5H KIAS, F7.0, 5H KTAS 9X, 14HMIN (FDOT/V) = F6.3, 5H $/NM/ CRUTOA     47
     2 23H CRUISE POWER SETTING = F7.4, 4H EPR 7X,                       CRUTOA     48
     3 23HOPTIMUM CRUISE ENERGY = F7.0, 3H FT  22X,                      CRUTOA     49
     4 15HMIN FUEL RATE = F6.0, 6H LB/HR )                               CRUTOA     50
  104 FORMAT(10H OPT ALT = F7.0, 3H FT 21X, 11HOPT SPEED = ,F6.4,5H MACH CRUTOA     51
     1 F7.0, 5H KIAS, F7.0, 5H KTAS 9X, 12HMIN (FDOT) = F6.0 /           CRUTOA     52
     2 23H CRUISE POWER SETTING = F7.4, 4H EPR )                         CRUTOA     53
  105 FORMAT  (26H0MINIMIZING COST/DISTANCE%  )                          CRUTOA     54
  106 FORMAT(22H0MINIMIZING FUEL/TIME%)                                  CRUTOA     55
  193 FORMAT(// 20X, 30HMINIMUM FUEL RATE CRUISE TABLE)                  CRUTOA     56
  194 FORMAT (20X, 41HCRUISE TABLE WITH ESTIMATED CRUISE WEIGHT  )       CRUTOA     57
  196 FORMAT(1H0 F10.0, F10.0, F10.4, F10.0, F10.4, F10.3, 2F10.2)       CRUTOA     58
  198 FORMAT(81H0CRUISE WT    OPT E   OPT MACH    OPT H   PWR SETG    LA CRUTOA     59
     1MBDA     KTAS   FUEL FLOW  /1H 5X, 2HLB 9X, 2HFT 18X, 2HFT 7X,     CRUTOA     60
     24H EPR 6X, 4H$/NM 15X, 5HLB/HR)                                    CRUTOA     61
  500 FORMAT(18H0INITIAL ALTITUDE% ,2X, F8.1,12H FT; ENERGY%, 2X,        CRUTOA     62
     1 F8.1, 14H FT; AIRSPEED% , 2X, F8.3,14H KT; WEIGHT%   ,F8.0, 2HLB) CRUTOA     63
  501 FORMAT( 40HERROR RETURN.  DRAG GREATER THAN THRUST )               CRUTOA     64
  901 FORMAT(59H0DIMENSIONED FOR ONLY TEN DIFFERENT WEIGHTS, COMPUTING T CRUTOA     65
     1HE    I2, 9HTH WEIGHT)                                             CRUTOA     66
C                                                                        CRUTOA     67
      DATA FS2KNT, G       / 1.68781, 32.2  /                            CRUTOA     68
C                                                                        CRUTOA     69
C                                                                        CRUTOA     70
      IPRINT = 0                                                         CRUTOA     71
      IF (LESPRT.LE.1) CALL PAGE                                         CRUTOA     72
      IFLAP = 1                                                          CRUTOA     73
      FFLAPS = 0.                                                        CRUTOA     74
      IF (IDCT.EQ.1 .OR. IDCT.EQ.3) GO TO 150                            CRUTOA     75
C                                                                        CRUTOA     76
C                                                                        CRUTOA     77
C     W LOOP - VARIABLE CRUISE ALTITUDE                                  CRUTOA     78
      IW = 1                                                             CRUTOA     79
      EPR = 1.5                                                          CRUTOA     80
C   SET W FOR INITIAL CRUISE TABLE FOR EACH ITERATION                    CRUTOA     81
      W = WT                                                             CRUTOA     82
   85 CONTINUE                                                           CRUTOA     83
      IF (LESPRT.GT.1) GO TO 86                                          CRUTOA     84
      WRITE(6,24) W                                                      CRUTOA     85
   86 CONTINUE                                                           CRUTOA     86
      ICEILG = 0                                                         CRUTOA     87
      FDTOPZ= 0.                                                         CRUTOA     88
      EZ = 0.                                                            CRUTOA     89
      JJCRUZ(IW) = 0                                                     CRUTOA     90
      H = 20000.                                                         CRUTOA     91
      MNCOST(1) = 1.E6                                                   CRUTOA     92
      MNCOST(2) = 1.E6                                                   CRUTOA     93
      DEH = 1000.                                                        CRUTOA     94
      IF (LESPRT.GT.1) GO TO 87                                          CRUTOA     95
      WRITE(6, 91)                                                       CRUTOA     96
   87 CONTINUE                                                           CRUTOA     97
      ALPHA = 0.                                                         CRUTOA     98
C                                                                        CRUTOA     99
C     H LOOP                                                             CRUTOA    100
C                                                                        CRUTOA    101
   89 IF (H .LE. HMAX)  GO TO 92                                         CRUTOA    102
      IF ((H - HMAX) .GT. 50.)  GO TO 135                                CRUTOA    103
      H = HMAX                                                           CRUTOA    104
   92 CONTINUE                                                           CRUTOA    105
      CALL VCCOMP (H, EE, MAKIAS, FBIAS, IF1)                            CRUTOA    106
      FUELD1 = FFLOW                                                     CRUTOA    107
      IF (TRSTDR) 129, 128, 120                                          CRUTOA    108
  120 DO 122 I=1,2                                                       CRUTOA    109
      IF (FDTOPT(I) .GE. MNCOST(I)) GO TO 122                            CRUTOA    110
      MNCOST(I) = FDTOPT(I)                                              CRUTOA    111
      OPTALT(I) = H                                                      CRUTOA    112
  122 CONTINUE                                                           CRUTOA    113
      JJCRUZ(IW) = JJCRUZ(IW) + 1                                        CRUTOA    114
      JJ= JJCRUZ(IW)                                                     CRUTOA    115
      HHCRUZ(JJ, IW) =H                                                  CRUTOA    116
      FFCRUZ(JJ, IW) =  FUELD1                                           CRUTOA    117
      LLCRUZ(JJ, IW) = FDTOPT(1)                                         CRUTOA    118
      EECRUZ(JJ, IW) = EE                                                CRUTOA    119
      EPCRUZ(JJ,IW) = EPRS(1)                                            CRUTOA    120
      FDTOPZ= FDTOPT(1)                                                  CRUTOA    121
      EZ = EE                                                            CRUTOA    122
      IF (IF1 .EQ. 1)  GO TO 123                                         CRUTOA    123
      FBCRUZ(JJ,IW) = FDTOPT(2)                                          CRUTOA    124
      MBPTAS(JJ,IW) = MOPTAS(2)                                          CRUTOA    125
      EB(JJ,IW) = EPRS(2)                                                CRUTOA    126
  123 CONTINUE                                                           CRUTOA    127
      IF (LESPRT.GT.1) GO TO 124                                         CRUTOA    128
      WRITE(6, 100) H, MAKIAS, FBIAS, (MOPIAS(I), MOPTAS(I), MACHOP(I),  CRUTOA    129
     1 EPRS(I), FDTOPT(I), I = 1,2), FUELD1                              CRUTOA    130
  124 CONTINUE                                                           CRUTOA    131
      IF (ICEILG.EQ.0) GO TO 126                                         CRUTOA    132
      ICEILG = ICEILG + 1                                                CRUTOA    133
      IF (ICEILG .GT. 5) GO TO 135                                       CRUTOA    134
      DEH = DEH/2.                                                       CRUTOA    135
  126 H = H + DEH                                                        CRUTOA    136
      GO TO 89                                                           CRUTOA    137
  128 MACHOP(1) = MACH                                                   CRUTOA    138
      MACHOP(2) = MACH                                                   CRUTOA    139
      FDTOPT(2) = FF                                                     CRUTOA    140
      GO TO 135                                                          CRUTOA    141
  129 IF (ICEILG .NE. 0) GO TO 130                                       CRUTOA    142
      ICEILG = 1                                                         CRUTOA    143
  130 DEH = DEH/2.                                                       CRUTOA    144
      H = H - DEH                                                        CRUTOA    145
      GO TO 89                                                           CRUTOA    146
  135 HCEILG = H                                                         CRUTOA    147
      IF (HCEILG .GT. HMAX)  HCEILG = HMAX                               CRUTOA    148
      DO 144 I = 1, 2                                                    CRUTOA    149
      ICOST = I                                                          CRUTOA    150
      H1 = OPTALT(I) - 1000.                                             CRUTOA    151
      H2 = OPTALT(I)  + 1000.                                            CRUTOA    152
      IF (H2 .GT. HCEILG) H2 = HCEILG                                    CRUTOA    153
      MNCOST(I) = MINF2(H1, H2, FOPT, HOPT(I), IPRINT)                   CRUTOA    154
      H1 = HOPT(I) - 30.                                                 CRUTOA    155
      H2 = HOPT(I) + 30.                                                 CRUTOA    156
      IF (H2 .GT. HCEILG) H2 = HCEILG                                    CRUTOA    157
      MNCOST(I) = MINF2( H1, H2, FOPT, HOPT(I), IPRINT)                  CRUTOA    158
      OPTTAS = OPTMAK*A/FS2KNT                                           CRUTOA    159
      OPTIAS=2496.5*SQRT((((P/2116.22)*((1.+.2*OPTMAK*OPTMAK)            CRUTOA    160
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             CRUTOA    161
      GO TO (140, 142), ICOST                                            CRUTOA    162
  140 CONTINUE                                                           CRUTOA    163
      EOPT = HOPT(1) + .5*(OPTTAS*FS2KNT)**2/G                           CRUTOA    164
      IF (LESPRT.GT.1) GO TO 141                                         CRUTOA    165
      WRITE(6,105)                                                       CRUTOA    166
      WRITE(6, 101) HOPT(I), OPTMAK, OPTIAS, OPTTAS, MNCOST(I), EPR,EOPT CRUTOA    167
     1 , FUELDT                                                          CRUTOA    168
  141 CONTINUE                                                           CRUTOA    169
      HSTAR  = HOPT(1)                                                   CRUTOA    170
        MSTAR = OPTMAK                                                   CRUTOA    171
      EPRTAR = EPR                                                       CRUTOA    172
      LAMBDA = MNCOST(1)                                                 CRUTOA    173
      FUELD1 = FUELDT                                                    CRUTOA    174
      GO TO 143                                                          CRUTOA    175
  142 CONTINUE                                                           CRUTOA    176
      IF (LESPRT.GT.1) GO TO 143                                         CRUTOA    177
      WRITE(6,106)                                                       CRUTOA    178
      WRITE(6, 104) HOPT(I), OPTMAK, OPTIAS, OPTTAS, MNCOST(I), EPR      CRUTOA    179
  143 CONTINUE                                                           CRUTOA    180
      IF (IF1 .EQ. 1)  GO TO 145                                         CRUTOA    181
  144 CONTINUE                                                           CRUTOA    182
  145 CONTINUE                                                           CRUTOA    183
      WS(IW) = W                                                         CRUTOA    184
      EOPTS(IW) = EOPT                                                   CRUTOA    185
      HSTARS (IW) = HSTAR                                                CRUTOA    186
      MSTARS(IW) = MSTAR                                                 CRUTOA    187
      EPRSTR(IW) = EPRTAR                                                CRUTOA    188
      LAMBS(IW) = LAMBDA                                                 CRUTOA    189
      FUELFL(IW) = FUELD1                                                CRUTOA    190
      IF (IF1 .EQ. 1)  GO TO 146                                         CRUTOA    191
      HBFF(IW) = HOPT(2)                                                 CRUTOA    192
      MBFF(IW) = OPTMAK                                                  CRUTOA    193
      FBFF(IW) = MNCOST(2)                                               CRUTOA    194
      TBFF(IW) = OPTTAS                                                  CRUTOA    195
      EBFF(IW) = EPR                                                     CRUTOA    196
  146 CONTINUE                                                           CRUTOA    197
      WSS(IW) = W                                                        CRUTOA    198
      JJOPT = JTRUNC(LLCRUZ(1, IW), JJ)                                  CRUTOA    199
      JJOPT1 = JJOPT + 1                                                 CRUTOA    200
      JSUM = JJ + JJOPT1                                                 CRUTOA    201
      DO 148 I= JJOPT1, JJ                                               CRUTOA    202
      J = JSUM - I                                                       CRUTOA    203
      HHCRUZ(J+1, IW) = HHCRUZ(J, IW)                                    CRUTOA    204
      FFCRUZ(J+1, IW) = FFCRUZ(J, IW)                                    CRUTOA    205
      LLCRUZ(J+1, IW) = LLCRUZ(J, IW)                                    CRUTOA    206
      EPCRUZ(J+1,IW) = EPCRUZ(J,IW)                                      CRUTOA    207
      IF (IF1 .EQ. 1)  GO TO 148                                         CRUTOA    208
      FBCRUZ(J+1,IW) = FBCRUZ(J,IW)                                      CRUTOA    209
      MBPTAS(J+1,IW)=  MBPTAS(J,IW)                                      CRUTOA    210
      EB(J+1,IW) = EB(J,IW)                                              CRUTOA    211
  148 EECRUZ(J+1, IW) = EECRUZ(J, IW)                                    CRUTOA    212
      LLCRUZ(JJOPT1, IW) = MNCOST(1)                                     CRUTOA    213
      EECRUZ(JJOPT1, IW) = EOPT                                          CRUTOA    214
      FFCRUZ(JJOPT1, IW) = FUELD1                                        CRUTOA    215
      HHCRUZ(JJOPT1, IW) = HOPT(1)                                       CRUTOA    216
      EPCRUZ(JJOPT1,IW) = EPRSTR(IW)                                     CRUTOA    217
      JJCRUZ(IW) = JJCRUZ(IW) + 1                                        CRUTOA    218
      W = W - DEW                                                        CRUTOA    219
      IF ( W .LT. WN) GO TO 200                                          CRUTOA    220
      IF (LESPRT.GT.1) CALL PAGE                                         CRUTOA    221
      IW = IW + 1                                                        CRUTOA    222
      IF (IW .GT. 10)  GO TO 190                                         CRUTOA    223
      GO TO 85                                                           CRUTOA    224
C                                                                        CRUTOA    225
  150 CONTINUE                                                           CRUTOA    226
C                                                                        CRUTOA    227
C  W LOOP - FIXED CRUISE ALTITUDE                                        CRUTOA    228
      W = WT                                                             CRUTOA    229
      IW = 1                                                             CRUTOA    230
      EPR = 1.5                                                          CRUTOA    231
      H = HCRU                                                           CRUTOA    232
  155 FDTOPZ = 0.                                                        CRUTOA    233
      IF (LESPRT.GT.1) GO TO 156                                         CRUTOA    234
      WRITE(6,24) W                                                      CRUTOA    235
      WRITE(6,91)                                                        CRUTOA    236
  156 CONTINUE                                                           CRUTOA    237
      EZ = 0.                                                            CRUTOA    238
      ALPHA = 0.                                                         CRUTOA    239
      CALL VCCOMP(H,EE,MAKIAS,FBIAS, IF1)                                CRUTOA    240
      FUELD1 = FFLOW                                                     CRUTOA    241
      JJCRUZ(IW) = 1                                                     CRUTOA    242
      HHCRUZ(1,IW) = H                                                   CRUTOA    243
      LLCRUZ(1,IW) = FDTOPT(1)                                           CRUTOA    244
      FFCRUZ(1,IW) = FUELD1                                              CRUTOA    245
      EECRUZ(1,IW) = EE                                                  CRUTOA    246
      EPCRUZ(1,IW) = EPRS(1)                                             CRUTOA    247
      FDTOPZ = FDTOPT(1)                                                 CRUTOA    248
      EZ = EE                                                            CRUTOA    249
      IF (IF1 .EQ. 1)  GO TO 160                                         CRUTOA    250
      FBCRUZ(1,IW) = FDTOPT(2)                                           CRUTOA    251
      MBPTAS(1,IW) = MOPTAS(2)                                           CRUTOA    252
      EB(1,IW) = EPRS(2)                                                 CRUTOA    253
  160 CONTINUE                                                           CRUTOA    254
      IF (LESPRT.GT.1) GO TO 161                                         CRUTOA    255
      WRITE(6,100)H,MAKIAS,FBIAS,(MOPIAS(I),MOPTAS(I),MACHOP(I),         CRUTOA    256
     1 EPRS(I),FDTOPT(I),I=1,2),FUELD1                                   CRUTOA    257
      WRITE(6,105)                                                       CRUTOA    258
      WRITE(6,101)H,MACHOP(1),MOPIAS(1),MOPTAS(1),FDTOPT(1),EPRS(1),     CRUTOA    259
     1 EE, FUELD1                                                        CRUTOA    260
      WRITE(6,106)                                                       CRUTOA    261
      WRITE(6,104) H,MACHOP(2),MOPIAS(2),MOPTAS(2),FDTOPT(2),EPRS(2)     CRUTOA    262
  161 CONTINUE                                                           CRUTOA    263
      WS(IW) = W                                                         CRUTOA    264
      EOPTS(IW) = EE                                                     CRUTOA    265
      HSTARS(IW) = H                                                     CRUTOA    266
      MSTARS(IW) = MACHOP(1)                                             CRUTOA    267
      EPRSTR(IW) = EPRS(1)                                               CRUTOA    268
      LAMBS(IW) = FDTOPT(1)                                              CRUTOA    269
      FUELFL(IW) = FUELD1                                                CRUTOA    270
      WSS(IW) = W                                                        CRUTOA    271
      HBFF(IW) = H                                                       CRUTOA    272
      MBFF(IW) = MACHOP(2)                                               CRUTOA    273
      FBFF(IW) = FDTOPT(2)                                               CRUTOA    274
      TBFF(IW) = MOPTAS(2)                                               CRUTOA    275
      EBFF(IW) = EPRS(2)                                                 CRUTOA    276
      JJCRUZ(IW) = 1                                                     CRUTOA    277
      W = W - DEW                                                        CRUTOA    278
      IF (W .LT. WN)  GO TO 200                                          CRUTOA    279
      IW = IW +1                                                         CRUTOA    280
      IF (IW .GT. 10)  GO TO 800                                         CRUTOA    281
      GO TO 155                                                          CRUTOA    282
C                                                                        CRUTOA    283
  190 CONTINUE                                                           CRUTOA    284
      IF (LESPRT.GT.1) GO TO 1000                                        CRUTOA    285
      WRITE(6,901) IW                                                    CRUTOA    286
      GO TO 1000                                                         CRUTOA    287
  200 IWMAX = IW                                                         CRUTOA    288
      IWMAXX = IWMAX                                                     CRUTOA    289
C                                                                        CRUTOA    290
C          BEGIN CODE FROM CRUTBL                                        CRUTOA    291
C                                                                        CRUTOA    292
      IF (IDCT .GT. 1)  GO TO 250                                        CRUTOA    293
      CALL AT62(HTO, ANS)                                                CRUTOA    294
      TEMPK = ANS(3) + DTEMPK                                            CRUTOA    295
      P = ANS(2)                                                         CRUTOA    296
      VI = VTO*FS2KNT                                                    CRUTOA    297
      MACHI = SQRT(5.*(((((VI/2496.46)**2 +1.)**3.5 - 1.)*               CRUTOA    298
     1    (2116.22/P) + 1.)**(2./7.)-1.))                                CRUTOA    299
      VO = 65.76*MACHI * SQRT(TEMPK)                                     CRUTOA    300
      ETO=HTO+ .5*  (VO)**2/G                                            CRUTOA    301
      IF (IDCT .EQ. 0)  GO TO 249                                        CRUTOA    302
      CALL WCEST(EF,HCRU,PC,IDCT)                                        JULY24      3
C          THE VALUES WCRUZ1 AND PFW RETURNED BY WCEST VIA COMMONS       CRUTOA    304
      WCRUZ = WCRUZ1                                                     CRUTOA    305
      PF = PFW                                                           CRUTOA    306
      GO TO 252                                                          CRUTOA    307
  249 WCRUZ = WTO-FULEST(RANGE,IOPARM,ETO,FC,TC,PC,ECRUZ,EF)             CRUTOA    308
      GO TO 251                                                          CRUTOA    309
  250 WCRUZ = WTO                                                        CRUTOA    310
  251 CONTINUE                                                           CRUTOA    311
      WCRUZ1 = WCRUZ                                                     CRUTOA    312
      LCALL = 22                                                         CRUTOA    313
      CALL SERCHD(WS, WCRUZ, IWMAX, PF, IW, LCALL)                       CRUTOA    314
  252 IWND1 = IW + 1                                                     CRUTOA    315
      EOPT  = EOPTS (IW) + PF*(EOPTS (IW + 1) - EOPTS (IW))              CRUTOA    316
      HSTAR = HSTARS(IW) + PF*(HSTARS(IW + 1) - HSTARS(IW))              CRUTOA    317
      MSTAR = MSTARS(IW) + PF*(MSTARS(IW + 1) - MSTARS(IW))              CRUTOA    318
      EPRTAR= EPRSTR(IW) + PF*(EPRSTR(IW + 1) - EPRSTR(IW))              CRUTOA    319
      LAMBDA= LAMBS (IW) + PF*(LAMBS (IW + 1) - LAMBS (IW))              CRUTOA    320
      CRUZCT = LAMBDA                                                    CRUTOA    321
      FUELDT = FUELFL(IW) + PF*(FUELFL(IW+1) - FUELFL(IW))               CRUTOA    322
      IF (IF1 .EQ. 1)  GO TO 253                                         CRUTOA    323
      HSTBR = HBFF(IW) + PF * (HBFF(IW+1) - HBFF(IW))                    CRUTOA    324
      MSTBR = MBFF(IW) + PF * (MBFF(IW+1) - MBFF(IW))                    CRUTOA    325
      EPRTBR= EBFF(IW) + PF * (EBFF(IW+1) - EBFF(IW))                    CRUTOA    326
      FUEL2 = FBFF(IW) + PF * (FBFF(IW+1) - FBFF(IW))                    CRUTOA    327
      TASB  = TBFF(IW) + PF * (TBFF(IW+1) - TBFF(IW))                    CRUTOA    328
  253 CONTINUE                                                           CRUTOA    329
C                                                                        CRUTOA    330
C                                                                        CRUTOA    331
      IF( PF .EQ. 1.) GO TO 270                                          CRUTOA    332
      ISUM = IWMAX + IWND1                                               CRUTOA    333
      DO 260 I= IWND1,IWMAX                                              CRUTOA    334
      J= ISUM - I                                                        CRUTOA    335
      WS(J+ 1) = WS(J)                                                   CRUTOA    336
      EOPTS(J+ 1) = EOPTS(J)                                             CRUTOA    337
      HSTARS(J+ 1) = HSTARS(J)                                           CRUTOA    338
      MSTARS(J+1) = MSTARS(J)                                            CRUTOA    339
      EPRSTR(J+1) = EPRSTR(J)                                            CRUTOA    340
       LAMBS(J+1) = LAMBS(J)                                             CRUTOA    341
      IF (IF1 .EQ. 1)  GO TO 260                                         CRUTOA    342
      HBFF(J+1) = HBFF(J)                                                CRUTOA    343
      MBFF(J+1) = MBFF(J)                                                CRUTOA    344
      EBFF(J+1) = EBFF(J)                                                CRUTOA    345
      FBFF(J+1) = FBFF(J)                                                CRUTOA    346
      TBFF(J+1) = TBFF(J)                                                CRUTOA    347
  260 FUELFL(J+1) = FUELFL(J)                                            CRUTOA    348
      WS(IWND1) = WCRUZ                                                  CRUTOA    349
      EOPTS(IWND1) = EOPT                                                CRUTOA    350
      HSTARS(IWND1) = HSTAR                                              CRUTOA    351
      MSTARS(IWND1) = MSTAR                                              CRUTOA    352
      EPRSTR (IWND1) = EPRTAR                                            CRUTOA    353
      LAMBS(IWND1) = LAMBDA                                              CRUTOA    354
      FUELFL (IWND1) = FUELDT                                            CRUTOA    355
      IF (IF1 .EQ. 1)  GO TO 261                                         CRUTOA    356
      HBFF(IWND1) = HSTBR                                                CRUTOA    357
      MBFF(IWND1) = MSTBR                                                CRUTOA    358
      EBFF(IWND1) = EPRTBR                                               CRUTOA    359
      FBFF(IWND1) = FUEL2                                                CRUTOA    360
      TBFF(IWND1) = TASB                                                 CRUTOA    361
  261 CONTINUE                                                           CRUTOA    362
      IWMAX = IWMAX + 1                                                  CRUTOA    363
  270 CALL PAGE                                                          CRUTOA    364
      WRITE (6, 194)                                                     CRUTOA    365
      WRITE( 6, 198)                                                     CRUTOA    366
      DO 280 I= 1, IWMAX                                                 CRUTOA    367
      CALL AT62(HSTARS(I), ANS)                                          CRUTOA    368
      TEMPK = ANS(3) + DTEMPK                                            CRUTOA    369
      A = 65.76 * SQRT(TEMPK)                                            CRUTOA    370
      VTASOP(I) = MSTARS(I) * A / FS2KNT                                 CRUTOA    371
      IF (LESPRT.GT.1) GO TO 280                                         CRUTOA    372
      WRITE(6,196) WS(I),EOPTS(I), MSTARS(I),HSTARS(I),EPRSTR(I),        CRUTOA    373
     1 LAMBS(I), VTASOP(I),FUELFL(I)                                     CRUTOA    374
  280 CONTINUE                                                           CRUTOA    375
      IF (LESPRT.GT.1) GO TO 281                                         CRUTOA    376
      WRITE(6, 193)                                                      CRUTOA    377
      WRITE(6, 198)                                                      CRUTOA    378
  281 CONTINUE                                                           CRUTOA    379
      RLAM = 0.                                                          CRUTOA    380
      DO 290 I=1, IWMAX                                                  CRUTOA    381
      EBOPT(I) = HBFF(I) + ((TBFF(I) * FS2KNT)**2/64.4)                  CRUTOA    382
      IF (LESPRT.GT.1) GO TO 290                                         CRUTOA    383
      WRITE(6,196) WS(I), EBOPT(I),MBFF(I),HBFF(I),EBFF(I),RLAM,         CRUTOA    384
     1      TBFF(I), FBFF(I)                                             CRUTOA    385
C                                                                        CRUTOA    386
  290 CONTINUE                                                           CRUTOA    387
      IF (IDCT .LE. 1)  GO TO 900                                        CRUTOA    388
C          COMPUTE OPTIMUM AIRSPEED FOR A FIXED ALTITUDE                 CRUTOA    389
      H = HTO                                                            CRUTOA    390
      CALL VCCOMP (HTO, ETO, MAKIAS, FBIAS, IF1)                         CRUTOA    391
      IF (TRSTDR .LE. 0)  GO TO 800                                      CRUTOA    392
      HO = HTO                                                           CRUTOA    393
      LAMBDA = FDTOPT(1)                                                 CRUTOA    394
      HCRUZ = HO                                                         CRUTOA    395
      WCRUZ = WTO                                                        CRUTOA    396
      ECRUZ = ETO                                                        CRUTOA    397
      FCRUZ = FFLOW                                                      CRUTOA    398
      VTO = MOPTAS(1)                                                    CRUTOA    399
      IF (LESPRT.GT.1) GO TO 900                                         CRUTOA    400
      WRITE(6, 500) HTO, ETO, VTO, WTO                                   CRUTOA    401
      GO TO 900                                                          CRUTOA    402
  800 WRITE (6, 501)                                                     CRUTOA    403
  900 CONTINUE                                                           CRUTOA    404
 1000 RETURN                                                             CRUTOA    405
      END                                                                CRUTOA    406
      SUBROUTINE CRUZOP                                                  CRUZOP      2
C                                                                        CRUZOP      3
C          **  GENERATES THE OPTIMUM CRUISE TABLE AS A FUNCTION OF       CRUZOP      4
C          **    ALTITUDE, AIRSPEED, AND WEIGHT                          CRUZOP      5
C                                                                        CRUZOP      6
      IMPLICIT REAL(M)                                                   CRUZOP      7
      REAL LAMBDA,LAMBS,LLCRUZ                                           CRUZOP      8
      EXTERNAL FBOUND, FCOST, FOPT,FCLIMB,FCLMB2                         CRUZOP      9
      COMMON /COMARO/ IFLAP, FFLAPS, DUMDUM(15)                          CRUZOP     10
      COMMON /IO/ ANS(4), WS(11), EOPTS(11), HSTARS(11), MSTARS(11),     CRUZOP     11
     1 EPRSTR(11), LAMBS(11), VTASOP(11), FUELFL(11), CRDIST(11),        CRUZOP     12
     2CRTIME(11), MNCOST(2), MOPIAS(2), MOPTAS(2), MACHOP(2), FDTOPT(2), CRUZOP     13
     3 OPTALT(2), HOPT(2), EPRS(2),IWMAX,IOPARM                          CRUZOP     14
     4 , FILL(5), DEIN                                                   CRUZOP     15
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRMAX,MFGR   CRUZOP     16
      COMMON/III/IPRINT, IDRAG                                           CRUZOP     17
      COMMON /COST/ EPR, ICOST, FC, TC, DTEMPK, W, FUELDT, FFLOW         CRUZOP     18
      COMMON/OPT/OPTMAK,IOPT,EDTMX                                       CRUZOP     19
      COMMON/PRTCOM/LESPRT                                               CRUZOP     20
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS, MXVTAS,VTAS2     CRUZOP     21
      COMMON /CLIMB/ MACH, D, ICLIMB, TDUMMY, TRSTDR                     CRUZOP     22
      COMMON /WINDY/IWIND, PSIA, VWA                                     CRUZOP     23
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    CRUZOP     24
     1 DLLDEE(2, 10),IWMAXX, WTO, WCRUZ1,CRUZCT,HHCRUZ(50,10),           CRUZOP     25
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         CRUZOP     26
      COMMON /ACFT/ IAC, SAC, HMAX                                       CRUZOP     27
      DIMENSION AP(20,3),BP(20,1)                                        CRUZOP     28
C                                                                        CRUZOP     29
C                                                                        CRUZOP     30
   20 FORMAT(20I4)                                                       CRUZOP     31
   21 FORMAT(8F10.2)                                                     CRUZOP     32
   24 FORMAT(22H0AIRCRAFT CRUISE WT =  F10.0, 5H  LBS)                   CRUZOP     33
   25 FORMAT( 16H0FUEL COST($/LB) F9.4, 2X,17HTIME COST($/HR)=  F7.2,2X, CRUZOP     34
     1 18HTEMP VAR (DEG K) =, F7.2,20HA/C HEADING (DEG) = ,F7.2)         CRUZOP     35
   26 FORMAT(40H0WEIGHT FOR FIRST CRUISE TABLE (MAXIMUM) , F9.0 /        CRUZOP     36
     1       40H WEIGHT FOR FINAL CRUISE TABLE (MINIMUM) , F9.0 /        CRUZOP     37
     2       32H WEIGHT DECREMENT BETWEEN TABLES , 8X, F9.0)             CRUZOP     38
   31 FORMAT(20H0 AIRCRAFT HEADING =  F10.0, 2X, 3HDEG)                  CRUZOP     39
   91 FORMAT(24H0    ALT   MN DRAG   MAX 9X, 31H**** MINIMUM COST/DISTAN CRUZOP     40
     1CE **** 12X,29H**** MINIMUM FUEL/TIME   ****  8X,13HMIN COST/DIST  CRUZOP     41
     2 / 5X, 2HFT 5X,13HSPEED   SPEED 12X, 5HSPEED 11X,14HPWR SETG  FUEL CRUZOP     42
     3       13X, 5HSPEED 8X, 8HPWR SETG 4X, 4HFUEL 8X 4HFUEL            CRUZOP     43
     4 / 13X, 11HKIAS   KIAS 6X, 19HKIAS    KTAS   MACH6X,3HEPR5X,4H$/NM CRUZOP     44
     5   5X, 37HKIAS   KTAS   MACH      EPR     LB/HR 8X, 5HLB/HR)       CRUZOP     45
  101 FORMAT(10H OPT ALT = F7.0, 3H FT 21X, 11HOPT SPEED = ,F6.4,5H MACH CRUZOP     46
     1 F7.0, 5H KIAS, F7.0, 5H KTAS 9X, 14HMIN (FDOT/V) = F6.3, 5H $/NM/ CRUZOP     47
     2 23H CRUISE POWER SETTING = F7.4, 4H EPR 7X,                       CRUZOP     48
     3 23HOPTIMUM CRUISE ENERGY = F7.0, 3H FT  22X,                      CRUZOP     49
     4 15HMIN FUEL RATE = F6.0, 6H LB/HR )                               CRUZOP     50
  104 FORMAT(10H OPT ALT = F7.0, 3H FT 21X, 11HOPT SPEED = ,F6.4,5H MACH CRUZOP     51
     1 F7.0, 5H KIAS, F7.0, 5H KTAS 9X, 12HMIN (FDOT) = F6.0 /           CRUZOP     52
     2 23H CRUISE POWER SETTING = F7.4, 4H EPR )                         CRUZOP     53
  105 FORMAT  (26H0MINIMIZING FUEL/DISTANCE%  )                          CRUZOP     54
  106 FORMAT(22H0MINIMIZING FUEL/TIME%)                                  CRUZOP     55
  193 FORMAT (30X, 20HCRUISE TABLE SUMMARY  )                            CRUZOP     56
  194 FORMAT (20X, 41HCRUISE TABLE WITH ESTIMATED CRUISE WEIGHT  )       CRUZOP     57
  196 FORMAT(1H0 F10.0, F10.0, F10.4, F10.0, F10.4, F10.3, 2F10.2)       CRUZOP     58
  198 FORMAT(81H0CRUISE WT    OPT E   OPT MACH    OPT H   PWR SETG    LA CRUZOP     59
     1MBDA     KTAS   FUEL FLOW  /1H 5X, 2HLB 9X, 2HFT 18X, 2HFT 7X,     CRUZOP     60
     24H EPR 6X, 4H$/NM 15X, 5HLB/HR)                                    CRUZOP     61
  901 FORMAT(59H0DIMENSIONED FOR ONLY TEN DIFFERENT WEIGHTS, COMPUTING T CRUZOP     62
     1HE    I2, 9HTH WEIGHT)                                             CRUZOP     63
  400 FORMAT(8E15.7)                                                     CRUZOP     64
C                                                                        CRUZOP     65
      DATA FS2KNT, G / 1.68781, 32.2 /                                   CRUZOP     66
      DATA ENDATA/-1.E6/                                                 CRUZOP     67
C                                                                        CRUZOP     68
C                                                                        CRUZOP     69
      IFLAP = 1                                                          CRUZOP     70
      FFLAPS = 0.                                                        CRUZOP     71
      READ(5, 21) FC, TC, DTEMPK, PSIA                                   CRUZOP     72
      WRITE(8,400)  FC, TC, DTEMPK, PSIA                                 CRUZOP     73
      WRITE(6, 25) FC, TC, DTEMPK, PSIA                                  CRUZOP     74
      READ(5, 21) W, WN, DEW                                             CRUZOP     75
      WRITE(6, 26) W, WN, DEW                                            CRUZOP     76
      IF (IWIND .EQ. 0)  GO TO 28                                        CRUZOP     77
      CALL WINDIN                                                        CRUZOP     78
      WRITE(6, 31) PSIA                                                  CRUZOP     79
      GO TO 30                                                           CRUZOP     80
   28 VWA = 0.                                                           CRUZOP     81
      IF (LESPRT.GT.1) GO TO 30                                          CRUZOP     82
      CALL PAGE                                                          CRUZOP     83
   30 CONTINUE                                                           CRUZOP     84
C                                                                        CRUZOP     85
C                                                                        CRUZOP     86
C     W LOOP                                                             CRUZOP     87
      IW = 1                                                             CRUZOP     88
      EPR = 1.5                                                          CRUZOP     89
   85 CONTINUE                                                           CRUZOP     90
      IF (LESPRT.GT.1) GO TO 86                                          CRUZOP     91
      WRITE(6,24) W                                                      CRUZOP     92
   86 CONTINUE                                                           CRUZOP     93
      WRITE(8,400) W                                                     CRUZOP     94
      ICEILG = 0                                                         CRUZOP     95
      FDTOPZ= 0.                                                         CRUZOP     96
      EZ = 0.                                                            CRUZOP     97
      JJCRUZ(IW) = 0                                                     CRUZOP     98
      H = 0.                                                             CRUZOP     99
      MNCOST(1) = 1.E6                                                   CRUZOP    100
      MNCOST(2) = 1.E6                                                   CRUZOP    101
      DEH = 1000.                                                        CRUZOP    102
      IF (LESPRT.GT.1) GO TO 87                                          CRUZOP    103
      WRITE(6, 91)                                                       CRUZOP    104
   87 CONTINUE                                                           CRUZOP    105
      ALPHA = 0.                                                         CRUZOP    106
C                                                                        CRUZOP    107
C     H LOOP                                                             CRUZOP    108
C                                                                        CRUZOP    109
   89 IF (H .LE. HMAX)  GO TO 92                                         CRUZOP    110
      IF ((H - HMAX) .GT. 50.)  GO TO 135                                CRUZOP    111
      H = HMAX                                                           CRUZOP    112
   92 CONTINUE                                                           CRUZOP    113
      CALL VCCOMP(H, EE, MAKIAS, FBIAS, IF1)                             CRUZOP    114
      FUELD1 = FFLOW                                                     CRUZOP    115
      IF (TRSTDR) 129, 128, 120                                          CRUZOP    116
  120 DO 122 I=1,2                                                       CRUZOP    117
      IF (FDTOPT(I) .GE. MNCOST(I)) GO TO 122                            CRUZOP    118
      MNCOST(I) = FDTOPT(I)                                              CRUZOP    119
      OPTALT(I) = H                                                      CRUZOP    120
  122 CONTINUE                                                           CRUZOP    121
      JJCRUZ(IW) = JJCRUZ(IW) + 1                                        CRUZOP    122
      JJ= JJCRUZ(IW)                                                     CRUZOP    123
      HHCRUZ(JJ, IW) =H                                                  CRUZOP    124
      FFCRUZ(JJ, IW) =  FUELD1                                           CRUZOP    125
      LLCRUZ(JJ, IW) = FDTOPT(1)                                         CRUZOP    126
      EECRUZ(JJ, IW) = EE                                                CRUZOP    127
      EPCRUZ(JJ,IW) = EPRS(1)                                            CRUZOP    128
      FDTOPZ= FDTOPT(1)                                                  CRUZOP    129
      EZ = EE                                                            CRUZOP    130
      IF (LESPRT.GT.1) GO TO 107                                         CRUZOP    131
      WRITE(6, 100) H, MAKIAS, FBIAS, (MOPIAS(I), MOPTAS(I), MACHOP(I),  CRUZOP    132
     1 EPRS(I), FDTOPT(I), I = 1,2), FUELD1                              CRUZOP    133
  100 FORMAT(1H 3F8.0, 1X, 2F8.0, F7.3, F10.3, F8.2, 2X, 2F7.0, F7.3,    CRUZOP    134
     1 2X, F8.3, F9.0, F13.0)                                            CRUZOP    135
  107 CONTINUE                                                           CRUZOP    136
      WRITE(8, 400) H, MAKIAS, FBIAS, (MOPIAS(I), MOPTAS(I), MACHOP(I),  CRUZOP    137
     1 EPRS(I), FDTOPT(I), I=1,2),FUELD1                                 CRUZOP    138
      IF (ICEILG.EQ.0) GO TO 126                                         CRUZOP    139
      ICEILG = ICEILG + 1                                                CRUZOP    140
      IF (ICEILG .GT. 5) GO TO 135                                       CRUZOP    141
      DEH = DEH/2.                                                       CRUZOP    142
  126 H = H + DEH                                                        CRUZOP    143
      GO TO 89                                                           CRUZOP    144
  128 MACHOP(1) = MACH                                                   CRUZOP    145
      MACHOP(2) = MACH                                                   CRUZOP    146
      FDTOPT(2) = FF                                                     CRUZOP    147
      GO TO 135                                                          CRUZOP    148
  129 IF (ICEILG .NE. 0) GO TO 130                                       CRUZOP    149
      ICEILG = 1                                                         CRUZOP    150
  130 DEH = DEH/2.                                                       CRUZOP    151
      H = H - DEH                                                        CRUZOP    152
      GO TO 89                                                           CRUZOP    153
  135 HCEILG = H                                                         CRUZOP    154
      IF (HCEILG .GT. HMAX)  HCEILG = HMAX                               CRUZOP    155
      WRITE(8,400)ENDATA,MAKIAS,FBIAS,(MOPIAS(I), MOPTAS(I), MACHOP(I),  CRUZOP    156
     1 EPRS(I), FDTOPT(I), I=1,2)                                        CRUZOP    157
      DO 136 I=1,2                                                       CRUZOP    158
      ICOST = I                                                          CRUZOP    159
      H1 = OPTALT(I) - 1000.                                             CRUZOP    160
      H2 = OPTALT(I)  + 1000.                                            CRUZOP    161
      IF (H2 .GT. HCEILG) H2 = HCEILG                                    CRUZOP    162
      MNCOST(I) = MINF2(H1, H2, FOPT, HOPT(I), IPRINT)                   CRUZOP    163
      H1 = HOPT(I) - 30.                                                 CRUZOP    164
      H2 = HOPT(I) + 30.                                                 CRUZOP    165
      IF (H2 .GT. HCEILG) H2 = HCEILG                                    CRUZOP    166
      MNCOST(I) = MINF2( H1, H2, FOPT, HOPT(I), IPRINT)                  CRUZOP    167
      OPTTAS = OPTMAK*A/FS2KNT                                           CRUZOP    168
      OPTIAS=2496.5*SQRT((((P/2116.22)*((1.+.2*OPTMAK*OPTMAK)            CRUZOP    169
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             CRUZOP    170
      GO TO (102, 103), ICOST                                            CRUZOP    171
  102 CONTINUE                                                           CRUZOP    172
      EOPT = HOPT(1) + .5*(OPTTAS*FS2KNT)**2/G                           CRUZOP    173
      IF (LESPRT.GT.1) GO TO 88                                          CRUZOP    174
      WRITE(6,105)                                                       CRUZOP    175
      WRITE(6, 101) HOPT(I), OPTMAK, OPTIAS, OPTTAS, MNCOST(I), EPR,EOPT CRUZOP    176
     1 , FUELDT                                                          CRUZOP    177
   88 CONTINUE                                                           CRUZOP    178
      WRITE(8, 400) HOPT(I), OPTMAK, OPTIAS, OPTTAS, MNCOST(I), EPR,EOPT CRUZOP    179
     1 , FUELDT                                                          CRUZOP    180
      HSTAR  = HOPT(1)                                                   CRUZOP    181
        MSTAR = OPTMAK                                                   CRUZOP    182
      EPRTAR = EPR                                                       CRUZOP    183
      LAMBDA = MNCOST(1)                                                 CRUZOP    184
      FUELD1 = FUELDT                                                    CRUZOP    185
      GO TO 136                                                          CRUZOP    186
  103 CONTINUE                                                           CRUZOP    187
      IF (LESPRT.GT.1) GO TO 136                                         CRUZOP    188
      WRITE(6,106)                                                       CRUZOP    189
      WRITE(6, 104) HOPT(I), OPTMAK, OPTIAS, OPTTAS, MNCOST(I), EPR      CRUZOP    190
  136 CONTINUE                                                           CRUZOP    191
      WRITE(8, 400) HOPT(I), OPTMAK, OPTIAS, OPTTAS, MNCOST(I), EPR      CRUZOP    192
      WS(IW) = W                                                         CRUZOP    193
      EOPTS(IW) = EOPT                                                   CRUZOP    194
      HSTARS (IW) = HSTAR                                                CRUZOP    195
      MSTARS(IW) = MSTAR                                                 CRUZOP    196
      EPRSTR(IW) = EPRTAR                                                CRUZOP    197
      LAMBS(IW) = LAMBDA                                                 CRUZOP    198
      FUELFL(IW) = FUELD1                                                CRUZOP    199
      WSS(IW) = W                                                        CRUZOP    200
      JJOPT = JTRUNC(LLCRUZ(1, IW), JJ)                                  CRUZOP    201
      JJOPT1 = JJOPT + 1                                                 CRUZOP    202
      JSUM = JJ + JJOPT1                                                 CRUZOP    203
      DO 391 I= JJOPT1, JJ                                               CRUZOP    204
      J = JSUM - I                                                       CRUZOP    205
      HHCRUZ(J+1, IW) = HHCRUZ(J, IW)                                    CRUZOP    206
      FFCRUZ(J+1, IW) = FFCRUZ(J, IW)                                    CRUZOP    207
      LLCRUZ(J+1, IW) = LLCRUZ(J, IW)                                    CRUZOP    208
      EPCRUZ(J+1,IW) = EPCRUZ(J,IW)                                      CRUZOP    209
  391 EECRUZ(J+1, IW) = EECRUZ(J, IW)                                    CRUZOP    210
      LLCRUZ(JJOPT1, IW) = MNCOST(1)                                     CRUZOP    211
      EECRUZ(JJOPT1, IW) = EOPT                                          CRUZOP    212
      FFCRUZ(JJOPT1, IW) = FUELD1                                        CRUZOP    213
      HHCRUZ(JJOPT1, IW) = HOPT(1)                                       CRUZOP    214
      EPCRUZ(JJOPT1,IW) = EPRSTR(IW)                                     CRUZOP    215
      JJCRUZ(IW) = JJCRUZ(IW) + 1                                        CRUZOP    216
      JJ = JJCRUZ(IW)                                                    CRUZOP    217
      LCALL = 5                                                          CRUZOP    218
      CALL SERCH1(HHCRUZ(1,IW), 20000., JJ, PF, ISTART, LCALL)           CRUZOP    219
      IF( PF . GT. .9) ISTART = ISTART + 1                               CRUZOP    220
      JJEND = JJOPT + 5                                                  CRUZOP    221
      IF( JJEND .GT. JJ-1) JJEND = JJ-1                                  CRUZOP    222
      DO 392 LAST = JJOPT, JJEND                                         CRUZOP    223
      TEST = LLCRUZ(LAST + 1, IW) /LLCRUZ(LAST, IW)                      CRUZOP    224
      IF( TEST .GE. 5.) GO TO 393                                        CRUZOP    225
  392 CONTINUE                                                           CRUZOP    226
  393 NH =LAST- ISTART + 1                                               CRUZOP    227
      CALL LSQPOL(EECRUZ(ISTART,IW), LLCRUZ(ISTART,IW),NH,AP, BP, 3)     CRUZOP    228
      DLLDEE(1, IW) = 12160.*BP(3,1)                                     CRUZOP    229
      DLLDEE(2, IW) = 6080.*BP(2,1)                                      CRUZOP    230
      W = W - DEW                                                        CRUZOP    231
      IF ( W .LT. WN) GO TO 200                                          CRUZOP    232
      IF (LESPRT.LE.1) CALL PAGE                                         CRUZOP    233
      IW = IW + 1                                                        CRUZOP    234
      IF( IW .GT.10) GO TO 900                                           CRUZOP    235
      GO TO 85                                                           CRUZOP    236
C                                                                        CRUZOP    237
C                                                                        CRUZOP    238
  900 WRITE(6,901) IW                                                    CRUZOP    239
      GO TO 1000                                                         CRUZOP    240
  200 IWMAX = IW                                                         CRUZOP    241
      WRITE(8,400) ENDATA                                                CRUZOP    242
      WRITE(8, 20) IWMAX                                                 CRUZOP    243
      IWMAXX = IWMAX                                                     CRUZOP    244
      WRITE(8, 400) (DLLDEE(1,J), DLLDEE(2,J), J=1, IWMAX)               CRUZOP    245
      CALL PAGE                                                          CRUZOP    246
      WRITE(6, 193)                                                      CRUZOP    247
      WRITE( 6, 198)                                                     CRUZOP    248
      DO 197 I= 1, IWMAX                                                 CRUZOP    249
      CALL AT62(HSTARS(I), ANS)                                          CRUZOP    250
      TEMPK= ANS(3) + DTEMPK                                             CRUZOP    251
      A = 65.76 * SQRT(TEMPK)                                            CRUZOP    252
      VTASOP(I) = MSTARS(I) * A / FS2KNT                                 CRUZOP    253
      WRITE(8, 400) WS(I), EOPTS(I), MSTARS(I), HSTARS(I), EPRSTR(I),    CRUZOP    254
     1 LAMBS(I), VTASOP(I),FUELFL(I)                                     CRUZOP    255
      WRITE(6,196) WS(I), EOPTS(I),MSTARS(I),HSTARS(I),EPRSTR(I),        CRUZOP    256
     1 LAMBS(I), VTASOP(I),FUELFL(I)                                     CRUZOP    257
  197 CONTINUE                                                           CRUZOP    258
 1000 RETURN                                                             CRUZOP    259
      END                                                                CRUZOP    260
      FUNCTION DBLTBL (F,X,NX,Y,NY,A,B,J,K,IXTRAP)                       DBLTBL      2
C----------------------------------------------------------------------  DBLTBL      3
C                                                                        DBLTBL      4
C PURPOSE%  PERFORM A LINEAR DOUBLE TABLE LOOK-UP.                       DBLTBL      5
C                                                                        DBLTBL      6
C METHOD%  GIVEN THE TWO-DIMENSIONAL ARRAY  F, WHICH REPRESENTS A        DBLTBL      7
C     FUNCTION  Z(X,Y), INTERPOLATE THE ARRAY TO APPROXIMATE  Z(A,B).    DBLTBL      8
C     FIRST, THE FOUR POINTS                                             DBLTBL      9
C                                                                        DBLTBL     10
C                 ( X(J), Y(K) ),        ( X(J), Y(K+1) )                DBLTBL     11
C                 ( X(J+1), Y(K) ),      ( X(J+1), Y(K+1) )              DBLTBL     12
C                                                                        DBLTBL     13
C     WHICH SURROUND THE POINT  (A,B)  ARE FOUND.  THEN, THE INTER-      DBLTBL     14
C     POLATION IS PERFORMED FIRST ON  X  AND THEN ON  Y.                 DBLTBL     15
C                                                                        DBLTBL     16
C ARGUMENTS%                                                             DBLTBL     17
C     F      = INPUT TWO-DIMENSIONAL ARRAY OF TABLE VALUES.              DBLTBL     18
C     X,Y    = INPUT ARRAYS OF VALUES OF  X  AND  Y  FOR WHICH  Z(X,Y)   DBLTBL     19
C              APPEARS IN THE TABLE  F.  THAT IS,  F(J,K) =              DBLTBL     20
C              Z(X(J),Y(K)).                                             DBLTBL     21
C     NX,NY  = NUMBER OF ELEMENTS IN  X  AND  Y  ARRAYS; ALSO, NUMBER    DBLTBL     22
C              OF ROWS AND COLUMNS OF  F.                                DBLTBL     23
C     A,B    = VALUE OF X,Y  AT WHICH THE TABLE IS TO BE INTERPOLATED.   DBLTBL     24
C     J,K    = ON INPUT, THE VALUES  X(J),Y(K)  WHERE THE SEARCH WILL    DBLTBL     25
C              START; ON OUTPUT, THE VALUES WHICH WERE FOUND.  IF  J     DBLTBL     26
C              OR  K  IS 0 OR LESS ON INPUT, THE SEARCH STARTS IN THE    DBLTBL     27
C              MIDDLE OF  X  OR  Y.                                      DBLTBL     28
C     IXTRAP = 0 IF NO EXTRAPOLATION WAS NECESSARY, 1 IF X WAS EXTRAPOLA DBLTBL     29
C              2 IF Y WAS EXTRAPOLATED, AND 3 IF BOTH WERE.              DBLTBL     30
C                                                                        DBLTBL     31
C NOTES%                                                                 DBLTBL     32
C     (1)  IF THE ELEMENTS OF  X  OCCUR AT REGULAR INTERVALS, THEN THE   DBLTBL     33
C     ARRAY MAY BE IMPLIED BY CALLING THIS ROUTINE WITH  X(1)  SET TO    DBLTBL     34
C     THE MINIMUM VALUE OF  X,  X(2)  SET TO THE INTERVAL SIZE, AND      DBLTBL     35
C     NX = -(NUMBER OF VALUES IN IMPLIED ARRAY).  THUS, THE IMPLIED      DBLTBL     36
C     ARRAY IS                                                           DBLTBL     37
C                                                                        DBLTBL     38
C                 X(J) = X(1)+(J-1)*X(2),   J=1,...,(-NX).               DBLTBL     39
C                                                                        DBLTBL     40
C     THE  Y  ARRAY MAY BE IMPLIED SIMILARLY.                            DBLTBL     41
C     (2)  VALUES OF  (A,B)  OUTSIDE THE DOMAINS OF  X  AND/OR  Y  ARE   DBLTBL     42
C     FOUND BY EXTRAPOLATING THE NEAREST  4  POINTS OF THE TABLE.        DBLTBL     43
C                                                                        DBLTBL     44
C----------------------------------------------------------------------  DBLTBL     45
      DIMENSION F(1),X(1),Y(1)                                           DBLTBL     46
      DATA ONEDP/1.E0/                                                   DBLTBL     47
C                                                                        DBLTBL     48
C     ----DETERMINE  4  POINTS SURROUNDING  (A,B)                        DBLTBL     49
      CALL LOC8 (X,NX,A,J,FX,IXTRAP)                                     DBLTBL     50
      CALL LOC8 (Y,NY,B,K,FY,JXTRAP)                                     DBLTBL     51
      IXTRAP = IXTRAP + 2*JXTRAP                                         DBLTBL     52
C                                                                        DBLTBL     53
C     ----INTERPOLATE ON  X                                              DBLTBL     54
      ONEMFX = ONEDP-FX                                                  DBLTBL     55
      M = IABS(NX)                                                       DBLTBL     56
      JKP1 = K*M+J                                                       DBLTBL     57
      JK = JKP1-M                                                        DBLTBL     58
      Z1 = FX*F(JK+1)+ONEMFX*F(JK)                                       DBLTBL     59
      Z2 = FX*F(JKP1+1)+ONEMFX*F(JKP1)                                   DBLTBL     60
C                                                                        DBLTBL     61
C     ----INTERPOLATE ON  Y                                              DBLTBL     62
      DBLTBL = (ONEDP-FY)*Z1+FY*Z2                                       DBLTBL     63
C                                                                        DBLTBL     64
      RETURN                                                             DBLTBL     65
      END                                                                DBLTBL     66
      SUBROUTINE ENGEP2(H, MAKNO, EPRX, INCRUZ, THRST, FDOT, MFGR)       ENGEP2      2
C                                                                        ENGEP2      3
C          ** GENERATES THRUST AND FUEL FLOW RATE FOR SOME ALTITUDE, M,  ENGEP2      4
C          **   AND EPR SETTING.                                         ENGEP2      5
C                                                                        ENGEP2      6
      REAL MACHNO,MAKNO, KC                                              ENGEP2      7
      REAL MACH24,MACH27                                                 ENGEP2      8
      COMMON /ENGTFF/ ALT(10), MACHNO(10), FNIDL(10,10),WFIDL(10,10)     ENGEP2      9
     1,ALT24(7),TEMP(13),EPRMAX(13,7),ALTFF(10)                          ENGEP2     10
     2,EPR(14),FNMAX(14,10)                                              ENGEP2     11
     3,DECL(21),DECD(21,10),MACH24(10)                                   ENGEP2     12
     4,ALT27(9),THRUST(30,9),MACH27(8,9),TSFC(30,8,9)                    ENGEP2     13
     5,MACHN1(10),MACHN2(10)                                             ENGEP2     14
      COMMON /COST/ EPR1, ICOST, FC, TC, DTEMPK, W, FUELDT, FFLOW        ENGEP2     15
      COMMON /TOPRNT/ EPRABX                                             ENGEP2     16
      DIMENSION MAXMAK(9),MAXT(9),COEFF(30),EMP(5),EPRP(6)               ENGEP2     17
      DIMENSION ANS(4),WF(6,5)                                           ENGEP2     18
      DATA COEFF/                                                        ENGEP2     19
     X60372424462143520021B,17417204274650144546B,60353771731137523351B, ENGEP2     20
     X17414571110615335177B,60402312546460333546B,17345207565263173402B, ENGEP2     21
     X17444537346176610033B,60321053746553057030B,17464004667660057232B, ENGEP2     22
     X60323321323336551120B,17435136104045750615B,60373303145673666546B, ENGEP2     23
     X60313153125602767427B,17477050054012430063B,60273716233505141475B, ENGEP2     24
     X17474522575502010314B,60322617501062343674B,17424467435741776727B, ENGEP2     25
     X17466656730432060611B,60272774644153414173B,17505567207554401646B, ENGEP2     26
     X60301436606205044736B,17457070213614615315B,60351642134511705066B, ENGEP2     27
     X60321537461233540071B,17474440501021047432B,60302661420437742516B, ENGEP2     28
     X17465544446450241626B,60331646241260223751B,17415205367311125440B/ ENGEP2     29
      DATA MAXMAK/6, 6, 7, 7, 7, 7, 6, 6, 6/                             ENGEP2     30
      DATA MAXT/30, 30, 30, 30, 30, 30, 28,29, 29/                       ENGEP2     31
      DATA PZ , TZ/2116.2, 288./                                         ENGEP2     32
      DATA WF/-6053.414, 3158.016,5070.555,-1103.562,-889.9834, 332.9619 ENGEP2     33
     1,       -4155.113, 2862.128,3424.648,-583.6367,-632.5012, 239.0175 ENGEP2     34
     2,       -617.3311,-743.4917,3462.835, 190.6228,-750.6321, 214.6133 ENGEP2     35
     3,       -230.7649,-428.9509,2437.024, 641.0098,-678.4924, 169.6867 ENGEP2     36
     4,        994.3538,-1921.537,2557.642, 1251.383,-1011.685, 230.7005 ENGEP2     37
     5/                                                                  ENGEP2     38
C                                                                        ENGEP2     39
C                                                                        ENGEP2     40
   80 CALL AT62(H, ANS)                                                  ENGEP2     41
      TEMPK = ANS(3) + DTEMPK                                            ENGEP2     42
      T2 = TEMPK * (1. + .2 * MAKNO**2)                                  ENGEP2     43
      TEMPA = T2 - 273.15                                                ENGEP2     44
      DELTAM = ANS(2)/PZ                                                 ENGEP2     45
      DELTA = DELTAM*(1.+.2*MAKNO**2)**3.5                               ENGEP2     46
      THETA = ANS(3)/TZ                                                  ENGEP2     47
C     TABLE 3 GIVEN TOTAL AIR TEMP, ALT, LOOK UP MAX EPR                 ENGEP2     48
   81 EPRMX = VALUE2(TEMP, 13, 13, TEMPA, ALT24, 5, 5, H, EPRMAX,0)      ENGEP2     49
      IF (INCRUZ.NE.1) GO TO 83                                          ENGEP2     50
      EPRMX = EPRMX - .1                                                 ENGEP2     51
   83 IF(EPRX .GT. EPRMX) EPRX= EPRMX                                    ENGEP2     52
      EMP(1) = 1.0                                                       ENGEP2     53
      EPRP(1) = 1.0                                                      ENGEP2     54
      DO 84 I=2,5                                                        ENGEP2     55
 84   EMP(I) = EMP(I-1)*MAKNO                                            ENGEP2     56
      DO 85 I=2,6                                                        ENGEP2     57
 85   EPRP(I) = EPRP(I-1) *EPRX                                          ENGEP2     58
      FNDE = 0.                                                          ENGEP2     59
      IX = 1                                                             ENGEP2     60
      DO 100 I=1,5                                                       ENGEP2     61
      DO 100 J=1,6                                                       ENGEP2     62
      FNDE = FNDE + COEFF(IX)*EMP(I)*EPRP(J)                             ENGEP2     63
      IX = IX+1                                                          ENGEP2     64
 100  CONTINUE                                                           ENGEP2     65
      FNDE3= 3.*FNDE                                                     ENGEP2     66
      THRST = FNDE3*DELTAM                                               ENGEP2     67
C                                                                        ENGEP2     68
      IF (MFGR .EQ. 2  .OR. MFGR .EQ. 4)  GO TO 102                      ENGEP2     69
C                                                                        ENGEP2     70
C     TURBOJET ENGINE CURVES FOR FDOT                                    ENGEP2     71
  101 IF(H.GT.35000.) GO TO 115                                          ENGEP2     72
      IF (MAKNO.LT..8) GO TO 111                                         ENGEP2     73
      WFC = POLYE1(EPRX, 6, WF(1,3))                                     ENGEP2     74
      GO TO 114                                                          ENGEP2     75
 111  IF(MAKNO.LT. .4) GO TO 112                                         ENGEP2     76
      L1 = 2                                                             ENGEP2     77
      L2 = 3                                                             ENGEP2     78
      PFM = (MAKNO - .4) / .4                                            ENGEP2     79
      GO TO 113                                                          ENGEP2     80
 112  L1 = 1                                                             ENGEP2     81
      L2 =2                                                              ENGEP2     82
      PFM = MAKNO / .4                                                   ENGEP2     83
 113  WF1 = POLYE1(EPRX, 6, WF(1,L1))                                    ENGEP2     84
      WF2 = POLYE1(EPRX, 6, WF(1,L2))                                    ENGEP2     85
      WFC = WF1 + PFM * (WF2 - WF1)                                      ENGEP2     86
 114  IF(H.LE.25000.) GO TO 121                                          ENGEP2     87
      WF1 = WFC                                                          ENGEP2     88
      WF2 = POLYE1(EPRX, 6, WF(1,4))                                     ENGEP2     89
      PFHH = (H - 25000.) / 10000.                                       ENGEP2     90
      GO TO 120                                                          ENGEP2     91
 115  WF1 = POLYE1(EPRX, 6, WF(1,4))                                     ENGEP2     92
      WF2 = POLYE1(EPRX, 6, WF(1,5))                                     ENGEP2     93
      PFHH = (H - 35000.) / 10000.                                       ENGEP2     94
 120  WFC = WF1 + PFHH * (WF2 - WF1)                                     ENGEP2     95
 121  KC =.00223181*TEMPA + .9675897                                     ENGEP2     96
   82 FDOT= 3.*  WFC*DELTA*KC                                            ENGEP2     97
      GO TO 130                                                          ENGEP2     98
C                                                                        ENGEP2     99
C      ENGINE TABULATED DATA FOR FDOT                                    ENGEP2    100
C     TABLE 5 GIVEN THRUST, MACH NO, LOOK UP TSFC                        ENGEP2    101
  102 CALL SERCH1(ALT27, H, 9,    PFH, IH, LIMIT)                        ENGEP2    102
      IH1 = IH + 1                                                       ENGEP2    103
      J = MAXT(IH)                                                       ENGEP2    104
      J1 = MAXT(IH1)                                                     ENGEP2    105
      K= MAXMAK(IH)                                                      ENGEP2    106
      K1 = MAXMAK(IH1)                                                   ENGEP2    107
      TSFC1 =VALUE2(THRUST(1,IH ), 30, MAXT(IH),  FNDE3, MACH27(1, IH ), ENGEP2    108
     1 8, MAXMAK(IH ), MAKNO, TSFC(1, 1, IH ),1)                         ENGEP2    109
      TSFC2 =VALUE2(THRUST(1,IH1), 30, MAXT(IH1), FNDE3, MACH27(1, IH1), ENGEP2    110
     1 8, MAXMAK(IH1), MAKNO, TSFC(1, 1, IH1),1)                         ENGEP2    111
      FDOT   =   (TSFC1 + PFH*(TSFC2 - TSFC1))*THRST    *SQRT(THETA)     ENGEP2    112
 130  CONTINUE                                                           ENGEP2    113
      RETURN                                                             ENGEP2    114
      END                                                                ENGEP2    115
      SUBROUTINE ENGEPR(H, MA, EP, IN, TH, FD, MF)                       ENGEPR      2
C                                                                        ENGEPR      3
C   MATCH ENGINE DATA TO INPUT AIRCRAFT                                  ENGEPR      4
C                                                                        ENGEPR      5
      REAL MA                                                            ENGEPR      6
      COMMON /ACFT/ IAC, SAC, HMAX                                       ENGEPR      7
C                                                                        ENGEPR      8
      GO TO (10,20,30,40),IAC                                            ENGEPR      9
C                                                                        ENGEPR     10
   10 CONTINUE                                                           ENGEPR     11
C     CALL ENGEP1 (H, MA, EP, IN, TH, FD, MF)                            ENGEPR     12
      GO TO 890                                                          ENGEPR     13
C                                                                        ENGEPR     14
   20 CONTINUE                                                           ENGEPR     15
      CALL ENGEP2 (H, MA, EP, IN, TH, FD, MF)                            ENGEPR     16
      GO TO 890                                                          ENGEPR     17
C                                                                        ENGEPR     18
   30 CONTINUE                                                           ENGEPR     19
      CALL ENGEP3 (H, MA, EP, IN, TH, FD, MF)                            ENGEPR     20
      GO TO 890                                                          ENGEPR     21
C                                                                        ENGEPR     22
   40 CONTINUE                                                           ENGEPR     23
C     CALL ENGEP4 (H, MA, EP, IN, TH, FD, MF)                            ENGEPR     24
C                                                                        ENGEPR     25
  890 CONTINUE                                                           ENGEPR     26
      RETURN                                                             ENGEPR     27
      END                                                                ENGEPR     28
      SUBROUTINE ENGEP3 (H,EM,EPR,INCRUZ,THRST,FDOT,MFGR)                ENGEP3      2
C----------------------------------------------------------------------- ENGEP3      3
C                                                                        ENGEP3      4
C PURPOSE%  GENERATES THRUST AND FUEL FLOW RATE FOR SOME ALTITUDE,       ENGEP3      5
C     MACH NUMBER, AND ENGINE PRESSURE RATIO (EPR) SETTING FOR THE       ENGEP3      6
C     TWIN-JET AIRCRAFT MODEL                                            ENGEP3      7
C                                                                        ENGEP3      8
C----------------------------------------------------------------------- ENGEP3      9
      COMMON /ENGDAT/ AM1(6), AH1(8), ATIDLC(48), AWIDLC(48),            ENGEP3     10
     1                ATIDLO(48), AWIDLO(48), AM5(6), AHBC(6),           ENGEP3     11
     2                AT(9), AEMXCL(9), AEMXCR(9),   AM8(10), AEPR8(14), ENGEP3     12
     3                AFNCR(140),  AEPR9(7), AH9(4), AWCR(28),           ENGEP3     13
     4                AM10(4), AEPR10(3), ADWCR(12)                      ENGEP3     14
      COMMON /COST  / EPR1, ICOST, FC, TC, DTEMPK, W, FUELDT, FFLOW      ENGEP3     15
      DIMENSION COEFF(25), EMD(6), EMP(6)                                ENGEP3     16
      DIMENSION ANS(4)                                                   ENGEP3     17
      DATA PZ/2116.2/                                                    ENGEP3     18
      DATA EMD(1), EMP(1) /1.0, 1.0 /                                    ENGEP3     19
C                                                                        ENGEP3     20
      DATA COEFF/                                                        ENGEP3     21
     X60412757660510125220B,17365645424120461726B,60452001520444464311B, ENGEP3     22
     X60451333373044362116B,17306521422034752523B,17414306731427610026B, ENGEP3     23
     X60352771642064520706B,17424110735443521600B,60371632046406615054B, ENGEP3     24
     X17356766763527110122B,60343422250316447052B,17445325121457747626B, ENGEP3     25
     X60333163050360307161B,17427314342652407206B,60373612207734716674B, ENGEP3     26
     X17436466044661017354B,60323757120102551426B,17447147633533477654B, ENGEP3     27
     X60342304205516762160B,17406351563211720756B,60351774502567612260B, ENGEP3     28
     X17437253215743143632B,60341334470736572636B,17425110752457332530B, ENGEP3     29
     X60402042441333160113B/                                             ENGEP3     30
C                                                                        ENGEP3     31
      CALL AT62 (H,ANS)                                                  ENGEP3     32
      TEMPK = ANS(3)+DTEMPK                                              ENGEP3     33
      T2 = TEMPK*(1.+0.2*EM**2)                                          ENGEP3     34
      TEMPA = T2-273.15                                                  ENGEP3     35
      DELTAM = ANS(2)/PZ                                                 ENGEP3     36
      DELTA = DELTAM*(1.+0.2*EM**2)**3.5                                 ENGEP3     37
C                                                                        ENGEP3     38
C ----FIND MAXIMUM EPR                                                   ENGEP3     39
C                                                                        ENGEP3     40
      JL = 0                                                             ENGEP3     41
      JR = 0                                                             ENGEP3     42
      EPRMX1 = SGLTBL(AEMXCL,AT,9,TEMPA,JL,IXTRAP)                       ENGEP3     43
      EPRMX2 = SGLTBL(AEMXCR,AT,9,TEMPA,JR,IXTRAP)                       ENGEP3     44
      EPRMX = EPRMX1                                                     ENGEP3     45
      IF(H .GE. 35000.) GO TO 20                                         ENGEP3     46
      IF(INCRUZ .NE. 1) GO TO 20                                         ENGEP3     47
      EPRMX = EPRMX2                                                     ENGEP3     48
      IF(H .LE. 30000.) GO TO 20                                         ENGEP3     49
      EPRMX = EPRMX2+(EPRMX1-EPRMX2)*(H-30000.)/5000.                    ENGEP3     50
C                                                                        ENGEP3     51
  20  CONTINUE                                                           ENGEP3     52
      IF(EPR .GT. EPRMX) EPR = EPRMX                                     ENGEP3     53
C                                                                        ENGEP3     54
C ----FIND CORRECTED THRUST AND THRUST                                   ENGEP3     55
C                                                                        ENGEP3     56
      JM = 0                                                             ENGEP3     57
      JEPR = 0                                                           ENGEP3     58
      FNDE = 0.                                                          ENGEP3     59
      IX = 1                                                             ENGEP3     60
      DO 50 I=2,5                                                        ENGEP3     61
      EMD(I) = EMD(I-1)*EM                                               ENGEP3     62
      EMP(I) = EMP(I-1) *EPR                                             ENGEP3     63
 50   CONTINUE                                                           ENGEP3     64
      DO 70 I=1,5                                                        ENGEP3     65
      DO 70 J=1,5                                                        ENGEP3     66
      FNDE = FNDE + COEFF(IX)*EMD(I)*EMP(J)                              ENGEP3     67
      IX = IX+1                                                          ENGEP3     68
 70   CONTINUE                                                           ENGEP3     69
      THRST = 2.*FNDE*DELTAM                                             ENGEP3     70
C                                                                        ENGEP3     71
C ----FIND CORRECTED FUEL FLOW AND FUEL FLOW                             ENGEP3     72
C                                                                        ENGEP3     73
      JH = 0                                                             ENGEP3     74
      JEPR = 0                                                           ENGEP3     75
      WFC = DBLTBL(AWCR,AEPR9,7,AH9,4,EPR,H,JEPR,JH,IXTRAP)              ENGEP3     76
      IF (IXTRAP .NE. 0)  CALL TRACER                                    ENGEP3     77
      DWFC = 0.                                                          ENGEP3     78
      IF(EPR.GE.1.6)GO TO 80                                             ENGEP3     79
      JM = 0                                                             ENGEP3     80
      JEPR = 0                                                           ENGEP3     81
      DWFC = DBLTBL(ADWCR,AEPR10,3,AM10,4,EPR,EM,JEPR,JM,IXTRAP)         ENGEP3     82
      IF (IXTRAP .NE. 0)  CALL TRACER                                    ENGEP3     83
 80   CONTINUE                                                           ENGEP3     84
      WFC = WFC-DWFC                                                     ENGEP3     85
      CK = .0022 * TEMPA + 0.97                                          ENGEP3     86
      FDOT = 2.*WFC*DELTA*CK                                             ENGEP3     87
C                                                                        ENGEP3     88
      RETURN                                                             ENGEP3     89
      END                                                                ENGEP3     90
      SUBROUTINE EPRNT3                                                  EPRNT3      2
      COMMON/ENGDAT/AM1(6), AH1(8), ATIDLC(48), AWIDLC(48),              EPRNT3      3
     1              ATIDLO(48), AWIDLO(48), AM5(6), AHBC(6),             EPRNT3      4
     2              AT(9), AEMXCL(9), AEMXCR(9),   AM8(10), AEPR8(14),   EPRNT3      5
     3              AFNCR(140),  AEPR9(7), AH9(4), AWCR(28),             EPRNT3      6
     4              AM10(4), AEPR10(3), ADWCR(12)                        EPRNT3      7
      WRITE(6,100) AH1, AM1(1), (ATIDLC(I),I=1,8),                       EPRNT3      8
     1                  AM1(2), (ATIDLC(I),I=9,16),                      EPRNT3      9
     2                  AM1(3), (ATIDLC(I),I=17,24),                     EPRNT3     10
     3                  AM1(4), (ATIDLC(I),I=25,32),                     EPRNT3     11
     4                  AM1(5), (ATIDLC(I),I=33,40),                     EPRNT3     12
     5                  AM1(6), (ATIDLC(I),I=41,48)                      EPRNT3     13
  100 FORMAT(1H1,T20,"IDLE THRUST FOR BLEEDS CLOSED"/                    EPRNT3     14
     1" ALTITUDE",8F8.0/" MACH NO"/F5.1,4X,8F8.0/                        EPRNT3     15
     2F5.1,4X,8F8.0/F5.1,4X,8F8.0/F5.1,4X,8F8.0/                         EPRNT3     16
     3F5.1,4X,8F8.0/F5.1,4X,8F8.0/F5.1,4X,8F8.0/)                        EPRNT3     17
      WRITE(6,110) AH1, AM1(1), (AWIDLC(I),I=1,8),                       EPRNT3     18
     1                  AM1(2), (AWIDLC(I),I=9,16),                      EPRNT3     19
     2                  AM1(3), (AWIDLC(I),I=17,24),                     EPRNT3     20
     3                  AM1(4), (AWIDLC(I),I=25,32),                     EPRNT3     21
     4                  AM1(5), (AWIDLC(I),I=33,40),                     EPRNT3     22
     5                  AM1(6), (AWIDLC(I),I=41,48)                      EPRNT3     23
  110 FORMAT(1H ,T19,"IDLE FUEL FLOW FOR BLEEDS CLOSED"/                 EPRNT3     24
     1" ALTITUDE",8F8.0/" MACH NO"/F5.1,4X,8F8.0/                        EPRNT3     25
     2F5.1,4X,8F8.0/F5.1,4X,8F8.0/F5.1,4X,8F8.0/                         EPRNT3     26
     3F5.1,4X,8F8.0/F5.1,4X,8F8.0/F5.1,4X,8F8.0/)                        EPRNT3     27
      WRITE(6,120) AH1, AM1(1), (ATIDLO(I),I=1,8),                       EPRNT3     28
     1                  AM1(2), (ATIDLO(I),I=9,16),                      EPRNT3     29
     2                  AM1(3), (ATIDLO(I),I=17,24),                     EPRNT3     30
     3                  AM1(4), (ATIDLO(I),I=25,32),                     EPRNT3     31
     4                  AM1(5), (ATIDLO(I),I=33,40),                     EPRNT3     32
     5                  AM1(6), (ATIDLO(I),I=41,48)                      EPRNT3     33
  120 FORMAT(1H ,T21,"IDLE THRUST FOR BLEEDS OPEN"/                      EPRNT3     34
     1" ALTITUDE",8F8.0/" MACH NO"/F5.1,4X,8F8.0/                        EPRNT3     35
     2F5.1,4X,8F8.0/F5.1,4X,8F8.0/F5.1,4X,8F8.0/                         EPRNT3     36
     3F5.1,4X,8F8.0/F5.1,4X,8F8.0/F5.1,4X,8F8.0/)                        EPRNT3     37
      WRITE(6,130) AH1, AM1(1), (AWIDLO(I),I=1,8),                       EPRNT3     38
     1                  AM1(2), (AWIDLO(I),I=9,16),                      EPRNT3     39
     2                  AM1(3), (AWIDLO(I),I=17,24),                     EPRNT3     40
     3                  AM1(4), (AWIDLO(I),I=25,32),                     EPRNT3     41
     4                  AM1(5), (AWIDLO(I),I=33,40),                     EPRNT3     42
     5                  AM1(6), (AWIDLO(I),I=41,48)                      EPRNT3     43
  130 FORMAT(1H ,T20,"IDLE FUEL FLOW FOR BLEEDS OPEN"/                   EPRNT3     44
     1" ALTITUDE",8F8.0/" MACH NO"/F5.1,4X,8F8.0/                        EPRNT3     45
     2F5.1,4X,8F8.0/F5.1,4X,8F8.0/F5.1,4X,8F8.0/                         EPRNT3     46
     3F5.1,4X,8F8.0/F5.1,4X,8F8.0/F5.1,4X,8F8.0/)                        EPRNT3     47
      WRITE(6,140) AM5,AHBC                                              EPRNT3     48
  140 FORMAT(1H ,T22,"ALTITUDE FOR SURGE BLEED CLOSURE"/                 EPRNT3     49
     1"   MACH NO",6F10.3/"   ALTITUDE",6F10.0//)                        EPRNT3     50
      WRITE(6,150) AT,AEMXCL,AEMXCR                                      EPRNT3     51
  150 FORMAT(1H1,T25,"MAXIMUM ENGINE PRESSURE RATIO"//                   EPRNT3     52
     1" STAGNATION TEMP (DEG C)",9F6.0/                                  EPRNT3     53
     2" MAX EPR AT CLIMB",T25,9F6.3/                                     EPRNT3     54
     3" MAX EPR AT CRUISE",T25,9F6.3//)                                  EPRNT3     55
      WRITE(6,160) AM8,AEPR8(1),(AFNCR(I),I=1,10),                       EPRNT3     56
     1AEPR8(2),(AFNCR(I),I=11,20), AEPR8(3),(AFNCR(I),I=21,30),          EPRNT3     57
     2AEPR8(4),(AFNCR(I),I=31,40), AEPR8(5),(AFNCR(I),I=41,50),          EPRNT3     58
     3AEPR8(6),(AFNCR(I),I=51,60), AEPR8(7),(AFNCR(I),I=61,70),          EPRNT3     59
     4AEPR8(8),(AFNCR(I),I=71,80), AEPR8(9),(AFNCR(I),I=81,90),          EPRNT3     60
     5AEPR8(10),(AFNCR(I),I=91,100),AEPR8(11),(AFNCR(I),I=101,110),      EPRNT3     61
     6AEPR8(12),(AFNCR(I),I=111,120),AEPR8(13),(AFNCR(I),I=121,130),     EPRNT3     62
     7AEPR8(14),(AFNCR(I),I=131,140)                                     EPRNT3     63
  160 FORMAT(1H ,T21,"CORRECTED THRUST, FN/DELTA-AMBIENT"//              EPRNT3     64
     1T32,"MACH NUMBER"/3X,10F7.2/" EPR"/F4.1,10F7.0/F4.1,10F7.0/        EPRNT3     65
     2F4.1,10F7.0/ F4.1,10F7.0/ F4.1,10F7.0/ F4.1,10F7.0/                EPRNT3     66
     3F4.1,10F7.0/ F4.1,10F7.0/ F4.1,10F7.0/ F4.1,10F7.0/                EPRNT3     67
     4F4.1,10F7.0/ F4.1,10F7.0/ F4.1,10F7.0/ F4.1,10F7.0//)              EPRNT3     68
      WRITE(6,170) AEPR9, AH9(1),(AWCR(I),I=1,7),                        EPRNT3     69
     1AH9(2),(AWCR(I),I=8,14), AH9(3),(AWCR(I),I=15,21),                 EPRNT3     70
     2AH9(4),(AWCR(I),I=22,28)                                           EPRNT3     71
  170 FORMAT(1H1,T20,"CORRECTED FUEL FLOW - WF/DELTA-TOTAL/KC"//         EPRNT3     72
     1T29,"ENGINE PRESSURE RATIO"/T10,7F10.1/" ALTITUDE"/F10.0,7F10.0/   EPRNT3     73
     2F10.0,7F10.0/F10.0,7F10.0/F10.0,7F10.0/)                           EPRNT3     74
      WRITE(6,180)AEPR10,AM10(1),(ADWCR(I),I=1,3),                       EPRNT3     75
     1AM10(2),(ADWCR(I),I=4,6), AM10(3),(ADWCR(I),I=7,9),                EPRNT3     76
     2AM10(4),(ADWCR(I),I=10,12)                                         EPRNT3     77
  180 FORMAT(1H ,T19,"MACH NO CORRECTION FOR CORRECTED FUEL FLOW"/       EPRNT3     78
     1           T24,"(SUBTRACT FROM VALUE ABOVE)"//                     EPRNT3     79
     2T29,"ENGINE PRESSURE RATIO"/T21,3F10.1/T12," MACH NO"/T15,F5.1,    EPRNT3     80
     32X,3F10.0/T15,F5.1,2X,3F10.0/T15,F5.1,2X,3F10.0/T15,F5.1,2X,       EPRNT3     81
     43F10.0)                                                            EPRNT3     82
      RETURN                                                             EPRNT3     83
      END                                                                EPRNT3     84
      FUNCTION FBOUND(MACH)                                              FBOUND      2
C                                                                        FBOUND      3
C          ** EVALUATES DRAG ( OR MAXIMUM THRUST MINUS DRAG)             FBOUND      4
C                                                                        FBOUND      5
      REAL MACH                                                          FBOUND      6
      COMMON /ACFT/ IAC, SAC, HMAX                                       FBOUND      7
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRMAX,MFGR   FBOUND      8
      COMMON/III/IPRINT, IDRAG                                           FBOUND      9
      COMMON /COST/ EPR, ICOST, FC, TC, DTEMPK, W, FUEL, FFLOW           FBOUND     10
   89 F = .5*(MACH*A)**2*SAC*RHO                                         FBOUND     11
      CL = W/F                                                           FBOUND     12
      CALL CDRAG(MACH, CL, 0, 0., CD)                                    FBOUND     13
      D = F*CD                                                           FBOUND     14
      IF( IDRAG .NE. 1) GO TO 90                                         FBOUND     15
      FBOUND = D                                                         FBOUND     16
      RETURN                                                             FBOUND     17
  90  CALL ENGEPR( H, MACH, EPRMAX, 1, TMAX, FF, MFGR)                   FBOUND     18
  152 FBOUND = ABS(TMAX - D)                                             FBOUND     19
      IF (TMAX .GE. D)  RETURN                                           FBOUND     20
      FBOUND = 1.E6 * ABS(TMAX - D)                                      FBOUND     21
      IF( IPRINT .EQ. 0) RETURN                                          FBOUND     22
      WRITE(6, 100) EPRMAX, TMAX, D, FBOUND,MACH                         FBOUND     23
  100 FORMAT(27H0 EPRMAX, TMAX, D, ABS(T-D)  ,F10.2,3F10.0,F10.5)        FBOUND     24
      RETURN                                                             FBOUND     25
      END                                                                FBOUND     26
      FUNCTION FCLIMB(VTAS)                                              FCLIMB      2
C                                                                        FCLIMB      3
C                                                                        FCLIMB      4
      REAL MACH,LAMBDA,MNVTAS, MXVTAS, MACHNO, MACH24, MACH27, MACHN1    FCLIMB      5
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS,MXVTAS,VDUMMY     FCLIMB      6
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRSET,MFGR   FCLIMB      7
      COMMON /CLIMB/ MACH, D, ICLIMB, T, TRSTDR                          FCLIMB      8
      COMMON /COST/ EPR, ICOST, FC, TC, DTEMPK, W, FUEL, FFLOW           FCLIMB      9
      COMMON/OPT/OPTMAK,IOPT,EDTMX                                       FCLIMB     10
      COMMON /WINDY/IWIND, PSIA, VWA                                     FCLIMB     11
      COMMON /CRUZ/NEARCZ,IDLE                                           FCLIMB     12
      COMMON /ENGTFF/ALT(10),MACHNO(10),FNIDL(10,10),WFIDL(10,10)        FCLIMB     13
     1,ALT24(7),TEMP(13),EPRMX(13,7) ,ALTFF(10)                          FCLIMB     14
     2,EPRS(14),FNMAX(14,10)                                             FCLIMB     15
     3,DECL(21),DECD(21,10),MACH24(10)                                   FCLIMB     16
     4,ALT27(9),THRUST(30,9),MACH27(8,9),TSFC(30,8,9)                    FCLIMB     17
     5,MACHN1(10),MACHN2(10)                                             FCLIMB     18
      COMMON /ACFT/ IAC, SAC, HMAX                                       FCLIMB     19
      COMMON /ENGDAT/ AM1(6), AH1(8), ATIDLC(48), AWIDLC(48),            FCLIMB     20
     1                ATIDLO(48), AWIDLO(48), AM5(6), AHBC(6),           FCLIMB     21
     2                AT(9), AEMXCL(9), AEMXCR(9),   AM8(10), AEPR8(14), FCLIMB     22
     3                AFNCR(140),  AEPR9(7), AH9(4), AWCR(28),           FCLIMB     23
     4                AM10(4), AEPR10(3), ADWCR(12)                      FCLIMB     24
      DIMENSION ANS(4)                                                   FCLIMB     25
      DATA G, EPRMAX/32.2, 2.4/                                          FCLIMB     26
C                                                                        FCLIMB     27
C                                                                        FCLIMB     28
   80 H = E - .5*  VTAS*VTAS/G                                           FCLIMB     29
   81 CALL AT62(H, ANS)                                                  FCLIMB     30
      P = ANS(2)                                                         FCLIMB     31
      TEMPK = ANS(3) + DTEMPK                                            FCLIMB     32
      RHO = P / (3092.40 * TEMPK)                                        FCLIMB     33
      A = 65.76 * SQRT(TEMPK)                                            FCLIMB     34
      IF (MACH .LT. .1) MACH = .1                                        FCLIMB     35
      IF ( MACH .GT. .9) MACH = .9                                       FCLIMB     36
   82 MACH = VTAS/A                                                      FCLIMB     37
      F = .5 * VTAS**2 * SAC * RHO                                       FCLIMB     38
      CL = W/F                                                           FCLIMB     39
      CALL CDRAG(MACH, CL, 0, 0., CD)                                    FCLIMB     40
      D = F*CD                                                           FCLIMB     41
      IF (IWIND .EQ. 0) GO TO 90                                         FCLIMB     42
      CALL WIND (H, PSIA, VWA)                                           FCLIMB     43
   90 IF (ICLIMB .EQ. 1 ) GO TO 91                                       FCLIMB     44
      IF( IOPT .NE. 1) GO TO 93                                          FCLIMB     45
C                                                                        FCLIMB     46
C      TRI-JET                                                           FCLIMB     47
C                                                                        FCLIMB     48
      IF (IAC .GT. 2)  GO TO 905                                         FCLIMB     49
      T = VALUE2(ALT, 10, 10, H, MACHNO, 10, 10, MACH, FNIDL, 0)*3.      FCLIMB     50
      FF = VALUE2(ALTFF, 10, 10, H, MACHNO, 10, 10, MACH, WFIDL,0)*3.    FCLIMB     51
      GO TO 92                                                           FCLIMB     52
C                                                                        FCLIMB     53
C      TWIN-JET                                                          FCLIMB     54
C                                                                        FCLIMB     55
  905 CONTINUE                                                           FCLIMB     56
      JM = 0                                                             FCLIMB     57
      HBC = SGLTBL(AHBC, AM5, 6, MACH, JM, IXTRAP)                       FCLIMB     58
      IF (IXTRAP .NE. 0)  CALL TRACER                                    FCLIMB     59
      HBC = HBC + 112.6*DTEMPK                                           FCLIMB     60
      IF (H .LT. HBC)  GO TO 906                                         FCLIMB     61
C   IDLE ENGINE DATA FOR SURGE BLEEDS CLOSED                             FCLIMB     62
      JH = 0                                                             FCLIMB     63
      JM = 0                                                             FCLIMB     64
      TNIDL = DBLTBL(ATIDLC, AH1, 8, AM1, 6, H, MACH, JH, JM, IXTRAP)    FCLIMB     65
      IF (IXTRAP .NE. 0)  CALL TRACER                                    FCLIMB     66
      FFIDL = DBLTBL(AWIDLC, AH1, 8, AM1, 6, H, MACH, JH, JM, IXTRAP)    FCLIMB     67
      GO TO 907                                                          FCLIMB     68
C   IDLE ENGINE DATA FOR SURGE BLEEDS OPEN                               FCLIMB     69
  906 CONTINUE                                                           FCLIMB     70
      JH = 0                                                             FCLIMB     71
      JM = 0                                                             FCLIMB     72
      TNIDL = DBLTBL(ATIDLO, AH1, 8, AM1, 6, H, MACH, JH, JM, IXTRAP)    FCLIMB     73
      IF (IXTRAP .NE. 0)  CALL TRACER                                    FCLIMB     74
      FFIDL = DBLTBL(AWIDLO, AH1, 8, AM1, 6, H, MACH, JH, JM, IXTRAP)    FCLIMB     75
  907 T = TNIDL * 2.                                                     FCLIMB     76
      FF = FFIDL * 2. * SQRT(TEMPK/ANS(3))                               FCLIMB     77
      GO TO 92                                                           FCLIMB     78
   91 EPR = EPRSET                                                       FCLIMB     79
  93  CALL ENGEPR( H, MACH, EPR,0, T, FF, MFGR)                          FCLIMB     80
C                                                                        FCLIMB     81
C     COMMON TO BOTH AIRCRAFT                                            FCLIMB     82
C                                                                        FCLIMB     83
   92 EDOT = (T-D)*(VTAS)/W                                              FCLIMB     84
      FCLIMB= (FC*FF + TC - LAMBDA*(VTAS + VWA))/ ABS(EDOT)              FCLIMB     85
      IF (ABS(EDOT) .LE. 2.)  GO TO 95                                   FCLIMB     86
      IF( NEARCZ .EQ. 1 .AND.  FCLIMB .GT. 0..AND.ICLIMB.EQ.2)GO TO 95   FCLIMB     87
      IF(ICLIMB .NE. 1 .OR. IOPT .NE. 3) RETURN                          FCLIMB     88
      IF ( EDOT .GT. EDTMX) RETURN                                       FCLIMB     89
   95 FCLIMB = ABS(FCLIMB)*1.E6                                          FCLIMB     90
      RETURN                                                             FCLIMB     91
      END                                                                FCLIMB     92
      FUNCTION FCLMB2(EPR)                                               FCLMB2      2
C                                                                        FCLMB2      3
C          ** MINIMIZES THE OPTIMIZATION INTEGRAND AT EACH POINT FOR THE FCLMB2      4
C          **   CLIMB AND DESCEND OPTIMIZATION.                          FCLMB2      5
C                                                                        FCLMB2      6
      EXTERNAL FCLIMB, PILIMT, FTHRST, FDRAG                             FCLMB2      7
      REAL MNVTAS, MXVTAS,MINF,MACH,MACHID                               FCLMB2      8
      COMMON/ACFT/IAC,SAC,HMAX                                           FCLMB2      9
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRSET,MFGR   FCLMB2     10
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS,MXVTAS,VTAS       FCLMB2     11
      COMMON /CLIMB/ MACH, D, ICLIMB, T, TRSTDR                          FCLMB2     12
      COMMON /COST/ EPR1,ICOST, FC, TC, DTEMPK, W, FUEL, FFLOW           FCLMB2     13
      COMMON/III/IPRINT, IDRAG                                           FCLMB2     14
      COMMON/OPT/OPTMAK,IOPT,EDTMX                                       FCLMB2     15
      COMMON /WINDY/IWIND, PSIA, VWA                                     FCLMB2     16
      COMMON /CRUZ/NEARCZ,IDLE                                           FCLMB2     17
      COMMON /EPSILN/ EPSIL1, EPSIL2, ISPLMT                             FCLMB2     18
      COMMON /CRURNG/ ECRUZ, FCRUZ, HCRUZ, IL1,IL2, IW, PW               FCLMB2     19
      DATA FS2KNT, G, EDTMAX / 1.68781, 32.2, 2. /                       FCLMB2     20
C                                                                        FCLMB2     21
C                                                                        FCLMB2     22
   68 COSTV  = 1.E6                                                      FCLMB2     23
      COSTPI = 1.E6                                                      FCLMB2     24
      IDLE = 0                                                           FCLMB2     25
      ICOUNT = 1                                                         FCLMB2     26
      EDTMX = EDTMAX                                                     FCLMB2     27
C                                                                        FCLMB2     28
C     COMPUTE SPEED LIMITS                                               FCLMB2     29
   69 VMAX= SQRT(2.*G*(E-H))                                             FCLMB2     30
      IF (ISPLMT .EQ. 0)  GO TO 70                                       FCLMB2     31
      IF( H .GT. 10000.) GO TO  70                                       FCLMB2     32
      VI = 250.*FS2KNT                                                   FCLMB2     33
      DM2 = SQRT(5.*(((((VI/2496.46)**2 +1.)**3.5 - 1.)*                 FCLMB2     34
     1    (2116.22/P) + 1.)**(2./7.)-1.))                                FCLMB2     35
      VLIMIT = DM2 * A                                                   FCLMB2     36
      VMAX = AMIN1(VMAX, VLIMIT)                                         FCLMB2     37
  70  VMAX1 = VMAX                                                       FCLMB2     38
      VMAX2 = A*.89                                                      FCLMB2     39
      IF (IAC.EQ.3) VMAX2 = A*0.84                                       FCLMB2     40
      VMAX3 = AMIN1(VMAX1,VMAX2)                                         FCLMB2     41
      ENG3 = ECRUZ - 3000.                                               FCLMB2     42
      IF (E.LT.ENG3) GO TO 75                                            FCLMB2     43
      RJC = 12.*(E-ENG3)/3000.                                           FCLMB2     44
      VMAXT = SQRT(2.*G*(ECRUZ-HCRUZ))                                   FCLMB2     45
      IF(VTAS.LE.VMAXT) GO TO 73                                         FCLMB2     46
      VMAX4 = VTAS - 0.08*(VTAS-VMAXT)*RJC                               FCLMB2     47
      VMAX = AMIN1(VMAX3,VMAX4)                                          FCLMB2     48
      GO TO 74                                                           FCLMB2     49
   73 VMAX = VMAX3                                                       FCLMB2     50
      VMIN1 = VMAXT - (VMAXT-VTAS)*(1.-0.08*RJC)                         FCLMB2     51
      VMIN = AMIN1(VMIN1,VMAX)                                           FCLMB2     52
      GO TO 79                                                           FCLMB2     53
   74 VMIN = VTAS - 5.                                                   FCLMB2     54
      GO TO 79                                                           FCLMB2     55
   75 VMIN1 = VTAS - 5.                                                  FCLMB2     56
      VMIN = AMAX1(VMIN1,MNVTAS)                                         FCLMB2     57
      VMAX = VMAX3                                                       FCLMB2     58
   79 CONTINUE                                                           FCLMB2     59
C                                                                        FCLMB2     60
C     CLIMB MODE                                                         FCLMB2     61
C                                                                        FCLMB2     62
      GO TO (121, 122), ICLIMB                                           FCLMB2     63
  121 IF (IOPT .EQ. 1) GO TO 80                                          FCLMB2     64
      VMID = VTAS                                                        FCLMB2     65
      GO TO 88                                                           FCLMB2     66
   80 IDRAG = 1                                                          FCLMB2     67
      EPRSET = 2.4                                                       FCLMB2     68
      DRGMIN = MINF(VMIN,  VMAX,  FDRAG,VMID,  IPRINT)                   FCLMB2     69
      IDRAG = 0                                                          FCLMB2     70
   88 EPR1 = 2.4                                                         FCLMB2     71
 81   EPRSET = EPR1                                                      FCLMB2     72
   83 DUMMY = MINF(VMIN,  VMID,  FDRAG, V1, IPRINT)                      FCLMB2     73
      DUMMY = FDRAG(VMAX)                                                FCLMB2     74
      IF( T  .LT.  D) GO TO 87                                           FCLMB2     75
      V2 = VMAX                                                          FCLMB2     76
      GO TO 85                                                           FCLMB2     77
   87 DUMMY = MINF (VMID,   VMAX,   FDRAG, V2, IPRINT)                   FCLMB2     78
   85 COSTV = MINF(V1, V2, FCLIMB, VTAS, IPRINT)                         FCLMB2     79
      GO TO(103, 84, 86), IOPT                                           FCLMB2     80
C                                                                        FCLMB2     81
C     FOR  HIGHER ACCURACY RUN                                           FCLMB2     82
   86 V1X = VTAS - 10.                                                   FCLMB2     83
      V2X = VTAS + 10.                                                   FCLMB2     84
      V11 = AMAX1(V1, V1X,VMIN)                                          FCLMB2     85
      V22 = AMIN1(V2, V2X)                                               FCLMB2     86
      COSTV = MINF(V11, V22, FCLIMB, VTAS, IPRINT)                       FCLMB2     87
C                                                                        FCLMB2     88
   84 IF( ABS(COSTV - COSTPI) .LE. EPSIL1) GO TO 101                     FCLMB2     89
      DUMMY = MINF(1.1,2.4 , PILIMT,EPRMIN, IPRINT)                      FCLMB2     90
      COSTPI = MINF(EPRMIN, 2.4, FTHRST, EPR1, IPRINT)                   FCLMB2     91
      IF( IOPT .NE. 3) GO TO 100                                         FCLMB2     92
C     FOR  HIGHER ACCURACY RUN                                           FCLMB2     93
C                                                                        FCLMB2     94
      EPRMX1 = EPR1 + .01                                                FCLMB2     95
      EPRMN1 = EPR1 - .01                                                FCLMB2     96
      EPRMX = AMIN1( EPRMX1, 2.4 )                                       FCLMB2     97
      EPRMN = AMAX1(EPRMN1, EPRMIN)                                      FCLMB2     98
      COSTPI = MINF(EPRMN, EPRMX, FTHRST, EPR1, IPRINT)                  FCLMB2     99
C                                                                        FCLMB2    100
  100 IF( ABS(COSTV - COSTPI) .LE. EPSIL2 .OR. ICOUNT .GT. 3) GO TO 101  FCLMB2    101
      ICOUNT = ICOUNT + 1                                                FCLMB2    102
      GO TO 81                                                           FCLMB2    103
 101  EPR = EPR1                                                         FCLMB2    104
      FCLMB2 = AMIN1(COSTV, COSTPI)                                      FCLMB2    105
      RETURN                                                             FCLMB2    106
C                                                                        FCLMB2    107
C     DESCEND MODE                                                       FCLMB2    108
C                                                                        FCLMB2    109
  122 IF (IOPT .EQ. 1) GO TO 95                                          FCLMB2    110
      IOPTID = IOPT                                                      FCLMB2    111
      IOPT = 1                                                           FCLMB2    112
      COSTID = MINF(VMIN, VMAX, FCLIMB, VTAS, IPRINT)                    FCLMB2    113
      TID = T                                                            FCLMB2    114
      MACHID = MACH                                                      FCLMB2    115
      VTASID = VTAS                                                      FCLMB2    116
      EDOTID = EDOT                                                      FCLMB2    117
      FFID = FF                                                          FCLMB2    118
      IOPT = IOPTID                                                      FCLMB2    119
   92 DUMMY = MINF(1.1,  2.4, PILIMT, EPRMAX, IPRINT)                    FCLMB2    120
      IF ( IWIND .EQ. 0) GO TO 94                                        FCLMB2    121
      CALL WIND (H, PSIA, VWA)                                           FCLMB2    122
   94 COSTPI = MINF(1.1,  EPRMAX, FTHRST, EPR1, IPRINT)                  FCLMB2    123
      IF( ABS(COSTV - COSTPI) .GT. EPSIL2) GO TO 95                      FCLMB2    124
   96 IF( (COSTV .LE. COSTID) .OR. (COSTPI .LE. COSTID)) GO TO 101       FCLMB2    125
      IDLE = 1                                                           FCLMB2    126
      T = TID                                                            FCLMB2    127
      MACH = MACHID                                                      FCLMB2    128
      EDOT = EDOTID                                                      FCLMB2    129
      FF = FFID                                                          FCLMB2    130
      FCLMB2 = COSTID                                                    FCLMB2    131
      EPR = EPR1                                                         FCLMB2    132
      RETURN                                                             FCLMB2    133
   95 COSTV = MINF( VMIN,  VMAX, FCLIMB, VTAS, IPRINT)                   FCLMB2    134
      IF( IOPT .EQ. 1) GO TO 93                                          FCLMB2    135
      IF( ABS(COSTV - COSTPI) .LE. EPSIL2 .OR. ICOUNT .GT. 3) GO TO 96   FCLMB2    136
      ICOUNT = ICOUNT + 1                                                FCLMB2    137
      IDRAG = 1                                                          FCLMB2    138
      D = FDRAG(VTAS)                                                    FCLMB2    139
      GO TO 92                                                           FCLMB2    140
   93 IDLE = 1                                                           FCLMB2    141
  103 FCLMB2 = COSTV                                                     FCLMB2    142
      EPR = EPR1                                                         FCLMB2    143
      RETURN                                                             FCLMB2    144
      END                                                                FCLMB2    145
      FUNCTION FCOST(MACH)                                               FCOST       2
      REAL MACH                                                          FCOST       3
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRMAX,MFGR   FCOST       4
      COMMON /COST/ EPRF, ICOST, FC, TC, DTEMPK, W, FUEL, FFLOW          FCOST       5
      COMMON /WINDY/IWIND, PSIA, VWA                                     FCOST       6
C                                                                        FCOST       7
C     ICOST = 1 RETURN FUEL/VTAS; =2 RETURN FUEL                         FCOST       8
   90 VTAS = A*MACH                                                      FCOST       9
      ALPHA = 0.                                                         FCOST      10
      GAMMA = 0.                                                         FCOST      11
      CALL TRIM(EPRF, VTAS, H, W, 0., 0, 1, GAMMA, 1, 0., FUEL),         FCOST      12
     XRETURNS (152)                                                      FCOST      13
      GO TO (101, 102), ICOST                                            FCOST      14
  101 FCOST = ((FC*FUEL + TC)/(VTAS + VWA))/(3600./6080.)                FCOST      15
      FFLOW = FUEL                                                       FCOST      16
      RETURN                                                             FCOST      17
  102 FCOST = FUEL                                                       FCOST      18
      RETURN                                                             FCOST      19
  152 WRITE(6, 100)                                                      FCOST      20
  100 FORMAT(23H0FUNCTION OUTSIDE RANGE)                                 FCOST      21
      RETURN                                                             FCOST      22
      END                                                                FCOST      23
      FUNCTION FDRAG(VTAS)                                               FDRAG       2
C                                                                        FDRAG       3
C          ** COMPUTES DRAG (OR THRUST MINUS DRAG) FOR GIVEN V, ENERGY,  FDRAG       4
C          **   AND WEIGHT.                                              FDRAG       5
C                                                                        FDRAG       6
      REAL MACH, MNVTAS, MXVTAS                                          FDRAG       7
      DIMENSION ANS(4)                                                   FDRAG       8
      COMMON/III/IPRINT, IDRAG                                           FDRAG       9
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS,MXVTAS,VTAS1      FDRAG      10
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRSET,MFGR   FDRAG      11
      COMMON /COST/ EPR, ICOST, FC, TC, DTEMPK, W, FF1, FFLOW            FDRAG      12
      COMMON /CLIMB/ MACH, D, ICLIMB, T, TRSTDR                          FDRAG      13
      COMMON /ACFT/ IAC, SAC, HMAX                                       FDRAG      14
C                                                                        FDRAG      15
C                                                                        FDRAG      16
   80 H = E - .5*VTAS*VTAS/32.2                                          FDRAG      17
      IF( H .LT. 0.) H = 0.                                              FDRAG      18
      CALL AT62(H,ANS)                                                   FDRAG      19
      TEMPK = ANS(3) + DTEMPK                                            FDRAG      20
      RHO = ANS(2) / (3092.40 * TEMPK)                                   FDRAG      21
      A = 65.76 * SQRT(TEMPK)                                            FDRAG      22
   89 F = .5 * VTAS**2 * SAC * RHO                                       FDRAG      23
      MACH = VTAS/A                                                      FDRAG      24
      CL = W/F                                                           FDRAG      25
      CALL CDRAG(MACH, CL, 0, 0., CD)                                    FDRAG      26
      D = F*CD                                                           FDRAG      27
      IF( IDRAG .NE. 1) GO TO 90                                         FDRAG      28
      FDRAG = D                                                          FDRAG      29
      RETURN                                                             FDRAG      30
   90 EPR = EPRSET                                                       FDRAG      31
      CALL ENGEPR(H, MACH, EPR, 0, T, FF, MFGR)                          FDRAG      32
  152 FDRAG = ABS(T-D)                                                   FDRAG      33
      IF ( T .LT. D) FDRAG = FDRAG*1.E6                                  FDRAG      34
      IF( IPRINT .EQ. 0) RETURN                                          FDRAG      35
      WRITE(6, 100) EPR,  T, D, FDRAG, VTAS                              FDRAG      36
  100 FORMAT (26H0EPR, T, D, ABS(T-D), VTAS , F10.2, 4F10.0)             FDRAG      37
      RETURN                                                             FDRAG      38
      END                                                                FDRAG      39
      FUNCTION FOPT(ALT)                                                 FOPT        2
C                                                                        FOPT        3
C          ** COMPUTES MINIMUM FDOT/V OR MINIMUM FDOT FOR SOME ALTITUDE. FOPT        4
C                                                                        FOPT        5
      IMPLICIT REAL(M)                                                   FOPT        6
      INTEGER MFGR                                                       FOPT        7
      EXTERNAL FBOUND, FCOST                                             FOPT        8
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRMAX,MFGR   FOPT        9
      COMMON/OPT/MACHOP,IOPT,EDTMX                                       FOPT       10
      COMMON/III/IPRINT, IDRAG                                           FOPT       11
      COMMON /COST/ EPR, ICOST, FC, TC, DTEMPK, W, FUEL, FFLOW           FOPT       12
      COMMON /WINDY/IWIND, PSIA, VWA                                     FOPT       13
      COMMON /ACFT/ IAC, SAC, HMAX                                       FOPT       14
      DIMENSION ANS(4)                                                   FOPT       15
C                                                                        FOPT       16
C                                                                        FOPT       17
      H =ALT                                                             FOPT       18
   89 CALL AT62(ALT, ANS)                                                FOPT       19
      P = ANS(2)                                                         FOPT       20
      TEMPK = ANS(3) + DTEMPK                                            FOPT       21
      RHO = P / (3092.40 * TEMPK)                                        FOPT       22
      A = 65.76 * SQRT(TEMPK)                                            FOPT       23
   90 EPRMAX = 2.4                                                       FOPT       24
      IDRAG = 1                                                          FOPT       25
      ZMIN = .1                                                          FOPT       26
      FM = .89                                                           FOPT       27
      CLCMAX = .75                                                       JULY24      4
      CLCMAX = .72                                                       FOPT       29
      ZMIN = SQRT(W/(0.5*A*A*SAC*RHO*CLCMAX))                            FOPT       30
      FM = .89                                                           FOPT       31
      IF (MFGR .GE. 3)  FM = .84                                         FOPT       32
   88 MINDRG = MINF(ZMIN, FM, FBOUND, MACH, IPRINT)                      FOPT       33
      CALL ENGEPR( ALT, MACH,EPRMAX, 1, TMAX, FF, MFGR)                  FOPT       34
  92  IF( TMAX .LT. MINDRG) GO TO 999                                    FOPT       35
      IF (ICOST .EQ. 1) GO TO 94                                         FOPT       36
      FA = MACH - .1                                                     FOPT       37
      IF(FA.LT.ZMIN) FA = ZMIN                                           FOPT       38
      F = .5 * (A*FA)**2 * SAC * RHO                                     FOPT       39
      CL = W/F                                                           FOPT       40
        CALL CDRAG (FA, CL, 0, 0., CD)                                   FOPT       41
      D = F * CD                                                         FOPT       42
      CALL ENGEPR(ALT, FA, EPRMAX, 1, T, FF, MFGR)                       FOPT       43
      IF( T .GE. D) GO TO 91                                             FOPT       44
      IDRAG = 2                                                          FOPT       45
      FAC = MINF(ZMIN, MACH, FBOUND, FA, IPRINT)                         FOPT       46
      GO TO 91                                                           FOPT       47
   94 FA = MACH                                                          FOPT       48
   91 FB = FM                                                            FOPT       49
      CALL ENGEPR(ALT, FB, EPRMAX, 1, T, FF, MFGR)                       FOPT       50
      F = .5 * (A*FB)**2 * SAC * RHO                                     FOPT       51
      CL = W/F                                                           FOPT       52
        CALL CDRAG (FB, CL, 0, 0., CD)                                   FOPT       53
      D = F * CD                                                         FOPT       54
      IF( T .GE. D) GO TO 95                                             FOPT       55
      IDRAG = 2                                                          FOPT       56
      FD = FM                                                            FOPT       57
      FBC = MINF(MACH, FD, FBOUND, FB, IPRINT)                           FOPT       58
   95 IF ( IWIND .EQ. 0) GO TO 93                                        FOPT       59
      CALL WIND(H, PSIA, VWA)                                            FOPT       60
   93 FOPT  =MINF(FA,FB,FCOST, MACHOP, IPRINT)                           FOPT       61
      RETURN                                                             FOPT       62
  999 WRITE(6, 990) MINDRG, TMAX                                         FOPT       63
      FOPT = 1.E6                                                        FOPT       64
  990 FORMAT(25H0 DRAG EXCEEDS MAX THRUST 2F10.0)                        FOPT       65
      RETURN                                                             FOPT       66
      END                                                                FOPT       67
      FUNCTION FTHRST(EPR)                                               FTHRST      2
C                                                                        FTHRST      3
C          ** EVALUATES THE OPTIMIZATION INTEGRAND FOR A GIVEN EPR, M,   FTHRST      4
C          **   V, ALTITUDE, DRAG, AND WEIGHT.                           FTHRST      5
C                                                                        FTHRST      6
      REAL MACH, LAMBDA                                                  FTHRST      7
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS,MXVTAS,VTAS       FTHRST      8
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRSET,MFGR   FTHRST      9
      COMMON /COST/ EPR1, ICOST, FC, TC, DTEMPK, W, FUEL, FFLOW          FTHRST     10
      COMMON /CLIMB/ MACH, D, ICLIMB, T, TRSTDR                          FTHRST     11
      COMMON/OPT/OPTMAK,IOPT,EDTMX                                       FTHRST     12
      COMMON /WINDY/IWIND, PSIA, VWA                                     FTHRST     13
      COMMON /CRUZ/NEARCZ,IDLE                                           FTHRST     14
C                                                                        FTHRST     15
C                                                                        FTHRST     16
   90 CALL ENGEPR(H, MACH, EPR, 0, T, FF, MFGR)                          FTHRST     17
      EDOT = (T-D)*VTAS/W                                                FTHRST     18
   93 FTHRST= (FC*FF + TC - LAMBDA*(VTAS+VWA))/ ABS(EDOT)                FTHRST     19
      IF( ABS(EDOT) .LE. 5.) GO TO 95                                    FTHRST     20
      IF( NEARCZ .EQ. 1 .AND.  FTHRST .GT. 0. .AND. ICLIMB .EQ. 2) GO TO FTHRST     21
     1    95                                                             FTHRST     22
      IF(ICLIMB .NE. 1 .OR. IOPT .NE. 3) RETURN                          FTHRST     23
      IF ( EDOT .GT. EDTMX) RETURN                                       FTHRST     24
   95 FTHRST = ABS(FTHRST)*1.E6                                          FTHRST     25
      RETURN                                                             FTHRST     26
      END                                                                FTHRST     27
      FUNCTION FULEST(RANGE, IOPARM, ETO, FC, TC, PC, ECRUZ, EF)         FULEST      2
C                                                                        FULEST      3
C                                                                        FULEST      4
      REAL K1, K2                                                        FULEST      5
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    FULEST      6
     1 DLLDEE(2, 10),IWMAXX, WTO, WCRUZ ,CRUZCT,HHCRUZ(50,10),           FULEST      7
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         FULEST      8
      COMMON /ACFT/ IAC, SAC, HMAX                                       FULEST      9
      DATA EVOPT1, VOPT1, EVOPT2, VOPT2/.1130, .1079, 6.1463E-6,         FULEST     10
     1 4.6849E-6/                                                        FULEST     11
C                                                                        FULEST     12
C     COMPUTE CLIMB FUEL                                                 FULEST     13
C                                                                        FULEST     14
   70 WCRUZ = WTO                                                        FULEST     15
      FULST1 = 0.                                                        FULEST     16
      IF (IOPARM .NE. 0) GO TO 71                                        FULEST     17
      K1 = VOPT1                                                         FULEST     18
      K2 = 1. + (TC/FC)*VOPT2                                            FULEST     19
      GO TO 72                                                           FULEST     20
   71 K1 = EVOPT1                                                        FULEST     21
      K2 = 1. + (TC/FC)*EVOPT2                                           FULEST     22
   72 CALL WLEFHV(1, ECRUZ, EF, PC, VGKNT, VCKTAS)                       FULEST     23
      FULEST = K1*(ECRUZ - ETO)*K2*WTO/136000.                           FULEST     24
      IF(IAC.EQ.3)FULEST=(.0029E-9*WTO+.3625E-6)*(ECRUZ-ETO)*WTO         FULEST     25
      WCRUZ = WTO - FULEST                                               FULEST     26
      IF( ABS(FULEST - FULST1) .LE. 100.) RETURN                         FULEST     27
      FULST1 = FULEST                                                    FULEST     28
      GO TO 72                                                           FULEST     29
C                                                                        FULEST     30
C                                                                        FULEST     31
C     COMPUTE TOTAL FUEL USED                                            FULEST     32
      END                                                                FULEST     33
      SUBROUTINE ICLOCK(TIME, IHR, IMIN, ISEC)                           ICLOCK      2
C                                                                        ICLOCK      3
C          ** CONVERTS TIME INTO HOURS, MINUTES, AND SECONDS.            ICLOCK      4
C                                                                        ICLOCK      5
      INTEGER SIXTY                                                      ICLOCK      6
      DATA SIXTY/60/                                                     ICLOCK      7
C                                                                        ICLOCK      8
C                                                                        ICLOCK      9
   80 ITIME = TIME                                                       ICLOCK     10
      IMIN = ITIME/SIXTY                                                 ICLOCK     11
      ISEC = ITIME - IMIN*SIXTY                                          ICLOCK     12
      IHR = IMIN/SIXTY                                                   ICLOCK     13
      IMIN = IMIN - IHR*SIXTY                                            ICLOCK     14
      RETURN                                                             ICLOCK     15
      END                                                                ICLOCK     16
C                  ********** NEW ROUTINE **********                $$$$ JTRUNC      2
      FUNCTION JTRUNC(X, N)                                              JTRUNC      3
C                                                                        JTRUNC      4
C          ** FINDS THE LAST POINT OF A MONOTONICALLY INCREASING SERIES. JTRUNC      5
C                                                                        JTRUNC      6
      DIMENSION X(1)                                                     JTRUNC      7
C                                                                        JTRUNC      8
C                                                                        JTRUNC      9
   80 NN = N - 1                                                         JTRUNC     10
      DO 100 I= 1, NN                                                    JTRUNC     11
      IF(X(I) .LE. X(I+1)) GO TO 101                                     JTRUNC     12
  100 CONTINUE                                                           JTRUNC     13
      JTRUNC = N                                                         JTRUNC     14
      RETURN                                                             JTRUNC     15
  101 JTRUNC = I                                                         JTRUNC     16
      RETURN                                                             JTRUNC     17
      END                                                                JTRUNC     18
      SUBROUTINE LOC8 (X,NX,A,J,FX,IXTRAP)                               LOC8        2
C----------------------------------------------------------------------  LOC8        3
C                                                                        LOC8        4
C PURPOSE%  GIVEN THE ARRAY  X  AND THE VALUE  A, FIND  J  SUCH THAT     LOC8        5
C                                                                        LOC8        6
C                 X(J) .LE. A .LT. X(J+1)                                LOC8        7
C                                                                        LOC8        8
C     AND  FX  IS THE FRACTION OF THE INTERVAL  A  IS FROM X(J).         LOC8        9
C                                                                        LOC8       10
C COMMENTS%                                                              LOC8       11
C     (1)  IF  A  IS .LT. X(1),  J  WILL BE SET = 1.  IF  A  IS .GT.     LOC8       12
C     X(NX),  J WILL BE SET = NX-1.  IN ALL CASES, ONCE J IS SET THEN    LOC8       13
C                                                                        LOC8       14
C                 FX = (A-X(J))/(X(J+1)-X(J)).                           LOC8       15
C                                                                        LOC8       16
C     (2)  IF THE ELEMENTS OF  X  OCCUR AT REGULAR INTERVALS, THEN THE   LOC8       17
C     ARRAY MAY BE IMPLIED BY CALLING THIS ROUTINE WITH  X(1)  SET TO    LOC8       18
C     THE MINIMUM VALUE OF  X,  X(2)  SET TO THE INTERVAL SIZE, AND      LOC8       19
C     NX = -(NUMBER OF VALUES IN IMPLIED ARRAY).  THUS, THE IMPLIED      LOC8       20
C     ARRAY IS                                                           LOC8       21
C                                                                        LOC8       22
C                 X(J) = X(1)+(J-1)*X(2),  J=1,...,(-NX)                 LOC8       23
C                                                                        LOC8       24
C ARGUMENTS%                                                             LOC8       25
C     X      = INPUT ARRAY OF MONOTONICALLY INCREASING VALUES.           LOC8       26
C     NX     = NUMBER OF ELEMENTS IN THE  X  ARRAY.                      LOC8       27
C     A      = INPUT VALUE WHOSE LOCATION IN THE  X  ARRAY IS TO BE      LOC8       28
C              FOUND.                                                    LOC8       29
C     J      = OUTPUT INDEX VALUE (SEE "PURPOSE").  IF J .GT. 0 ON       LOC8       30
C              INPUT, THEN THE SEARCH FOR  A  WILL BEGIN AT  X(J).       LOC8       31
C     FX     = FRACTION OF INTERVAL (SEE "PURPOSE").                     LOC8       32
C     IXTRAP = 1 IF  A  IS NOT IN THE RANGE OF  X  AND  0  IF IT IS.     LOC8       33
C              (SET BY THIS ROUTINE.)                                    LOC8       34
C                                                                        LOC8       35
C----------------------------------------------------------------------  LOC8       36
      DIMENSION X(2)                                                     LOC8       37
      DATA ZERODP/0.E0/, ONEDP/1.E0/                                     LOC8       38
C                                                                        LOC8       39
      IXTRAP = 0                                                         LOC8       40
      IF(NX) 10,900,30                                                   LOC8       41
C                                                                        LOC8       42
C ----PROCEDURE FOR IMPLIED  X  ARRAY                                    LOC8       43
C                                                                        LOC8       44
   10 CONTINUE                                                           LOC8       45
      M = -NX                                                            LOC8       46
      IF(X(2) .LE. ZERODP) GO TO 902                                     LOC8       47
      G = (A-X(1))/X(2)                                                  LOC8       48
      IF(G .LT. ZERODP) GO TO 20                                         LOC8       49
      J = INT(G)                                                         LOC8       50
      IF(J .GE. M-1) J = M-2                                             LOC8       51
      FX = G-FLOAT(J)                                                    LOC8       52
      J = J+1                                                            LOC8       53
      IF(FX .GT. ONEDP) IXTRAP = 1                                       LOC8       54
      GO TO 890                                                          LOC8       55
   20 CONTINUE                                                           LOC8       56
      IXTRAP = 1                                                         LOC8       57
      J = 1                                                              LOC8       58
      FX = G                                                             LOC8       59
      GO TO 890                                                          LOC8       60
C                                                                        LOC8       61
C ----PROCEDURE FOR NORMAL CASE (ENTIRE  X  ARRAY PASSED AS ARGUMENT)    LOC8       62
C                                                                        LOC8       63
   30 CONTINUE                                                           LOC8       64
C                                                                        LOC8       65
C     ----CHECK FOR CASES WHERE  A  IS ABOVE OR BELOW  X  ARRAY VALUES   LOC8       66
      IF(A .GE. X(1)) GO TO 40                                           LOC8       67
      J = 1                                                              LOC8       68
      IXTRAP = 1                                                         LOC8       69
      GO TO 160                                                          LOC8       70
   40 CONTINUE                                                           LOC8       71
      IF(A .LE. X(NX-1)) GO TO 50                                        LOC8       72
      J = NX-1                                                           LOC8       73
      IF(A .GT. X(NX)) IXTRAP = 1                                        LOC8       74
      GO TO 160                                                          LOC8       75
   50 CONTINUE                                                           LOC8       76
C                                                                        LOC8       77
C     ----PROCEDURE FOR CASE WHERE BEGINNING INDEX OF SEARCH SPECIFIED   LOC8       78
      IF(J .LE. 0) GO TO 100                                             LOC8       79
      IF(J.GT.(NX-1)) J = NX - 1                                         LOC8       80
      IF(A-X(J)) 70,60,90                                                LOC8       81
   60 CONTINUE                                                           LOC8       82
      FX = ZERODP                                                        LOC8       83
      GO TO 890                                                          LOC8       84
C                                                                        LOC8       85
   70 CONTINUE                                                           LOC8       86
      J = J-1                                                            LOC8       87
      IF(A .LT. X(J)) GO TO 70                                           LOC8       88
      GO TO 160                                                          LOC8       89
C                                                                        LOC8       90
   80 CONTINUE                                                           LOC8       91
      J = J+1                                                            LOC8       92
   90 CONTINUE                                                           LOC8       93
      IF(A .GT. X(J+1)) GO TO 80                                         LOC8       94
      GO TO 160                                                          LOC8       95
C                                                                        LOC8       96
C     ----CHECK THAT THE  X  ARRAY HAS AT LEAST  2 ELEMENTS              LOC8       97
  100 CONTINUE                                                           LOC8       98
      IF(NX .LE. 1) GO TO 904                                            LOC8       99
C                                                                        LOC8      100
C     ----PERFORM A "BINARY CHOP" TO FIND VALUES OF  X  ARRAY CLOSEST    LOC8      101
C         TO  A                                                          LOC8      102
      J = (NX+1)/2                                                       LOC8      103
      M = J                                                              LOC8      104
  110 CONTINUE                                                           LOC8      105
      IF(M .LE. 1) GO TO 150                                             LOC8      106
      M = (M+1)/2                                                        LOC8      107
      IF(A-X(J)) 120,140,130                                             LOC8      108
  120 J = J-M                                                            LOC8      109
      IF(J.LT.1) J = 1                                                   LOC8      110
      GO TO 110                                                          LOC8      111
  130 J = J+M                                                            LOC8      112
      GO TO 110                                                          LOC8      113
C                                                                        LOC8      114
C     ----IF  A  IS EXACTLY = A VALUE IN  X,  SET  FX = 0.               LOC8      115
  140 FX = ZERODP                                                        LOC8      116
      GO TO 890                                                          LOC8      117
C                                                                        LOC8      118
C     ----COMPLETE CALCULATION OF  J  AND  FX                            LOC8      119
  150 CONTINUE                                                           LOC8      120
      IF(A .LT. X(J)) J = J-1                                            LOC8      121
C                                                                        LOC8      122
  160 CONTINUE                                                           LOC8      123
      DELTA = X(J+1)-X(J)                                                LOC8      124
      IF(DELTA .LE. ZERODP) GO TO 906                                    LOC8      125
      FX = (A-X(J))/DELTA                                                LOC8      126
C                                                                        LOC8      127
  890 CONTINUE                                                           LOC8      128
      RETURN                                                             LOC8      129
C                                                                        LOC8      130
C ----ERROR MESSAGES                                                     LOC8      131
C                                                                        LOC8      132
  900 WRITE(6,901)                                                       LOC8      133
  901 FORMAT(33H0+++ ERROR IN SUBR LOC8.  NX = 0.)                       LOC8      134
      GO TO 990                                                          LOC8      135
C                                                                        LOC8      136
  902 WRITE(6,903) NX,X(2)                                               LOC8      137
  903 FORMAT(43H0+++ ERROR IN SUBR LOC8.  NX IS NEGATIVE (=,I5,          LOC8      138
     1    30H), BUT X(2) IS NOT POSITIVE (=,1PE10.3,2H).)                LOC8      139
      GO TO 990                                                          LOC8      140
C                                                                        LOC8      141
  904 WRITE(6,905)                                                       LOC8      142
  905 FORMAT(33H0+++ ERROR IN SUBR LOC8.  NX = 1.)                       LOC8      143
      GO TO 990                                                          LOC8      144
C                                                                        LOC8      145
  906 WRITE(6,907) DELTA                                                 LOC8      146
  907 FORMAT(50H0+++ ERROR IN SUBR LOC8.  X(J+1)-X(J) IS .LE. 0 (=,      LOC8      147
     1    1PE10.3,2H).)                                                  LOC8      148
C                                                                        LOC8      149
  990 CALL TRACER                                                        LOC8      150
      GO TO 890                                                          LOC8      151
      END                                                                LOC8      152
C                  ********** NEW ROUTINE **********                $$$$ LSQPOL      2
      SUBROUTINE LSQPOL(X, Y, N, A, B, M)                                LSQPOL      3
C                                                                        LSQPOL      4
C     LEAST SQUARE POLYNOMIAL FIT                                        LSQPOL      5
C          ** FILS A LEAST SQUATE POLYNOMIAL OF Y AS A FUNCTION OF X.    LSQPOL      6
C          ** NUMBER OF POINTS IS N.  DEGREE OF POLYNOMIAL IS M-1.       LSQPOL      7
C          ** COEFFICIENTS ARE IN B.                                     LSQPOL      8
C                                                                        LSQPOL      9
      DIMENSION X(50), Y(50), A(20,8), B(20,1)                           LSQPOL     10
      COMMON/ANE206/C(50,8)                                              LSQPOL     11
C                                                                        LSQPOL     12
   10 DO 20 I=1,N                                                        LSQPOL     13
   20 C(I,1)=1.0                                                         LSQPOL     14
   30 DO 50 J=2,M                                                        LSQPOL     15
   40 DO 50 I=1,N                                                        LSQPOL     16
   50 C(I,J)=C(I,J-1)*X(I)                                               LSQPOL     17
   60 DO 100 I=1,M                                                       LSQPOL     18
   70 DO 100 J=1,M                                                       LSQPOL     19
   80 A(I,J)=0.0                                                         LSQPOL     20
   90 DO 100 K=1,N                                                       LSQPOL     21
  100 A(I,J) = A(I,J) + C(K,I)*C(K,J)                                    LSQPOL     22
  110 DO 150 I=1,M                                                       LSQPOL     23
  120 B(I,1) = 0.0                                                       LSQPOL     24
  130 DO 150 K=1,N                                                       LSQPOL     25
  150 B(I,1) = B(I,1) + C(K,I)*Y(K)                                      LSQPOL     26
  170 CALL MATINV(A,M,B, 1, DETERM)                                      LSQPOL     27
  210 RETURN                                                             LSQPOL     28
      END                                                                LSQPOL     29
C                  ********** NEW ROUTINE **********                $$$$ MATINV      2
      SUBROUTINE MATINV(A,N,B,M,DETERM)                                  MATINV      3
C                                                                        MATINV      4
C     MATRIX INVERSION WITH ACCOMPANYING SOLUTION OF LINEAR EQUATIONS    MATINV      5
C                                                                        MATINV      6
C                                                                        MATINV      7
      DIMENSION A(20,20),B(20,1)                                         MATINV      8
      COMMON/ANE206/PIVOT(20),INDEX(20,2),IPIVOT(20),DUMI(320)           MATINV      9
      EQUIVALENCE (IROW,JROW), (ICOLUM,JCOLUM), (AMAX, T, SWAP)          MATINV     10
C                                                                        MATINV     11
C     INITIALIZATION                                                     MATINV     12
C                                                                        MATINV     13
   10 DETERM=1.0                                                         MATINV     14
   15 DO 20 J=1,N                                                        MATINV     15
   20 IPIVOT(J)=0                                                        MATINV     16
   30 DO 550 I=1,N                                                       MATINV     17
C                                                                        MATINV     18
C     SEARCH FOR PIVOT ELEMENT                                           MATINV     19
C                                                                        MATINV     20
   40 AMAX=0.0                                                           MATINV     21
   45 DO 105 J=1,N                                                       MATINV     22
   50 IF (IPIVOT(J)-1) 60, 105, 60                                       MATINV     23
   60 DO 100 K=1,N                                                       MATINV     24
   70 IF (IPIVOT(K)-1) 80, 100, 740                                      MATINV     25
   80 IF (ABS(AMAX)-ABS(A(J,K))) 85, 100, 100                            MATINV     26
   85 IROW=J                                                             MATINV     27
   90 ICOLUM=K                                                           MATINV     28
   95 AMAX=A(J,K)                                                        MATINV     29
  100 CONTINUE                                                           MATINV     30
  105 CONTINUE                                                           MATINV     31
  110 IPIVOT(ICOLUM)=IPIVOT(ICOLUM)+1                                    MATINV     32
C                                                                        MATINV     33
C     INTERCHANGE ROWS TO PUT PIVOT ELEMENT ON DIAGONAL                  MATINV     34
C                                                                        MATINV     35
  130 IF (IROW-ICOLUM) 140, 260, 140                                     MATINV     36
  140 DETERM=-DETERM                                                     MATINV     37
  150 DO 200 L=1,N                                                       MATINV     38
  160 SWAP=A(IROW,L)                                                     MATINV     39
  170 A(IROW,L)=A(ICOLUM,L)                                              MATINV     40
  200 A(ICOLUM,L)=SWAP                                                   MATINV     41
  205 IF(M) 260, 260, 210                                                MATINV     42
  210 DO 250 L=1, M                                                      MATINV     43
  220 SWAP=B(IROW,L)                                                     MATINV     44
  230 B(IROW,L)=B(ICOLUM,L)                                              MATINV     45
  250 B(ICOLUM,L)=SWAP                                                   MATINV     46
  260 INDEX(I,1)=IROW                                                    MATINV     47
  270 INDEX(I,2)=ICOLUM                                                  MATINV     48
  310 PIVOT(I)=A(ICOLUM,ICOLUM)                                          MATINV     49
  320 DETERM=DETERM*PIVOT(I)                                             MATINV     50
C                                                                        MATINV     51
C     DIVIDE PIVOT ROW BY PIVOT ELEMENT                                  MATINV     52
C                                                                        MATINV     53
  330 A(ICOLUM,ICOLUM)=1.0                                               MATINV     54
  340 DO 350 L=1,N                                                       MATINV     55
  350 A(ICOLUM,L)=A(ICOLUM,L)/PIVOT(I)                                   MATINV     56
  355 IF(M) 380, 380, 360                                                MATINV     57
  360 DO 370 L=1,M                                                       MATINV     58
  370 B(ICOLUM,L)=B(ICOLUM,L)/PIVOT(I)                                   MATINV     59
C                                                                        MATINV     60
C     REDUCE NON-PIVOT ROWS                                              MATINV     61
C                                                                        MATINV     62
  380 DO 550 L1=1,N                                                      MATINV     63
  390 IF(L1-ICOLUM) 400, 550, 400                                        MATINV     64
  400 T=A(L1,ICOLUM)                                                     MATINV     65
  420 A(L1,ICOLUM)=0.0                                                   MATINV     66
  430 DO 450 L=1,N                                                       MATINV     67
  450 A(L1,L)=A(L1,L)-A(ICOLUM,L)*T                                      MATINV     68
  455 IF(M) 550, 550, 460                                                MATINV     69
  460 DO 500 L=1,M                                                       MATINV     70
  500 B(L1,L)=B(L1,L)-B(ICOLUM,L)*T                                      MATINV     71
  550 CONTINUE                                                           MATINV     72
C                                                                        MATINV     73
C     INTERCHANGE COLUMNS                                                MATINV     74
C                                                                        MATINV     75
  600 DO 710 I=1,N                                                       MATINV     76
  610 L=N+1-I                                                            MATINV     77
  620 IF (INDEX(L,1)-INDEX(L,2)) 630, 710, 630                           MATINV     78
  630 JROW=INDEX(L,1)                                                    MATINV     79
  640 JCOLUM=INDEX(L,2)                                                  MATINV     80
  650 DO 705 K=1,N                                                       MATINV     81
  660 SWAP=A(K,JROW)                                                     MATINV     82
  670 A(K,JROW)=A(K,JCOLUM)                                              MATINV     83
  700 A(K,JCOLUM)=SWAP                                                   MATINV     84
  705 CONTINUE                                                           MATINV     85
  710 CONTINUE                                                           MATINV     86
  740 RETURN                                                             MATINV     87
      END                                                                MATINV     88
C                  ********** NEW ROUTINE **********                $$$$ MINF2       2
      REAL FUNCTION MINF2(AX, BX, F, X, IPRINT)                          MINF2       3
C                                                                        MINF2       4
C          ** MINIMIZES THE UNIMODAL FUNCTION F(X) BY A FIBONACCI SEARCH MINF2       5
C                                                                        MINF2       6
      DIMENSION FIBONO(7), DEX(7)                                        MINF2       7
      DATA FIBONO/.38235, .23529, .14706, .08824, .05882, 2*.02941/      MINF2       8
C                                                                        MINF2       9
C     MIN F(X) OVER THE INVERVAL OF(AX, BX), X=X*, MIN =F(X*)            MINF2      10
C                                                                        MINF2      11
C      IPRINT = 0 NO PRINT                                               MINF2      12
   90 XA = AX                                                            MINF2      13
      XB = BX                                                            MINF2      14
      DXAB = XB - XA                                                     MINF2      15
      DO 100 I= 1,7                                                      MINF2      16
  100 DEX(I) = FIBONO(I) *DXAB                                           MINF2      17
      I= 1                                                               MINF2      18
      X1 = XA + DEX(I)                                                   MINF2      19
      X2 = XB - DEX(I)                                                   MINF2      20
      FX1 = F(X1)                                                        MINF2      21
      FX2 = F(X2)                                                        MINF2      22
C                                                                        MINF2      23
C                                                                        MINF2      24
      IF( IPRINT .EQ. 0) GO TO 101                                       MINF2      25
      WRITE(6, 50)                                                       MINF2      26
   50 FORMAT(45H0XA, X1, X2, XB        DEX(I),       FX1, FX2)           MINF2      27
      WRITE(6, 52)                                                       MINF2      28
   52 FORMAT (1H+, 50X, 5HMINF2  )                                       MINF2      29
  101 I= I+ 1                                                            MINF2      30
      IF( IPRINT .EQ. 0) GO TO 151                                       MINF2      31
      WRITE(6, 51) XA, X1, X2, XB,DEX(I -1), FX1, FX2                    MINF2      32
   51 FORMAT(1H0 4F10.2, 5X, F10.4, 2F15.4)                              MINF2      33
  151 IF( FX2 .LT. FX1) GO TO 201                                        MINF2      34
      XB = X2                                                            MINF2      35
      X2= X1                                                             MINF2      36
      X1 = XA + DEX(I)                                                   MINF2      37
      FX2 = FX1                                                          MINF2      38
      FX1 = F(X1)                                                        MINF2      39
      GO TO 203                                                          MINF2      40
  201 XA = X1                                                            MINF2      41
      X1 = X2                                                            MINF2      42
      X2 = XB - DEX(I)                                                   MINF2      43
      FX1 = FX2                                                          MINF2      44
      FX2 = F(X2)                                                        MINF2      45
  203 IF(I .GE. 7) GO TO 204                                             MINF2      46
      GO TO 101                                                          MINF2      47
  204 IF( IPRINT .EQ. 0) GO TO 152                                       MINF2      48
      WRITE(6, 51) XA, X1, X2, XB,DEX(I -1), FX1, FX2                    MINF2      49
  152 X = .5 * (X1+X2)                                                   MINF2      50
      MINF2=F(X)                                                         MINF2      51
      RETURN                                                             MINF2      52
      END                                                                MINF2      53
C                  ********** NEW ROUTINE **********                $$$$ MINF        2
      REAL FUNCTION MINF(AX, BX, F, X, IPRINT)                           MINF        3
C                                                                        MINF        4
C          ** MINIMIZES THE UNIMODAL FUNCTION F(X) BY A FIBONACCI SEARCH MINF        5
C                                                                        MINF        6
      DIMENSION FIBONO(10), DEX(10)                                      MINF        7
      DATA FIBONO/.38194,.23611, .145833, .09028, .055555, .034722,      MINF        8
     1 .020833, .013889,  2*.0069444/                                    MINF        9
C                                                                        MINF       10
C     MIN F(X) OVER THE INVERVAL OF(AX, BX), X=X*, MIN =F(X*)            MINF       11
C                                                                        MINF       12
C                                                                        MINF       13
C      IPRINT = 0 NO PRINT                                               MINF       14
      XA = AX                                                            MINF       15
      XB = BX                                                            MINF       16
      DXAB = XB - XA                                                     MINF       17
      IF(ABS(DXAB).LT..001)GO TO 250                                     MINF       18
      DO 100 I= 1,10                                                     MINF       19
  100 DEX(I) = FIBONO(I) *DXAB                                           MINF       20
      I= 1                                                               MINF       21
      X1 = XA + DEX(I)                                                   MINF       22
      X2 = XB - DEX(I)                                                   MINF       23
      FX1 = F(X1)                                                        MINF       24
      FX2 = F(X2)                                                        MINF       25
C                                                                        MINF       26
C                                                                        MINF       27
      IF( IPRINT .EQ. 0) GO TO 101                                       MINF       28
      WRITE(6, 50)                                                       MINF       29
   50 FORMAT(45H0XA, X1, X2, XB        DEX(I),       FX1, FX2)           MINF       30
  101 I= I+ 1                                                            MINF       31
      IF( IPRINT .EQ. 0) GO TO 151                                       MINF       32
      WRITE(6, 51) XA, X1, X2, XB,DEX(I -1), FX1, FX2                    MINF       33
   51 FORMAT(1H0 4F10.2, 5X, F10.4, 2F15.4)                              MINF       34
  151 IF (ABS(X2-X1).LT..001) GO TO 230                                  MINF       35
      IF (FX2.LT.FX1) GO TO 201                                          MINF       36
      XB = X2                                                            MINF       37
      X2= X1                                                             MINF       38
      X1 = XA + DEX(I)                                                   MINF       39
      FX2 = FX1                                                          MINF       40
      FX1 = F(X1)                                                        MINF       41
      GO TO 203                                                          MINF       42
  201 XA = X1                                                            MINF       43
      X1 = X2                                                            MINF       44
      X2 = XB - DEX(I)                                                   MINF       45
      FX1 = FX2                                                          MINF       46
      FX2 = F(X2)                                                        MINF       47
  203 IF(I .GE.10) GO TO 204                                             MINF       48
      GO TO 101                                                          MINF       49
  204 IF( IPRINT .EQ. 0) GO TO 152                                       MINF       50
      WRITE(6, 51) XA, X1, X2, XB,DEX(I -1), FX1, FX2                    MINF       51
  152 CONTINUE                                                           MINF       52
      XT = 0.5*(X1+X2)                                                   MINF       53
      IF (ABS(XT-AX) .GT. .01)  GO TO 154                                MINF       54
      XA = AX                                                            MINF       55
      RA = F(XA)                                                         MINF       56
  153 RB = 1.E+12                                                        MINF       57
      GO TO 155                                                          MINF       58
  154 RA = 1.E+12                                                        MINF       59
      IF (ABS(XT - BX) .GT. .01)  GO TO 153                              MINF       60
      XB = BX                                                            MINF       61
      RB = F(XB)                                                         MINF       62
  155 RT = F(XT)                                                         MINF       63
      MINF = RT                                                          MINF       64
      X = XT                                                             MINF       65
      IF (RA.LT.RT) GO TO 240                                            MINF       66
      IF (RB.LT.RT) GO TO 255                                            MINF       67
      GO TO 260                                                          MINF       68
  230 MINF = F(X1)                                                       MINF       69
      X = X1                                                             MINF       70
      GO TO 260                                                          MINF       71
  240 MINF = F(XA)                                                       MINF       72
      X = XA                                                             MINF       73
      GO TO 260                                                          MINF       74
  250 CONTINUE                                                           MINF       75
      MINF = F(XA)                                                       MINF       76
      X = XA                                                             MINF       77
      GO TO 260                                                          MINF       78
  255 MINF = F(XB)                                                       MINF       79
      X = XB                                                             MINF       80
  260 CONTINUE                                                           MINF       81
      RETURN                                                             MINF       82
      END                                                                MINF       83
      SUBROUTINE NICER(XMIN,XMAX,XORG,DX)                                NICER       2
C                                                                        NICER       3
C   THIS ROUTINE TAKES MINS AND MAXES AND DERIVES NICER                  NICER       4
C    INCLUSIVE BOUNDARIES                                                NICER       5
C                                                                        NICER       6
      XORG = (XMIN + XMAX)/2.                                            NICER       7
      DX = XMAX - XORG                                                   NICER       8
      IF (DX .GT.0.) GO TO 100                                           NICER       9
      DX = 1.                                                            NICER      10
      GO TO 900                                                          NICER      11
  100 CONTINUE                                                           NICER      12
      NDEC = ALOG10(1.001 * DX)                                          NICER      13
      Q = 10.**(NDEC-1)                                                  NICER      14
      N = XMIN/Q                                                         NICER      15
      XL = Q * FLOAT(N)                                                  NICER      16
  150 IF (XL.LE.XMIN) GO TO 200                                          NICER      17
      XL = XL - Q                                                        NICER      18
      GO TO 150                                                          NICER      19
  200 CONTINUE                                                           NICER      20
      N = XMAX/Q                                                         NICER      21
      XR = Q * FLOAT(N)                                                  NICER      22
  250 IF (XR .GE.XMAX) GO TO 300                                         NICER      23
      XR = XR + Q                                                        NICER      24
      GO TO 250                                                          NICER      25
  300 CONTINUE                                                           NICER      26
      XORG = (XL + XR) / 2.                                              NICER      27
      DX = XR - XORG                                                     NICER      28
  900 CONTINUE                                                           NICER      29
      RETURN                                                             NICER      30
      END                                                                NICER      31
C                  ********** NEW ROUTINE**********                      PAGE        2
      SUBROUTINE PAGE                                                    PAGE        3
      WRITE (6,2000)                                                     PAGE        4
 2000 FORMAT(1H1)                                                        PAGE        5
      RETURN                                                             PAGE        6
      END                                                                PAGE        7
      SUBROUTINE PCCOMP( PC, IPC, X3, CRUDST, TDIST,LINEAR, IOPARM,      PCCOMP      2
     1    ISPLIZ, IDCT, ITOA, WTO),                                      PCCOMP      3
     2 RETURNS (R1)                                                      PCCOMP      4
C                                                                        PCCOMP      5
C          ** COMPUTES THE PERCENTAGE VARIATION IN LAMBDA-STAR TO        PCCOMP      6
C          **   ACHIEVE A FIXED RANGE.                                   PCCOMP      7
C                                                                        PCCOMP      8
C          THIS SUBROUTINE CONTAINS THE STOP STATEMENT                   PCCOMP      9
C              INSTEAD OF THE MAIN PROGRAM                               PCCOMP     10
C                                                                        PCCOMP     11
C          THIS SUBROUTINE WRITES A DATASET ON DEVICE 11 FOR GRAPHING    PCCOMP     12
C               WHEN IGRAF IS NOT 0, CALLS SUBROUTINE PRTPLT FOR         PCCOMP     13
C               PRINTER PLOTS WHEN IGRAF IS GREATER THAN 1.              PCCOMP     14
C                                                                        PCCOMP     15
      COMMON /ACFT/ IAC, SAC, HMAX                                       PCCOMP     16
      COMMON/GRAF/CGRAF(200,12),DGRAF(200,12),JCLIMB,JDESCN,IGRAF        PCCOMP     17
      COMMON/CDCOM/NCORD,PRPLT(200,12),YMIN(12),YMAX(12),CRNG            PCCOMP     18
      COMMON/PRTCOM/LESPRT                                               PCCOMP     19
      COMMON /EXTRAP/ FCLMB,TCLMB,DCLMB,FDOWN,TDOWN,DDOWN,DCRUZ          PCCOMP     20
      DIMENSION RANGE(10), COSTPC(10)                                    PCCOMP     21
      DIMENSION C(3,3),CC(20,3),TEM(20)                                  PCCOMP     22
      DATA NAME1/5HCLIMB/                                                PCCOMP     23
      DATA NAME2/7HDESCENT/                                              PCCOMP     24
C                                                                        PCCOMP     25
C                                                                        PCCOMP     26
      IF (ITOA.EQ.1) GO TO 900                                           PCCOMP     27
      IF (IDCT .EQ. 0)  GO TO 10                                         PCCOMP     28
      IF (IDCT .EQ. 1)  GO TO 900                                        PCCOMP     29
      JCLIMB = 0                                                         PCCOMP     30
      GO TO 900                                                          PCCOMP     31
   10 CONTINUE                                                           PCCOMP     32
      ITER = IPC - 2                                                     PCCOMP     33
      WRITE(6, 30) PC, ITER                                              PCCOMP     34
   30 FORMAT(24H0COST (: OVER LAMBDA) =  2X, F10.2, 19HNO OF ITERATIONS  PCCOMP     35
     1=  I5)                                                             PCCOMP     36
      IF (IPC.GT.10) GO TO 900                                           PCCOMP     37
      IF (ISPLIZ .EQ. 0)   GO TO 900                                     PCCOMP     38
      IF (ABS(TDIST-CRUDST).LT.5.) GO TO 900                             PCCOMP     39
      IF (IPC.EQ.1) GO TO 100                                            PCCOMP     40
      IF (IPC.EQ.2) GO TO 110                                            PCCOMP     41
      IF (IPC.EQ.3) GO TO 120                                            PCCOMP     42
      IF (IPC.GE.4) GO TO 135                                            PCCOMP     43
  100 CONTINUE                                                           PCCOMP     44
      IPC = 2                                                            PCCOMP     45
      IF (IOPARM .EQ. 0)  GO TO 102                                      PCCOMP     46
      IF (TDIST .GT. (CRUDST+5.))  GO TO 106                             PCCOMP     47
      IOPARM = 2                                                         PCCOMP     48
      ISPLIZ = 0                                                         PCCOMP     49
      RETURN R1                                                          PCCOMP     50
  102 IF (TDIST .GE. (CRUDST+5.))  GO TO 106                             PCCOMP     51
C                                                                        PCCOMP     52
C   CALL SUBROUTINE TO ESTIMATE MODIFIED CLIMB CONDITIONS                PCCOMP     53
C                                                                        PCCOMP     54
      CALL WCLST(PC, CRUDST, TDIST)                                      PCCOMP     55
     1,   RETURNS(900)                                                   PCCOMP     56
      ISPLIZ = 0                                                         PCCOMP     57
      RETURN R1                                                          PCCOMP     58
  106 C(1,1) = PC*PC                                                     PCCOMP     59
      C(1,2) = PC                                                        PCCOMP     60
      C(1,3) = 1.                                                        PCCOMP     61
      RANGE(1) = TDIST                                                   PCCOMP     62
      PC = 50.                                                           PCCOMP     63
      IF (IAC .EQ. 3)  PC = 30.                                          PCCOMP     64
      RETURN                                                             PCCOMP     65
  110 CONTINUE                                                           PCCOMP     66
      IF (CRUDST .LE. TDIST)  GO TO 930                                  PCCOMP     67
       C(2,1) = PC*PC                                                    PCCOMP     68
      C(2,2) = PC                                                        PCCOMP     69
      C(2,3) = 1.                                                        PCCOMP     70
      RANGE(2) = TDIST                                                   PCCOMP     71
      IPC = 3                                                            PCCOMP     72
      A2 = (RANGE(1) - RANGE(2))/(C(1,2) - C(2,2))                       PCCOMP     73
      A3 = RANGE(1) - A2*C(1,2)                                          PCCOMP     74
      PC = (CRUDST - A3)/A2                                              PCCOMP     75
      WRITE(6,2000) PC                                                   PCCOMP     76
 2000 FORMAT(1X, 5HPC = ,F6.3, 18H BY INTERPOLATION  )                   PCCOMP     77
      RETURN                                                             PCCOMP     78
  120 CONTINUE                                                           PCCOMP     79
      IPC = 4                                                            PCCOMP     80
  122 C(3,1) = PC*PC                                                     PCCOMP     81
      C(3,2) = PC                                                        PCCOMP     82
      C(3,3) = 1.                                                        PCCOMP     83
      RANGE(3) = TDIST                                                   PCCOMP     84
  125 DO 130 I = 1,3                                                     PCCOMP     85
       DO 128 J = 1,3                                                    PCCOMP     86
  128 CC(J,I) = C(J,I)                                                   PCCOMP     87
  130 TEM(I) = RANGE(I)                                                  PCCOMP     88
      CALL MATINV(CC,3,TEM,1,DETERM)                                     PCCOMP     89
      A1 = TEM(1)                                                        PCCOMP     90
      A2 = TEM(2)                                                        PCCOMP     91
      A3 = TEM(3)                                                        PCCOMP     92
      DET = A2*A2 - 4.*A1*(A3-CRUDST)                                    PCCOMP     93
      IF (DET.LE.0) GO TO 131                                            PCCOMP     94
      SDET = SQRT(DET)                                                   PCCOMP     95
      GO TO 132                                                          PCCOMP     96
  131 SDET = 0.                                                          PCCOMP     97
      IPC = 10                                                           PCCOMP     98
  132 PC1 = (-A2 + SDET)/(2.*A1)                                         PCCOMP     99
      PC2 = (-A2 - SDET)/(2.*A1)                                         PCCOMP    100
      ACT1 = ABS(PC1-PC)                                                 PCCOMP    101
      ACT2 = ABS(PC2-PC)                                                 PCCOMP    102
      PCT = PC1                                                          PCCOMP    103
      IF (ACT2 .LT. ACT1)  PCT = PC2                                     PCCOMP    104
      PCB = 0.                                                           PCCOMP    105
      IF (IOPARM .EQ. 0)  PCB = 0.5                                      PCCOMP    106
      IF (PCT .LT. PCB)  GO TO 133                                       PCCOMP    107
      PC = PCT                                                           PCCOMP    108
      GO TO 134                                                          PCCOMP    109
  133 PC = PCB + 0.25 * (PC-PCB)                                         PCCOMP    110
  134 CONTINUE                                                           PCCOMP    111
      WRITE(6,*) PC,PC1,PC2                                              PCCOMP    112
      RETURN                                                             PCCOMP    113
  135 IPC = IPC + 1                                                      PCCOMP    114
C                                                                        PCCOMP    115
C  DETERMINE WHICH DATA TO ELIMINATE FOR QUADRATIC FIT                   PCCOMP    116
C                                                                        PCCOMP    117
      IF (CRUDST .GT. TDIST)  GO TO 140                                  PCCOMP    118
      J1 = 1                                                             PCCOMP    119
      IF (IPC.EQ.6. OR. IPC.EQ.9) J1 =2                                  PCCOMP    120
      IF (IPC.EQ.7.OR.IPC.EQ.10) J1 = 3                                  PCCOMP    121
      GO TO 145                                                          PCCOMP    122
  140 J1 = 2                                                             PCCOMP    123
      IF (IPC .EQ. 6  .OR. IPC .EQ. 8  .OR. IPC .EQ. 10)  J1 = 3         PCCOMP    124
      WRITE(6, 909) IPC, J1                                              PCCOMP    125
  909 FORMAT(1X, 10HIPC, J1 =  ,2I5)                                     PCCOMP    126
  145 C(J1,1) = PC * PC                                                  PCCOMP    127
      C(J1,2) =PC                                                        PCCOMP    128
      RANGE(J1) = TDIST                                                  PCCOMP    129
      GO TO 125                                                          PCCOMP    130
C                                                                        PCCOMP    131
C          WRITE DATA FOR GRAF BEFORE STOPPING PROGRAM                   PCCOMP    132
C           CALL SUBROUTINE PRTPLT FOR PRINTER PLOTS.                    PCCOMP    133
C                                                                        PCCOMP    134
  900 CONTINUE                                                           PCCOMP    135
      WRITE(6,2002) JCLIMB,JDESCN                                        PCCOMP    136
      IF (IDCT .GT.1) GO TO 904                                          PCCOMP    137
      WRITE(6,2005) NAME1                                                PCCOMP    138
      WRITE(6,2001)((CGRAF(I,J),J=1,12),I=1,JCLIMB)                      PCCOMP    139
  904 CONTINUE                                                           PCCOMP    140
      IF (ITOA .EQ. 1)  GO TO 9041                                       PCCOMP    141
      CRNG = DCRUZ                                                       PCCOMP    142
      IF (CRNG .LE. 0.)  GO TO 9041                                      PCCOMP    143
      IF (ISPLIZ .EQ. 1)  GO TO 9041                                     PCCOMP    144
      CALL PERTBL(ITAB,WCRUZ,LAMBDA,CRUDST,IPRINT,EF,IDCT,PC)            PCCOMP    145
C   ENTRY PERTBL IS IN SUBROUTINE CRUTBL                                 PCCOMP    146
C   CALCULATES AND PRINTS OUT THE PERFORMANCE TABLE.                     PCCOMP    147
 9041 CONTINUE                                                           PCCOMP    148
      CALL PAGE                                                          PCCOMP    149
      WRITE(6,2005)NAME2                                                 PCCOMP    150
      WRITE(6,2001)((DGRAF(I,J),J=1,12),I=1,JDESCN)                      PCCOMP    151
      IF (IGRAF .NE. 0)   GO TO 905                                      PCCOMP    152
      WRITE (6, 2004) IGRAF                                              PCCOMP    153
      GO TO 999                                                          PCCOMP    154
  905 CONTINUE                                                           PCCOMP    155
      WRITE(11) JCLIMB, JDESCN                                           PCCOMP    156
      IF (JCLIMB .LE. 0)   GO TO 910                                     PCCOMP    157
      WRITE(11)((CGRAF(I,J),I=1,JCLIMB),J=1,12)                          PCCOMP    158
      IF (IGRAF.EQ.1) GO TO 910                                          PCCOMP    159
      NCORD = JCLIMB                                                     PCCOMP    160
      DO 906 J=1,12                                                      PCCOMP    161
      YMIN(J) = 1.E+10                                                   PCCOMP    162
      YMAX(J) = 1.E-10                                                   PCCOMP    163
      DO 906 I=1,JCLIMB                                                  PCCOMP    164
      YMIN(J) = AMIN1(CGRAF(I,J),YMIN(J))                                PCCOMP    165
      YMAX(J) = AMAX1(CGRAF(I,J),YMAX(J))                                PCCOMP    166
  906 PRPLT(I,J) = CGRAF(I,J)                                            PCCOMP    167
      CALL PRTPLT(1)                                                     PCCOMP    168
  910 IF (JDESCN .LE. 0)  GO TO 920                                      PCCOMP    169
      WRITE(11)((DGRAF(I,J),I=1,JDESCN),J=1,12)                          PCCOMP    170
      IF (IGRAF.EQ.1) GO TO 999                                          PCCOMP    171
      NCORD = JDESCN                                                     PCCOMP    172
      DO 911 J=1,12                                                      PCCOMP    173
      YMIN(J) = 1.E+10                                                   PCCOMP    174
      YMAX(J) = 1.E-10                                                   PCCOMP    175
      DO 911 I=1,JDESCN                                                  PCCOMP    176
      YMIN(J) = AMIN1(DGRAF(I,J),YMIN(J))                                PCCOMP    177
      YMAX(J) = AMAX1(DGRAF(I,J),YMAX(J))                                PCCOMP    178
  911 PRPLT(I,J) = DGRAF(I,J)                                            PCCOMP    179
      CALL PRTPLT(2)                                                     PCCOMP    180
      GO TO 999                                                          PCCOMP    181
  920 WRITE(6, 2003) JCLIMB, JDESCN                                      PCCOMP    182
      GO TO 999                                                          PCCOMP    183
  930 CONTINUE                                                           PCCOMP    184
      LOC = 930                                                          PCCOMP    185
      WRITE(6,2010)LOC, CRUDST, TDIST, PC                                PCCOMP    186
 2010 FORMAT(15H0*** PCCOMP *** , I5, 21H   CRUDST, TDIST, PC= ,         PCCOMP    187
     1      3E15.5)                                                      PCCOMP    188
  999 STOP                                                               PCCOMP    189
C                                                                        PCCOMP    190
 2001 FORMAT(1X,12F10.2)                                                 PCCOMP    191
 2002 FORMAT(1H1,"DATA WRITTEN TO DATASET FOR GRAPHING, PRINTER PLOTS OB PCCOMP    192
     1TAINED WHEN IGRAF GREATER THAN 1",/1H0,5X,"JCLIMB = ",I5,          PCCOMP    193
     25X,"JDESCN = ",I5)                                                 PCCOMP    194
 2003 FORMAT(8H0JCLIMB ,I5,8H JDESCN ,I5,                                PCCOMP    195
     1  72H  IF INDEX IS ZERO, NO DATA SET WAS WRITTEN, NO PRINTER PLOTS PCCOMP    196
     2. IGRAF = 0)                                                       PCCOMP    197
 2004 FORMAT(1H0,"NO GRAF DATA SET WRITTEN ON DEVICE 11, NO PRINTER PLOT PCCOMP    198
     1S,IGRAF = ",I3)                                                    PCCOMP    199
 2005 FORMAT(1H0,48X,"OPTIMUM TRAJECTORY VARIABLES - ",A7,/1H0,          PCCOMP    200
     110H    ENERGY,10H  ALTITUDE,10H      MACH,10H  AIRSPEED,10H     GA PCCOMP    201
     2MMA,10H    FUELUZ,10H       EPR,10H       VWA,10H      TIME,       PCCOMP    202
     410H  DISTANCE,10H      HDOT,10H    VTIASK,//)                      PCCOMP    203
C                                                                        PCCOMP    204
      END                                                                PCCOMP    205
      SUBROUTINE PICTUR(K,X,Y,IS)                                        PICTUR      2
      COMMON /SCACOM/ XZERO, YZERO, DX, DY                               PICTUR      3
      COMMON / TITCOM/ NOTES(8)                                          PICTUR      4
      DIMENSION IA(101,61)                                               PICTUR      5
      DATA IDASH, II, IPLUS, ISTAR, IB                                   PICTUR      6
     1    /  1H-, 1HI,  1H+,   1H*,  1H /                                PICTUR      7
 2001 FORMAT (1H1)                                                       PICTUR      8
 2002 FORMAT(20X,101A1)                                                  PICTUR      9
 2003 FORMAT(81X,A1,3X,2I4,2F10.3)                                       PICTUR     10
 2004 FORMAT(14X,F10.3,40X,F10.3,40X,F10.3)                              PICTUR     11
 2005 FORMAT(20X,101A1,F10.3)                                            PICTUR     12
 2006 FORMAT(1H ,8X,F10.3,1X,101A1,F9.3)                                 PICTUR     13
 2007 FORMAT(1H ,5X,A8,6X,101A1)                                         PICTUR     14
      IF (K) 100, 700, 900                                               PICTUR     15
  100 CONTINUE                                                           PICTUR     16
      XMIN = XZERO - DX                                                  PICTUR     17
      XMAX = XZERO + DX                                                  PICTUR     18
      YMIN = YZERO - DY                                                  PICTUR     19
      YMAX = YZERO +DY                                                   PICTUR     20
      DO 110 J=1,61                                                      PICTUR     21
      DO 110 I=1,101                                                     PICTUR     22
  110 IA(I,J) = IB                                                       PICTUR     23
      DO 120 I = 1,101                                                   PICTUR     24
      IA(I,1) = IDASH                                                    PICTUR     25
      IA(I,31) = IDASH                                                   PICTUR     26
      IA(I,61) = IDASH                                                   PICTUR     27
  120 CONTINUE                                                           PICTUR     28
      DO 130 J=1,61                                                      PICTUR     29
      IA(1,J) = II                                                       PICTUR     30
      IA (51,J) = II                                                     PICTUR     31
  130 IA(101,J) =II                                                      PICTUR     32
      DO 140 I=1,101,50                                                  PICTUR     33
      DO 140 J=1,61,30                                                   PICTUR     34
  140 IA(I,J) = IPLUS                                                    PICTUR     35
  700 CONTINUE                                                           PICTUR     36
      JS = IS                                                            PICTUR     37
      DELX = (X - XMIN)/DX                                               PICTUR     38
      DELX = 50. * DELX                                                  PICTUR     39
      IX = DELX                                                          PICTUR     40
      IF (AMOD(DELX,1.).GT. .5) IX = IX+1                                PICTUR     41
      IX = IX + 1                                                        PICTUR     42
      DELY = (YMAX - Y)/DY                                               PICTUR     43
      DELY = 30. * DELY                                                  PICTUR     44
      IY = DELY                                                          PICTUR     45
      IF (AMOD(DELY,1.).GT. .5) IY = IY + 1                              PICTUR     46
      IY = IY +1                                                         PICTUR     47
      IF (IX .GE. 1) GO TO 710                                           PICTUR     48
      IX = 1                                                             PICTUR     49
      GO TO 715                                                          PICTUR     50
  710 IF (IX.LE.101) GO TO 720                                           PICTUR     51
      IX = 101                                                           PICTUR     52
  715 JS = ISTAR                                                         PICTUR     53
  720 IF (IY .GE. 1) GO TO 730                                           PICTUR     54
      IY = 1                                                             PICTUR     55
      GO TO 740                                                          PICTUR     56
  730 IF (IY .LE. 61) GO TO 750                                          PICTUR     57
      IY = 61                                                            PICTUR     58
  740 JS = ISTAR                                                         PICTUR     59
  750 CONTINUE                                                           PICTUR     60
      IA (IX,IY) =JS                                                     PICTUR     61
      GO TO 999                                                          PICTUR     62
  900 CONTINUE                                                           PICTUR     63
      WRITE(6,2001)                                                      PICTUR     64
      WRITE(6,2004) XMIN,XZERO,XMAX                                      PICTUR     65
      WRITE(6,2006)YMAX,(IA(I,1),I=1,101),YMAX                           PICTUR     66
      WRITE(6,2002) ((IA(I,J),I=1,101),J=2,7)                            PICTUR     67
      L = 0                                                              PICTUR     68
      DO 910 J=8,22,2                                                    PICTUR     69
      L = L + 1                                                          PICTUR     70
      WRITE(6,2007) NOTES(L),(IA(I,J),I=1,101)                           PICTUR     71
      WRITE(6,2002) (IA(I,J+1),I=1,101)                                  PICTUR     72
  910 CONTINUE                                                           PICTUR     73
      WRITE(6, 2002) ((IA(I,J),I=1,101),J=24,30)                         PICTUR     74
      WRITE(6, 2006) YZERO, (IA(I,31),I=1,101),YZERO                     PICTUR     75
      WRITE(6, 2002) ((IA(I,J),I=1,101),J=32,60)                         PICTUR     76
      WRITE(6, 2006) YMIN,(IA(I,61),I=1,101),YMIN                        PICTUR     77
      WRITE(6,2004) XMIN,XZERO,XMAX                                      PICTUR     78
C   SPACE COULD BE SAVED BY PACKING 10 CHARACTERS/WORD                   PICTUR     79
  999 CONTINUE                                                           PICTUR     80
      RETURN                                                             PICTUR     81
      END                                                                PICTUR     82
C                  ********** NEW ROUTINE **********                $$$$ PILIMT      2
      FUNCTION PILIMT(EPR)                                               PILIMT      3
C                                                                        PILIMT      4
C          ** EVATUATES (T-D) FOR A GIVEN EPR, ALTITUDE, M, AND DRAG.    PILIMT      5
C                                                                        PILIMT      6
      REAL MACH                                                          PILIMT      7
      COMMON /CLIMB/MACH, D,ICLIMB, T                                    PILIMT      8
      COMMON/DRAGMN/RHO, P, TEMPK, A, RATIO, H, ALPHA, CL, EPRSET,MFGR   PILIMT      9
   80 CALL ENGEPR( H, MACH, EPR, 0, T, FF, MFGR)                         PILIMT     10
      PILIMT= ABS(T-D)                                                   PILIMT     11
      GO TO (90, 91),  ICLIMB                                            PILIMT     12
   90 IF ( T .LT. D) PILIMT = PILIMT*1.E6                                PILIMT     13
      RETURN                                                             PILIMT     14
   91 IF ( T .GT. D) PILIMT = PILIMT*1.E6                                PILIMT     15
      RETURN                                                             PILIMT     16
      END                                                                PILIMT     17
C                  ********** NEW ROUTINE **********                $$$$ POLYE1      2
      FUNCTION POLYE1(X,M,B)                                             POLYE1      3
C                                                                        POLYE1      4
C          ** EVALUATES THE POLYNOMIAL Y=F(X)                            POLYE1      5
C                                                                        POLYE1      6
      DIMENSION B(M)                                                     POLYE1      7
      IF(M.EQ.1) GO TO 3                                                 POLYE1      8
      POLYE1=X*B(M)                                                      POLYE1      9
      MM2=M-2                                                            POLYE1     10
      IF(MM2.EQ.0) GO TO 2                                               POLYE1     11
      I=M -1                                                             POLYE1     12
      DO 1 N=1,MM2                                                       POLYE1     13
      POLYE1=(POLYE1+B(I))*X                                             POLYE1     14
    1 I=I-1                                                              POLYE1     15
    2 POLYE1=POLYE1+B(1)                                                 POLYE1     16
      RETURN                                                             POLYE1     17
    3 POLYE1=B(1)                                                        POLYE1     18
      RETURN                                                             POLYE1     19
      END                                                                POLYE1     20
      SUBROUTINE POLYF(X,Y,COEF,INX,INY,IDX,IDY,ANS)                     POLYF       2
      DOUBLE PRECISION COEF(256),ZNUM,ZDEN,X,Y,ANS,XA(8),YA(8)           POLYF       3
      ZNUM = 0.D0                                                        POLYF       4
      ZDEN = 0.D0                                                        POLYF       5
      XA(1) = 1.D0                                                       POLYF       6
      YA(1) = 1.D0                                                       POLYF       7
      DO 5 I=2,8                                                         POLYF       8
      XA(I) = XA(I-1)*X                                                  POLYF       9
    5 YA(I) = YA(I-1)*Y                                                  POLYF      10
      K = 1                                                              POLYF      11
      DO 10 J= 1,INY                                                     POLYF      12
      DO 10 I=1,INX                                                      POLYF      13
      ZNUM = ZNUM + COEF(K)*XA(I)*YA(J)                                  POLYF      14
   10 K = K + 1                                                          POLYF      15
      DO 20 J=1,IDY                                                      POLYF      16
      DO 20 I=1,IDX                                                      POLYF      17
      ZDEN = ZDEN + COEF(K)*XA(I)*YA(J)                                  POLYF      18
   20 K = K + 1                                                          POLYF      19
      ANS = ZNUM / ZDEN                                                  POLYF      20
      RETURN                                                             POLYF      21
      END                                                                POLYF      22
      SUBROUTINE PRTPLT(M)                                               PRTPLT      2
C                                                                        PRTPLT      3
C   THIS SUBROUTINE IS CALLED IN PCCOMP WHEN IGRAF IS GREATER            PRTPLT      4
C    THAN 1 AND GIVES PRINTER PLOTS                                      PRTPLT      5
C    IGRAF = 2   MACH NO, FLIGHT PATH ANGLE, ALTITUDE AND FUEL           PRTPLT      6
C    ARE PLOTTED VS DISTANCE                                             PRTPLT      7
      COMMON/CDCOM/NCORD,PRPLT(200,12),YMIN(12),YMAX(12),CRNG            PRTPLT      8
C     IGRAF GREATER THAN 2, ALL VARIABLES ARE PLOTTED VS DISTANCE        PRTPLT      9
C     AND TIME                                                           PRTPLT     10
      COMMON/SCACOM/XZERO,YZERO,DX,DY                                    PRTPLT     11
      COMMON/TITCOM/NOTES(8)                                             PRTPLT     12
       COMMON/GRAF/CGRAF(200,12),DGRAF(200,12),JCLIMB,JDESCN,IGRAF       PRTPLT     13
      COMMON/HDCOM/HEADER(8)                                             PRTPLT     14
      DIMENSION NAME(12),NUNITS(12),TITLE1(2)                            PRTPLT     15
      DIMENSION INDEX(4)                                                 PRTPLT     16
      DATA INDEX/2,3,5,6/                                                PRTPLT     17
      DATA LANK / 1H /                                                   PRTPLT     18
      DATA NAME/6HENERGY,8HALTITUDE,4HMACH,5HVITAS,5HGAMMA               PRTPLT     19
     1,  4HFUEL,4HEPR ,4HVWA ,4HTIME,8HDISTANCE,4HHDOT,5HVIASK/          PRTPLT     20
      DATA NUNITS / 2*5H (FT),1H , 6H (KNT),6H (DEG)                     PRTPLT     21
     1,  5H (LB),2*1H ,6H (SEC),6H (NMI),8H(FT/MIN),4H(KT)/              PRTPLT     22
      DATA NVERS/2HVS/                                                   PRTPLT     23
      DATA TITLE1/6HCLIMB ,8HDESCENT /                                   PRTPLT     24
      DATA TITLE2/10HTRAJECTORY/                                         PRTPLT     25
C                                                                        PRTPLT     26
      IF (IGRAF.EQ.2) GO TO 30                                           PRTPLT     27
      L = 9                                                              PRTPLT     28
   10 CONTINUE                                                           PRTPLT     29
      DO 5 I=1,8                                                         PRTPLT     30
    5 NOTES(I) = LANK                                                    PRTPLT     31
      NOTES(5) = NVERS                                                   PRTPLT     32
      CALL NICER(YMIN(L),YMAX(L),XZERO,DX)                               PRTPLT     33
      DO 20 J=1,10                                                       PRTPLT     34
      N=J                                                                PRTPLT     35
      IF (J.GT.8) N=J+2                                                  PRTPLT     36
      NOTES(2) = NAME(N)                                                 PRTPLT     37
      NOTES(4) = NUNITS(N)                                               PRTPLT     38
      NOTES(7) = NAME(L)                                                 PRTPLT     39
      NOTES(8) = NUNITS(L)                                               PRTPLT     40
      CALL NICER(YMIN(N),YMAX(N),YZERO,DY)                               PRTPLT     41
      CALL PICTUR(-1,YMIN(L),YMIN(J),1H0)                                PRTPLT     42
      DO 15 I=1,NCORD                                                    PRTPLT     43
      K = I                                                              PRTPLT     44
   15 CALL PICTUR(0,PRPLT(I,L),PRPLT(I,J),1H.)                           PRTPLT     45
      CALL PICTUR(1,PRPLT(K,L),PRPLT(K,N),1HF)                           PRTPLT     46
      IF (M.GT.1) GO TO 17                                               PRTPLT     47
      WRITE(6,100) TITLE1(1),TITLE2,HEADER(1)                            PRTPLT     48
      GO TO 20                                                           PRTPLT     49
   17 WRITE(6,100) TITLE1(2),TITLE2,HEADER(1)                            PRTPLT     50
   20 CONTINUE                                                           PRTPLT     51
      IF (L.EQ.10) GO TO 999                                             PRTPLT     52
      L = L+1                                                            PRTPLT     53
      GO TO 10                                                           PRTPLT     54
   30 CONTINUE                                                           PRTPLT     55
      DO 35 I =1,8                                                       PRTPLT     56
   35 NOTES(I) = LANK                                                    PRTPLT     57
      NOTES(5) = NVERS                                                   PRTPLT     58
      CALL NICER(YMIN(10),YMAX(10),XZERO,DX)                             PRTPLT     59
      DO 50 I =1,4                                                       PRTPLT     60
      NOTES(2) = NAME(INDEX(I))                                          PRTPLT     61
      NOTES(4) = NUNITS(INDEX(I))                                        PRTPLT     62
      NOTES(7) = NAME(10)                                                PRTPLT     63
      NOTES(8) = NUNITS(10)                                              PRTPLT     64
      CALL NICER (YMIN(INDEX(I)),YMAX(INDEX(I)),YZERO,DY)                PRTPLT     65
      CALL PICTUR(-1,YMIN(10),YMIN(INDEX(I)),1H0)                        PRTPLT     66
      DO 40 J=1,NCORD                                                    PRTPLT     67
      K = J                                                              PRTPLT     68
   40 CALL PICTUR(0,PRPLT(J,10),PRPLT(J,INDEX(I)),1H.)                   PRTPLT     69
      CALL PICTUR(1,PRPLT(K,11),PRPLT(K,INDEX(I)),1HF)                   PRTPLT     70
      IF (M.GT.1) GO TO 45                                               PRTPLT     71
      WRITE(6,100) TITLE1(1),TITLE2,HEADER(1)                            PRTPLT     72
      GO TO 50                                                           PRTPLT     73
   45 WRITE(6,100) TITLE1(2),TITLE2,HEADER(1)                            PRTPLT     74
   50 CONTINUE                                                           PRTPLT     75
  999 CONTINUE                                                           PRTPLT     76
  100 FORMAT(1H+,30X,2A10,40X,1A8)                                       PRTPLT     77
      RETURN                                                             PRTPLT     78
      END                                                                PRTPLT     79
C                  ********** NEW ROUTINE **********                $$$$ SERCH1      2
      SUBROUTINE SERCH1(TX,X,NX,PF,L,LIMIT)                              SERCH1      3
C                                                                        SERCH1      4
C           ** EVALUATES PERCENTAGE PF.                                  SERCH1      5
C                                                                        SERCH1      6
      DIMENSION TX(1)                                                    SERCH1      7
CXXXXX TX(N),N=1....NX  IS ASSUMED IN ASCENDING ORDER                    SERCH1      8
C                                                                        SERCH1      9
    7 LIMIT = 0                                                          SERCH1     10
      L = NX/2                                                           SERCH1     11
      IF(X.LT.TX(1).OR.X.GT.TX(NX)) GO TO 20                             SERCH1     12
    8 A = TX(L)                                                          SERCH1     13
      B = TX(L+1)                                                        SERCH1     14
      IF (X .LT. A) GO TO 11                                             SERCH1     15
      IF( X .GT. B) GO TO 12                                             SERCH1     16
      PF=(X- A)/(B-A)                                                    SERCH1     17
      RETURN                                                             SERCH1     18
 11   L=L-1                                                              SERCH1     19
      IF (L .LE. 0) GO TO 20                                             SERCH1     20
      GO TO 8                                                            SERCH1     21
 12   L=L+1                                                              SERCH1     22
      IF (L .GT. NX) GO TO 20                                            SERCH1     23
      IF( L .EQ. NX) GO TO 19                                            SERCH1     24
      GO TO 8                                                            SERCH1     25
   19 PF = 1.                                                            SERCH1     26
      L = NX - 1                                                         SERCH1     27
      RETURN                                                             SERCH1     28
   20 LIMIT= 1                                                           SERCH1     29
      WRITE(6,100) L,NX,X, TX(1), TX(NX)                                 SERCH1     30
  100 FORMAT(1H0,"INPUT TO SERCH1 OUTSIDE TABLE (L,NX,X,TX(L),TX(NX)="   SERCH1     31
     1 2I4, 4X, 3F15.7)                                                  SERCH1     32
      CALL TRACER                                                        SERCH1     33
      STOP                                                               SERCH1     34
      END                                                                SERCH1     35
C                  ********** NEW ROUTINE **********                $$$$ SERCHD      2
      SUBROUTINE SERCHD(TX,X,NX,PF,L,LIMIT)                              SERCHD      3
      DIMENSION TX(1)                                                    SERCHD      4
CXXXXX TX(N),N=1....NX  ARE MONOTONICALLY DECREASING                     SERCHD      5
C                                                                        SERCHD      6
    7 LIMIT = 0                                                          SERCHD      7
      L = NX/2                                                           SERCHD      8
      IF(X.GT.TX(1).OR.X.LT.TX(NX)) GO TO 20                             SERCHD      9
    8 B = TX(L)                                                          SERCHD     10
      A = TX(L+1)                                                        SERCHD     11
      IF (X .LT. A) GO TO 12                                             SERCHD     12
      IF( X .GT. B) GO TO 11                                             SERCHD     13
      PF=(B- X)/(B-A)                                                    SERCHD     14
      RETURN                                                             SERCHD     15
 11   L=L-1                                                              SERCHD     16
      IF (L .LE. 0) GO TO 20                                             SERCHD     17
      GO TO 8                                                            SERCHD     18
 12   L=L+1                                                              SERCHD     19
      IF (L .GT. NX) GO TO 20                                            SERCHD     20
      IF( L .EQ. NX) GO TO 19                                            SERCHD     21
      GO TO 8                                                            SERCHD     22
   19 PF = 1.                                                            SERCHD     23
      L = NX - 1                                                         SERCHD     24
      RETURN                                                             SERCHD     25
   20 LIMIT= 1                                                           SERCHD     26
      WRITE(6,100) L,NX,X, TX(1), TX(NX)                                 SERCHD     27
  100 FORMAT(1H0,"INPUT TO SERCHD OUTSIDE TABLE (L,NX,X,TX(L),TX(NX)="   SERCHD     28
     1 2I4, 4X, 3F15.7)                                                  SERCHD     29
      CALL TRACER                                                        SERCHD     30
      STOP                                                               SERCHD     31
      END                                                                SERCHD     32
      FUNCTION SGLTBL(F, X, NX, A, J, IXTRAP)                            SGLTBL      2
      DIMENSION F(1), X(1)                                               SGLTBL      3
      DATA ONEDP / 1.E0 /                                                SGLTBL      4
      CALL LOC8(X, NX, A, J, FX, IXTRAP)                                 SGLTBL      5
      SGLTBL = (ONEDP - FX) *F(J) + FX*F(J+1)                            SGLTBL      6
      RETURN                                                             SGLTBL      7
      END                                                                SGLTBL      8
      SUBROUTINE TRACER                                                  TRACER      2
      DATA NERROR/0/                                                     TRACER      3
C                                                                        TRACER      4
C  CALL TRACER THREE TIMES.  THEN EXTRAPOLATE WITHOUT CALLS TO TRACE     TRACER      5
      IF (NERROR .GT. 3)  RETURN                                         TRACER      6
C                                                                        TRACER      7
      CALL STRACE                                                        TRACER      8
      NERROR = NERROR+1                                                  TRACER      9
      IF(NERROR .LT. 10) RETURN                                          TRACER     10
      WRITE(6,1000)                                                      TRACER     11
 1000 FORMAT(42H0TOO MANY ERRORS.  TRACER STOPS EXECUTION.)              TRACER     12
C                                                                        TRACER     13
      STOP                                                               TRACER     14
      END                                                                TRACER     15
      SUBROUTINE TRIM (EPR,VTAS,H,W,DGFLAP,GEAR,INCRUZ,GAMMA,INIT,       TRIM        2
     1    VDOT,FF), RETURNS(IR1)                                         TRIM        3
C----------------------------------------------------------------------- TRIM        4
C                                                                        TRIM        5
C PURPOSE%  CALLS APPROPRIATE ROUTINE TO COMPUTE CRUISE TRIM CONDITION   TRIM        6
C     BASED ON AIRCRAFT MODEL SELECTED BY INPUT VARIABLE  IAC.           TRIM        7
C                                                                        TRIM        8
C----------------------------------------------------------------------- TRIM        9
      INTEGER GEAR                                                       TRIM       10
      COMMON /ACFT/ IAC, SAC, HMAX                                       TRIM       11
      COMMON /COMARO/     JCL01F,FFLAPS,JCL01A,JCL02H,JCL02M,JCL03H,     TRIM       12
     1    JCL03M,JCL15F,JCL15A,JCL16M,JCD01F,JCD01A,JCD02M,JCD02C,       TRIM       13
     2    JCD05F,JCD05A,JCD06M                                           TRIM       14
C                                                                        TRIM       15
      GO TO (10,20,30,40),IAC                                            TRIM       16
C                                                                        TRIM       17
   10 CONTINUE                                                           TRIM       18
C     CALL TRIM1 (EPR,VTAS,H,W,DGFLAP,GEAR,INCRUZ,GAMMA,INIT,VDOT,FF),   TRIM       19
C    1    RETURNS(900)                                                   TRIM       20
      GO TO 890                                                          TRIM       21
C                                                                        TRIM       22
   20 CONTINUE                                                           TRIM       23
      CALL TRIM2 (EPR,VTAS,H,W,DGFLAP,GEAR,INCRUZ,GAMMA,INIT,VDOT,FF),   TRIM       24
     1    RETURNS(900)                                                   TRIM       25
      GO TO 890                                                          TRIM       26
C                                                                        TRIM       27
   30 CONTINUE                                                           TRIM       28
      CALL TRIM3 (EPR,VTAS,H,W,DGFLAP,GEAR,INCRUZ,GAMMA,INIT,VDOT,FF),   TRIM       29
     1    RETURNS(900)                                                   TRIM       30
      GO TO 890                                                          TRIM       31
C                                                                        TRIM       32
   40 CONTINUE                                                           TRIM       33
C     CALL TRIM4 (EPR,VTAS,H,W,DGFLAP,GEAR,INCRUZ,GAMMA,INIT,VDOT,FF),   TRIM       34
C    1    RETURNS(900)                                                   TRIM       35
      GO TO 890                                                          TRIM       36
C                                                                        TRIM       37
  890 CONTINUE                                                           TRIM       38
      RETURN                                                             TRIM       39
C                                                                        TRIM       40
C ----ERROR MESSAGES                                                     TRIM       41
C                                                                        TRIM       42
  900 CONTINUE                                                           TRIM       43
      RETURN IR1                                                         TRIM       44
      END                                                                TRIM       45
      SUBROUTINE TRIM2(EPR, VTAS, H, W, DF, GEAR, INCRUZ, GAMMA,         TRIM2       2
     1  INIT, VDOT, FF) ,                                                TRIM2       3
     XRETURNS (R1)                                                       TRIM2       4
C                                                                        TRIM2       5
C          ** COMPUTES ALPHA AND THRUST IN TRIM FOR LEVEL FLIGHT.        TRIM2       6
C                                                                        TRIM2       7
      INTEGER GEAR                                                       TRIM2       8
      REAL MACH                                                          TRIM2       9
      COMMON /COMARO/ IFLAP, FFLAPS, DUMDUM(15)                          TRIM2      10
      COMMON /COST/ EPRXX, ICOST, FC, TC, DTEMPK, WW, FUELDT, FFLOW      TRIM2      11
      COMMON /COMTRM/ CL0, CLDA, CLGEAR                                  TRIM2      12
      COMMON /DRAGMN/ RHO,P,TEMPK,ASOS,RATIO,ALT,ALPHA,CL,THSMAX,MFGR    TRIM2      13
      COMMON/III/IPRINT,IDRAG                                            TRIM2      14
      DIMENSION ANS(4)                                                   TRIM2      15
      DIMENSION CL216(3,7)                                               TRIM2      16
      DIMENSION A(20),R(20)                                              TRIM2      17
      DATA CL216/                       .012578 , .101778,  -.001426,    TRIM2      18
     1    .06282,   .105492,  -.000959, .133972,  .109409,  -.000737,    TRIM2      19
     2    .297618,  .117523,  -.000866, .604512,  .110909,  -.000483,    TRIM2      20
     3    .891152,  .108086,  -.000499, 1.207021, .106244,  -.000104/    TRIM2      21
      DATA ALFAMN,ALFAMX,RD2DEG/-5., 25., 57.296/                        TRIM2      22
      DATA RHOZ/.0023769/                                                TRIM2      23
      DATA DTDEPZ,G/41000.,32.2/                                         TRIM2      24
      DATA DEPR/.001/                                                    TRIM2      25
C                                                                        TRIM2      26
C                                                                        TRIM2      27
C                                                                        TRIM2      28
   97 CALL AT62(H, ANS)                                                  TRIM2      29
      TEMPK = ANS(3) + DTEMPK                                            TRIM2      30
      RHO = ANS(2) / (3092.40 * TEMPK)                                   TRIM2      31
      ASOS = 65.76 * SQRT(TEMPK)                                         TRIM2      32
      DTDEPR = DTDEPZ                                                    TRIM2      33
      Q = RHO    *VTAS*VTAS/2.                                           TRIM2      34
      QS = Q*1560.                                                       TRIM2      35
      MACH = VTAS / ASOS                                                 TRIM2      36
      J = 1                                                              TRIM2      37
      A(J) = (W/QS - 0.13)/0.099                                         TRIM2      38
      IF(IPRINT.NE.0) WRITE(6,1001) H,MACH,W,RHO,VTAS,QS,A(J)            TRIM2      39
C                                                                        TRIM2      40
C ----COMPUTE TRIM A                                                     TRIM2      41
C                                                                        TRIM2      42
   20 CONTINUE                                                           TRIM2      43
      CALL CLIFT2(MACH,H,A(J),DF,GEAR,CL,0)                              TRIM2      44
      CALL CDRAG(MACH,CL,GEAR,DF,CD)                                     TRIM2      45
      COSA = COS(A(J)/RD2DEG)                                            TRIM2      46
      SINA = SIN(A(J)/RD2DEG)                                            TRIM2      47
      R(J) = (W - QS*CL)*COSA - QS*CD*SINA                               TRIM2      48
      IF(IPRINT.NE.0) WRITE(6,1000) J,A(J),CL,CD,R(J)                    TRIM2      49
      IF(ABS(R(J)).LT.1.)GO TO 30                                        TRIM2      50
      IF(J.GT.1)GO TO 24                                                 TRIM2      51
      K = J                                                              TRIM2      52
      J = J + 1                                                          TRIM2      53
      A(J) = A(K) - 0.2                                                  TRIM2      54
      GO TO 20                                                           TRIM2      55
   24 SLOPE = (R(J) - R(K))/(A(J) - A(K))                                TRIM2      56
      K = J                                                              TRIM2      57
      J = J + 1                                                          TRIM2      58
      A(J) = A(K) -R(K)/SLOPE                                            TRIM2      59
      IF(J.LT.10) GO TO 20                                               TRIM2      60
C                                                                        TRIM2      61
C ----COMPUTE TRIM THRUST                                                TRIM2      62
C                                                                        TRIM2      63
   30 CONTINUE                                                           TRIM2      64
      THRUST = CD*QS/COSA                                                TRIM2      65
      IF(IPRINT.NE.0) WRITE(6,1003) THRUST                               TRIM2      66
      J = 0                                                              TRIM2      67
   40 CONTINUE                                                           TRIM2      68
      J = J + 1                                                          TRIM2      69
      CALL ENGEPR(H,MACH,EPR,INCRUZ,T1,FF,MFGR)                          TRIM2      70
      RR = THRUST - T1                                                   TRIM2      71
      IF(IPRINT.NE.0) WRITE(6,1005) J,EPR,T1,RR                          TRIM2      72
      IF(ABS(RR).LT.1.) GO TO 50                                         TRIM2      73
      DE = SIGN(DEPR,RR)                                                 TRIM2      74
      EPR2 = EPR + DE                                                    TRIM2      75
      CALL ENGEPR(H,MACH,EPR2,INCRUZ,T2,FF,MFGR)                         TRIM2      76
      DTDEPR = (T2 - T1)/DE                                              TRIM2      77
      IF (DTDEPR.EQ.0.) GO TO 990                                        TRIM2      78
      IF(IPRINT.NE.0) WRITE(6,1006) DE,EPR2,T2,DTDEPR                    TRIM2      79
      EPR = EPR + (THRUST - T1)/DTDEPR                                   TRIM2      80
      IF(J.LT.10) GO TO 40                                               TRIM2      81
      GO TO 902                                                          TRIM2      82
   50 CONTINUE                                                           TRIM2      83
C                                                                        TRIM2      84
      RETURN                                                             TRIM2      85
C                                                                        TRIM2      86
C ----ERROR MESSAGES                                                     TRIM2      87
C                                                                        TRIM2      88
  900 WRITE(6,901)A(J)                                                   TRIM2      89
  901 FORMAT(50H0+++ WARNING +++  SUBR TRIM2 FAILED TO CONVERGE ON,      TRIM2      90
     1    28H ALPHA FOR TRIM IN 10 STEPS./19X,23HFINAL GUESS WAS ALPHA = TRIM2      91
     2    ,1PE13.6)                                                      TRIM2      92
C                                                                        TRIM2      93
      GO TO 990                                                          TRIM2      94
C                                                                        TRIM2      95
  902 WRITE(6,903) EPR                                                   TRIM2      96
  903 FORMAT(50H0+++ WARNING +++  SUBR TRIM2 FAILED TO CONVERGE ON,      TRIM2      97
     1    26H EPR FOR TRIM IN 10 STEPS./19X,21HFINAL GUESS WAS EPR =,    TRIM2      98
     2    1PE13.6)                                                       TRIM2      99
C                                                                        TRIM2     100
  990 CONTINUE                                                           TRIM2     101
      RETURN                                                             TRIM2     102
 1000 FORMAT(2X,2HJ=,I2,2X,6HALPHA=,1PE13.6,2X,3HCL=,E13.6,2X,3HCD=,     TRIM2     103
     1    E13.6,2X,2HR=,E13.6)                                           TRIM2     104
 1001 FORMAT(1H0,7X,2HH=,F7.0,2X,5HMACH=,F7.2,2X,2HW=,F9.1/              TRIM2     105
     28X,4HRHO=,F10.6,2X,5HVTAS=,F7.1,2X,3HQS=,F9.1/                     TRIM2     106
     38X,14HINITIAL ALPHA=,F8.4//)                                       TRIM2     107
 1003 FORMAT(11H0CONVERGED.,5X,7HTHRUST=,1PE13.6)                        TRIM2     108
 1005 FORMAT(2X,2HJ=,I2,2X,4HEPR=,1PG13.6,2X,3HT1=,G13.6,2X,2HR=,G13.6)  TRIM2     109
 1006 FORMAT(2X,3HDE=,1PG13.6,2X,5HEPR2=,G13.6,2X,3HT2=,G13.6,2X,        TRIM2     110
     1    7HDTEPR=,G13.6)                                                TRIM2     111
      END                                                                TRIM2     112
      SUBROUTINE TRIM3 (EPR,VTAS,H,W,DGFLAP,GEAR,INCRUZ,GAMMA,INIT,      TRIM3       2
     1    VDOT,FF), RETURNS(IR1)                                         TRIM3       3
C----------------------------------------------------------------------- TRIM3       4
C                                                                        TRIM3       5
C PURPOSE% COMPUTE ANGLE OF ATTACK (ALPHA) AND ENGINE PRESSURE RATIO     TRIM3       6
C     (EPR) TO SUSTAIN STEADY FLIGHT IN CRUISE AT A GIVEN ALTITUDE AND   TRIM3       7
C     TRUE AIRSPEED.                                                     TRIM3       8
C                                                                        TRIM3       9
C METHOD%  THE EQUATIONS OF MOTION                                       TRIM3      10
C                                                                        TRIM3      11
C                  M*DV/DT = T*COS(A) - D - W*SIN(G)                     TRIM3      12
C              M*V*(DG/DT) = T*SIN(A) + L - W*COS(G)                     TRIM3      13
C                                                                        TRIM3      14
C     ARE EVALUATED AT  DV/DT = DG/DT = G = 0  AND  T  (THRUST)          TRIM3      15
C     ELIMINATED BETWEEN THEM TO GIVE                                    TRIM3      16
C                                                                        TRIM3      17
C                   R(A) = (W - L)*COS(A) - D*SIN(A) = 0.                TRIM3      18
C                                                                        TRIM3      19
C     THIS EQUATION IS SOLVED ITERATIVELY FOR  A  (ALPHA, ANGLE OF       TRIM3      20
C     ATTACK) USING NEWTON'S METHOD, I.E.,                               TRIM3      21
C                                                                        TRIM3      22
C          A(K+1) = A(K) - R(A(K))/( DR(A(K))/DA )                       TRIM3      23
C                                                                        TRIM3      24
C     WHERE  DR/DA  IS THE DERIVATIVE OF  R  WITH RESPECT TO  A  AND IS  TRIM3      25
C     APPROXIMATED AS                                                    TRIM3      26
C                                                                        TRIM3      27
C          DR/DA = ( R(A+DA) - R(A) )/DA                                 TRIM3      28
C                                                                        TRIM3      29
C     AND  DA  IS 0.005 DEG.  ONCE  A  CONVERGES, THRUST  T  IS EVALU-   TRIM3      30
C     ATED BY                                                            TRIM3      31
C                                                                        TRIM3      32
C          T = D/COS(A).                                                 TRIM3      33
C                                                                        TRIM3      34
C     EPR  IS FOUND ITERATIVELY BY A SIMILAR METHOD; I.E., USING         TRIM3      35
C     NEWTON'S METHOD TO UPDATE THE GUESS ON  EPR  UNTIL THE THRUST      TRIM3      36
C     EQUALS THE REQUIRED VALUE.                                         TRIM3      37
C                                                                        TRIM3      38
C ARGUMENTS%                                                             TRIM3      39
C     EPR    = ON INPUT, THE INITIAL GUESS OF THE TRIM ENGINE PRESSURE   TRIM3      40
C              RATIO; ON OUTPUT, IT IS THE TRIM VALUE,                   TRIM3      41
C     VTAS   = TRUE AIRSPEED (FT/SEC),                                   TRIM3      42
C     H      = ALTITUDE (FT),                                            TRIM3      43
C     W      = WEIGHT (LBS),                                             TRIM3      44
C     DGFLAP = FLAP POSITION (DEG),                                      TRIM3      45
C     GEAR   = 1, LANDING GEAR IS DOWN; = 0, GEAR IS UP,                 TRIM3      46
C     INCRUZ = CRUISE FLAG PASSED ON TO SUBR ENGEPR,                     TRIM3      47
C     GAMMA, INIT, VDOT ARE NO LONGER USED,                              TRIM3      48
C     FF     = VARIABLE PASSED ON TO SUBR ENGEPR.                        TRIM3      49
C                                                                        TRIM3      50
C NOTES%                                                                 TRIM3      51
C     (1)  MAXIMUM ITERATIONS IS TEN FOR BOTH THE SEARCH FOR ALPHA AND   TRIM3      52
C     EPR.                                                               TRIM3      53
C                                                                        TRIM3      54
C----------------------------------------------------------------------- TRIM3      55
      INTEGER GEAR                                                       TRIM3      56
      LOGICAL LPRNT                                                      TRIM3      57
      REAL MACH                                                          TRIM3      58
      DIMENSION ANS(4)                                                   TRIM3      59
      DIMENSION A(20), R(20)                                             TRIM3      60
      COMMON /ACFT/ IAC, SAC, HMAX                                       TRIM3      61
      COMMON /COST  / EPRXX,ICOST,FC,TC,DTEMPK,WW,FUELDT,FFLOW           TRIM3      62
      COMMON /COMTRM/ CL0,CLDA,CLGEAR                                    TRIM3      63
      COMMON /DRAGMN/ RHO,P,TEMPK,ASOS,RATIO,ALT,ALPHA,CL,THSMAX,MFGR    TRIM3      64
      COMMON/III/ IPRINT,IDRAG                                           TRIM3      65
      DATA          R2D/57.29577951/, DALPHA/.005/, DEPR/.001/           TRIM3      66
      DATA LPRNT/.TRUE./                                                 TRIM3      67
C                                                                        TRIM3      68
 1000 FORMAT(2X,2HJ=,I2,2X,6HALPHA=,1PE13.6,2X,3HCL=,E13.6,2X,3HCD=,     TRIM3      69
     1    E13.6,2X,2HR=,E13.6)                                           TRIM3      70
 1001 FORMAT(1H0,7X,2HH=,F7.0,2X,5HMACH=,F7.2,2X,2HW=,F9.1/              TRIM3      71
     28X,4HRHO=,F10.6,2X,5HVTAS=,F7.1,2X,3HQS=,F9.1/                     TRIM3      72
     38X,14HINITIAL ALPHA=,F8.4//)                                       TRIM3      73
 1003 FORMAT(11H0CONVERGED.,5X,7HTHRUST=,1PE13.6)                        TRIM3      74
 1004 FORMAT(8X,"DA=",1PE13.6,2X,"DCL=",E13.6,2X,"DCD=",E13.6,           TRIM3      75
     1    2X,"DR=",E13.6)                                                TRIM3      76
 1005 FORMAT(2X,2HJ=,I2,2X,4HEPR=,1PG13.6,2X,3HT1=,G13.6,2X,2HR=,G13.6)  TRIM3      77
 1006 FORMAT(2X,3HDE=,1PG13.6,2X,5HEPR2=,G13.6,2X,3HT2=,G13.6,2X,        TRIM3      78
     1    7HDTDEPR=,G13.6)                                               TRIM3      79
C                                                                        TRIM3      80
C ----INITIALIZE                                                         TRIM3      81
C                                                                        TRIM3      82
      CALL AT62 (H,ANS)                                                  TRIM3      83
      TEMPK =ANS(3)+DTEMPK                                               TRIM3      84
      RHO =ANS(2)/(3092.4*TEMPK)                                         TRIM3      85
      ASOS = 65.76*SQRT(TEMPK)                                           TRIM3      86
   10 CONTINUE                                                           TRIM3      87
      QS = 0.5*RHO*VTAS*VTAS*SAC                                         TRIM3      88
      MACH = VTAS/ASOS                                                   TRIM3      89
      J = 1                                                              TRIM3      90
      A(J) = (W/QS - 0.13)/0.099                                         TRIM3      91
      IF(IPRINT.NE.0) WRITE(6,1001) H,MACH,W,RHO,VTAS,QS,A(J)            TRIM3      92
C                                                                        TRIM3      93
C ----COMPUTE TRIM A                                                     TRIM3      94
C                                                                        TRIM3      95
   20 CONTINUE                                                           TRIM3      96
      CALL CLIFT3(MACH,H,A(J),DGFLAP,GEAR,CL,ITRIM)                      TRIM3      97
      IF(CL.LT..75) GO TO 22                                             TRIM3      98
      A(J) = .99*A(J)                                                    TRIM3      99
      GO TO 20                                                           TRIM3     100
   22 CONTINUE                                                           TRIM3     101
      CALL CDRAG3(MACH,A(J),CL,GEAR,DGFLAP,CD)                           TRIM3     102
      COSA = COS(A(J)/R2D)                                               TRIM3     103
      SINA = SIN(A(J)/R2D)                                               TRIM3     104
      R(J) = (W - QS*CL)*COSA - QS*CD*SINA                               TRIM3     105
      IF(IPRINT.NE.0) WRITE(6,1000) J,A(J),CL,CD,R(J)                    TRIM3     106
      IF(ABS(R(J)).LT.1.)GO TO 30                                        TRIM3     107
      IF(J.GT.1)GO TO 24                                                 TRIM3     108
      K = J                                                              TRIM3     109
      J = J + 1                                                          TRIM3     110
      A(J) = A(K) - 0.2                                                  TRIM3     111
      GO TO 20                                                           TRIM3     112
   24 SLOPE = (R(J) - R(K))/(A(J) - A(K))                                TRIM3     113
      K = J                                                              TRIM3     114
      J = J + 1                                                          TRIM3     115
      A(J) = A(K) - R(K)/SLOPE                                           TRIM3     116
      IF(J .LT. 10) GO TO 20                                             TRIM3     117
      GO TO 900                                                          TRIM3     118
C                                                                        TRIM3     119
C ----COMPUTE TRIM THRUST                                                TRIM3     120
C                                                                        TRIM3     121
   30 CONTINUE                                                           TRIM3     122
      THRUST = CD*QS/COSA                                                TRIM3     123
      IF(IPRINT.NE.0) WRITE(6,1003) THRUST                               TRIM3     124
C                                                                        TRIM3     125
C ----COMPUTE TRIM EPR (ENGINE PRESSURE RATIO)                           TRIM3     126
C                                                                        TRIM3     127
      J = 0                                                              TRIM3     128
   40 CONTINUE                                                           TRIM3     129
      J = J+1                                                            TRIM3     130
      CALL ENGEPR (H,MACH,EPR,INCRUZ,T1,FF,MFGR)                         TRIM3     131
      RR = THRUST - T1                                                   TRIM3     132
      IF(IPRINT.NE.0) WRITE(6,1005) J,EPR,T1,RR                          TRIM3     133
      IF(ABS(RR).LT.1.) GO TO 50                                         TRIM3     134
      DE = SIGN(DEPR,RR)                                                 TRIM3     135
      EPR2 = EPR+DE                                                      TRIM3     136
      CALL ENGEPR (H,MACH,EPR2,INCRUZ,T2,FF,MFGR)                        TRIM3     137
      DTDEPR = (T2-T1)/DE                                                TRIM3     138
      IF(IPRINT.NE.0) WRITE(6,1006) DE,EPR2,T2,DTDEPR                    TRIM3     139
      IF (DTDEPR.EQ.0.) GO TO 990                                        TRIM3     140
      EPR = EPR+(THRUST-T1)/DTDEPR                                       TRIM3     141
      IF(J .LT. 10) GO TO 40                                             TRIM3     142
      GO TO 902                                                          TRIM3     143
   50 CONTINUE                                                           TRIM3     144
C                                                                        TRIM3     145
  890 CONTINUE                                                           TRIM3     146
      RETURN                                                             TRIM3     147
C                                                                        TRIM3     148
C ----ERROR MESSAGES                                                     TRIM3     149
C                                                                        TRIM3     150
  900 WRITE(6,901) A(10)                                                 TRIM3     151
  901 FORMAT(50H0+++ WARNING +++  SUBR TRIM3 FAILED TO CONVERGE ON,      TRIM3     152
     1    28H ALPHA FOR TRIM IN 10 STEPS./19X,23HFINAL GUESS WAS ALPHA = TRIM3     153
     2    ,1PE13.6)                                                      TRIM3     154
C                                                                        TRIM3     155
      GO TO 990                                                          TRIM3     156
C                                                                        TRIM3     157
  902 WRITE(6,903) EPR                                                   TRIM3     158
  903 FORMAT(50H0+++ WARNING +++  SUBR TRIM3 FAILED TO CONVERGE ON,      TRIM3     159
     1    26H EPR FOR TRIM IN 10 STEPS./19X,21HFINAL GUESS WAS EPR =,    TRIM3     160
     2    1PE13.6)                                                       TRIM3     161
C                                                                        TRIM3     162
  990 CONTINUE                                                           TRIM3     163
      RETURN IR1                                                         TRIM3     164
      END                                                                TRIM3     165
      SUBROUTINE UPDOWN(EOPT, IPRINT, WTO, WLNDG, ECRUZ,WCRUZ, IDCT)     UPDOWN      2
C                                                                        UPDOWN      3
C          ** COMPUTES THE CLIMB AND DESCEND INTEGRATION WITH ENERGY AS  UPDOWN      4
C          **   THE INDEPENDENT VARIABLE.                                UPDOWN      5
C                                                                        UPDOWN      6
      IMPLICIT REAL(M)                                                   UPDOWN      7
      REAL LAMBDA,LAMBS                                                  UPDOWN      8
      EXTERNAL FCLIMB, FCLMB2                                            UPDOWN      9
      DIMENSION CLMCST(200)                                              UPDOWN     10
      COMMON/CLIMB/MACH, D, ICLIMB,TDUMMY, TRSTDR                        UPDOWN     11
      COMMON/COST/EPR, ICOST, FC, TC, DTEMPK, W, FUELDT, FFLOW           UPDOWN     12
      COMMON /CRUZ/NEARCZ,IDLE                                           UPDOWN     13
      COMMON /DRAGMN/ RHO, P, TEMPK, A, RATIO, H, ALPHA, CL,THSMAX,MFGR  UPDOWN     14
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS, MXVTAS,VTAS2     UPDOWN     15
      COMMON/GRAF/CGRAF(200,12),DGRAF(200,12),JCGRF,JDGRF,IGRAF          UPDOWN     16
      COMMON /IO/ ANS(4), WS(11), EOPTS(11), HSTARS(11), MSTARS(11),     UPDOWN     17
     1 PISTRS(11), LAMBS(11), VTASOP(11), FUELFL(11), CRDIST(11),        UPDOWN     18
     2CRTIME(11), MNCOST(2), MOPIAS(2), MOPTAS(2), MACHOP(2), FDTOPT(2), UPDOWN     19
     3 OPTALT(2), HOPT(2), EPRS(2),IWMAX,IOPARM,HTO, VTO, HOLNDG, VOLNDG UPDOWN     20
     4 ,ETO, DEIN                                                        UPDOWN     21
      COMMON/OPT/OPTMAK,IOPT,EDTMX                                       UPDOWN     22
      COMMON/PRTCOM/LESPRT                                               UPDOWN     23
      COMMON /TOPRNT/ EPRABX                                             UPDOWN     24
      COMMON/VUPDWN/EECLMB(200), FFCLMB(200),DDCLMB(200),EEDOWN(200)     UPDOWN     25
     1,FFDOWN(200),DDDOWN(200),SSCOST(200),JCLIMB,JDESCN,TTCLMB(200)     UPDOWN     26
     2,TTDOWN(200)                                                       UPDOWN     27
      COMMON /WINDY/IWIND, PSIA, VWA                                     UPDOWN     28
      DATA FS2KNT, G, RD2DEG, RHOSL/1.68781,32.2,57.296,.0023769/        UPDOWN     29
C                                                                        UPDOWN     30
C                                                                        UPDOWN     31
C                                                                        UPDOWN     32
   80 NEARCZ = 0                                                         UPDOWN     33
      IF (IPRINT.EQ.1 .AND. LESPRT.EQ.0) CALL PAGE                       UPDOWN     34
      GO TO (81, 300), ICLIMB                                            UPDOWN     35
   81 HO = HTO                                                           UPDOWN     36
      VO = VTO                                                           UPDOWN     37
      W = WTO                                                            UPDOWN     38
      EPR = 2.4                                                          UPDOWN     39
      JCLIMB= 0                                                          UPDOWN     40
      GO TO 93                                                           UPDOWN     41
  300 CONTINUE                                                           UPDOWN     42
      HO = HOLNDG                                                        UPDOWN     43
      VO = VOLNDG                                                        UPDOWN     44
      W = WLNDG                                                          UPDOWN     45
      EPR = 1.1                                                          UPDOWN     46
      JDESCN = 0                                                         UPDOWN     47
   93 H = HO                                                             UPDOWN     48
      CALL AT62(HO, ANS)                                                 UPDOWN     49
      P = ANS(2)                                                         UPDOWN     50
      TEMPK = ANS(3) + DTEMPK                                            UPDOWN     51
      RHO = P / (3092.40 * TEMPK)                                        UPDOWN     52
      A = 65.76 * SQRT(TEMPK)                                            UPDOWN     53
      VI = VO * FS2KNT                                                   UPDOWN     54
      MACH = SQRT(5.*(((((VI/2496.46)**2 +1.)**3.5 - 1.)*                UPDOWN     55
     1    (2116.22/P) + 1.)**(2./7.)-1.))                                UPDOWN     56
      VO = MACH * A                                                      UPDOWN     57
      CALL ENGEPR (H, MACH, EPR, 0, T, FF, MFGR)                         UPDOWN     58
      E = HO + .5*  (VO)**2/G                                            UPDOWN     59
      GO TO (182, 183), ICLIMB                                           UPDOWN     60
  182 CONTINUE                                                           UPDOWN     61
      IF (LESPRT.GT.1) GO TO 181                                         UPDOWN     62
      WRITE(6,189) W, ECRUZ, WCRUZ                                       UPDOWN     63
  189 FORMAT(1H0 "AIRCRAFT TAKE OFF WT = " F8.0, 2X, "LBS, CRUISE ENERGY UPDOWN     64
     1 = " F7.0, 2X, " FT, INITIAL CRUISE WT =" F10.0, "LBS")            UPDOWN     65
      WRITE(6, 190) HO, VTO                                              UPDOWN     66
  190 FORMAT(1H0 "INITIAL ALT (FT), SPEED (KIAS)" 2F10.0 )               UPDOWN     67
      WRITE(6, 25) FC, TC, DTEMPK    ,LAMBDA                             UPDOWN     68
   25 FORMAT(1H0 "FUEL COST($/LB)" F9.4, 2X,"TIME COST($/HR)= " F7.2, 2X UPDOWN     69
     1 "TEMP VAR (DEG K) =", F7.2, "LAMBDA =" F10.3, "$/NM")             UPDOWN     70
  181 CONTINUE                                                           UPDOWN     71
      LAMBDA = LAMBDA*(3600./6080.)                                      UPDOWN     72
      IF (LESPRT.GT.1) GO TO 192                                         UPDOWN     73
      WRITE(6, 191)                                                      UPDOWN     74
  191 FORMAT(1H0 "CLIMB OPTIMIZATION%"/                                  UPDOWN     75
     1 4X, "ENERGY  ALTITUDE    MACH   VIAS  VTAS" 6X, "EDOT" 5X, "GAMMA UPDOWN     76
     2" 6X, "TIME" 6X, "DIST" 5X, "FUEL USED PWR SETG   COST/E"          UPDOWN     77
     3/1H 5X, "FT" 9X, "FT" 7X, "NO" 4X, "KNOT  KNOT" 5X, "FT/SEC" 5X,   UPDOWN     78
     4 "DEG"5X, "HR%MN%SEC  N MILE" 8X, "LB" 7X, " EPR" 5X,              UPDOWN     79
     5            "$/ E FT"  )                                           UPDOWN     80
      GO TO 192                                                          UPDOWN     81
C                                                                        UPDOWN     82
  183 CONTINUE                                                           UPDOWN     83
      IF (LESPRT.GT.1) GO TO 184                                         UPDOWN     84
      WRITE(6,289) W, ECRUZ                                              UPDOWN     85
  289 FORMAT(1H0 "AIRCRAFT LANDING WT = " F10.0, 2X, "LBS, CRUISE ENERGY UPDOWN     86
     1 = " F10.0, 2X, "FT")                                              UPDOWN     87
  184 CONTINUE                                                           UPDOWN     88
      IF (IDCT .GT. 1)  GO TO 292                                        UPDOWN     89
      IF( IPRINT .EQ. 0) GO TO 192                                       UPDOWN     90
  292 CONTINUE                                                           UPDOWN     91
      IF (LESPRT.GT.1) GO TO 192                                         UPDOWN     92
      WRITE(6, 290) HO,VOLNDG                                            UPDOWN     93
  290 FORMAT(1H0 "FINAL ALT(FT), SPEED (KIAS) = " 2F10.0)                UPDOWN     94
      WRITE(6, 291)                                                      UPDOWN     95
  291 FORMAT(1H0 "DESCEND OPTIMIZATION%"/                                UPDOWN     96
     1 4X, "ENERGY  ALTITUDE    MACH   VIAS  VTAS" 6X, "EDOT" 5X, "GAMMA UPDOWN     97
     2" 6X,"TIME" 6X,"DIST" 5X,"FUEL USED PWR SETG   COST/E  SUM COST/E" UPDOWN     98
     3/1H 5X, "FT" 9X, "FT" 7X, "NO" 4X, "KNOT  KNOT" 5X, "FT/SEC" 5X,   UPDOWN     99
     4  "DEG" 5X, "HR%MN%SEC  N MILE" 8X, "LB" 7X, " EPR" 5X, "$/ E FT"  UPDOWN    100
     5 4X, "$/E FT")                                                     UPDOWN    101
C                                                                        UPDOWN    102
  192 DENRGY = DEIN                                                      UPDOWN    103
      IOPT = 1                                                           UPDOWN    104
      MNVTAS = 330.                                                      UPDOWN    105
      MXVTAS = 840.                                                      UPDOWN    106
      ESHIFT = EOPT - (3000. - 1.)                                       UPDOWN    107
      EDIFF = ESHIFT - E                                                 UPDOWN    108
      IE500 = EDIFF/DENRGY                                               UPDOWN    109
      DEINIT = EDIFF - IE500 * DENRGY                                    UPDOWN    110
      INSTEP = 0                                                         UPDOWN    111
      IF( ICLIMB .EQ. 1) GO TO 194                                       UPDOWN    112
      IF (IDCT .GT. 1)  GO TO 194                                        UPDOWN    113
      ICSAME = 1                                                         UPDOWN    114
      IF (ABS(E-ETO) .LE. 1.0)  ICSAME = 0                               UPDOWN    115
  194 TIME = 0.                                                          UPDOWN    116
      CALL ICLOCK (TIME, IHR, IMIN, ISEC)                                UPDOWN    117
      DIST = 0.                                                          UPDOWN    118
      GAMMA = 0.                                                         UPDOWN    119
      GAMMR = 0.                                                         UPDOWN    120
      INIT = 0                                                           UPDOWN    121
      FUELUZ = 0.                                                        UPDOWN    122
      IENRY = 0                                                          UPDOWN    123
      IEMAX = 0                                                          UPDOWN    124
      EDOT = 0.                                                          UPDOWN    125
      CCOST = 0.                                                         UPDOWN    126
      VWA = 0.                                                           UPDOWN    127
      VTAS = VO                                                          UPDOWN    128
      VTAS2 = VTAS                                                       UPDOWN    129
      IF( IWIND .EQ. 0) GO TO 206                                        UPDOWN    130
      CALL WIND(HO, PSIA, VWA)                                           UPDOWN    131
  206 VGO = VO + VWA                                                     UPDOWN    132
      ICOUNT = 1                                                         UPDOWN    133
      GO TO 203                                                          UPDOWN    134
  201 CCOST = FCLMB2(EPR)*6080./3600.                                    UPDOWN    135
      IF (ABS(EDOT) .GE. 2.)  GO TO 207                                  UPDOWN    136
      IF (DENRGY .LT. 10.)GO TO 208                                      UPDOWN    137
      DENRGY = DENRGY / 2.                                               UPDOWN    138
      E = E - DENRGY                                                     UPDOWN    139
      GO TO 201                                                          UPDOWN    140
  208 ICOUNT = ICOUNT + 1                                                UPDOWN    141
      GO TO 900                                                          UPDOWN    142
  207 VTAS = VTAS2                                                       UPDOWN    143
      IF ( IOPARM .EQ. 0) GO TO 202                                      UPDOWN    144
      IF( IOPT .EQ. 3) GO TO 205                                         UPDOWN    145
      IF ( IOPT .EQ. 2) GO TO 204                                        UPDOWN    146
      IF   (E .GE. 10000.) IOPT = 2                                      UPDOWN    147
      GO TO 205                                                          UPDOWN    148
  204 IF( (EOPT - E) .GT. 3000.) GO TO 205                               UPDOWN    149
      DENRGY = DENRGY/2.                                                 UPDOWN    150
      IOPT = 3                                                           UPDOWN    151
      GO TO 205                                                          UPDOWN    152
  202 IF ( IENRY .EQ. 1) GO TO 205                                       UPDOWN    153
      IF ( (EOPT - E) .GT. 3000.) GO TO 205                              UPDOWN    154
      DENRGY = DENRGY/2.                                                 UPDOWN    155
      IENRY = 1                                                          UPDOWN    156
  205 DET =(E - EO)/ EDOT                                                UPDOWN    157
      W = W - (DET*FF)/3600.                                             UPDOWN    158
      TIME = TIME +ABS(DET)                                              UPDOWN    159
      CALL ICLOCK(TIME, IHR, IMIN, ISEC)                                 UPDOWN    160
      FUELUZ = FUELUZ + FF*ABS(DET)/3600.                                UPDOWN    161
      IF( INIT .EQ. 0) GO TO 203                                         UPDOWN    162
      GSPRNT = VTAS + VWA                                                UPDOWN    163
      SINGA =  2*(H - HO)/(DET*(VGO + GSPRNT))                           UPDOWN    164
      IF (SINGA .LT.-1.)  SINGA = -1.                                    UPDOWN    165
      IF (SINGA .GT. 1.)  SINGA = 1.                                     UPDOWN    166
      GAMMR = ASIN(SINGA)                                                UPDOWN    167
      DEX = .5 * (VGO + GSPRNT) * COS(GAMMR)*DET                         UPDOWN    168
      DIST = DIST + ABS(DEX/6080.)                                       UPDOWN    169
      GAMMA = GAMMR * RD2DEG                                             UPDOWN    170
  203 VGO = VTAS + VWA                                                   UPDOWN    171
      HO = H                                                             UPDOWN    172
      EO = E                                                             UPDOWN    173
      VTASK = VTAS/FS2KNT                                                UPDOWN    174
      VIASK=2496.5*SQRT((((P/2116.22)*((1.+.2*MACH*MACH)                 UPDOWN    175
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             UPDOWN    176
      HDOT = (VTASK*SIN(GAMMR))*6080./60.                                UPDOWN    177
      IF ( (ECRUZ -(E + DENRGY)) .LT. 5000.) NEARCZ = 1                  UPDOWN    178
      GO TO (220, 221), ICLIMB                                           UPDOWN    179
  220 CONTINUE                                                           UPDOWN    180
      IF (LESPRT.GT.1) GO TO 227                                         UPDOWN    181
      WRITE(6,210) E, H, MACH, VIASK, VTASK, EDOT, GAMMA, IHR, IMIN,     UPDOWN    182
     1 ISEC, DIST, FUELUZ ,EPR, CCOST                                    UPDOWN    183
  227 CONTINUE                                                           UPDOWN    184
      CLMCST(ICOUNT) = CCOST                                             UPDOWN    185
      JCLIMB= JCLIMB + 1                                                 UPDOWN    186
      EECLMB (JCLIMB) = E                                                UPDOWN    187
      FFCLMB(JCLIMB) = FUELUZ                                            UPDOWN    188
      DDCLMB(JCLIMB) = DIST                                              UPDOWN    189
      TTCLMB(JCLIMB) = TIME                                              UPDOWN    190
  210  FORMAT(1H 2F10.0,  F9.3,    2F6.0,2F10.2, 4X, 2(I2, "%"),  I2,    UPDOWN    191
     1 F10.3, F10.0, 3F10.3)                                             UPDOWN    192
      GO TO 700                                                          UPDOWN    193
  221 CONTINUE                                                           UPDOWN    194
      IF (IDCT .GT. 1)  GO TO 224                                        UPDOWN    195
      IF ( ICSAME .NE. 0) GO TO 223                                      UPDOWN    196
      IF (ICOUNT. GT. JCLIMB)  CLMCST(ICOUNT) = 0.                       UPDOWN    197
      UPCOST = CLMCST(ICOUNT)                                            UPDOWN    198
      GO TO 225                                                          UPDOWN    199
  223 IF (E.LT.EECLMB(1)) GO TO 219                                      UPDOWN    200
      IF (E.GT.EECLMB(IUPMAX)) GO TO 224                                 UPDOWN    201
      CALL SERCH1(EECLMB, E, IUPMAX, PF, IUP, LIMIT)                     UPDOWN    202
      UPCOST = CLMCST(IUP) + PF*(CLMCST(IUP+1) - CLMCST(IUP))            UPDOWN    203
      GO TO 225                                                          UPDOWN    204
  219 UPCOST = 1000.                                                     UPDOWN    205
      GO TO 225                                                          UPDOWN    206
  224 UPCOST = 0.                                                        UPDOWN    207
  225 SUMCST = CCOST + UPCOST                                            UPDOWN    208
      IF (IDCT .GT. 1)  GO TO 230                                        UPDOWN    209
      IF( IPRINT .EQ. 0) GO TO 91                                        UPDOWN    210
  230 CONTINUE                                                           UPDOWN    211
      IF (LESPRT.GT.1) GO TO 91                                          UPDOWN    212
      WRITE(6, 210) E, H, MACH, VIASK, VTASK, EDOT, GAMMA, IHR, IMIN,    UPDOWN    213
     1 ISEC, DIST, FUELUZ ,EPR, CCOST                    ,SUMCST         UPDOWN    214
   91 JDESCN= JDESCN +1                                                  UPDOWN    215
      EEDOWN(JDESCN) = E                                                 UPDOWN    216
      FFDOWN(JDESCN) = FUELUZ                                            UPDOWN    217
      DDDOWN(JDESCN) = DIST                                              UPDOWN    218
      TTDOWN(JDESCN) = TIME                                              UPDOWN    219
      SSCO ST(JDESCN) = SUMCST                                           UPDOWN    220
C         SAVE TABLE FOR GRAF ROUTINE                                    UPDOWN    221
C                                                                        UPDOWN    222
      GO TO 720                                                          UPDOWN    223
C                                                                        UPDOWN    224
  222 ICOUNT = ICOUNT + 1                                                UPDOWN    225
      INIT = 1                                                           UPDOWN    226
      IF( INSTEP .EQ. 0) GO TO 226                                       UPDOWN    227
      E = E + DENRGY                                                     UPDOWN    228
      IF ( E .LT. EOPT - 100.) GO TO 201                                 UPDOWN    229
      IF ( IEMAX .EQ. 1) GO TO 900                                       UPDOWN    230
      E = EOPT                                                           UPDOWN    231
      IEMAX = 1                                                          UPDOWN    232
      GO TO 201                                                          UPDOWN    233
  226 E = E + DEINIT                                                     UPDOWN    234
      INSTEP = 1                                                         UPDOWN    235
      GO TO 201                                                          UPDOWN    236
C                                                                        UPDOWN    237
C                                                                        UPDOWN    238
C      FILL TABLE FOR CLIMB SUMMARY FOR GRAF USING DEVICE 11             UPDOWN    239
C                                                                        UPDOWN    240
  700 CGRAF(JCLIMB,1) = E                                                UPDOWN    241
      CGRAF(JCLIMB,2) = H                                                UPDOWN    242
      CGRAF(JCLIMB,3) = MACH                                             UPDOWN    243
      CGRAF(JCLIMB,4) = VTASK                                            UPDOWN    244
      CGRAF(JCLIMB,5) = GAMMA                                            UPDOWN    245
      CGRAF(JCLIMB,6) = FUELUZ                                           UPDOWN    246
      CGRAF(JCLIMB,7) = EPR                                              UPDOWN    247
      CGRAF(JCLIMB,8) = VWA                                              UPDOWN    248
      CGRAF(JCLIMB,9) = TIME                                             UPDOWN    249
      CGRAF(JCLIMB,10) = DIST                                            UPDOWN    250
      CGRAF(JCLIMB,11) = HDOT                                            UPDOWN    251
      CGRAF(JCLIMB,12) = VIASK                                           UPDOWN    252
      JCGRF = JCLIMB                                                     UPDOWN    253
      GO TO 222                                                          UPDOWN    254
C               FILL TABLE DECEDN FOR GRAF                               UPDOWN    255
  720 DGRAF(JDESCN,1) = E                                                UPDOWN    256
      DGRAF(JDESCN,2) = H                                                UPDOWN    257
      DGRAF(JDESCN,3) = MACH                                             UPDOWN    258
      DGRAF(JDESCN,4) = VTASK                                            UPDOWN    259
      DGRAF(JDESCN,5) = GAMMA                                            UPDOWN    260
      DGRAF(JDESCN,6) = FUELUZ                                           UPDOWN    261
      DGRAF(JDESCN,7) = EPR                                              UPDOWN    262
      DGRAF(JDESCN,8) = VWA                                              UPDOWN    263
      DGRAF(JDESCN,9) = TIME                                             UPDOWN    264
      DGRAF(JDESCN,10) = DIST                                            UPDOWN    265
      DGRAF(JDESCN,11) = HDOT                                            UPDOWN    266
      DGRAF(JDESCN,12) = VIASK                                           UPDOWN    267
      JDGRF = JDESCN                                                     UPDOWN    268
      GO TO 222                                                          UPDOWN    269
C                                                                        UPDOWN    270
C                                                                        UPDOWN    271
  900 IF( ICLIMB .NE. 1) RETURN                                          UPDOWN    272
      IUPMAX = ICOUNT - 1                                                UPDOWN    273
      RETURN                                                             UPDOWN    274
      END                                                                UPDOWN    275
      FUNCTION   VALUE2(TEMP, IT, ITMAX, TEMPA, ALT24, IALT, IALMAX,     VALUE2      2
     1 H, EPRMAX ,I)                                                     VALUE2      3
C                                                                        VALUE2      4
C          ** INTERPOLATES THE VALUE OF A POINT IN A TWO-DIMENSIONAL ARR VALUE2      5
C                                                                        VALUE2      6
      DIMENSION TEMP(IT), ALT24(IALT), EPRMAX(IT, IALT)                  VALUE2      7
C                                                                        VALUE2      8
C                                                                        VALUE2      9
C                                                                        VALUE2     10
C     IT, IALT, FOR DIMENSIONING, ITMAX, IALMAX FOR SEARCH1              VALUE2     11
C     ITEMP ROW INDEX, IH COLUMN INDEX                                   VALUE2     12
C                                                                        VALUE2     13
   70 IF ( I .EQ. 0) GO TO 80                                            VALUE2     14
      IF( H .LE. ALT24(1)) GO TO 101                                     VALUE2     15
      IF( H .GE. ALT24(IALMAX)) GO TO 102                                VALUE2     16
      IF ( TEMPA .LT. TEMP(1)) GO TO 106                                 VALUE2     17
      IF( TEMPA .GT. TEMP(ITMAX)) GO TO 107                              VALUE2     18
   80 CALL SERCH1(ALT24, H,  IALMAX, PFH, IH, LIMIT)                     VALUE2     19
      CALL SERCH1(TEMP, TEMPA, ITMAX, PFT, ITEMP, LIMIT)                 VALUE2     20
      EPRMX1 = EPRMAX(ITEMP, IH) + PFT*(EPRMAX(ITEMP + 1, IH)            VALUE2     21
     1 - EPRMAX(ITEMP    , IH))                                          VALUE2     22
      EPRMX2 = EPRMAX(ITEMP, IH+ 1) + PFT*( EPRMAX(ITEMP + 1, IH+ 1) -   VALUE2     23
     1 EPRMAX(ITEMP    , IH+ 1))                                         VALUE2     24
  100 VALUE2 = EPRMX1 + PFH*(EPRMX2 - EPRMX1)                            VALUE2     25
      RETURN                                                             VALUE2     26
C                                                                        VALUE2     27
C                                                                        VALUE2     28
  101 IH = 1                                                             VALUE2     29
      GO TO 103                                                          VALUE2     30
  102 IH = IALMAX                                                        VALUE2     31
  103 IF( TEMPA .LT. TEMP(1)) GO TO 104                                  VALUE2     32
      IF( TEMPA .GT. TEMP(ITMAX)) GO TO 105                              VALUE2     33
      CALL SERCH1(TEMP, TEMPA, ITMAX, PFT, ITEMP, LIMIT)                 VALUE2     34
      VALUE2 = EPRMAX(ITEMP, IH) + PFT*(EPRMAX(ITEMP + 1, IH)            VALUE2     35
     1 - EPRMAX(ITEMP    , IH))                                          VALUE2     36
      RETURN                                                             VALUE2     37
  104 VALUE2 = XTRPL1(TEMP(1), TEMP(2), TEMPA, EPRMAX(1,1), EPRMAX(2,1)) VALUE2     38
      RETURN                                                             VALUE2     39
  105 N1 = ITMAX - 1                                                     VALUE2     40
      VALUE2 = XTRPL2 (TEMP(N1), TEMP(ITMAX), TEMPA, EPRMAX(N1,IALMAX),  VALUE2     41
     1 EPRMAX(ITMAX, IALMAX))                                            VALUE2     42
      RETURN                                                             VALUE2     43
  106 CALL SERCH1(ALT24, H,  IALMAX, PFH, IH, LIMIT)                     VALUE2     44
      EPRMX2 = XTRPL1(TEMP(1), TEMP(2), TEMPA, EPRMAX(1,IH + 1),         VALUE2     45
     1EPRMAX(2, IH+1))                                                   VALUE2     46
      EPRMX1 = XTRPL1(TEMP(1), TEMP(2), TEMPA, EPRMAX(1,IH),EPRMAX(2,IH) VALUE2     47
     1)                                                                  VALUE2     48
      GO TO 100                                                          VALUE2     49
  107 CALL SERCH1(ALT24, H,  IALMAX, PFH, IH, LIMIT)                     VALUE2     50
      N1 = ITMAX - 1                                                     VALUE2     51
      EPRMX1= XTRPL2(TEMP(N1), TEMP(ITMAX), TEMPA, EPRMAX(N1,IH),        VALUE2     52
     1 EPRMAX(ITMAX, IH))                                                VALUE2     53
      EPRMX2= XTRPL2(TEMP(N1), TEMP(ITMAX), TEMPA, EPRMAX(N1,IH + 1),    VALUE2     54
     1 EPRMAX(ITMAX, IH+1))                                              VALUE2     55
      GO TO 100                                                          VALUE2     56
      END                                                                VALUE2     57
      SUBROUTINE VCCOMP (H, EE, MAKIAS, FBIAS, IF1)                      VCCOMP      2
      IMPLICIT REAL (M)                                                  VCCOMP      3
      INTEGER MFGR                                                       VCCOMP      4
      REAL LAMBDA, LAMBS, LLCRUZ                                         VCCOMP      5
      EXTERNAL FBOUND, FCOST, FOPT, FCLIMB, FCLMB2                       VCCOMP      6
      COMMON /CLIMB/ MACH, D, ICLIMB, TDUMMY, TRSTDR                     VCCOMP      7
      COMMON/COST/EPR, ICOST, FC, TC, DTEMPK, W, FUELDT, FFLOW           VCCOMP      8
      COMMON /DRAGMN/ RHO, P, TEMPK, A, RATIO,HH, ALPHA, AL, EPRMAX,MFGR VCCOMP      9
      COMMON /ENERGY/ LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS,MXVTAS,VTAS2    VCCOMP     10
      COMMON /III/ IPRINT, IDRAG                                         VCCOMP     11
      COMMON /IO/ ANS(4), WS(11), EOPTS(11), HSTARS(11), MSTARS(11),     VCCOMP     12
     1 EPRSTR(11), LAMBS(11), VTASOP(11), FUELFL(11), CRDIST(11),        VCCOMP     13
     2CRTIME(11), MNCOST(2), MOPIAS(2), MOPTAS(2), MACHOP(2), FDTOPT(2), VCCOMP     14
     3 OPTALT(2), HOPT(2), EPRS(2), IWMAX, IOPARM, FILL(5), DEIN         VCCOMP     15
      COMMON /OPT/ OPTMAK, IOPT, EDTMX                                   VCCOMP     16
      COMMON /VTRCRU/ WSS(10), JJCRUZ(10), LLCRUZ(50, 10), EECRUZ(50,10) VCCOMP     17
     1 ,DLLDEE(2, 10), IWMAXX, WTO, WCRUZ1, CRUZCT, HHCRUZ(50, 10),      VCCOMP     18
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         VCCOMP     19
      COMMON /WINDY/ IWIND, PSIA, VWA                                    VCCOMP     20
      COMMON/ACFT/IAC,SAC,HMAX                                           VCCOMP     21
      DATA FS2KNT / 1.68781 /                                            VCCOMP     22
   92 CALL AT62(H, ANS)                                                  VCCOMP     23
      P = ANS(2)                                                         VCCOMP     24
      TEMPK = ANS(3) + DTEMPK                                            VCCOMP     25
      RHO = P / (3092.40 * TEMPK)                                        VCCOMP     26
      A = 65.76 * SQRT(TEMPK)                                            VCCOMP     27
   90  IDRAG = 1                                                         VCCOMP     28
      EPRMAX = 2.4                                                       VCCOMP     29
      ZMIN = .1                                                          VCCOMP     30
      FM = .89                                                           VCCOMP     31
      IF(IAC.NE.3) GO TO 94                                              VCCOMP     32
      FM = .89                                                           VCCOMP     33
      IF (MFGR .GE. 3)  FM = .84                                         VCCOMP     34
      CLCMAX = .72                                                       VCCOMP     35
      ZMIN = SQRT(W/(0.5*A*A*SAC*RHO*CLCMAX))                            VCCOMP     36
   94 CONTINUE                                                           VCCOMP     37
      MINDRG = MINF(ZMIN, FM,FBOUND,MACH,IPRINT)                         VCCOMP     38
      CALL ENGEPR(H, MACH, EPRMAX, 1, TMAX, FF, MFGR)                    VCCOMP     39
      TRSTDR = TMAX - MINDRG                                             VCCOMP     40
      IF( TRSTDR .LE. 0.)  GO TO 999                                     VCCOMP     41
  110 FA =  MACH - .1                                                    VCCOMP     42
      IF(FA.LT.ZMIN) FA = ZMIN                                           VCCOMP     43
  111 CONTINUE                                                           VCCOMP     44
      CALL ENGEPR(H, FA, EPRMAX, 1, TMAXA, FFA, MFGR )                   VCCOMP     45
      DRAGA = FBOUND(FA)                                                 VCCOMP     46
      IF( TMAXA .GE. DRAGA)GO TO 112                                     VCCOMP     47
      IDRAG = 2                                                          VCCOMP     48
      ZMIN = FA                                                          VCCOMP     49
      FAC = MINF(ZMIN, MACH, FBOUND, FA, IPRINT )                        VCCOMP     50
      IDRAG = 1                                                          VCCOMP     51
  112 FB = FM                                                            VCCOMP     52
      CALL ENGEPR(H, FB, EPRMAX, 1, TMAXB, FFB, MFGR )                   VCCOMP     53
      DRAGB= FBOUND (FB)                                                 VCCOMP     54
      IF( TMAXB   .GE. DRAGB)GO TO 116                                   VCCOMP     55
  114 IDRAG = 2                                                          VCCOMP     56
      FBC = MINF(MACH, FM, FBOUND, FB, IPRINT)                           VCCOMP     57
  116 MAKIAS=2496.5*SQRT((((P/2116.22)*((1.+.2*MACH*MACH)                VCCOMP     58
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             VCCOMP     59
      FBIAS =2496.5*SQRT((((P/2116.22)*((1.+.2*FB*FB)                    VCCOMP     60
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             VCCOMP     61
C                                                                        VCCOMP     62
C                                                                        VCCOMP     63
      IF (IWIND .EQ. 0)  GO TO 120                                       VCCOMP     64
      CALL WIND(H, PSIA, VWA)                                            VCCOMP     65
  120 DO 122 I=1,2                                                       VCCOMP     66
      ICOST = I                                                          VCCOMP     67
      FDTOPT(I) = MINF(FA, FB, FCOST, MACHOP(I), IPRINT)                 VCCOMP     68
  121 MOPTAS(I) =MACHOP(I)*A/FS2KNT                                      VCCOMP     69
      MC = MACHOP(I)                                                     VCCOMP     70
      MOPIAS(I)=2496.5*SQRT((((P/2116.22)*((1.+.2*MC*MC)                 VCCOMP     71
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             VCCOMP     72
      EPRS(I) = EPR                                                      VCCOMP     73
      IF (IF1 .EQ. 1)  GO TO 125                                         VCCOMP     74
  122 CONTINUE                                                           VCCOMP     75
  125 CONTINUE                                                           VCCOMP     76
      EE = H + (MOPTAS(1) * FS2KNT)**2/64.4                              VCCOMP     77
C          EQUATE PASSED VARIABLE AND COMMON VARIABLE H AND HH           VCCOMP     78
      HH = H                                                             VCCOMP     79
  999 RETURN                                                             VCCOMP     80
      END                                                                VCCOMP     81
C                  ********** NEW ROUTINE **********                $$$$ VOPTRJ      2
      SUBROUTINE VOPTRJ(WLANDG,TDIST,PC,LAMBDX, ISPLIZ, RANGE,IOPARM,EF, VOPTRJ      3
     1    ITER, IDCT, TTIME, IMFD, IPC)                                  VOPTRJ      4
C                                                                        VOPTRJ      5
C          ** COMPUTES THE CLIMB, CRUISE, DESCEND, AND TOTAL FUEL, TIME, VOPTRJ      6
C          **   AND DISTANCE AND FUEL EFFICIENCIES OVER THE TRAJECTORY.  VOPTRJ      7
C                                                                        VOPTRJ      8
      REAL LLCRUZ, LAMBDA, LAMBDI, LAMBDF,LAMBDX,MACHI, MACHF            VOPTRJ      9
      COMMON /CRURNG/ ECRUZ, FCRUZ, HCRUZ, IL1, IL2, IW, PFW             VOPTRJ     10
      COMMON/COST/THS, ICOST, FC, TC, DTEMPK,WX, FUELDT, FFLOW           VOPTRJ     11
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS, MXVTAS,VTAS2     VOPTRJ     12
      COMMON /EXTRA/ DUM1(1514), HBFF(11), FBFF(11), DUM2(22), EBOPT(11) VOPTRJ     13
      COMMON /IO/ ANS(4), WS(11), DUM3(115), IWMAX, IOP, DUM4(6)         VOPTRJ     14
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    VOPTRJ     15
     1 DLLDEE(2, 10), IWMAXX, WTO, WCRUZ, CRUZCT, HHCRUZ(50,10),         VOPTRJ     16
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         VOPTRJ     17
      COMMON/VUPDWN/EECLMB(200),FFCLMB(200),DDCLMB(200),EEDOWN(200)      VOPTRJ     18
     1,FFDOWN(200),DDDOWN(200),SSCOST(200),JCLIMB,JDESCN,TTCLMB(200)     VOPTRJ     19
     2,TTDOWN(200)                                                       VOPTRJ     20
      COMMON /WINDY/IWIND, PSIA, VWA                                     VOPTRJ     21
      COMMON /EXTRAP/ FCLMB, TCLMB, DCLMB, FDOWN, TDOWN, DDOWN, DCRUZ    VOPTRJ     22
      DATA T2G,FS2KNT,T3600,SQRRTG,SQR2RO/64.4,1.68781,3600.,65.76,29./  VOPTRJ     23
C                                                                        VOPTRJ     24
C                                                                        VOPTRJ     25
C     COMPUTE(CLIMB, DESCEND) (FUEL, TIME, DISTANCE)                     VOPTRJ     26
      IF (IDCT .LE. 1)  GO TO 79                                         VOPTRJ     27
      PFD = 0.                                                           VOPTRJ     28
      LD = JDESCN                                                        VOPTRJ     29
      DCLMB = 0.                                                         VOPTRJ     30
      FCLMB = 0.                                                         VOPTRJ     31
      TCLMB = 0.                                                         VOPTRJ     32
      FDOWN = FFDOWN(LD)                                                 VOPTRJ     33
      TDOWN = TTDOWN(LD)                                                 VOPTRJ     34
      DDOWN = DDDOWN(LD)                                                 VOPTRJ     35
      GO TO 911                                                          VOPTRJ     36
   79 IF(ISPLIZ.EQ.0)GO TO 85                                            VOPTRJ     37
      IF ( IOPARM .EQ. 0) GO TO 840                                      VOPTRJ     38
      IF (IPC .EQ. 1)  GO TO 85                                          VOPTRJ     39
   81 LLAST = JDESCN-1                                                   VOPTRJ     40
      DO 82 L=2,LLAST                                                    VOPTRJ     41
      COST1 = SSCOST(L)/ ABS(SSCOST(L))                                  VOPTRJ     42
      COST2 = SSCOST(L+ 1)/ABS(SSCOST(L+1))                              VOPTRJ     43
      IF( ABS(COST1 - COST2) .GT. .5) GO TO 83                           VOPTRJ     44
   82 CONTINUE                                                           VOPTRJ     45
   85 CONTINUE                                                           VOPTRJ     46
      PFC = 0.                                                           VOPTRJ     47
      PFD = 0.                                                           VOPTRJ     48
      LC = JCLIMB                                                        VOPTRJ     49
      LD = JDESCN                                                        VOPTRJ     50
      IF (ITER .GT. 1)  GO TO 820                                        VOPTRJ     51
      FCLMB = FFCLMB(LC)                                                 VOPTRJ     52
      TCLMB = TTCLMB(LC)                                                 VOPTRJ     53
      DCLMB = DDCLMB(LC)                                                 VOPTRJ     54
  820 FDOWN = FFDOWN(LD)                                                 VOPTRJ     55
      TDOWN = TTDOWN(LD)                                                 VOPTRJ     56
      DDOWN = DDDOWN(LD)                                                 VOPTRJ     57
      GO TO 89                                                           VOPTRJ     58
   83 PF = -SSCOST(L)/(SSCOST(L+1) - SSCOST(L))                          VOPTRJ     59
      ECRUZ = EEDOWN(L)+PF*(EEDOWN(L+1)-EEDOWN(L))                       VOPTRJ     60
  840 IF( ITER .GT. 1) GO TO 84                                          VOPTRJ     61
      CALL SERCH1(EECLMB, ECRUZ, JCLIMB, PFC,LC,LIMIT)                   VOPTRJ     62
   84 CALL SERCH1(EEDOWN,ECRUZ, JDESCN, PFD,LD,LIMIT)                    VOPTRJ     63
      IF (ITER .GT. 1)  GO TO 87                                         VOPTRJ     64
      FCLMB = FFCLMB(LC) + PFC*(FFCLMB(LC+1) - FFCLMB(LC))               VOPTRJ     65
      TCLMB = TTCLMB(LC) + PFC*(TTCLMB(LC+1) - TTCLMB(LC))               VOPTRJ     66
      DCLMB = DDCLMB(LC) + PFC*(DDCLMB(LC+1) - DDCLMB(LC))               VOPTRJ     67
   87 FDOWN = FFDOWN(LD) + PFD*(FFDOWN(LD + 1) - FFDOWN(LD))             VOPTRJ     68
      TDOWN = TTDOWN(LD) + PFD*(TTDOWN(LD + 1) - TTDOWN(LD))             VOPTRJ     69
      DDOWN = DDDOWN(LD) + PFD*(DDDOWN(LD + 1) - DDDOWN(LD))             VOPTRJ     70
C                                                                        VOPTRJ     71
C                                                                        VOPTRJ     72
   89 CONTINUE                                                           VOPTRJ     73
C                                                                        VOPTRJ     74
      IF (IDCT .GT. 1)  GO TO 911                                        VOPTRJ     75
C                                                                        VOPTRJ     76
C     COMPUTE CRUISE DISTANCE, FUEL, TIME                                VOPTRJ     77
      IF( ISPLIZ .EQ. 0) GO TO 911                                       VOPTRJ     78
      IF( ITER .GT. 1) GO TO 95                                          VOPTRJ     79
      IF( IOPARM .NE. 0) GO TO 912                                       VOPTRJ     80
   80 DLDE1 = DLLDEE(1, IW)*ECRUZ + DLLDEE(2, IW)                        VOPTRJ     81
      DLDE2= DLLDEE(1, IW+1)*ECRUZ + DLLDEE(2, IW+1)                     VOPTRJ     82
      DLDE=DLDE1 + PFW*(DLDE2 - DLDE1)                                   VOPTRJ     83
      SCOST = SSCOST (LD)+PFD*(SSCOST(LD+1)-SSCOST(LD))                  VOPTRJ     84
   90 DCRUZ = ABS(SCOST/DLDE)                                            VOPTRJ     85
      GO TO 930                                                          VOPTRJ     86
  911 DCRUZ = RANGE - DCLMB - DDOWN                                      VOPTRJ     87
      IF (IDCT .LE. 1)  GO TO 91                                         VOPTRJ     88
      IF (DCRUZ .LE. 0.)  GO TO 912                                      VOPTRJ     89
   91 CONTINUE                                                           VOPTRJ     90
      IF (ITER .GT. 1) GO TO 931                                         VOPTRJ     91
      GO TO 930                                                          VOPTRJ     92
  912 DCRUZ = 0.                                                         VOPTRJ     93
      FCRULB = 0.                                                        VOPTRJ     94
      TCRUZ = 0.                                                         VOPTRJ     95
      EFCRUZ = 0.                                                        VOPTRJ     96
      IF ((IDCT .EQ. 3) .AND. (ITER .GT. 1)  )  GO TO 940                VOPTRJ     97
C                                                                        VOPTRJ     98
C     INITIAL CRUISE WEIGHT OR END CONDITION OF CLIMB                    VOPTRJ     99
C                                                                        VOPTRJ    100
      ENTRY VOP                                                          VOPTRJ    101
C                                                                        VOPTRJ    102
  930 IF( ITER .GT. 1) GO TO 931                                         VOPTRJ    103
      WCRUZI = WTO -  FCLMB                                              VOPTRJ    104
      WCRUZ = WCRUZI                                                     VOPTRJ    105
      ECRUZI = ECRUZ                                                     VOPTRJ    106
      IF (IMFD .EQ. 1)  GO TO 932                                        VOPTRJ    107
      CALL WLEFHV(3, ECRUZI, EF, PC, VGKNTI, VKTASI)                     VOPTRJ    108
      GO TO 933                                                          VOPTRJ    109
  932 VKTASI = SQRT(T2G*(ECRUZ-HCRUZ))/FS2KNT                            VOPTRJ    110
      VGKNTI = VKTASI + VWA/FS2KNT                                       VOPTRJ    111
  933 CONTINUE                                                           VOPTRJ    112
      HCRUZI = HCRUZ                                                     VOPTRJ    113
      FCRUZI = FCRUZ                                                     VOPTRJ    114
      LAMBDI = LAMBDA                                                    VOPTRJ    115
      CALL AT62(HCRUZI,ANS)                                              VOPTRJ    116
      MACHI = VKTASI * FS2KNT/(SQRRTG*SQRT(ANS(3) + DTEMPK))             VOPTRJ    117
      P = ANS(2)                                                         VOPTRJ    118
      VKIASI=2496.5*SQRT((((P/2116.22)*((1.+.2*MACHI*MACHI)              VOPTRJ    119
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             VOPTRJ    120
      IF (IDCT .GE. 1)  GO TO 931                                        VOPTRJ    121
      IF (ISPLIZ .EQ. 0)  GO TO 931                                      VOPTRJ    122
C          ** SERCHES FOR L SUCH THAT (TXL .LE. X .LE. TXL+1)            VOPTRJ    123
      IF( IOPARM .EQ. 1) GO TO 95                                        VOPTRJ    124
C                                                                        VOPTRJ    125
C     AVERAGE CRUISE WEIGHT FOR FUEL COMSUMPTION  COMPUTATION            VOPTRJ    126
  931 FCRULB= DCRUZ*FCRUZ/VGKNTI                                         VOPTRJ    127
      WCRUZA= WTO - FCLMB - FCRULB/2.                                    VOPTRJ    128
      WCRUZ = WCRUZA                                                     VOPTRJ    129
      IF (IMFD .EQ. 1)  GO TO 934                                        VOPTRJ    130
      CALL WLEFHV(3, ECRUZA, EF, PC, VGKNTA, VKTASA)                     VOPTRJ    131
      GO TO 935                                                          VOPTRJ    132
  934 CALL SERCHD(WS, WCRUZ, IWMAX, PF, IW, LIMIT)                       VOPTRJ    133
      FCRUZ = FBFF(IW) + PF*(FBFF(IW+1) - FBFF(IW))                      VOPTRJ    134
      ECRUZ = EBOPT(IW) + PF*(EBOPT(IW+1) - EBOPT(IW))                   VOPTRJ    135
      HCRUZ = HBFF(IW) + PF*(HBFF(IW+1) - HBFF(IW))                      VOPTRJ    136
      VKTASA = SQRT(T2G*(ECRUZ - HCRUZ))/FS2KNT                          VOPTRJ    137
      VGKNTA = VKTASA + VWA/FS2KNT                                       VOPTRJ    138
  935 CONTINUE                                                           VOPTRJ    139
      FCRULB = DCRUZ*FCRUZ  /VGKNTA                                      VOPTRJ    140
C                                                                        VOPTRJ    141
C     FINAL CRUISE WEIGHT OR END CONDITION FOR DESCEND                   VOPTRJ    142
   95 WCRUZF = WCRUZI - FCRULB                                           VOPTRJ    143
      WLANDG = WCRUZF - FDOWN                                            VOPTRJ    144
      WCRUZ = WCRUZF                                                     VOPTRJ    145
      IF (IMFD .EQ. 1)  GO TO 936                                        VOPTRJ    146
      CALL WLEFHV(3, ECRUZF, EF, PC, VGKNTF, VKTASF)                     VOPTRJ    147
      GO TO 937                                                          VOPTRJ    148
  936 CALL SERCHD(WS, WCRUZ, IWMAX, PF, IW, LIMIT)                       VOPTRJ    149
      FCRUZ = FBFF(IW) + PF*(FBFF(IW+1) - FBFF(IW))                      VOPTRJ    150
      ECRUZ = EBOPT(IW) + PF*(EBOPT(IW+1) - EBOPT(IW))                   VOPTRJ    151
      HCRUZ = HBFF(IW) + PF*(HBFF(IW+1) - HBFF(IW))                      VOPTRJ    152
      VKTASF = SQRT(T2G*(ECRUZ - HCRUZ))/FS2KNT                          VOPTRJ    153
      VGKNTF = VKTASF + VWA/FS2KNT                                       VOPTRJ    154
      ECRUZF = ECRUZ                                                     VOPTRJ    155
      EF = ECRUZ                                                         VOPTRJ    156
  937 CONTINUE                                                           VOPTRJ    157
      HCRUZF = HCRUZ                                                     VOPTRJ    158
      LAMBDF = LAMBDA                                                    VOPTRJ    159
      LAMBDA = LAMBDA / FS2KNT                                           VOPTRJ    160
      CALL AT62(HCRUZF,ANS)                                              VOPTRJ    161
      MACHF = VKTASF * FS2KNT/(SQRRTG*SQRT(ANS(3) + DTEMPK))             VOPTRJ    162
      P = ANS(2)                                                         VOPTRJ    163
      VKIASF=2496.5*SQRT((((P/2116.22)*((1.+.2*MACHF*MACHF)              VOPTRJ    164
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             VOPTRJ    165
      GO TO 945                                                          VOPTRJ    166
  940 CONTINUE                                                           VOPTRJ    167
      HCRUZI = HCRUZ                                                     VOPTRJ    168
      HCRUZF = HCRUZI                                                    VOPTRJ    169
      LAMBDI = LAMBDA                                                    VOPTRJ    170
      LAMBDF = LAMBDI                                                    VOPTRJ    171
      CALL AT62(HCRUZI, ANS)                                             VOPTRJ    172
      VWA = 0.                                                           VOPTRJ    173
      IF (IWIND .EQ. 0)  GO TO 941                                       VOPTRJ    174
      CALL WIND (HCRUZI, PSIA, VWA)                                      VOPTRJ    175
  941 VKTASI = SQRT (T2G * (ECRUZ - HCRUZ)) / FS2KNT                     VOPTRJ    176
      VGKNTI = VKTASI + VWA / FS2KNT                                     VOPTRJ    177
      MACHI = VKTASI * FS2KNT / ANS(4)                                   VOPTRJ    178
      P = ANS(2)                                                         VOPTRJ    179
      VKIASI=2496.5*SQRT((((P/2116.22)*((1.+.2*MACHI*MACHI)              VOPTRJ    180
     1    **3.5-1.)+1.)**(2./7.)-1.))/FS2KNT                             VOPTRJ    181
      FCRULB = DCRUZ * FCRUZ / VGKNTI                                    VOPTRJ    182
      WCRUZF = WCRUZI - FCRULB                                           VOPTRJ    183
      WLANDG = WCRUZF - FDOWN                                            VOPTRJ    184
      VKTASF = VKTASI                                                    VOPTRJ    185
      VKIASF = VKIASI                                                    VOPTRJ    186
      VGKNTF = VGKNTI                                                    VOPTRJ    187
      VGKNTA = VGKNTI                                                    VOPTRJ    188
      MACHF = MACHI                                                      VOPTRJ    189
      HCRUZF = HCRUZI                                                    VOPTRJ    190
      ECRUZF = ECRUZI                                                    VOPTRJ    191
  945 CONTINUE                                                           VOPTRJ    192
C                                                                        VOPTRJ    193
C                                                                        VOPTRJ    194
C     PRINT OUT CRUISE DATA                                              VOPTRJ    195
      CALL PAGE                                                          VOPTRJ    196
      WRITE(6, 106)                                                      VOPTRJ    197
  106 FORMAT(1H0 15X, "INITIAL"6X,"FINAL" 20X,"INITIAL"9X,"FINAL"/       VOPTRJ    198
     1 1H 14X, "CRUISE"6X, "CRUISE" 22X, "CRUISE" 8X, "CRUISE")          VOPTRJ    199
      WRITE(6, 107) WCRUZI, WCRUZF, VKTASI, VKTASF, LAMBDI, LAMBDF,      VOPTRJ    200
     1 VKIASI, VKIASF, ECRUZI, ECRUZF, VGKNTI, VGKNTF,HCRUZI,HCRUZF,     VOPTRJ    201
     2 MACHI, MACHF                                                      VOPTRJ    202
  107 FORMAT(1H0 "WEIGHT(LB)" F11.0, F12.0, 6X, "TAS" F18.0, F14.0/      VOPTRJ    203
     11H "COST($/NM)" F11.3, F12.3, 6X, "IAS" F18.2, F14.2/1H            VOPTRJ    204
     2 "ENERGY(FT)" F11.0, F12.0, 6X, "GR SP KN" F13.2, F14.2/1H         VOPTRJ    205
     3"ALTITUDE" F13.0,F12.0, 6X, "MACH NO" F14.5, F14.5)                VOPTRJ    206
C                                                                        VOPTRJ    207
C                                                                        VOPTRJ    208
C                                                                        VOPTRJ    209
      IF( DCRUZ .EQ. 0.) GO TO 950                                       VOPTRJ    210
      EFCRUZ =FCRULB/DCRUZ                                               VOPTRJ    211
      TCRUZ = DCRUZ*T3600/VGKNTA                                         VOPTRJ    212
  950 TFUEL = FCLMB + FDOWN + FCRULB                                     VOPTRJ    213
      TDIST = DCLMB + DDOWN + DCRUZ                                      VOPTRJ    214
      TTIME = TCLMB + TDOWN + TCRUZ                                      VOPTRJ    215
      EFFCNZ = TFUEL/TDIST                                               VOPTRJ    216
      WRITE(6, 100)                                                      VOPTRJ    217
  100 FORMAT(1H0 14X, "FUEL USED(LB)    DISTANCE(N M)   HR%MIN%SEC",     VOPTRJ    218
     *  "  COST($)      $/NM " )                                         VOPTRJ    219
      CALL WRITE1(FCLMB, TCLMB, DCLMB, "CLIMB   ")                       VOPTRJ    220
      CALL WRITE1(FDOWN, TDOWN, DDOWN, "DESCEND ")                       VOPTRJ    221
      CALL WRITE1(FCRULB, TCRUZ, DCRUZ, "CRUISE  ")                      VOPTRJ    222
      CALL WRITE1(TFUEL, TTIME, TDIST, "TOTAL   ")                       VOPTRJ    223
      WRITE(6, 105) WLANDG                                               VOPTRJ    224
  105 FORMAT(1H0 "LANDING WEIGHT = " F10.0)                              VOPTRJ    225
      WRITE(6, 108) EFCRUZ, EFFCNZ                                       VOPTRJ    226
  108 FORMAT(1H0 "CRUISE AND OVERALL EFFICIENCY" 2F10.3, "LB/NM")        VOPTRJ    227
      RETURN                                                             VOPTRJ    228
      END                                                                VOPTRJ    229
C                  ********** NEW ROUTINE **********                $$$$ WATEST      2
      SUBROUTINE WATEST(ECRUZ, WLNDG, RANGE, INIT, PC, IOPARM, IDCT,     WATEST      3
     1   IMFD)                                                           WATEST      4
C                                                                        WATEST      5
C          ** ESTIMATES CLIMB AND DECEND FUEL AND LANDING WEIGHT.        WATEST      6
C                                                                        WATEST      7
      REAL LLCRUZ                                                        WATEST      8
C                                                                        WATEST      9
      DIMENSION DNFUEL(3), DCOEF(5)                                      WATEST     10
      COMMON /CRURNG/ECRUZX, FCRUZ, HCRUZ, IL1, IL2, IW, PFW             WATEST     11
      COMMON/EXTRA/DUM(1514),HBFF(11),FBFF(11),DUM2(22),EBOPT(11)        WATEST     12
      COMMON /IO/ ANS(4), WS(11), DUM3(115), IWMAX, DUM4(7)              WATEST     13
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    WATEST     14
     1 DLLDEE(2,10), IWMAXX, WTO, WCRUZ, CRUZCT, HHCRUZ(50,10),          WATEST     15
     1 FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                         WATEST     16
      COMMON/VUPDWN/EECLMB(200),FFCLMB(200),DDCLMB(200),EEDOWN(200)      WATEST     17
     1,FFDOWN(200),DDDOWN(200),SSCOST(200),JCLIMB,JDESCN,TTCLMB(200)     WATEST     18
     2,TTDOWN(200)                                                       WATEST     19
      DATA DCOEF/115.8777, -15.07233, 8.081622E-1, -1.865838E-2,         WATEST     20
     1 1.527675E-4/                                                      WATEST     21
      DATA DNFUEL/689.89, -1.28974,-.111423/                             WATEST     22
C                                                                        WATEST     23
C                                                                        WATEST     24
      IF (IMFD.EQ.1) GO TO 76                                            WATEST     25
      IF (IDCT .EQ. 1)  GO TO 65                                         WATEST     26
      IF (IOPARM .EQ. 0)  GO TO 80                                       WATEST     27
   65 CONTINUE                                                           WATEST     28
      ECRUZX = ECRUZ                                                     WATEST     29
      IF( ECRUZX .GT. EECLMB(JCLIMB)) ECRUZX = EECLMB(JCLIMB)            WATEST     30
      CALL SERCH1(EECLMB, ECRUZX,JCLIMB, PF, L, LIMIT)                   WATEST     31
      FCLMB = FFCLMB(L) + PF*(FFCLMB(L+1) - FFCLMB(L))                   WATEST     32
      IF (IDCT .EQ. 1)  GO TO 81                                         WATEST     33
      FDOWN = (DNFUEL(3)*PC +DNFUEL(2))*PC + DNFUEL(1)                   WATEST     34
   75 WLNDG = WTO - FCLMB - FDOWN                                        WATEST     35
      RETURN                                                             WATEST     36
C   CRUISE AND DESCENT WEIGHT ESTIMATES FOR MINIMUM FUEL RATE CRUISE     WATEST     37
   76 CONTINUE                                                           WATEST     38
      DCRUZ = RANGE - 150.                                               WATEST     39
      VGKNT = SQRT(64.4 *(ECRUZ -HCRUZ))*3600./6080.                     WATEST     40
      FCRULB = DCRUZ *FCRUZ/VGKNT                                        WATEST     41
      CALL SERCH1(EECLMB,ECRUZ,JCLIMB,PF,L,LIMIT)                        WATEST     42
      FCLMB = FFCLMB(L) + PF *(FFCLMB(L+1)-FFCLMB(L))                    WATEST     43
      FDOWN = DNFUEL(1)                                                  WATEST     44
      WLNDG = WTO - FCLMB - FDOWN - FCRULB                               WATEST     45
      WCRUZ = WLNDG + FDOWN                                              WATEST     46
      CALL SERCHD(WS, WCRUZ, IWMAX, PF, IW, LIMIT)                       WATEST     47
      HCRUZ = HBFF(IW) + PF * (HBFF(IW+1) - HBFF(IW))                    WATEST     48
      ECRUZ = EBOPT(IW) + PF * (EBOPT(IW+1) - EBOPT(IW))                 WATEST     49
      FCRUZ = FBFF(IW) + PF * (FBFF(IW+1) - FBFF(IW))                    WATEST     50
      RETURN                                                             WATEST     51
C                                                                        WATEST     52
C                                                                        WATEST     53
   80 DCRUZ = POLYE1(PC, 5, DCOEF)                                       WATEST     54
      GO TO 82                                                           WATEST     55
   81 CONTINUE                                                           WATEST     56
      DCRUZ = RANGE - 100.                                               WATEST     57
       CALL WLEFHV(1, ECRUZ, EF, PC, VGKNT, VCKTAS)                      WATEST     58
      GO TO 83                                                           WATEST     59
   82 CALL WLEFHV(3, ECRUZ, EF, PC, VGKNT, VCKTAS)                       WATEST     60
      ECRUZX = ECRUZ                                                     WATEST     61
      IF (ECRUZX .GT. EECLMB(JCLIMB))  ECRUZX = EECLMB(JCLIMB)           WATEST     62
      CALL SERCH1(EECLMB, ECRUZX, JCLIMB, PF, L, LIMIT)                  WATEST     63
      FCLMB = FFCLMB(L) + PF*(FFCLMB(L+1) - FFCLMB(L))                   WATEST     64
   83 FCRULB = DCRUZ * FCRUZ / VGKNT                                     WATEST     65
      FDOWN = (DNFUEL(3)*PC +DNFUEL(2))*PC + DNFUEL(1)                   WATEST     66
      WLNDG = WTO - FCRULB - FDOWN - FCLMB                               WATEST     67
      IF (IDCT .NE. 1)  RETURN                                           WATEST     68
      WCRUZ = WTO - FCLMB - FCRULB                                       WATEST     69
      CALL WLEFHV(1, ECRUZ, EF, PC, VGKNT, VCKTAS)                       WATEST     70
      RETURN                                                             WATEST     71
      END                                                                WATEST     72
C                   ******  NEW ROUTINE  ******                          WCEST       2
      SUBROUTINE WCEST(EF,HCRU,PC,IDCT)                                  JULY24      5
C                                                                        WCEST       4
C   COMPUTE CLIMB FUEL, INITIAL CRUISE WEIGHT, AND CRUISE COST FOR FIXED WCEST       5
C      CRUISE ALTITUDE HCRU                                              WCEST       6
C                                                                        WCEST       7
      IMPLICIT REAL(M)                                                   WCEST       8
      REAL K1,K2,LLCRUZ,LAMBDA,LAMS,LAMBS                                WCEST       9
C                                                                        WCEST      10
      COMMON /ACFT/ IAC, SAC, HMAX                                       WCEST      11
      COMMON /COST/ EPR, ICOST, FC, TC, DTEMPK, W, FUELDT, FFLOW         WCEST      12
      COMMON /CRURNG/ ECRUZ,FCRUZ,HCRUZ,IL1,IL2,IW,PFW                   WCEST      13
      COMMON /ENERGY/ LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS,MXVTAS,VTAS2    WCEST      14
      COMMON /IO/ ANS(4),WS(11),EOPTS(11),HSTARS(11),MSTARS(11),         WCEST      15
     1  PISTRS(11),LAMBS(11),VTASOP(11),FUELFL(11),CRDIST(11),           WCEST      16
     2  CRTIME(11),MNCOST(2),MOPIAS(2),MOPTAS(2),MACHOP(2),FDTOPT(2),    WCEST      17
     3  OPTALT(2),HOPT(2),EPRS(2),IWMAX,IOPARM,HTO,VTO,HOLNDG,VOLNDG,    WCEST      18
     4  ETO,DEIN                                                         WCEST      19
      COMMON /VTRCRU/ WSS(10),JJCRUZ(10),LLCRUZ(50,10),EECRUZ(50,10),    WCEST      20
     1  DLLDEE(2,10),IWMAXX,WTO,WCRUZ,CRUZCT,HHCRUZ(50,10),              WCEST      21
     2  FFCRUZ(50,10),JLAST1,JLAST2,EPCRUZ(50,10)                        WCEST      22
C                                                                        WCEST      23
      DATA EVOPT1,VOPT1,EVOPT2,VOPT2 / .1130,.1079,6.1463E-6,            WCEST      24
     1  4.6849E-6 /                                                      WCEST      25
      DATA FS2KNT, G / 1.68781, 32.2 /                                   WCEST      26
C                                                                        WCEST      27
      WCRUZ = WTO                                                        WCEST      28
      IF (IDCT.EQ.3) GO TO 40                                            JULY24      6
      FULST1 = 0.                                                        WCEST      29
      IF (IOPARM .NE. 0)  GO TO 10                                       WCEST      30
      K1 = VOPT1                                                         WCEST      31
      K2 = 1. + (TC / FC) * VOPT2                                        WCEST      32
      GO TO 20                                                           WCEST      33
   10 K1 = EVOPT1                                                        WCEST      34
      K2 = 1. + (TC / FC) * EVOPT2                                       WCEST      35
   20 CALL SERCHD(WSS, WCRUZ, IWMAXX, PFW, IW, LIMIT)                    WCEST      36
      JJIW = JJCRUZ(IW)                                                  WCEST      37
      DO 30 J = 1, JJIW                                                  WCEST      38
   30 IF (HHCRUZ(J,IW) .EQ. HCRU)  IH = J                                WCEST      39
      HCRUZ = HCRU                                                       WCEST      40
      LAMBDA = LLCRUZ(IH,IW) + PFW *(LLCRUZ(IH,IW+1)-LLCRUZ(IH,IW))      WCEST      41
      ECRUZ = EECRUZ(IH,IW) + PFW*(EECRUZ(IH,IW+1)-EECRUZ(IH,IW))        WCEST      42
      EF = ECRUZ                                                         WCEST      43
      FULEST = K1 * K2 * WTO * (ECRUZ-ETO) / 136000.                     WCEST      44
      IF(IAC.EQ.3)FULEST=(.0029E-9*WTO+.3625E-6)*(ECRUZ-ETO)*WTO         WCEST      45
      WCRUZ = WTO - FULEST                                               WCEST      46
      IF (ABS(FULEST-FULST1) .LE. 100)  GO TO 40                         WCEST      47
      FULST1 = FULEST                                                    WCEST      48
      GO TO 20                                                           WCEST      49
   40 CONTINUE                                                           WCEST      50
      CALL SERCHD(WS, WCRUZ, IWMAX, PFW, IW, LIMIT)                      WCEST      51
      CALL AT62(HCRU,ANS)                                                WCEST      52
      TEMPK = ANS(3) + DTEMPK                                            WCEST      53
      A = 65.76 * SQRT(TEMPK)                                            WCEST      54
      DO 60 I=1,IWMAX                                                    WCEST      55
      JJIW = JJCRUZ(I)                                                   WCEST      56
      DO 50 J=1,JJIW                                                     WCEST      57
   50 IF (HHCRUZ(J,I)  .EQ. HCRU)  IH = J                                WCEST      58
      EOPTS(I) = EECRUZ(IH,I)                                            WCEST      59
      HSTARS(I) = HHCRUZ(IH,I)                                           WCEST      60
      LAMBS(I) = LLCRUZ(IH,I)                                            WCEST      61
      FUELFL(I)= FFCRUZ(IH,I)                                            WCEST      62
      VTASOP(I) = SQRT((EOPTS(I) - HSTARS(I))*2.*G) / FS2KNT             WCEST      63
      MSTARS(I) = VTASOP(I) * FS2KNT / A                                 WCEST      64
   60 PISTRS(I) = EPCRUZ(IH,I)                                           WCEST      65
      RETURN                                                             WCEST      66
      END                                                                WCEST      67
      SUBROUTINE WCFM2(WTO, WCRUZ, HCRU, IDCT)                           WCFM2       2
C                                                                        WCFM2       3
C   ESTIMATE FUEL BURNED TO FLY TO CRUISE ALTITUDE WHERE FUEL            WCFM2       4
C     BURN RATE IS MINIMUM.                                              WCFM2       5
C                                                                        WCFM2       6
      IF (IDCT .GT. 1)  GO TO 50                                         WCFM2       7
      IF (WTO .GE. 135000.)  GO TO 25                                    WCFM2       8
      WUP = ((WTO - 120000.)*800. / 15000.) + 3500.                      WCFM2       9
      GO TO 100                                                          WCFM2      10
   25 CONTINUE                                                           WCFM2      11
      WUP = ((WTO - 135000.)*400. / 15000.) + 4300.                      WCFM2      12
      GO TO 100                                                          WCFM2      13
   50 WCRUZ = WTO                                                        WCFM2      14
      GO TO 200                                                          WCFM2      15
  100 CONTINUE                                                           WCFM2      16
      WCRUZ = WTO - WUP                                                  WCFM2      17
  200 RETURN                                                             WCFM2      18
      END                                                                WCFM2      19
C                  ********** NEW ROUTINE **********                $$$$ WIND        2
      SUBROUTINE WIND(H, PSIA, VWA)                                      WIND        3
C                                                                        WIND        4
C          ** INTERPOLATES THE COMPONENT OF WIND PROJECTED ALONG THE     WIND        5
C          **   PRINCIPAL AIRCRAFT AXIS AS A FUNCTION OF ALTITUDE        WIND        6
C          **   AND HEADING.                                             WIND        7
C                                                                        WIND        8
      COMMON/WINDTD/HWIND(24), VW(24), PSIW(24)                          WIND        9
C                                                                        WIND       10
C                                                                        WIND       11
   80 CALL SERCH1(HWIND, H, 24, PF, I, LIMIT)                            WIND       12
      VWA = VW(I) + PF* (VW(I+1) - VW(I))                                WIND       13
      PSIWA = PSIW(I) + PF*( PSIW(I+1) - PSIW(I))                        WIND       14
      A =(PSIA - PSIWA)/57.29578                                         WIND       15
      VWA =VWA*COS(A)                                                    WIND       16
      RETURN                                                             WIND       17
      END                                                                WIND       18
C                  ********** NEW ROUTINE **********                $$$$ WINDIN      2
      SUBROUTINE WINDIN                                                  WINDIN      3
C                                                                        WINDIN      4
C                                                                        WINDIN      5
C          ** READS IN AND MODIFIES THE WIND PROFILE.                    WINDIN      6
C                                                                        WINDIN      7
      COMMON/WINDTD/HWIND(24), VW(24), PSIW(24)                          WINDIN      8
C                                                                        WINDIN      9
C                                                                        WINDIN     10
   80 HWIND(1) = 0.                                                      WINDIN     11
      DO 100 I= 1, 23                                                    WINDIN     12
  100 HWIND(I+1) = HWIND(I) + 2000.                                      WINDIN     13
      READ(7, 90) (PSIW(I), VW(I), I= 1, 24)                             WINDIN     14
   90 FORMAT (13 (F3.0, F3.1) )                                          WINDIN     15
      WRITE(6, 101)                                                      WINDIN     16
  101 FORMAT(10H0WIND DATA  /                                            WINDIN     17
     1      43H ALT(FT),  VW(KNOTS), VW(FT/SEC), PSIW(DEG) )             WINDIN     18
      DO 103 I= 1,24                                                     WINDIN     19
      WIND = VW(I)                                                       WINDIN     20
      VW(I) = VW(I) *1.68781                                             WINDIN     21
      IF (PSIW(I) .LT. 0)  PSIW(I) = PSIW(I) + 360.                      WINDIN     22
  103 WRITE(6, 102) HWIND(I), WIND, VW(I), PSIW(I)                       WINDIN     23
  102 FORMAT(1H  F10.0, 2F10.2, F10.0)                                   WINDIN     24
      DO 105 I=1,24                                                      WINDIN     25
      PSIW(I) = PSIW(I) + 180.                                           WINDIN     26
  105 PSIW(I) = AMOD (PSIW(I),360.)                                      WINDIN     27
      CALL PAGE                                                          WINDIN     28
      RETURN                                                             WINDIN     29
      END                                                                WINDIN     30
C                  ********** NEW ROUTINE **********                $$$$ WLEFHV      2
      SUBROUTINE WLEFHV(I, ECRUZX, EF, PC, VGKNT, VCKTAS)                WLEFHV      3
C                                                                        WLEFHV      4
C          ** COMPUTES ENERGY AND LAMDA FOR A GIVEN WEIGHT;              WLEFHV      5
C          **   OR, FUEL RATE, ALTITUDE, AND VG FOR A GIVEN LAMBDA;      WLEFHV      6
C          **   OR, A COMBINATION OF THESE.                              WLEFHV      7
C                                                                        WLEFHV      8
      REAL LLCRUZ, LAMBDA, LAMBD1, LAMBD2,LAMBDX,LAMBS                   WLEFHV      9
      COMMON /CRURNG/ ECRUZ, FCRUZ, HCRUZ, IL1, IL2, IW, PFW             WLEFHV     10
      COMMON/ENERGY/LAMBDA,E,EDOT,FF,IGRND,ITHS,MNVTAS, MXVTAS,VTAS2     WLEFHV     11
      COMMON /IO/ ANS(4), WS(11), EOPTS(11), HSTARS(11), MSTARS(11),     WLEFHV     12
     1 PISTRS(11), LAMBS(11), VTASOP(11), FUELFL(11), CRDIST(11),        WLEFHV     13
     2CRTIME(11), MNCOST(2), MOPIAS(2), MOPTAS(2), MACHOP(2), FDTOPT(2), WLEFHV     14
     3  OPTALT(2),HOPT(2),EPRS(2),IWMAX,IOPARM,FILL(5),DEIN              WLEFHV     15
      COMMON/VTRCRU/WSS(10), JJCRUZ(10), LLCRUZ(50,10),EECRUZ(50,10),    WLEFHV     16
     1 DLLDEE(2, 10),IWMAXX, WTO, WCRUZ ,CRUZCT,HHCRUZ(50,10),           WLEFHV     17
     1 FFCRUZ(50,10),JLAST1, JLAST2                                      WLEFHV     18
      COMMON /ACFT/ IAC, SAC, HMAX                                       WLEFHV     19
      COMMON /WINDY/IWIND, PSIA, VWA                                     WLEFHV     20
      DATA T2G,FT2KNT/64.4, 1.68781/                                     WLEFHV     21
C                                                                        WLEFHV     22
C                                                                        WLEFHV     23
C                                                                        WLEFHV     24
C                                                                        WLEFHV     25
C                                                                        WLEFHV     26
   80 FPC = (100.+ PC)/100.                                              WLEFHV     27
      IF (FPC .LE. 1.001)  GO TO 200                                     WLEFHV     28
C                                                                        WLEFHV     29
C                                                                        WLEFHV     30
C     COMPUTE NEW LAMBDA(WCRUZ) AND ECRUZ(LAMBDA)                        WLEFHV     31
  101 CALL SERCHD (WSS, WCRUZ, IWMAXX, PFW, IW, LIMIT)                   WLEFHV     32
      JLAST1 = JTRUNC(LLCRUZ(1,IW), JJCRUZ(IW))                          WLEFHV     33
      JLAST2 = JTRUNC(LLCRUZ(1,IW+1), JJCRUZ(IW+1))                      WLEFHV     34
   81 LAMBD1 = LLCRUZ(JLAST1,IW)*FPC                                     WLEFHV     35
      LAMBD2 = LLCRUZ(JLAST2, IW+1)*FPC                                  WLEFHV     36
      LAMBDA = LAMBD1 + PFW*(LAMBD2 - LAMBD1)                            WLEFHV     37
   82 CALL SERCHD(LLCRUZ(1,IW),LAMBD1, JLAST1, PF1,IL1, LIMIT)           WLEFHV     38
      ECRUZ1 = EECRUZ(IL1, IW) +PF1*(EECRUZ(IL1 +1, IW) -EECRUZ(IL1,IW)) WLEFHV     39
      CALL SERCHD(LLCRUZ(1,IW+1), LAMBD2, JLAST2,PF2,IL2,LIMIT)          WLEFHV     40
      ECRUZ2 = EECRUZ(IL2,IW+1)+PF2*(EECRUZ(IL2+1,IW+1) -EECRUZ(IL2,     WLEFHV     41
     1 IW+1))                                                            WLEFHV     42
      ECRUZ = ECRUZ1 + PFW*(ECRUZ2- ECRUZ1)                              WLEFHV     43
      EOPTMX = EOPTS(IW) + PFW*(EOPTS(IW+1) - EOPTS(IW))                 WLEFHV     44
      IF (PC .LE. 0.5)  GO TO 99                                         WLEFHV     45
      EF = ECRUZ + 100.                                                  WLEFHV     46
      GO TO 100                                                          WLEFHV     47
   99 EF = EOPTMX                                                        WLEFHV     48
  100 ECRUZX = ECRUZ                                                     WLEFHV     49
C                                                                        WLEFHV     50
C                                                                        WLEFHV     51
C     COMPUTE (FDOT, H, VKTAS) AS FUNCTION OF LAMBDA                     WLEFHV     52
  102 FCRUZ1 = FFCRUZ(IL1, IW) +PF1*(FFCRUZ(IL1 +1, IW) -FFCRUZ(IL1,IW)) WLEFHV     53
      HCRUZ1 = HHCRUZ(IL1, IW) +PF1*(HHCRUZ(IL1 +1, IW) -HHCRUZ(IL1,IW)) WLEFHV     54
      FCRUZ2 = FFCRUZ(IL2,IW+1)+PF2*(FFCRUZ(IL2+1,IW+1) -FFCRUZ(IL2,     WLEFHV     55
     1 IW+1))                                                            WLEFHV     56
      HCRUZ2 = HHCRUZ(IL2,IW+1)+PF2*(HHCRUZ(IL2+1,IW+1) -HHCRUZ(IL2,     WLEFHV     57
     1 IW+1))                                                            WLEFHV     58
      FCRUZ = FCRUZ1 + PFW*(FCRUZ2- FCRUZ1)                              WLEFHV     59
      HCRUZ = HCRUZ1 + PFW*(HCRUZ2- HCRUZ1)                              WLEFHV     60
C                                                                        WLEFHV     61
  91  VCKTAS = SQRT(T2G *(ECRUZ - HCRUZ))/FT2KNT                         WLEFHV     62
      GO TO 203                                                          WLEFHV     63
  200 CONTINUE                                                           WLEFHV     64
C                                                                        WLEFHV     65
C          COMPUTE NEW LAMBDA(WCRUZ) AND ECRUZ(LAMBDA)                   WLEFHV     66
C                                                                        WLEFHV     67
  201 CALL SERCHD(WS, WCRUZ, IWMAX, PFW, IW, LIMIT)                      WLEFHV     68
      LAMBDA = LAMBS(IW) + PFW * (LAMBS(IW+1) - LAMBS(IW))               WLEFHV     69
      ECRUZ = EOPTS(IW) + PFW * (EOPTS(IW+1) - EOPTS(IW) )               WLEFHV     70
      EF = ECRUZ                                                         WLEFHV     71
      ECRUZX = ECRUZ                                                     WLEFHV     72
C                                                                        WLEFHV     73
C          COMPUTE (FDOT, H, VKTAS) AS FUNCTION OF LAMBDA                WLEFHV     74
C                                                                        WLEFHV     75
  202 FCRUZ = FUELFL(IW) + PFW * (FUELFL(IW+1) - FUELFL(IW))             WLEFHV     76
      HCRUZ = HSTARS(IW) + PFW * (HSTARS(IW+1) - HSTARS(IW))             WLEFHV     77
      VCKTAS = SQRT (T2G * (ECRUZ - HCRUZ)) / FT2KNT                     WLEFHV     78
  203 VWA = 0.                                                           WLEFHV     79
      IF (IWIND .EQ. 0)   GO TO 204                                      WLEFHV     80
      CALL WIND (HCRUZ, PSIA, VWA)                                       WLEFHV     81
  204 VGKNT = VCKTAS + VWA / FT2KNT                                      WLEFHV     82
      RETURN                                                             WLEFHV     83
      END                                                                WLEFHV     84
C                  ********** NEW ROUTINE **********                $$$$ WRITE1      2
      SUBROUTINE WRITE1(FUEL, TIME, DIST, LABEL)                         WRITE1      3
C                                                                        WRITE1      4
C      ** COMPUTES THE OPTIMIZATION RESULTS AND WRITES THEM OUT.         WRITE1      5
C                                                                        WRITE1      6
      COMMON /COST/ THS, ICOST, FC, TC, DTEMPK, WX, FUELDT, FFLOW        WRITE1      7
      DATA T3600/3600./                                                  WRITE1      8
C                                                                        WRITE1      9
C                                                                        WRITE1     10
   83 COST = FC*FUEL + TC*TIME/T3600                                     WRITE1     11
      IF( DIST .EQ. 0.) GO TO 91                                         WRITE1     12
      DOLRNM = COST/DIST                                                 WRITE1     13
      GO TO 92                                                           WRITE1     14
   91 DOLRNM = 0.                                                        WRITE1     15
   92 CALL ICLOCK(TIME, IHR, IMIN, ISEC)                                 WRITE1     16
      WRITE(6, 101) LABEL, FUEL, DIST, IHR, IMIN, ISEC,                  WRITE1     17
     1 COST, DOLRNM                                                      WRITE1     18
  101 FORMAT(1H0  A8, 2F16.2, 7X, 2(I2, "%"), I2, 2F11.2)                WRITE1     19
      RETURN                                                             WRITE1     20
      END                                                                WRITE1     21
C                  ********** NEW ROUTINE **********                $$$$ XTRPL1      2
      FUNCTION  XTRPL1(A1, A2, A, B1, B2)                                XTRPL1      3
C                                                                        XTRPL1      4
C          ** EXTRAPOLATES TO A POINT BELOW THE LOWEST POINT IN THE      XTRPL1      5
C          **  ARRAY.                                                    XTRPL1      6
C                                                                        XTRPL1      7
      XTRPL1 = B2 - (A2-A)*(B2-B1)/(A2-A1)                               XTRPL1      8
      RETURN                                                             XTRPL1      9
      END                                                                XTRPL1     10
C                  ********** NEW ROUTINE **********                $$$$ XTRPL2      2
      FUNCTION XTRPL2(AN1, AN, A, BN1, BN)                               XTRPL2      3
C                                                                        XTRPL2      4
C          ** EXTRAPOLATES TO A POINT ABOVE THE HIGHEST POINT IN THE     XTRPL2      5
C          ** ARRAY.                                                     XTRPL2      6
C                                                                        XTRPL2      7
      XTRPL2 = BN1 + (A-AN1)*(BN-BN1)/(AN-AN1)                           XTRPL2      8
      RETURN                                                             XTRPL2      9
      END                                                                XTRPL2     10
      SUBROUTINE WCLST(PC, RANGE, TDIST)                                 WCLST       2
     1,    RETURNS(R2)                                                   WCLST       3
C                                                                        WCLST       4
C   THIS SUBROUTINE IS USED TO COMPUTE CLIMB, CRUISE, AND DESCENT SEG-   WCLST       5
C     MENTS FOR THE FIXED THRUST CASE (IVPI = 0) WHERE THE VALUE OF      WCLST       6
C     LAMBDA IS VERY CLOSE TO THE OPTIMUM VALUE.                         WCLST       7
C                                                                        WCLST       8
      COMMON /VUPDWN/ EECLMB(200),FFCLMB(200),DDCLMB(200),EEDOWN(200)    WCLST       9
     1, FFDOWN(200),DDDOWN(200),SSCOST(200),JCLIMB,JDESCN,TTCLMB(200)    WCLST      10
     2, TTDOWN(200)                                                      WCLST      11
      COMMON /CRURNG/ ECRUZ, FCRUZ, HCRUZ, IL1, IL2, IW, PFW             WCLST      12
      COMMON /EXTRAP/ FCLMB, TCLMB, DCLMB, FDOWN, TDOWN, DDOWN, DCRUZ    WCLST      13
C                                                                        WCLST      14
      FC1   = FCLMB                                                      WCLST      15
      TC1   = TCLMB                                                      WCLST      16
      DC1   = DCLMB                                                      WCLST      17
      FD1   = FDOWN                                                      WCLST      18
      TD1   = TDOWN                                                      WCLST      19
      DD1   = DDOWN                                                      WCLST      20
C                                                                        WCLST      21
      FCLMB = FFCLMB(JCLIMB)                                             WCLST      22
      TCLMB = TTCLMB(JCLIMB)                                             WCLST      23
      DCLMB = DDCLMB(JCLIMB)                                             WCLST      24
      FDOWN = FFDOWN(JDESCN)                                             WCLST      25
      TDOWN = TTDOWN(JDESCN)                                             WCLST      26
      DDOWN = DDDOWN(JDESCN)                                             WCLST      27
      PC1   = PC                                                         WCLST      28
      ECRUZ1= ECRUZ                                                      WCLST      29
      ECRUZ = EECLMB(JCLIMB)                                             WCLST      30
      TDIST1= TDIST                                                      WCLST      31
C                                                                        WCLST      32
      WRITE(6,1000)                                                      WCLST      33
 1000 FORMAT(1H0, 5X, 27HSPECIAL OUTPUT WITH PC = 0 )                    WCLST      34
      PC = 0.                                                            WCLST      35
      ITER = 1                                                           WCLST      36
      CALL VOP(WLANDG,TDIST,PC,LAMBDX,ISPLIZ,RANGE,IOPARM,EF,            WCLST      37
     1    ITER, IDCT, TTIME, IMFD, IPC)                                  WCLST      38
      IF (RANGE .GT. (TDIST + 5.)) RETURN                                WCLST      39
      IF (RANGE .GT. (TDIST-5.)) RETURN R2                               WCLST      40
      IF (RANGE .GT. (TDIST - 5.)) RETURN R2                             WCLST      41
      RATIO = (RANGE - TDIST1)/(TDIST - TDIST1)                          WCLST      42
      FCLMB = FC1 + RATIO*(FCLMB-FC1)                                    WCLST      43
      TCLMB = TC1 + RATIO * (TCLMB-TC1)                                  WCLST      44
      DCLMB = DC1 + RATIO * (DCLMB-DC1)                                  WCLST      45
      FDOWN = FD1 + RATIO * (FDOWN - FD1)                                WCLST      46
      TDOWN = TD1 + RATIO * (TDOWN - TD1)                                WCLST      47
      DDOWN = DD1 + RATIO * (DDOWN - DD1)                                WCLST      48
      PC = (1. - RATIO) * PC1                                            WCLST      49
      ECRUZ = ECRUZ1 + RATIO * (ECRUZ-ECRUZ1)                            WCLST      50
      WRITE(6,1001) PC                                                   WCLST      51
 1001 FORMAT(1H0, 5X, 30HINTERPOLATED OUTPUT WITH PC= ,F5.2)             WCLST      52
      CALL VOP(WLANDG,TDIST,PC,LAMBDX,ISPLIZ,RANGE,IOPARM,EF,            WCLST      53
     1  ITER, IDCT, TTIME, IMFD, IPC)                                    WCLST      54
      RETURN R2                                                          WCLST      55
      END                                                                WCLST      56
*C%%A5
