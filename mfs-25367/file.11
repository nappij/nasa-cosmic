C
      SUBROUTINE ADPCM (IV, X, IOUT)
C
C **********************************************************************
C     ADPCM PERFORMS AN ADAPTIVE 2-D DPCM ON AN IMAGE 16*N PIXELS WIDE.
C     THERE IS NO RESTRICTION ON THE NUMBER OF LINES IN THE IMAGE.
C     INPUT IMAGE IS PROCESSED ONE BAND AT A TIME
C
C        NPL   = NUMBER OF PIXELS PER LINE (16*N)
C        NLINE = NUMBER OF LINES
C        NBPL  = NUMBER OF BLOCKS PER LINE
C        BLK   = NUMBER OF PIXELS PER BLOCK
C        IBIT  = APPROXIMATE BIT RATE
C
C     LOGICAL UNITS
C       10 - INPUT PICTURE (BYTES)
C       NB - RECONSTRUCTED BAND NO. NB (BYTES)
C **********************************************************************
C
      DIMENSION IV(4,NPL), X(2,NPL), IOUT(NPL), A(3)
      LOGICAL*1 IV, IOUT
      INTEGER BLK /16/
      REAL MAXP,MINP,MAX(4)/3*127.0,63.0/,MIN(4)/4*0.0/
      COMMON NB, NLINE, IBIT, NPL
      DATA GAIN /2.5/, CONH, CONV /2*1.0/, A /0.75, 0.75, -0.5/
C
C     INITIALIZE COUNTERS, SET IMAGE PARAMETERS
      ISUM1=0
      ISUM2=0
      NBPL = NPL/BLK
      MAXP = MAX(NB)
      MINP = MIN(NB)
C
C     THE FIRST LINE OF THE DATA IS HANDLED SEPARATELY.
C     READ THE FIRST LINE OF DATA INTO ARRAY IV, PICK OFF THE DESIRED
C     BAND AND STORE IT IN X(1,J)
      READ (10) IV
      DO 120 J=1,NPL
      IIV = IV(NB,J)
      X(1,J) = IIV
      ISUM1 = ISUM1 + IIV
  120 CONTINUE
C
C     CALCULATE QUANTIZER LEVEL AND SCALING FOR THE FIRST POINT.
      LEVEL=2**(IBIT-1)
      SDE=MAXP/GAIN
      CALL DSQ (GAIN, SDE)
C
C     CALCULATE THE REPRESENTATIVE VALUE FOR THE FIRST PIXEL
      F = X(1,1)
      CALL QUAN (F, LEVEL, EQ)
      X(1,1) = EQ
C
C     CALCULATE VARIANCE, S, OF A BLOCK.  USING VARIANCE COMPUTE THE
C     SCALING FACTOR FOR THE REST OF THE BLOCK.
      PAR=MAXP/8.
      IF(PAR.LT.8.)PAR=8.
      DO 199 JJ=1,NBPL
      CALL VARV1 (X, CONV, JJ, S, PAR, NPL)
      IF (JJ.EQ.1) SLAG = S
      CALL DSQ (2.5, S)
      JL=(JJ-1)*BLK+1
      JH=JJ*BLK
      IF(JH.EQ.NPL) JH=NPL-1
C
C     PREDICT NEXT POINT IN BLOCK, QUANTIZE AND FORM REPRESENTATIVE
C     VALUE.  CONTINUE UNTIL ALL POINTS IN BLOCK ARE PROCESSED.
      DO 190 J=JL,JH
      J1=J+1
      EX = CONH*X(1,J)
      F = X(1,J1) - EX
      CALL QUAN (F, LEVEL, EQ)
      X(1,J1) = EX + EQ
  190 CONTINUE
  199 CONTINUE
C
C     READ IN NEXT LINE OF DATA, PICK OFF APPROPRIATE BAND AND STORE
      DO 299 II=2,NLINE
      READ (10) IV
      DO 240 J=1,NPL
      IIV = IV(NB,J)
      X(2,J) = IIV
      ISUM1 = ISUM1 + IIV
  240 CONTINUE
C
C     PREDICT THE FIRST POINT, CALCULATE THE SCALING FACTOR FOR
C     VARIANCE OF NEW ROW WITH RESPECT TO THE PREVIOUS ROW, QUANTIZE
C     AND FORM REPRESENTATIVE VALUE FOR FIRST POINT OF THE ROW.
      CALL DSQ (2.5, SLAG)
      EX = CONV*X(1,1)
      F = X(2,1) - EX
      CALL QUAN (F, LEVEL, EQ)
      X(2,1) = EX + EQ
C
C     CALCULATE VARIANCE, S, FOR A BLOCK.  USING THIS VARIANCE COMPUTE
C     THE SCALING FACTOR FOR THE REST OF THE BLOCK.
      DO 260 JJ=1,NBPL
      CALL VARV (X, A, JJ, S, PAR, NPL)
      CALL DSQ (2.5, S)
      JL=(JJ-1)*BLK+1
      JH=JJ*BLK
      IF(JH.EQ.NPL) JH=NPL-1
C
C     COMPUTE THE REPRESENTATIVE VALUE OF THE NEXT POINT IN THE BLOCK
C     BY QUANTIZING THE DIFFERENCE BETWEEN THE NEXT POINT AND THE
C     PREDICTED VALUE AND THEN ADDING THE QUANTIZED VALUE TO THE
C     PREDICTED VALUE.
C     ROTATE THE PREDICTOR VALUES FROM ROW 2 TO ROW 1
      DO 250 J=JL,JH
      J1=J+1
      EX = A(1)*X(2,J) + A(3)*X(1,J) + A(2)*X(1,J1)
      F = X(2,J1) - EX
      CALL QUAN (F, LEVEL, EQ)
      X(2,J1) = EX + EQ
      IF (X(1,J).GT.MAXP) X(1,J) = MAXP
      IF (X(1,J).LT.MINP) X(1,J) = MINP
      IOUT(J) = X(1,J) + 0.5
      ISUM2 = ISUM2 + IOUT(J)
      X(1,J) = X(2,J)
  250 CONTINUE
  260 CONTINUE
C
C     LOAD OUTPUT ARRAY AND MOVE PREDICTOR VALUE FOR LAST SAMPLE
      IF (X(1,NPL).GT.MAXP) X(1,NPL) = MAXP
      IF (X(1,NPL).LT.MINP) X(1,NPL) = MINP
      IOUT(NPL) = X(1,NPL) + 0.5
      ISUM2 = ISUM2 + IOUT(NPL)
      X(1,NPL) = X(2,NPL)
C
C     WRITE RECONSTRUCTED IMAGE FOR A LINE OF DATA ONTO UNIT # NB.
      WRITE (NB) IOUT
  299 CONTINUE
C
C     WRITE LAST RECONSTRUCTED IMAGE LINE ON UNIT NB.
      DO 300 J=1,NPL
      IF (X(1,J).LT.MINP) X(1,J) = MINP
      IF (X(1,J).GT.MAXP) X(1,J) = MAXP
      IOUT(J) = X(1,J) + 0.5
  300 ISUM2 = ISUM2 + IOUT(J)
      WRITE (NB) IOUT
C
C     COMPUTE MEANS FOR ORIGINAL AND RECONSTRUCTED IMAGE.
      PIX=NLINE*NPL
      AMEAN1 = ISUM1 / PIX
      AMEAN2 = ISUM2 / PIX
C
      WRITE(6,38)
      WRITE(6,35) NPL,NLINE,NB,IBIT,MAXP
      WRITE(6,41) AMEAN1, AMEAN2
      RETURN
C
   35 FORMAT(' NPL = ',I4,18X,'NLINE = ',I4,16X,'BAND NO. = ',I2,15X,
     .'IBIT = ',I5,15X,'MAXP = ',F6.2)
   38 FORMAT(50X,'ADAPTIVE TWO-DIMENSIONAL DPCM',//)
   41 FORMAT (/' MEAN OF ORIGINAL IMAGE =',F8.3,24X,'MEAN OF RECONSTRUCT
     .ED IMAGE =',F8.3///)
      END
C
      SUBROUTINE VARV1 (X, COVH, K, S, PAR, NPL)
C
C***********************************************************************
C     SUBROUTINE VARV1 COMPUTES THE VARIANCES FOR A BLOCK OF DATA IN THE
C     FIRST ROW.  PREDICTED VALUE IS THE VALUE OF THE PREVIOUS SAMPLE
C     TIMES A WEIGHTING FACTOR.
C **********************************************************************
C
      DIMENSION X(2,1),A(3)
      M1 = NPL - 1
      S=0.0
      N1=(K-1)*16+1
      N2=N1+15
      IF (N2.EQ.NPL) N2=M1
      DO 100 J=N1,N2
      J1=J+1
      EX=COVH*X(1,J)
      E=X(1,J1)-EX
      S=S+E*E
  100 CONTINUE
      S=S/16.
      IF(N2.EQ.M1)S=S*1.0606
      S=SQRT(S)
      IS=S*8/PAR
      IF(IS.GE.8) IS = 7
      S=(IS+0.5)*PAR/8.0
      RETURN
C
C***********************************************************************
      ENTRY VARV (X, A, K, S, PAR, NPL)
C
C     SUBROUTINE VARV CALCULATES THE VARIANCE FOR A BLOCK OF 16 PIXELS.
C     VARV USES A THIRD ORDER PREDICTOR THAT UTILIZES THE ADJACENT
C     ELEMENT IN THE SAME LINE, THE ADJACENT ELEMENT IN THE SAME COLUMN,
C     AND THE DIAGONAL ELEMENT TO PREDICT EACH SAMPLE.  THE FIRST ROW OF
C     DATA CANNOT BE HANDLED BY THIS ROUTINE.
C **********************************************************************
C
      M1 = NPL - 1
      S=0.0
      N1=(K-1)*16+1
      N2=N1+15
      IF (N2.EQ.NPL) N2=M1
      DO 1000 J=N1,N2
      J1=J+1
      EX=A(1)*X(2,J)+A(3)*X(1,J)+A(2)*X(1,J1)
      E=X(2,J1)-EX
      S=S+E*E
 1000 CONTINUE
      S=S/16.
      IF(N2.EQ.M1) S=S*1.0606
      S=SQRT(S)
      IS=S*8/PAR
      IF(IS.GE.8) IS=7
      S=(IS+0.5)*PAR/8.0
      RETURN
      END
C
      SUBROUTINE DSQ (XMULT, SIGMA)
C
C     AN ASSUMED LAPLACIAN DISTRIBUTION OF THE COEFFICIENTS IS TRANS-
C     FORMED TO A UNIFORM DISTRIBUTION BEFORE QUANTIZATION.
C     DSQ COMPUTES THE CONSTANTS OF THE MAPPING FUNCTION.
C        XMULT = ESTIMATED NUMBER OF SIGMAS IN THE DATA RANGE
C        SIGMA = ESTIMATED VARIANCE OF THE INPUT VALUE
C **********************************************************************
C
      EMAX=XMULT*SIGMA
      EM = SQRT(2.0*EMAX) / (3.0*SIGMA)
      EXPM=EXP(-EM)
      EM1 = -EM/EMAX
      RETURN
C***********************************************************************
C
      ENTRY QUAN (F, LEVEL, EQ)
C
C      QUANTIZATION OF AC COEFFICIENTS.
C        F     = VALUE TO BE QUANTIZED
C        LEVEL = NUMBER OF LEVELS IN THE QUANTIZER
C        EQ    = REPRESENTATIVE VALUE FOR F
C **********************************************************************
C
      II=0
      IF(F.GE.0.0)GO TO 2
      F=-F
      II=1
 2    CONTINUE
C
C     FORWARD MAPPING
      EW = F*EM1
      EXPE=EXP(EW)
      Z=EMAX*(1.-EXPE)/(1.-EXPM)
C
      LEVEL1=LEVEL-1
      IZ=(Z/EMAX)*LEVEL
      IF(IZ.LT.0)IZ=0
      IF(IZ.GT.LEVEL1)IZ=LEVEL1
C
C     INVERSE MAPPING
      ZQ=(FLOAT(IZ)+0.5)/FLOAT(LEVEL)
      ZQW=1.-ZQ*(1.-EXPM)
      EQ=-EMAX/EM*ALOG(ZQW)
      IF(II.EQ.1)EQ=-EQ
      RETURN
      END
