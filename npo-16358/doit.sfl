 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    1


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

    1              SUBROUTINE DOIT(COMAND,NUMFLG,TANUMB,MINFLG)                                                                     
    2       C                                       CDM   This subroutine executes the commands passed by the main program or       
    3       C                                       CDM   rings the terminal bell and turns LED 3 on (error signal) if the          
    4       C                                       CDM   command is invalid.                                                       
    5       C                                       CDM                                                                             
    6       C                                       CDM   Programmer - Jon Vavrus  13 NOV 1980                                      
    7       C                                       CDM   Revised    - Jon Vavrus  30 MAR 1981                                      
    8       C                                       CDM   Revised    - Jon Vavrus  12 MAY 1981                                      
    9       C                                       CDM   Revised    - Jon Vavrus  21 JUL 1981                                      
   10       C                                       CDM   Revised    - Jon Vavrus  31 JUL 1981 (change CCLINE usage)                
   11       C                                       CDM   Revised    - Jon Vavrus  27 AUG 1981                                      
   12       C                                       CDM   Revised    - Jon Vavrus  10 SEP 1981                                      
   13       C                                       CDM   Revised    - Jon Vavrus  23 SEP 1981                                      
   14       C                                       CDM   Revised    - Jon Vavrus   6 NOV 1981                                      
   15       C                                       CDM   Revised    - Jon Vavrus  30 DEC 1981 (make LED's work right)              
   16       C                                       CDM   Revised    - Jon Vavrus   4 MAY 1982 (non-advanced video VT100's)         
   17       C                                       CDM   Revised    - Jon Vavrus  18 AUG 1982 (bigger arrays)                      
   18       C                                       CDM   Revised    - Jon Vavrus   9 SEP 1982                                      
   19       C                                       CDM   Revised    - Jon Vavrus  30 NOV 1982                                      
   20       C                                       CDM   Revised    - Jon Vavrus  12 JAN 1983                                      
   21       C                                       CDM   Revised    - Jon Vavrus   4 APR 1983 (Take care of "Quitting")            
   22       C                                       CM                                                                              
   23       C                                       CM         The routine is called with the numeric code for the command          
   24       C                                       CM    (COMAND) which if negative, means that it is not to be "saved" for        
   25       C                                       CM    possible command #13 execution; a flag set .TRUE. if there is an          
   26       C                                       CM    associated number (NUMFLG); a number (TANUMB); and a flag set             
   27       C                                       CM    .TRUE. if there is an associated minus sign.                              
   28       C                                       CM                                                                              
   29       C                                       CM         For VT100's the given command is executed after which LED 1 is       
   30       C                                       CM    turned off (indicating operation finished), LED 3 is turned off           
   31       C                                       CM    if successful and on if not (error indication), LED 2 is turned           
   32       C                                       CM    on if the reverse option is currently set or off if not (reverse          
   33       C                                       CM    indicator), and LED 4 is turned on if the search buffer now contains      
   34       C                                       CM    something (buffer indicator).                                             
   35       C                                       CM                                                                              
   36       C                                       CM         The valid commands types are:                                        
   37       C                                       CM              1 - jump TANUMB lines (positive or negative)                    
   38       C                                       CM              2 - jump by TANUMB blocks (positive or negative)                
   39       C                                       CM              3 - search (forward) for string(s) in SRCHBF array and          
   40       C                                       CM                  display from that line if found, if not found the           
   41       C                                       CM                  terminal bell is rung and LED 3 is turned on.  Matches      
   42       C                                       CM                  are found regardless of lower/uppercase differences.        
   43       C                                       CM                  Search backward if MINFLG = .TRUE..  Repeat TANUMB          
   44       C                                       CM                  times if NUMFLG = .TRUE..                                   
   45       C                                       CM              4 - set reverse switch, all commands will now work in re-       
   46       C                                       CM                  verse (i.e. n$ will jump -n lines, etc.).  Repeat           
   47       C                                       CM                  TANUMB times if NUMFLG = .TRUE..                            
   48       C                                       CM              5 - scroll (backwards if MINFLG = .TRUE.)                       
   49       C                                       CM              6 - stop scrolling or cancel current line jump, search,         
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    2


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

   50       C                                       CM                  or & command.                                               
   51       C                                       CM              7 - set scrolling speed to TANUMB lines per second (positive    
   52       C                                       CM                  or negative) (originally set to 2).                         
   53       C                                       CM                  NOTE:  there is a maximum speed that will not be ex-        
   54       C                                       CM                  ceeded (varies with situation) even if scrolling            
   55       C                                       CM                  speed is set at a high value.                               
   56       C                                       CM              8 - mark the TANUMB line form the top of the screen as one      
   57       C                                       CM                  of the boundaries of the print range.  The last two so      
   58       C                                       CM                  marked lines define the print range.                        
   59       C                                       CM              9 - output TANUMB lines to the file LOOKPRINT.LIS in the        
   60       C                                       CM                  default directory (file format will be the same as the      
   61       C                                       CM                  original file, with sequential organization).  Creates      
   62       C                                       CM                  a new file.  If no number is specified (or is zero)         
   63       C                                       CM                  and there is a valid print range marked, then that          
   64       C                                       CM                  range will be output, if no valid print range then          
   65       C                                       CM                  23 lines are output.                                        
   66       C                                       CM             10 - same as 9 except the lines are output to SYS$PRINT.         
   67       C                                       CM                  If MINFLG = .TRUE. then output goes to LOOKPRINT.LIS        
   68       C                                       CM                  file (new file if no previous command created one           
   69       C                                       CM                  during this job, otherwise appended to the end of the       
   70       C                                       CM                  existing file).                                             
   71       C                                       CM             11 - exit the program.                                           
   72       C                                       CM             12 - re-write the screen                                         
   73       C                                       CM             13 - re-execute the last command that was passed to DOIT         
   74       C                                       CM                  with a positive value (except for 13)                       
   75       C                                       C                                                                               
   76       C                                       C***   CALLED ROUTINES                                                          
   77       C                                       C                                                                               
   78       C                                       CC    BLKCLS  Closes the input file.                                            
   79       C                                       CC    BLKIN   Reads in one block of data.                                       
   80       C                                       CC    BLKSIN  Reads in 7 blocks of data.                                        
   81       C                                       CC    CONVUP  Converts a string to upper-case.                                  
   82       C                                       CC    INTASC  Converts a given character variable to upper-case.                
   83       C                                       CC    LINCON  Converts data to output lines in the output arrays.               
   84       C                                       CC    PRTCLS  Closes the printer output file used in & commands.                
   85       C                                       CC    PRTOPN  Opens the printer output file.                                    
   86       C                                       CC    PRTOUT  Outputs a record to the printer output file.                      
   87       C                                       CC    REDOIT  Calls DOIT, allows for recursion.                                 
   88       C                                       CC    STOPSC  AST routine to handle "stop" command.                             
   89       C                                       CC    WORKNG  Writes flashing "WORKING" message.                                
   90       C                                       C                                                                               
   91       C                                       C***   COMMON AREAS                                                             
   92       C                                       C                                                                               
   93       C                                       CS    CHARS   Used to pass character variables; contains LINES a character      
   94       C                                       CS            array of the output lines, and SRCHBF the search buffer, and      
   95       C                                       CS            CRLF which contains <CR><LF>, and REVVID + REGVID which are       
   96       C                                       CS            the VT100 control sequences to set/unset reverse video.           
   97       C                                       C                                                                               
   98       C                                       CS    DOITNM  Contains information transferred from the main program:           
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    3


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

   99       C                                       CS                 INCHAN - input channel of the terminal                       
  100       C                                       CS                 TIME   - scrolling speed in -10000000*seconds/line           
  101       C                                       CS                 SBFFLG - flag indicating whether there is a string           
  102       C                                       CS                          in the search buffer                                
  103       C                                       CS                 DIRECT - flag for reverse (-1 for reverse, else 1)           
  104       C                                       CS                 EBK    - EBK of input file                                   
  105       C                                       CS                 SBFLEN - length(s) of string(s) in search buffer(s)          
  106       C                                       CS                 RECBLK - number of bytes used per block in FIX-BLK files     
  107       C                                       CS                 RANGE  - starting and ending block numbers and pointers      
  108       C                                       CS                          of print range                                      
  109       C                                       CS                 VT100  - flag set .TRUE. if terminal is a VT100              
  110       C                                       CS                 LRL    - length of longest record in input file              
  111       C                                       CS                 LENLMT - maximum output length (if <0 then WRAP set)         
  112       C                                       CS                 PAGEND - line number of last line output to screen.          
  113       C                                       CS                 PAGLEN - number of lines per page                            
  114       C                                       CS                 COMLIN - line number for command input (bottom of screen)    
  115       C                                       CS                 VT100A - flag set .TRUE. if VT100 has advanced video option  
  116       C                                       C                                                                               
  117       C                                       CS    LNCN    Contains output arrays, and file pointers and information:        
  118       C                                       CS                 LINLEN - array of output line lengths                        
  119       C                                       CS                 LINEP  - top of screen line (or last line output by          
  120       C                                       CS                          backward scroll)                                    
  121       C                                       CS                 NLINES - number of lines in arrays                           
  122       C                                       CS                 BUFFER - array of unconverted data                           
  123       C                                       CS                 PBUF   - current position in BUFFER                          
  124       C                                       CS                 NBUF   - number of bytes in BUFFER                           
  125       C                                       CS                 BLK    - next block in file                                  
  126       C                                       CS                 FSZ    - record length for FIX files, or FSZ for VFC files   
  127       C                                       CS                 IFSZ   - word extended record length for FIX files           
  128       C                                       CS                 RFM    - files RFM                                           
  129       C                                       CS                 RAT    - files RAT (1=CR,2=FTN,3=PRN,4=none,<0=BLK set)      
  130       C                                       CS                 SBLK   - starting block of current batch of output lines     
  131       C                                       CS                 CCLINE - array containing pointer to where the line's        
  132       C                                       CS                          record starts in the file (CCLINE(1,x) = block      
  133       C                                       CS                          #, CCLINE(2,x) = byte number in block).  If         
  134       C                                       CS                          CCLINE(1,x) = 0 then it is a carriage control       
  135       C                                       CS                          line.                                               
  136       C                                       CS                 LBLK   - last block processed by LINCON                      
  137       C                                       CS                 LPBUF  - last value of PBUF processed by LINCON              
  138       C                                       C                                                                               
  139       C                                       CS    STOPCM  Used to pass information back and forth to/from the stop          
  140       C                                       CS            scrolling AST.  STOPIT is a flag set .TRUE. if scrolling          
  141       C                                       CS            should be stopped, INBUF is the input character, IOFLAG and       
  142       C                                       CS            TIMFLG are event flags, and IOSB is the I/O IOSB.                 
  143       C                                       C                                                                               
  144       C                                       C***   INPUT VARIABLES                                                          
  145       C                                       C                                                                               
  146       C                                       CI    INBUF   One byte buffer used to get stop scrolling command.               
  147       C                                       C                                                                               
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    4


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  148       C                                       C***   OUTPUT VARIABLES                                                         
  149       C                                       C                                                                               
  150       C                                       CO    BUFFER  Buffer holding input data.  During back scrolling output          
  151       C                                       CO            is done directly from here.                                       
  152       C                                       CO    ESC     Used to output an ASCII <ESC>.                                    
  153       C                                       CO    LINES   Lines of output converted by LINCON.                              
  154       C                                       C                                                                               
  155       C                                       C***   INPUT UNITS                                                              
  156       C                                       C                                                                               
  157       C                                       CR    INCHAN  Channel number of the terminal.                                   
  158       C                                       C                                                                               
  159       C                                       C***   OUTPUT UNITS                                                             
  160       C                                       C                                                                               
  161       C                                       CW    9       Output to the terminal (no carriage-control).                     
  162       C                                       CW    20      Output for the List, Print, and Append commands                   
  163       C                                       C                                                                               
  164              EXTERNAL STOPSC                                                                                                  
  165              CHARACTER*132 LINES(600),HLIN(600),CAPLIN                                                                        
  166              CHARACTER*33 CHAR                                                                                                
  167              CHARACTER*30 SRCHBF(10)                                                                                          
  168              CHARACTER*5 TEMPCH                                                                                               
  169              CHARACTER*4 REVVID,REGVID                                                                                        
  170              CHARACTER*2 CRLF                                                                                                 
  171              INTEGER*4 TIME,BLK,PBUF,EBK,HNBUF,HPBUF,FSZ,RFM,RAT,TIMFLG,                                                      
  172            1       DELTIM(2),SBLK,PAUSTM(2),PRINT,HBLK,HSBLK,                                                                 
  173            2       RANGE(2,2),CCLINE(2,600),HLBLK,HLPBUF,HCCLIN(2,600),                                                       
  174            3       PAGEND,OLDEND,SAVCOM,IDESCR(2),STRPOS(10)                                                                  
  175              INTEGER*2 IOSB(4),LINLEN(600),HLINLN(600),HLINES,HLINEP,DIRECT,                                                  
  176            1       SBFLEN(10),RECBLK,LENLMT,PAGLEN,COMAND,COMLIN                                                              
  177              LOGICAL*1 SBFFLG,INBUF,BUFFER(3750),FIRST,NUMFLG,MINFLG,                                                         
  178            1       HBUFER(150),STOPIT,ESC,TEMP(30),CAPBUF(3750),VT100,                                                        
  179            2       BELL,BSP,RFLAG,SECOND,SAVFLG(2),VT100A                                                                     
  180                                                                                                                               
  181              COMMON /DOITNM/INCHAN,TIME,SBFFLG,DIRECT,EBK,SBFLEN,RECBLK,RANGE,                                                
  182            1       VT100,LRL,LENLMT,PAGEND,PAGLEN,COMLIN,VT100A                                                               
  183              COMMON /LNCN/LINLEN,LINEP,NLINES,BUFFER,PBUF,NBUF,BLK,FSZ,IFSZ,                                                  
  184            1       RFM,RAT,SBLK,CCLINE,LBLK,LPBUF                                                                             
  185              COMMON /CHARS/LINES,SRCHBF,CRLF,REVVID,REGVID                                                                    
  186              COMMON /STOPCM/STOPIT,INBUF,IOFLAG,IOSB,TIMFLG                                                                   
  187                                                                                                                               
  188              DATA ESC,BELL,BSP/27,7,8/                                                                                        
  189              DATA DELTIM(2)/-1/                                                                                               
  190              DATA PAUSTM/-30000000,-1/                                                                                        
  191              DATA OPNFIL/.FALSE./                                                                                             
  192                                                                                                                               
  193              ANUMB = TANUMB                                                                                                   
  194       C                                       C                                                                               
  195       C                                       C***   Turn LED #1 on                                                           
  196       C                                       C                                                                               
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    5


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  197     *        IF (COMAND .NE. 13)                                                                                              
  198   1 *           EXECUTE (WORKING)                                                                                             
  199     *        ENDIF                                                                                                            
  200       C                                       C                                                                               
  201       C                                       C***   Save command                                                             
  202       C                                       C                                                                               
  203     *        IF (COMAND .LT. 0)                                                                                               
  204   1             ICOM = -COMAND                                                                                                
  205     *        ELSE                                                                                                             
  206   1 *           IF (COMAND .NE. 13)                                                                                           
  207   2                SAVFLG(1) = NUMFLG                                                                                         
  208   2                SAVFLG(2) = MINFLG                                                                                         
  209   2                SAVCOM = COMAND                                                                                            
  210   2                SAVNUM = TANUMB                                                                                            
  211   1 *           ENDIF                                                                                                         
  212   1             ICOM = COMAND                                                                                                 
  213     *        ENDIF                                                                                                            
                  +-----------------------------------------------------------------------------------------------------------------
  214     *       |DO CASE ICOM                                                                                                     
  215   1 *       |   CASE 1                                                                                                        
  216       C     |                                 C                                                                               
  217       C     |                                 C***   Line jump                                                                
  218       C     |                                 C                                                                               
  219   2         |      NUMBER = ANUMB*DIRECT                                                                                      
  220   2 *       |      IF (.NOT.NUMFLG)                                                                                           
  221   3 *       |         EXECUTE (ERROR_EXIT)                                                                                    
  222   2 *       |      ENDIF                                                                                                      
  223   2 *       |      EXECUTE (HOLD_CURRENT_SETUP)                                                                               
  224       C     |                                 C                                                                               
  225       C     |                                 C***   Execute line jumps                                                       
  226       C     |                                 C                                                                               
  227   2 *       |      EXECUTE (JUMP_LINES)                                                                                       
  228   2 *       |      EXECUTE (GET_LAST_LINE)                                                                                    
  229   2 *       |      EXECUTE (CANCEL_STOPPER)                                                                                   
  230   2 *       |      IF (IABS(NUMBER) .LE. PAGLEN)                                                                              
  231   3 *       |         EXECUTE (SCROLL_REFRESH_EXIT)                                                                           
  232   2 *       |      ELSE                                                                                                       
  233   3 *       |         EXECUTE (REFRESH_EXIT)                                                                                  
  234   2 *       |      ENDIF                                                                                                      
  235   1 *       |   CASE 2                                                                                                        
  236       C     |                                 C                                                                               
  237       C     |                                 C***   Block jumps                                                              
  238       C     |                                 C                                                                               
  239   2 *       |      IF (.NOT.NUMFLG)                                                                                           
  240   3 *       |         EXECUTE (ERROR_EXIT)                                                                                    
  241   2 *       |      ENDIF                                                                                                      
  242   2 *       |      EXECUTE (FIND_NON_CC_LINE)                                                                                 
  243   2         |      BLK = CCLINE(1,I) + ANUMB*DIRECT                                                                           
  244   2         |      IF (BLK .LE. 0) BLK = 1                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    6


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  245   2         |      IF (BLK .GT. EBK) BLK = EBK                                                                                
  246   2         |      IBLK = BLK                                                                                                 
  247   2 *       |      EXECUTE (INPUT_SEVEN_BLOCKS)                                                                               
  248   2         |      CALL LINCON(.TRUE.)                                                                                        
  249       C     |                                 C                                                                               
  250       C     |                                 C***   If input was at end of file, must find line position                     
  251       C     |                                 C                                                                               
  252   2 *       |      IF (BLK .GT. EBK)                                                                                          
                  |        +--------------------------------------------------------------------------------------------------------
  253   3 *       |        |DO FOR LINEP=1,NLINES                                                                                   
  254   4 *       |        |   UNDO IF (CCLINE(1,LINEP) .EQ. IBLK)                                                                  
                  |        <----                                                                                                    
  255   3 *       |        |END DO FOR                                                                                              
                  |        +--------------------------------------------------------------------------------------------------------
  256   3 *       |         IF (NLINES .LT. (LINEP + PAGLEN - 1))                                                                   
  257   4         |            LINEP = NLINES - PAGLEN + 1                                                                          
  258   4         |            IF (LINEP .LE. 0) LINEP = 1                                                                          
  259   3 *       |         ENDIF                                                                                                   
  260   2 *       |      ENDIF                                                                                                      
  261   2 *       |      EXECUTE (GET_LAST_LINE)                                                                                    
  262   2 *       |      EXECUTE (REFRESH_EXIT)                                                                                     
  263   1 *       |   CASE 3                                                                                                        
  264       C     |                                 C                                                                               
  265       C     |                                 C***   Searches                                                                 
  266       C     |                                 C                                                                               
  267   2 *       |      IF (.NOT.SBFFLG)                                                                                           
  268   3 *       |         EXECUTE (ERROR_EXIT)                                                                                    
  269   2 *       |      ENDIF                                                                                                      
  270       C     |                                 C                                                                               
  271       C     |                                 C***   Loop ANUMB times                                                         
  272       C     |                                 C                                                                               
  273   2 *       |      IF (NUMFLG)                                                                                                
  274   3         |         NUMBER = ANUMB                                                                                          
  275   2 *       |      ELSE                                                                                                       
  276   3         |         NUMBER = 1                                                                                              
  277   2 *       |      ENDIF                                                                                                      
                  |     +-----------------------------------------------------------------------------------------------------------
  278   2 *       |     |DO FOR III=1,NUMBER                                                                                        
  279   3 *       |     |   IF (MINFLG)                                                                                             
  280   4 *       |     |      IF (DIRECT .EQ. -1)                                                                                  
  281   5 *       |     |         EXECUTE (FORWARD_SEARCH)                                                                          
  282   4 *       |     |      ELSE                                                                                                 
  283   5 *       |     |         EXECUTE (BACKWARD_SEARCH)                                                                         
  284   4 *       |     |      ENDIF                                                                                                
  285   3 *       |     |   ELSE                                                                                                    
  286   4 *       |     |      IF (DIRECT .EQ. -1)                                                                                  
  287   5 *       |     |         EXECUTE (BACKWARD_SEARCH)                                                                         
  288   4 *       |     |      ELSE                                                                                                 
  289   5 *       |     |         EXECUTE (FORWARD_SEARCH)                                                                          
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    7


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  290   4 *       |     |      ENDIF                                                                                                
  291   3 *       |     |   ENDIF                                                                                                   
  292   2 *       |     |END DO FOR                                                                                                 
                  |     +-----------------------------------------------------------------------------------------------------------
  293   1 *       |   CASE 4                                                                                                        
  294       C     |                                 C                                                                               
  295       C     |                                 C***   Reversing operation                                                      
  296       C     |                                 C                                                                               
  297   2         |      IF (MINFLG) DIRECT = -DIRECT                                                                               
  298   2 *       |      IF (NUMFLG)                                                                                                
  299   3         |         NUMBER = ANUMB                                                                                          
  300   3         |         DIRECT = -1**NUMBER*DIRECT                                                                              
  301   2 *       |      ELSE                                                                                                       
  302   3         |         DIRECT = -DIRECT                                                                                        
  303   2 *       |      ENDIF                                                                                                      
  304   2 *       |      EXECUTE (HOME_PLUS_LEDS_EXIT)                                                                              
  305   1 *       |   CASE 5                                                                                                        
  306       C     |                                 C                                                                               
  307       C     |                                 C***   Scrolling                                                                
  308       C     |                                 C                                                                               
  309   2         |      CALL WORKNG(.FALSE.)                                                                                       
  310   2         |      IF (NUMFLG) TIME = (-10000000./ANUMB)*DIRECT                                                               
  311   2         |      CALL LIB$GET_EF(TIMFLG)                                                                                    
  312   2 *       |      IF (TIMFLG .EQ. -1)                                                                                        
  313   3         |         CALL LIB$PUT_SCREEN('Unable to allocate necessary event '//                                             
  314            1|               'flags.  SCROLLING ABORTED.',COMLIN,20)                                                           
  315   3 *       |         EXECUTE (ERROR_EXIT)                                                                                    
  316   2 *       |      ENDIF                                                                                                      
  317   2 *       |      EXECUTE (QUEUE_STOPPER)                                                                                    
  318   2         |      DELTIM(1) = TIME*DIRECT                                                                                    
  319   2 *       |      IF ((DELTIM(1) .LT. 0 .AND. .NOT.MINFLG) .OR. (DELTIM(1) .GT. 0                                            
  320            1|            .AND. MINFLG))                                                                                       
  321   3 *       |         EXECUTE (FORWARD_SCROLLING)                                                                             
  322   2 *       |      ELSE                                                                                                       
  323   3 *       |         EXECUTE (BACKWARD_SCROLLING)                                                                            
  324   2 *       |      ENDIF                                                                                                      
  325   1 *       |   CASE 7                                                                                                        
  326       C     |                                 C                                                                               
  327       C     |                                 C***   Set scrolling speed                                                      
  328       C     |                                 C                                                                               
  329   2 *       |      IF (.NOT.NUMFLG)                                                                                           
  330   3 *       |         EXECUTE (ERROR_EXIT)                                                                                    
  331   2 *       |      ENDIF                                                                                                      
  332   2         |      TIME = (-10000000./ANUMB)*DIRECT                                                                           
  333   2 *       |      EXECUTE (HOME_PLUS_LEDS_EXIT)                                                                              
  334   1 *       |   CASE 8                                                                                                        
  335       C     |                                 C                                                                               
  336       C     |                                 C***   Mark command                                                             
  337       C     |                                 C                                                                               
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    8


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  338   2 *       |      IF (NUMFLG)                                                                                                
  339   3         |         NUMBER = ANUMB*DIRECT                                                                                   
  340   2 *       |      ELSE                                                                                                       
  341   3         |         NUMBER = 0                                                                                              
  342   2 *       |      ENDIF                                                                                                      
  343   2 *       |      EXECUTE (HOLD_CURRENT_SETUP)                                                                               
  344       C     |                                 C                                                                               
  345       C     |                                 C***   Point to line we want                                                    
  346       C     |                                 C                                                                               
  347   2         |      JNUMB = 0                                                                                                  
  348   2 *       |      EXECUTE (JUMP_LINES)                                                                                       
  349   2         |      LINEP = LINEP + JNUMB                                                                                      
  350   2         |      IF (LINEP .GT. NLINES) LINEP = NLINES                                                                      
                  |     +-----------------------------------------------------------------------------------------------------------
  351   2 *       |     |DO FOR I=LINEP,NLINES                                                                                      
  352   3 *       |     |   IF (CCLINE(1,I) .NE. 0)                                                                                 
  353   4 *       |     |      IF (RANGE(1,1) .NE. 0)                                                                               
  354   5         |     |         RANGE(1,2) = RANGE(1,1)                                                                           
  355   5         |     |         RANGE(2,2) = RANGE(2,1)                                                                           
  356   4 *       |     |      ENDIF                                                                                                
  357   4         |     |      RANGE(1,1) = CCLINE(1,I)                                                                             
  358   4         |     |      RANGE(2,1) = CCLINE(2,I)                                                                             
  359   4 *       |     |      UNDO                                                                                                 
                  |     <-------                                                                                                    
  360   3 *       |     |   ENDIF                                                                                                   
  361   2 *       |     |END DO FOR                                                                                                 
                  |     +-----------------------------------------------------------------------------------------------------------
  362   2 *       |      EXECUTE (CANCEL_STOPPER)                                                                                   
  363   2 *       |      EXECUTE (RESTORE_HELD_SETUP)                                                                               
  364   2 *       |      EXECUTE (HOME_PLUS_LEDS_EXIT)                                                                              
  365   1 *       |   CASE 9                                                                                                        
  366       C     |                                 C                                                                               
  367       C     |                                 C***   Print, List, and Append commands                                         
  368       C     |                                 C                                                                               
  369   2         |      PRINT = 1                                                                                                  
  370   2 *       |      EXECUTE (OUTPUT_RANGE)                                                                                     
  371   1 *       |   CASE 10                                                                                                       
  372   2 *       |      IF (MINFLG)                                                                                                
  373   3         |         PRINT = 0                                                                                               
  374   2 *       |      ELSE                                                                                                       
  375   3         |         PRINT = -1                                                                                              
  376   2 *       |      ENDIF                                                                                                      
  377   2 *       |      EXECUTE (OUTPUT_RANGE)                                                                                     
  378   1 *       |   CASE 11                                                                                                       
  379       C     |                                 C                                                                               
  380       C     |                                 C***   Exit                                                                     
  381       C     |                                 C                                                                               
  382   2         |      CALL EXIT                                                                                                  
  383   1 *       |   CASE 12                                                                                                       
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE    9


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  384       C     |                                 C                                                                               
  385       C     |                                 C***   Re-write screen                                                          
  386       C     |                                 C                                                                               
  387   2 *       |      EXECUTE (REFRESH_EXIT)                                                                                     
  388       C     |                                 C                                                                               
  389       C     |                                 C***   Repeat last command                                                      
  390       C     |                                 C                                                                               
  391   1 *       |   CASE 13                                                                                                       
  392   2 *       |      IF (NUMFLG)                                                                                                
  393   3         |         III = ANUMB                                                                                             
  394   2 *       |      ELSE                                                                                                       
  395   3         |         III = 1                                                                                                 
  396   2 *       |      ENDIF                                                                                                      
                  |     +-----------------------------------------------------------------------------------------------------------
  397   2 *       |     |DO FOR IIII=1,III                                                                                          
  398   3         |     |   CALL REDOIT(SAVCOM,SAVFLG(1),SAVNUM,SAVFLG(2))                                                          
  399   2 *       |     |END DO FOR                                                                                                 
                  |     +-----------------------------------------------------------------------------------------------------------
  400     *       |END DO CASE                                                                                                      
                  +-----------------------------------------------------------------------------------------------------------------
  401     *        EXECUTE (CANCEL_STOPPER)                                                                                         
  402              CALL WORKNG(.FALSE.)                                                                                             
  403              RETURN                                                                                                           
              <-----                                                                                                                
  404       C                                       C                                                                               
  405       C                                       C****************************************************************************** 
  406       C                                       C***********************   HERE FOLLOW THE PROCEDURES   *********************** 
  407       C                                       C****************************************************************************** 
  408       C                                       C                                                                               
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   10


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  409     *        PROCEDURE (BACK_SCROLL_EXIT)                                                                                     
  410       C                                       CP    This routine exits from scrolling backward in FIX files.  It converts     
  411       C                                       CP    the data at the current position into output lines, frees the event       
  412       C                                       CP    event flags, resets the LEDs (#3 off) and returns.                        
  413   1             II = PBUF                                                                                                     
  414   1             SBLK = BLK - 1                                                                                                
  415   1 *           IF (BLK .LE. EBK)                                                                                             
  416   2                CALL BLKIN(BLK,I,BUFFER(513))                                                                              
  417   2 *              IF (I .EQ. 0)                                                                                              
  418   3 *                 EXECUTE (READ_ERROR)                                                                                    
  419   2 *              ENDIF                                                                                                      
  420   2                NBUF = 512 + I                                                                                             
  421   1 *           ENDIF                                                                                                         
  422   1             CALL LINCON(.TRUE.)                                                                                           
                     +--------------------------------------------------------------------------------------------------------------
  423   1 *          |DO FOR LINEP=1,NLINES                                                                                         
  424   2 *          |   UNDO IF (CCLINE(1,LINEP) .EQ. SBLK .AND. CCLINE(2,LINEP).EQ.II)                                            
                     <----                                                                                                          
  425   1 *          |END DO FOR                                                                                                    
                     +--------------------------------------------------------------------------------------------------------------
  426   1 *           EXECUTE (GET_LAST_LINE)                                                                                       
  427   1 *           EXECUTE (WRITE_BLOCK_NUMBER)                                                                                  
  428   1 *           EXECUTE (FREE_FLAGS_EXIT)                                                                                     
  429   1             RETURN                                                                                                        
              <--------                                                                                                             
  430     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   11


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  431     *        PROCEDURE (BACKWARD_SEARCH)                                                                                      
  432       C                                       CP    This procedure searches backward through the file for a string. IF        
  433       C                                       CP    found the position is located there, the screen refreshed and the         
  434       C                                       CP    LEDs reset (#3 off), otherwise the screen is left alone, the position     
  435       C                                       CP    is not changed, and the LEDs are reset (#3 on).  In either case the       
  436       C                                       CP    a return from DOIT is executed.                                           
  437       C                                       C                                                                               
  438       C                                       C***   First search lines in buffer                                             
  439       C                                       C                                                                               
                     +--------------------------------------------------------------------------------------------------------------
  440   1 * 1650     |DO                                                                                                            
  441   2 *          |   IF (LINEP .NE. 1)                                                                                          
                     |     +--------------------------------------------------------------------------------------------------------
  442   3 *          |     |DO FOR I=LINEP-1,1,-1                                                                                   
  443   4            |     |   CALL CONVUP(LINLEN(I),%REF(LINES(I)),%REF(CAPLIN))                                                   
                     |     |  +-----------------------------------------------------------------------------------------------------
  444   4 *          |     |  |DO FOR JJ=1,10                                                                                       
  445   5 *          |     |  |   UNDO IF (SBFLEN(JJ) .EQ. 0)                                                                       
                     |     |  <----                                                                                                 
  446   5 *          |     |  |   IF (INDEX(CAPLIN(:LINLEN(I)),SRCHBF(JJ)(:SBFLEN(JJ)))                                             
  447            1   |     |  |         .NE. 0)                                                                                     
  448   6            |     |  |      NUMBER = I - LINEP                                                                             
  449   6            |     |  |      LINEP = I                                                                                      
  450   6 *          |     |  |      EXECUTE (GET_LAST_LINE)                                                                        
  451   6 *          |     |  |      IF (IABS(NUMBER) .GT. PAGLEN)                                                                  
  452   7 *          |     |  |         EXECUTE (REFRESH_EXIT)                                                                      
  453   6 *          |     |  |      ELSE                                                                                           
  454   7 *          |     |  |         EXECUTE (SCROLL_REFRESH_EXIT)                                                               
  455   6 *          |     |  |      ENDIF                                                                                          
  456   6 *          |     |  |      UNDO 1650                                                                                      
                     <----------------                                                                                              
  457   5 *          |     |  |   ENDIF                                                                                             
  458   4 *          |     |  |END DO FOR                                                                                           
                     |     |  +-----------------------------------------------------------------------------------------------------
  459   3 *          |     |END DO FOR                                                                                              
                     |     +--------------------------------------------------------------------------------------------------------
  460   2 *          |   ENDIF                                                                                                      
  461       C        |                              C                                                                               
  462       C        |                              C***   Then start searching backward if not found                               
  463       C        |                              C                                                                               
  464   2 *          |   EXECUTE (HOLD_CURRENT_SETUP)                                                                               
  465   2            |   IBLK = SBLK - 1                                                                                            
  466   2 *          |   IF (IBLK .LE. 0)                                                                                           
  467   3 *          |      EXECUTE (SEARCH_ERROR_EXIT)                                                                             
  468   2 *          |   ENDIF                                                                                                      
  469   2            |   CALL BLKIN(IBLK,NBUF,BUFFER)                                                                               
  470   2 *          |   IF (NBUF .EQ. 0)                                                                                           
  471   3 *          |      EXECUTE (READ_ERROR)                                                                                    
  472   2 *          |   ENDIF                                                                                                      
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   12


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  473   2            |   CALL BLKIN(IBLK,I,BUFFER(NBUF+1))                                                                          
  474   2 *          |   IF (I .EQ. 0)                                                                                              
  475   3 *          |      EXECUTE (READ_ERROR)                                                                                    
  476   2 *          |   ENDIF                                                                                                      
  477   2 *          |   IF (I .GT. 140)                                                                                            
  478   3            |      NBUF = NBUF + 140                                                                                       
  479   2 *          |   ELSE                                                                                                       
  480   3            |      NBUF = NBUF + I                                                                                         
  481   2 *          |   ENDIF                                                                                                      
  482   2            |   IBLK = SBLK                                                                                                
  483       C        |                              C                                                                               
  484       C        |                              C===   Search loop                                                              
  485       C        |                              C                                                                               
                     |  +-----------------------------------------------------------------------------------------------------------
  486   2 *          |  |DO FOREVER                                                                                                 
  487   3            |  |   CALL CONVUP(NBUF,BUFFER(1),CAPBUF(1))                                                                   
                     |  |  +--------------------------------------------------------------------------------------------------------
  488   3 *          |  |  |DO FOR JJ=1,10                                                                                          
  489   4 *          |  |  |   UNDO IF (SBFLEN(JJ) .EQ. 0)                                                                          
                     |  |  <----                                                                                                    
  490   4            |  |  |   IDESCR(1) = NBUF                                                                                     
  491   4            |  |  |   IDESCR(2) = %LOC(CAPBUF(1))                                                                          
  492   4            |  |  |   I = 1                                                                                                
                     |  |  |  +-----------------------------------------------------------------------------------------------------
  493   4 *          |  |  |  |DO FOREVER                                                                                           
  494   5            |  |  |  |   K = LIB$INDEX(IDESCR,SRCHBF(JJ)(:SBFLEN(JJ)))                                                     
  495   5 *          |  |  |  |   IF (STOPIT)                                                                                       
  496   6 *          |  |  |  |      EXECUTE (CANCEL_COMMAND)                                                                       
  497   5 *          |  |  |  |   ENDIF                                                                                             
  498   5 *          |  |  |  |   IF (K .EQ. 0)                                                                                     
  499   6            |  |  |  |      STRPOS(JJ) = I - 1                                                                             
  500   6 *          |  |  |  |      UNDO                                                                                           
                     |  |  |  <-------                                                                                              
  501   5 *          |  |  |  |   ENDIF                                                                                             
  502   5            |  |  |  |   IDESCR(1) = IDESCR(1) - K                                                                         
  503   5            |  |  |  |   I = I + K                                                                                         
  504   5            |  |  |  |   IDESCR(2) = %LOC(CAPBUF(I))                                                                       
  505   4 *          |  |  |  |END DO FOREVER                                                                                       
                     |  |  |  +-----------------------------------------------------------------------------------------------------
  506   3 *          |  |  |END DO FOR                                                                                              
                     |  |  +--------------------------------------------------------------------------------------------------------
  507   3            |  |   I = 0                                                                                                   
                     |  |  +--------------------------------------------------------------------------------------------------------
  508   3 *          |  |  |DO FOR K=1,10                                                                                           
  509   4 *          |  |  |   UNDO IF (SBFLEN(K) .EQ. 0)                                                                           
                     |  |  <----                                                                                                    
  510   4 *          |  |  |   IF (STRPOS(K) .GT. I)                                                                                
  511   5            |  |  |      JJ = K                                                                                            
  512   5            |  |  |      I = STRPOS(K)                                                                                     
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   13


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  513   4 *          |  |  |   ENDIF                                                                                                
  514   3 *          |  |  |END DO FOR                                                                                              
                     |  |  +--------------------------------------------------------------------------------------------------------
  515       C        |  |                           C                                                                               
  516       C        |  |                           C===   Found                                                                    
  517       C        |  |                           C                                                                               
  518   3 *          |  |   IF (I .NE. 0)                                                                                           
  519   4            |  |      BLK = IBLK - 2                                                                                       
  520   4            |  |      IF (BLK .LE. 0) BLK = 1                                                                              
  521   4            |  |      SBLK = BLK                                                                                           
  522   4            |  |      CALL BLKIN(BLK,NBUF,BUFFER)                                                                          
  523   4 *          |  |      IF (NBUF .EQ. 0)                                                                                     
  524   5 *          |  |         EXECUTE (READ_ERROR)                                                                              
  525   4 *          |  |      ENDIF                                                                                                
  526   4 *          |  |      IF (BLK .LE. EBK)                                                                                    
  527   5            |  |         CALL BLKIN(BLK,I,BUFFER(NBUF+1))                                                                  
  528   5 *          |  |         IF (I .EQ. 0)                                                                                     
  529   6 *          |  |            EXECUTE (READ_ERROR)                                                                           
  530   5 *          |  |         ENDIF                                                                                             
  531   5            |  |         NBUF = NBUF + I                                                                                   
  532   5 *          |  |         IF (BLK .LE. EBK)                                                                                 
  533   6            |  |            CALL BLKIN(BLK,I,BUFFER(NBUF+1))                                                               
  534   6 *          |  |            IF (I .EQ. 0)                                                                                  
  535   7 *          |  |               EXECUTE (READ_ERROR)                                                                        
  536   6 *          |  |            ENDIF                                                                                          
  537   6            |  |            NBUF = NBUF + I                                                                                
  538   5 *          |  |         ENDIF                                                                                             
  539   4 *          |  |      ENDIF                                                                                                
  540   4            |  |      CALL LINCON(.TRUE.)                                                                                  
  541       C        |  |                           C                                                                               
  542       C        |  |                           C===   Find right line                                                          
  543       C        |  |                           C                                                                               
                     |  |     +-----------------------------------------------------------------------------------------------------
  544   4 *          |  |     |DO FOR J=NLINES,1,-1                                                                                 
  545   5            |  |     |   CALL CONVUP(LINLEN(J),%REF(LINES(J)),%REF(CAPLIN))                                                
  546   5 *          |  |     |   IF (INDEX(CAPLIN(:LINLEN(J)),SRCHBF(JJ)(:SBFLEN(JJ)))                                             
  547            1   |  |     |         .NE. 0)                                                                                     
  548   6            |  |     |      LINEP = J                                                                                      
  549   6 *          |  |     |      EXECUTE (GET_LAST_LINE)                                                                        
  550   6 *          |  |     |      EXECUTE (CANCEL_STOPPER)                                                                       
  551   6 *          |  |     |      EXECUTE (REFRESH_EXIT)                                                                         
  552   6 *          |  |     |      UNDO 1650                                                                                      
                     <----------------                                                                                              
  553   5 *          |  |     |   ENDIF                                                                                             
  554   4 *          |  |     |END DO FOR                                                                                           
                     |  |     +-----------------------------------------------------------------------------------------------------
  555       C        |  |                           C                                                                               
  556       C        |  |                           C===   Not found                                                                
  557       C        |  |                           C                                                                               
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   14


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  558   3 *          |  |   ENDIF                                                                                                   
  559   3            |  |   IBLK = IBLK - 2                                                                                         
  560   3 *          |  |   IF (IBLK .LE. 0)                                                                                        
  561   4 *          |  |      EXECUTE (SEARCH_ERROR_EXIT)                                                                          
  562   3 *          |  |   ENDIF                                                                                                   
                     |  |  +--------------------------------------------------------------------------------------------------------
  563   3 *          |  |  |DO FOR I=1,30                                                                                           
  564   4            |  |  |   TEMP(I) = CAPBUF(I)                                                                                  
  565   3 *          |  |  |END DO FOR                                                                                              
                     |  |  +--------------------------------------------------------------------------------------------------------
  566   3            |  |   CALL BLKIN(IBLK,NBUF,BUFFER)                                                                            
  567   3 *          |  |   IF (NBUF .EQ. 0)                                                                                        
  568   4 *          |  |      EXECUTE (READ_ERROR)                                                                                 
  569   3 *          |  |   ENDIF                                                                                                   
                     |  |  +--------------------------------------------------------------------------------------------------------
  570   3 *          |  |  |DO FOR I=1,30                                                                                           
  571   4            |  |  |   BUFFER(NBUF+I) = TEMP(I)                                                                             
  572   3 *          |  |  |END DO FOR                                                                                              
                     |  |  +--------------------------------------------------------------------------------------------------------
  573   3            |  |   NBUF = NBUF + 30                                                                                        
  574   3 *          |  |   IF (STOPIT)                                                                                             
  575   4 *          |  |      EXECUTE (CANCEL_COMMAND)                                                                             
  576   3 *          |  |   ENDIF                                                                                                   
  577   2 *          |  |END DO FOREVER                                                                                             
                     |  +-----------------------------------------------------------------------------------------------------------
  578   1 *          |END DO                                                                                                        
                     +--------------------------------------------------------------------------------------------------------------
  579     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   15


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  580     *        PROCEDURE (BACKWARD_SCROLLING)                                                                                   
  581       C                                       CP    This procedure handles scrolling backward through the file.               
  582   1             IF (.NOT.MINFLG) DELTIM(1) = -DELTIM(1)                                                                       
  583       C                                       C                                                                               
  584       C                                       C***   Scroll through line buffer                                               
  585       C                                       C                                                                               
  586   1 *           IF (LINEP .NE. 1)                                                                                             
                        +-----------------------------------------------------------------------------------------------------------
  587   2 *             |DO FOR LINEP=LINEP-1,1,-1                                                                                  
  588   3 *             |   IF (LENLMT .LT. 0)                                                                                      
  589   4               |      K = -LENLMT                                                                                          
                        |     +-----------------------------------------------------------------------------------------------------
  590   4 *             |     |DO FOR L=1,LINLEN(LINEP)/K+1                                                                         
  591   5 *             |     |   EXECUTE (SCROLL_DOWN)                                                                             
  592   4 *             |     |END DO FOR                                                                                           
                        |     +-----------------------------------------------------------------------------------------------------
  593   4 *             |      IF (K .LT. LINLEN(LINEP))                                                                            
  594   5               |         CALL LIB$PUT_SCREEN(LINES(LINEP)(:K)//CRLF//                                                      
  595            1      |               LINES(LINEP)(K+1:LINLEN(LINEP))//CRLF,1,1)                                                  
  596   4 *             |      ELSE                                                                                                 
  597   5               |         CALL LIB$PUT_SCREEN(LINES(LINEP)(:LINLEN(LINEP))//CRLF,                                           
  598            1      |               1,1)                                                                                        
  599   4 *             |      ENDIF                                                                                                
  600   3 *             |   ELSE                                                                                                    
  601   4 *             |      EXECUTE (SCROLL_DOWN)                                                                                
  602   4 *             |      IF (LINLEN(LINEP) .GT. LENLMT)                                                                       
  603   5               |         CALL LIB$PUT_SCREEN(LINES(LINEP)(:LENLMT)//CRLF,1,1)                                              
  604   4 *             |      ELSE                                                                                                 
  605   5               |         CALL LIB$PUT_SCREEN(LINES(LINEP)(:LINLEN(LINEP))//CRLF,                                           
  606            1      |               1,1)                                                                                        
  607   4 *             |      ENDIF                                                                                                
  608   3 *             |   ENDIF                                                                                                   
  609   3 *             |   EXECUTE (WAIT_FOR_SCROLL_AST)                                                                           
  610   3 *             |   IF (STOPIT)                                                                                             
  611   4 *             |      EXECUTE (GET_LAST_LINE)                                                                              
  612   4 *             |      EXECUTE (WRITE_BLOCK_NUMBER)                                                                         
  613   4 *             |      EXECUTE (FREE_FLAGS_EXIT)                                                                            
  614   4               |      RETURN                                                                                               
              <-----------------                                                                                                    
  615   3 *             |   ENDIF                                                                                                   
  616   2 *             |END DO FOR                                                                                                 
                        +-----------------------------------------------------------------------------------------------------------
  617   1 *           ENDIF                                                                                                         
  618       C                                       C                                                                               
  619       C                                       C***   Scroll through file                                                      
  620       C                                       C                                                                               
                     +--------------------------------------------------------------------------------------------------------------
  621   1 *          |DO FOR I=1,NLINES                                                                                             
  622   2 *          |   UNDO IF (CCLINE(1,I) .NE. 0)                                                                               
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   16


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

                     <----                                                                                                          
  623   1 *          |END DO FOR                                                                                                    
                     +--------------------------------------------------------------------------------------------------------------
  624   1             BLK = CCLINE(1,I) - 1                                                                                         
  625   1 *           IF (BLK .GT. 0)                                                                                               
  626   2                CALL BLKIN(BLK,PBUF,BUFFER)                                                                                
  627   2 *              IF (PBUF .EQ. 0)                                                                                           
  628   3 *                 EXECUTE (READ_ERROR)                                                                                    
  629   2 *              ENDIF                                                                                                      
  630   1 *           ELSE                                                                                                          
  631   2                PBUF = 0                                                                                                   
  632   2                BLK = 1                                                                                                    
  633   1 *           ENDIF                                                                                                         
  634   1             CALL BLKIN(BLK,NBUF,BUFFER(PBUF+1))                                                                           
  635   1 *           IF (NBUF .EQ. 0)                                                                                              
  636   2 *              EXECUTE (READ_ERROR)                                                                                       
  637   1 *           ENDIF                                                                                                         
  638   1             IF (PBUF .NE. 0) BLK = BLK - 1                                                                                
  639   1             PBUF = PBUF + CCLINE(2,I)                                                                                     
  640   1             NBUF = PBUF                                                                                                   
  641   1             ISAVE = PBUF                                                                                                  
                     +--------------------------------------------------------------------------------------------------------------
  642   1 *          |DO FOREVER                                                                                                    
  643   2 *          |   IF (RFM .EQ. 1)                                                                                            
  644       C        |                              C                                                                               
  645       C        |                              C---   Fixed length records                                                     
  646       C        |                              C                                                                               
  647       C        |                              C===   Establish output record length                                           
  648       C        |                              C                                                                               
  649   3 *          |      IF (RAT .EQ. 2 .OR. RAT .EQ. -2)                                                                        
  650   4 *          |         IF ((FSZ - 1) .LT. LENLMT .OR. LENLMT .LT. 0)                                                        
  651   5            |            LENREC = FSZ - 1                                                                                  
  652   4 *          |         ELSE                                                                                                 
  653   5            |            LENREC = LENLMT                                                                                   
  654   4 *          |         ENDIF                                                                                                
  655   3 *          |      ELSE                                                                                                    
  656   4 *          |         IF (FSZ .LT. LENLMT .OR. LENLMT .LT. 0)                                                              
  657   5            |            LENREC = FSZ                                                                                      
  658   4 *          |         ELSE                                                                                                 
  659   5            |            LENREC = LENLMT                                                                                   
  660   4 *          |         ENDIF                                                                                                
  661   3 *          |      ENDIF                                                                                                   
                     |     +--------------------------------------------------------------------------------------------------------
  662   3 *          |     |DO FOREVER                                                                                              
  663   4 *          |     |   EXECUTE (WAIT_FOR_SCROLL)                                                                            
  664   4 *          |     |   IF (STOPIT)                                                                                          
  665   5 *          |     |      EXECUTE (BACK_SCROLL_EXIT)                                                                        
  666   4 *          |     |   ENDIF                                                                                                
  667   4            |     |   PBUF = PBUF - IFSZ                                                                                   
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   17


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  668   4 *          |     |   UNDO IF (PBUF .LE. 0)                                                                                
                     |     <----                                                                                                    
  669   4 *          |     |   EXECUTE (SCROLL_DOWN)                                                                                
  670   4 *          |     |   IF (LENLMT .LT. 0 .AND. RECLEN .GT. (-LENLMT))                                                       
                     |     |     +--------------------------------------------------------------------------------------------------
  671   5 *          |     |     |DO FOR K=1,(-LENLMT)/RECLEN                                                                       
  672   6 *          |     |     |   EXECUTE (SCROLL_DOWN)                                                                          
  673   5 *          |     |     |END DO FOR                                                                                        
                     |     |     +--------------------------------------------------------------------------------------------------
  674   4 *          |     |   ENDIF                                                                                                
  675   4 *          |     |   IF (RAT .NE. 2 .AND. RAT .NE. -2)                                                                    
  676   5            |     |      CALL SYS$QIOW(,%VAL(INCHAN),%VAL('30'X),,,,BUFFER(PBUF),                                          
  677            1   |     |            %VAL(LENREC),,,,)                                                                           
  678   5            |     |      CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),%VAL('1171'X),                                             
  679            1   |     |            IOSB,STOPSC,,INBUF,%VAL(1),,,,)                                                             
  680   4 *          |     |   ELSE                                                                                                 
  681   5            |     |      CALL SYS$QIOW(,%VAL(INCHAN),%VAL('30'X),,,,                                                       
  682            1   |     |            BUFFER(PBUF+1),%VAL(LENREC),,,,)                                                            
  683   5            |     |      CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),%VAL('1171'X),                                             
  684            1   |     |            IOSB,STOPSC,,INBUF,%VAL(1),,,,)                                                             
  685   5 *          |     |      IF (BUFFER(PBUF) .EQ. '1')                                                                        
  686   6 *          |     |         EXECUTE (SCROLL_BLANK_LINE_PRE)                                                                
  687   6 *          |     |         EXECUTE (SCROLL_BLANK_LINE_PRE)                                                                
  688   5 *          |     |      ELSE                                                                                              
  689   6 *          |     |         IF (BUFFER(PBUF) .EQ. '0')                                                                     
  690   7 *          |     |            EXECUTE (SCROLL_BLANK_LINE_PRE)                                                             
  691   6 *          |     |         ENDIF                                                                                          
  692   5 *          |     |      ENDIF                                                                                             
  693   4 *          |     |   ENDIF                                                                                                
  694   3 *          |     |END DO FOREVER                                                                                          
                     |     +--------------------------------------------------------------------------------------------------------
  695   2 *          |   ELSE                                                                                                       
  696       C        |                              C                                                                               
  697       C        |                              C---   Variable length records                                                  
  698       C        |                              C                                                                               
                     |     +--------------------------------------------------------------------------------------------------------
  699   3 *          |     |DO FOR I=PBUF,2,-1                                                                                      
  700   4 *          |     |   IF (.NOT.I)                                                                                          
  701   5 *          |     |      IF (BUFFER(I) .EQ. 0)                                                                             
  702   6 *          |     |         CYCLE IF (I .GT. ISAVE)                                                                        
                     |     |<---------                                                                                              
  703   6            |     |         LEN = LIB$EXTZV(0,8,BUFFER(I-1))                                                               
  704   6 *          |     |         IF ((LEN - FSZ) .EQ. 0)                                                                        
  705   7 *          |     |            EXECUTE (SCROLL_BLANK_LINE_POST)                                                            
  706   7            |     |            ISAVE = I - 4 - FSZ                                                                         
  707   7 *          |     |            CYCLE                                                                                       
                     |     |<------------                                                                                           
  708   6 *          |     |         ENDIF                                                                                          
  709   6 *          |     |         IF (LEN)                                                                                       
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   18


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  710   7            |     |            ILEN = LEN + 1                                                                              
  711   6 *          |     |         ELSE                                                                                           
  712   7            |     |            ILEN = LEN                                                                                  
  713   6 *          |     |         ENDIF                                                                                          
  714   6 *          |     |         IF (BUFFER(I+ILEN+2) .EQ. 0 .AND. LEN .LE. LRL .AND.                                           
  715            1   |     |               LIB$EXTZV(0,8,BUFFER(I+ILEN+1)) .LE. LRL)                                                
  716   7            |     |            ISAVE = I - 4 - FSZ                                                                         
  717   7 *          |     |            IF (RAT .EQ. 3 .OR. RAT .EQ. -3)                                                            
  718   8 *          |     |               IF (LIB$EXTZV(7,1,BUFFER(I+2)) .EQ. 0)                                                   
  719   9            |     |                  J = LIB$EXTZV(0,7,BUFFER(I+2)) - 1                                                    
  720   9 *          |     |                  IF (J .GT. 0)                                                                         
                     |     |                    +-----------------------------------------------------------------------------------
  721  10 *          |     |                    |DO FOR K=1,J                                                                       
  722  11 *          |     |                    |   EXECUTE (SCROLL_BLANK_LINE_POST)                                                
  723  10 *          |     |                    |END DO FOR                                                                         
                     |     |                    +-----------------------------------------------------------------------------------
  724   9 *          |     |                  ENDIF                                                                                 
  725   8 *          |     |               ENDIF                                                                                    
  726   8 *          |     |               EXECUTE (SCROLL_DOWN)                                                                    
  727   8            |     |               CALL SYS$QIOW(,%VAL(INCHAN),%VAL('30'X),,,,                                              
  728            1   |     |                     BUFFER(I+FSZ+1),%VAL(LEN-FSZ),,,,)                                                 
  729   8            |     |               CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),                                                  
  730            1   |     |                     %VAL('1171'X),IOSB,STOPSC,,INBUF,                                                  
  731            2   |     |                     %VAL(1),,,,)                                                                       
  732   8 *          |     |               IF (LIB$EXTZV(7,1,BUFFER(I+1)) .EQ. 0)                                                   
  733   9            |     |                  J = LIB$EXTZV(0,7,BUFFER(I+1))                                                        
  734   9 *          |     |                  IF (J .NE. 0)                                                                         
                     |     |                    +-----------------------------------------------------------------------------------
  735  10 *          |     |                    |DO FOR K=1,J                                                                       
  736  11 *          |     |                    |   EXECUTE (SCROLL_BLANK_LINE_VAR_PRE)                                             
  737  10 *          |     |                    |END DO FOR                                                                         
                     |     |                    +-----------------------------------------------------------------------------------
  738   9 *          |     |                  ENDIF                                                                                 
  739   8 *          |     |               ENDIF                                                                                    
  740   7 *          |     |            ELSE                                                                                        
  741   8 *          |     |               EXECUTE (SCROLL_DOWN)                                                                    
  742   8 *          |     |               IF (RAT .EQ. 2 .OR. RAT .EQ. -2)                                                         
  743   9 *          |     |                  IF (LEN .NE. 1)                                                                       
  744  10 *          |     |                     IF (LENLMT .LT. 0)                                                                 
  745  11 *          |     |                        IF (LENLMT .GT. (1 + FSZ - LEN))                                                
                     |     |                          +-----------------------------------------------------------------------------
  746  12 *          |     |                          |DO FOR M=1,(FSZ-LEN)/LENLMT                                                  
  747  13 *          |     |                          |   EXECUTE (SCROLL_DOWN)                                                     
  748  12 *          |     |                          |END DO FOR                                                                   
                     |     |                          +-----------------------------------------------------------------------------
  749  12            |     |                           M = LEN - FSZ - 1                                                            
  750  11 *          |     |                        ELSE                                                                            
  751  12            |     |                           M = -LENLMT                                                                  
  752  11 *          |     |                        ENDIF                                                                           
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   19


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  753  10 *          |     |                     ELSE                                                                               
  754  11 *          |     |                        IF (LENLMT .GT. (LEN - FSZ - 1))                                                
  755  12            |     |                           M = LEN - FSZ - 1                                                            
  756  11 *          |     |                        ELSE                                                                            
  757  12            |     |                           M = LENLMT                                                                   
  758  11 *          |     |                        ENDIF                                                                           
  759  10 *          |     |                     ENDIF                                                                              
  760  10            |     |                     CALL SYS$QIOW(,%VAL(INCHAN),%VAL('30'X),,,                                         
  761            1   |     |                           ,BUFFER(I+FSZ+2),%VAL(M),,,,)                                                
  762   9 *          |     |                  ENDIF                                                                                 
  763   9            |     |                  CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),                                               
  764            1   |     |                        %VAL('1171'X),IOSB,STOPSC,,                                                     
  765            2   |     |                        INBUF,%VAL(1),,,,)                                                              
  766   9 *          |     |                  IF (BUFFER(I+FSZ+1) .EQ. '1')                                                         
  767  10 *          |     |                     EXECUTE (SCROLL_BLANK_LINE_VAR_PRE)                                                
  768  10 *          |     |                     EXECUTE (SCROLL_BLANK_LINE_VAR_PRE)                                                
  769   9 *          |     |                  ELSE                                                                                  
  770  10 *          |     |                     IF (BUFFER(I+FSZ+1) .EQ. '0')                                                      
  771  11 *          |     |                        EXECUTE (SCROLL_BLANK_LINE_VAR_PRE)                                             
  772  10 *          |     |                     ENDIF                                                                              
  773   9 *          |     |                  ENDIF                                                                                 
  774   8 *          |     |               ELSE                                                                                     
  775   9 *          |     |                  IF (LENLMT .LT. 0)                                                                    
  776  10 *          |     |                     IF (LENLMT .GT. (FSZ - LEN))                                                       
                     |     |                       +--------------------------------------------------------------------------------
  777  11 *          |     |                       |DO FOR M=1,(FSZ-LEN-1)/LENLMT                                                   
  778  12 *          |     |                       |   EXECUTE (SCROLL_DOWN)                                                        
  779  11 *          |     |                       |END DO FOR                                                                      
                     |     |                       +--------------------------------------------------------------------------------
  780  11            |     |                        M = LEN - FSZ                                                                   
  781  10 *          |     |                     ELSE                                                                               
  782  11            |     |                        M = -LENLMT                                                                     
  783  10 *          |     |                     ENDIF                                                                              
  784   9 *          |     |                  ELSE                                                                                  
  785  10 *          |     |                     IF (LENLMT .GT. (LEN - FSZ))                                                       
  786  11            |     |                        M = LEN - FSZ                                                                   
  787  10 *          |     |                     ELSE                                                                               
  788  11            |     |                        M = LENLMT                                                                      
  789  10 *          |     |                     ENDIF                                                                              
  790   9 *          |     |                  ENDIF                                                                                 
  791   9            |     |                  CALL SYS$QIOW(,%VAL(INCHAN),%VAL('30'X),,,,                                           
  792            1   |     |                        BUFFER(I+FSZ+1),%VAL(M),,,,)                                                    
  793   9            |     |                  CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),                                               
  794            1   |     |                        %VAL('1171'X),IOSB,STOPSC,,                                                     
  795            2   |     |                        INBUF,%VAL(1),,,,)                                                              
  796   8 *          |     |               ENDIF                                                                                    
  797   8 *          |     |               EXECUTE (WAIT_FOR_SCROLL)                                                                
  798   8 *          |     |               IF (STOPIT)                                                                              
  799   9 *          |     |                  EXECUTE (VAR_BACK_SCROLL_EXIT)                                                        
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   20


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  800   8 *          |     |               ENDIF                                                                                    
  801   7 *          |     |            ENDIF                                                                                       
  802   6 *          |     |         ENDIF                                                                                          
  803   5 *          |     |      ENDIF                                                                                             
  804   4 *          |     |   ENDIF                                                                                                
  805   3 *          |     |END DO FOR                                                                                              
                     |     +--------------------------------------------------------------------------------------------------------
  806   2 *          |   ENDIF                                                                                                      
  807   2            |   BLK = BLK - 2                                                                                              
  808   2 *          |   IF (BLK .LE. 0)                                                                                            
  809   3 *          |      EXECUTE (HIT_BEGINNING)                                                                                 
  810   3 *          |      EXECUTE (GET_LAST_LINE)                                                                                 
  811   3 *          |      EXECUTE (FREE_FLAGS_EXIT)                                                                               
  812   3            |      RETURN                                                                                                  
              <--------------                                                                                                       
  813   2 *          |   ENDIF                                                                                                      
                     |  +-----------------------------------------------------------------------------------------------------------
  814   2 *          |  |DO FOR I=1,150                                                                                             
  815   3            |  |   HBUFER(I) = BUFFER(I)                                                                                   
  816   2 *          |  |END DO FOR                                                                                                 
                     |  +-----------------------------------------------------------------------------------------------------------
  817   2            |   CALL BLKIN(BLK,PBUF,BUFFER)                                                                                
  818   2 *          |   IF (PBUF .EQ. 0)                                                                                           
  819   3 *          |      EXECUTE (READ_ERROR)                                                                                    
  820   2 *          |   ENDIF                                                                                                      
                     |  +-----------------------------------------------------------------------------------------------------------
  821   2 *          |  |DO FOR I=1,150                                                                                             
  822   3            |  |   BUFFER(PBUF+I) = HBUFER(I)                                                                              
  823   2 *          |  |END DO FOR                                                                                                 
                     |  +-----------------------------------------------------------------------------------------------------------
  824   2            |   ISAVE = PBUF                                                                                               
  825   2            |   NBUF = PBUF + 150                                                                                          
  826   1 *          |END DO FOREVER                                                                                                
                     +--------------------------------------------------------------------------------------------------------------
  827     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   21


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  828     *        PROCEDURE (CANCEL_COMMAND)                                                                                       
  829       C                                       CP    This routine is used to terminate either line jumps or searches on        
  830       C                                       CP    input of a (.                                                             
  831   1             CALL LIB$FREE_EF(IOFLAG)                                                                                      
  832   1 *           EXECUTE (RESTORE_HELD_SETUP)                                                                                  
  833   1 *           EXECUTE (HOME_PLUS_LEDS_EXIT)                                                                                 
  834   1             RETURN                                                                                                        
              <--------                                                                                                             
  835     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   22


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  836     *        PROCEDURE (CANCEL_STOPPER)                                                                                       
  837       C                                       CP    This routine gets rid of the stopping AST.                                
  838   1             CALL SYS$CANCEL(%VAL(INCHAN))                                                                                 
  839   1             CALL LIB$FREE_EF(IOFLAG)                                                                                      
  840     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   23


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  841     *        PROCEDURE (ERROR_EXIT)                                                                                           
  842       C                                       CP    This routine rings the terminal bell then resets the LEDs (#3 on)         
  843       C                                       CP    and returns.                                                              
  844   1 *           EXECUTE (CANCEL_STOPPER)                                                                                      
  845   1             CALL WORKNG(.FALSE.)                                                                                          
  846   1             CALL LIB$PUT_SCREEN(CHAR(BELL))                                                                               
  847   1 *           IF (VT100)                                                                                                    
  848   2                CALL LIB$PUT_SCREEN(CHAR(ESC)//'[0;3q')                                                                    
  849   2                IF (DIRECT .LT. 0) CALL LIB$PUT_SCREEN(CHAR(ESC)//'[2q')                                                   
  850   2                IF (RANGE(1,1) .NE. 0 .AND. RANGE(1,2) .NE. 0)                                                             
  851            1             CALL LIB$PUT_SCREEN(CHAR(ESC)//'[4q')                                                                
  852   1 *           ENDIF                                                                                                         
  853   1             RETURN                                                                                                        
              <--------                                                                                                             
  854     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   24


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  855     *        PROCEDURE (FIND_NON_CC_LINE)                                                                                     
  856       C                                       CP    This procedure locates a non-carriage-control line near LINEP             
                     +--------------------------------------------------------------------------------------------------------------
  857   1 * 1550     |DO                                                                                                            
                     |  +-----------------------------------------------------------------------------------------------------------
  858   2 *          |  |DO FOR I=LINEP,NLINES                                                                                      
  859   3 *          |  |   UNDO 1550 IF (CCLINE(1,I) .NE. 0)                                                                       
                     <-------                                                                                                       
  860   2 *          |  |END DO FOR                                                                                                 
                     |  +-----------------------------------------------------------------------------------------------------------
                     |  +-----------------------------------------------------------------------------------------------------------
  861   2 *          |  |DO FOR I=LINEP-1,1,-1                                                                                      
  862   3 *          |  |   UNDO 1550 IF (CCLINE(1,I) .NE. 0)                                                                       
                     <-------                                                                                                       
  863   2 *          |  |END DO FOR                                                                                                 
                     |  +-----------------------------------------------------------------------------------------------------------
  864   1 *          |END DO                                                                                                        
                     +--------------------------------------------------------------------------------------------------------------
  865     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   25


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  866     *        PROCEDURE (FORWARD_SEARCH)                                                                                       
  867       C                                       CP    This routine searchs forward through the file for a given string.         
  868       C                                       CP    If it is found the screen is reset to that position, and the LEDs are     
  869       C                                       CP    reset (#3 off), otherwise the position and screen remain unchanged        
  870       C                                       CP    and the LEDs are reset (#3 on).  In either case a return from DOIT        
  871       C                                       CP    is executed.                                                              
  872       C                                       C                                                                               
  873       C                                       C***   First search lines in buffer                                             
  874       C                                       C                                                                               
                     +--------------------------------------------------------------------------------------------------------------
  875   1 * 1750     |DO                                                                                                            
  876   2 *          |   IF (LINEP .LT. NLINES)                                                                                     
                     |     +--------------------------------------------------------------------------------------------------------
  877   3 *          |     |DO FOR I=LINEP+1,NLINES                                                                                 
                     |     |  +-----------------------------------------------------------------------------------------------------
  878   4 *          |     |  |DO FOR JJ=1,10                                                                                       
  879   5 *          |     |  |   UNDO IF (SBFLEN(JJ) .EQ. 0)                                                                       
                     |     |  <----                                                                                                 
  880   5            |     |  |   CALL CONVUP(LINLEN(I),%REF(LINES(I)),%REF(CAPLIN))                                                
  881   5 *          |     |  |   IF (INDEX(CAPLIN(:LINLEN(I)),SRCHBF(JJ)(:SBFLEN(JJ))) .NE.                                        
  882            1   |     |  |         0)                                                                                          
  883   6            |     |  |      NUMBER = I - LINEP                                                                             
  884   6            |     |  |      LINEP = I                                                                                      
  885   6 *          |     |  |      EXECUTE (GET_LAST_LINE)                                                                        
  886   6 *          |     |  |      IF ((NUMBER+LINEP) .LT. PAGEND)                                                                
  887   7 *          |     |  |         EXECUTE (SCROLL_REFRESH_EXIT)                                                               
  888   6 *          |     |  |      ELSE                                                                                           
  889   7 *          |     |  |         EXECUTE (REFRESH_EXIT)                                                                      
  890   6 *          |     |  |      ENDIF                                                                                          
  891   6 *          |     |  |      UNDO 1750                                                                                      
                     <----------------                                                                                              
  892   5 *          |     |  |   ENDIF                                                                                             
  893   4 *          |     |  |END DO FOR                                                                                           
                     |     |  +-----------------------------------------------------------------------------------------------------
  894   3 *          |     |END DO FOR                                                                                              
                     |     +--------------------------------------------------------------------------------------------------------
  895   2 *          |   ENDIF                                                                                                      
  896       C        |                              C                                                                               
  897       C        |                              C***   Then search file                                                         
  898       C        |                              C                                                                               
  899   2 *          |   EXECUTE (HOLD_CURRENT_SETUP)                                                                               
  900   2            |   IBLK = BLK                                                                                                 
  901   2 *          |   IF (NBUF .GT. 0)                                                                                           
  902   3            |      I = NBUF + 1                                                                                            
  903   2 *          |   ELSE                                                                                                       
  904   3            |      I = 1                                                                                                   
  905   2 *          |   ENDIF                                                                                                      
  906   2            |   IDESCR(2) = %LOC(CAPBUF(1))                                                                                
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   26


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

                     |  +-----------------------------------------------------------------------------------------------------------
  907   2 *          |  |DO FOREVER                                                                                                 
  908       C        |  |                           C                                                                               
  909       C        |  |                           C---   Input some buffer                                                        
  910       C        |  |                           C                                                                               
  911   3 *          |  |   IF (IBLK .GT. EBK)                                                                                      
  912   4 *          |  |      EXECUTE (SEARCH_ERROR_EXIT)                                                                          
  913   3 *          |  |   ENDIF                                                                                                   
  914   3 *          |  |   IF (IBLK .LT. (EBK - 6))                                                                                
  915       C        |  |                           C                                                                               
  916       C        |  |                           C===   Not near the end of the file                                             
  917       C        |  |                           C                                                                               
  918   4            |  |      CALL BLKSIN(IBLK,J,BUFFER(I))                                                                        
  919   4 *          |  |      IF (J .EQ. 0)                                                                                        
  920   5 *          |  |         EXECUTE (READ_ERROR)                                                                              
  921   4 *          |  |      ENDIF                                                                                                
  922   3 *          |  |   ELSE                                                                                                    
  923       C        |  |                           C                                                                               
  924       C        |  |                           C===   Near the end of the file                                                 
  925       C        |  |                           C                                                                               
  926   4            |  |      J = 0                                                                                                
                     |  |     +-----------------------------------------------------------------------------------------------------
  927   4 *          |  |     |DO FOR II=IBLK,EBK                                                                                   
  928   5            |  |     |   CALL BLKIN(IBLK,JJ,BUFFER(J+I))                                                                   
  929   5 *          |  |     |   IF (JJ .EQ. 0)                                                                                    
  930   6 *          |  |     |      EXECUTE (READ_ERROR)                                                                           
  931   5 *          |  |     |   ENDIF                                                                                             
  932   5            |  |     |   J = J + JJ                                                                                        
  933   4 *          |  |     |END DO FOR                                                                                           
                     |  |     +-----------------------------------------------------------------------------------------------------
  934   3 *          |  |   ENDIF                                                                                                   
  935   3            |  |   NBUF = J + I - 1                                                                                        
  936   3            |  |   CALL CONVUP(NBUF,BUFFER(1),CAPBUF(1))                                                                   
  937   3            |  |   IDESCR(1) = NBUF                                                                                        
                     |  |  +--------------------------------------------------------------------------------------------------------
  938   3 *          |  |  |DO FOR JJ=1,10                                                                                          
  939   4 *          |  |  |   UNDO IF (SBFLEN(JJ) .EQ. 0)                                                                          
                     |  |  <----                                                                                                    
  940   4            |  |  |   STRPOS(JJ) = LIB$INDEX(IDESCR,SRCHBF(JJ)(:SBFLEN(JJ)))                                               
  941   4 *          |  |  |   IF (STOPIT)                                                                                          
  942   5 *          |  |  |      EXECUTE (CANCEL_COMMAND)                                                                          
  943   4 *          |  |  |   ENDIF                                                                                                
  944   3 *          |  |  |END DO FOR                                                                                              
                     |  |  +--------------------------------------------------------------------------------------------------------
  945   3            |  |   I = NBUF                                                                                                
                     |  |  +--------------------------------------------------------------------------------------------------------
  946   3 *          |  |  |DO FOR K=1,10                                                                                           
  947   4 *          |  |  |   UNDO IF (SBFLEN(K) .EQ. 0)                                                                           
                     |  |  <----                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   27


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  948   4 *          |  |  |   IF (STRPOS(K) .NE. 0 .AND. STRPOS(K) .LT. I)                                                         
  949   5            |  |  |      I = STRPOS(K)                                                                                     
  950   5            |  |  |      JJ = K                                                                                            
  951   4 *          |  |  |   ENDIF                                                                                                
  952   3 *          |  |  |END DO FOR                                                                                              
                     |  |  +--------------------------------------------------------------------------------------------------------
  953   3 *          |  |   IF (I .NE. NBUF)                                                                                        
  954       C        |  |                           C                                                                               
  955       C        |  |                           C===   Found it                                                                 
  956       C        |  |                           C                                                                               
  957   4            |  |      IBLK = IBLK - (NBUF - I)/512 - 2                                                                     
  958   4            |  |      IF (IBLK .LE. 0) IBLK = 1                                                                            
  959   4 *          |  |      IF (IBLK .LE. (EBK - 6))                                                                             
  960   5            |  |         BLK = IBLK                                                                                        
  961   5            |  |         I = 1                                                                                             
  962   4 *          |  |      ELSE                                                                                                 
  963   5            |  |         BLK = EBK - 6                                                                                     
  964   5            |  |         I = 0                                                                                             
  965   4 *          |  |      ENDIF                                                                                                
  966   4 *          |  |      EXECUTE (INPUT_SEVEN_BLOCKS)                                                                         
  967   4            |  |      CALL LINCON(.TRUE.)                                                                                  
  968   4 *          |  |      IF (I .EQ. 0)                                                                                        
                     |  |        +--------------------------------------------------------------------------------------------------
  969   5 *          |  |        |DO FOR I=1,NLINES                                                                                 
  970   6 *          |  |        |   UNDO IF (CCLINE(1,I) .EQ. IBLK)                                                                
                     |  |        <----                                                                                              
  971   5 *          |  |        |END DO FOR                                                                                        
                     |  |        +--------------------------------------------------------------------------------------------------
  972   4 *          |  |      ENDIF                                                                                                
                     |  |     +-----------------------------------------------------------------------------------------------------
  973   4 *          |  |     |DO FOR J=I,NLINES                                                                                    
  974   5            |  |     |   CALL CONVUP(LINLEN(J),%REF(LINES(J)),%REF(CAPLIN))                                                
  975   5 *          |  |     |   IF (INDEX(CAPLIN(:LINLEN(J)),SRCHBF(JJ)(:SBFLEN(JJ)))                                             
  976            1   |  |     |         .NE. 0)                                                                                     
  977   6            |  |     |      LINEP = J                                                                                      
  978   6 *          |  |     |      EXECUTE (GET_LAST_LINE)                                                                        
  979   6 *          |  |     |      EXECUTE (CANCEL_STOPPER)                                                                       
  980   6 *          |  |     |      EXECUTE (REFRESH_EXIT)                                                                         
  981   6 *          |  |     |      UNDO 1750                                                                                      
                     <----------------                                                                                              
  982   5 *          |  |     |   ENDIF                                                                                             
  983   5 *          |  |     |   IF (STOPIT)                                                                                       
  984   6 *          |  |     |      EXECUTE (CANCEL_COMMAND)                                                                       
  985   5 *          |  |     |   ENDIF                                                                                             
  986   4 *          |  |     |END DO FOR                                                                                           
                     |  |     +-----------------------------------------------------------------------------------------------------
  987       C        |  |                           C                                                                               
  988       C        |  |                           C===   Not found                                                                
  989       C        |  |                           C                                                                               
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   28


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  990   3 *          |  |   ENDIF                                                                                                   
  991   3            |  |   I = 31                                                                                                  
                     |  |  +--------------------------------------------------------------------------------------------------------
  992   3 *          |  |  |DO FOR J=1,30                                                                                           
  993   4            |  |  |   BUFFER(J) = CAPBUF(NBUF-30+J)                                                                        
  994   3 *          |  |  |END DO FOR                                                                                              
                     |  |  +--------------------------------------------------------------------------------------------------------
  995   2 *          |  |END DO FOREVER                                                                                             
                     |  +-----------------------------------------------------------------------------------------------------------
  996   1 *          |END DO                                                                                                        
                     +--------------------------------------------------------------------------------------------------------------
  997     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   29


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

  998     *        PROCEDURE (FORWARD_SCROLLING)                                                                                    
  999       C                                       CP    This procedure executes scrolling in a forward direction.                 
 1000   1             LINEP = PAGEND                                                                                                
 1001   1             FIRST = .TRUE.                                                                                                
 1002   1 *           IF (PAGLEN .EQ. (COMLIN - 2))                                                                                 
 1003   2                SECOND = .TRUE.                                                                                            
 1004   1 *           ELSE                                                                                                          
 1005   2                SECOND = .FALSE.                                                                                           
 1006   1 *           ENDIF                                                                                                         
                     +--------------------------------------------------------------------------------------------------------------
 1007   1 *          |DO FOREVER                                                                                                    
 1008       C        |                              C                                                                               
 1009       C        |                              C***   Scroll through line buffer                                               
 1010       C        |                              C                                                                               
 1011   2 *          |   UNDO IF (LINEP .EQ. NLINES)                                                                                
                     <----                                                                                                          
                     |  +-----------------------------------------------------------------------------------------------------------
 1012   2 *          |  |DO FOR I=LINEP+1,NLINES                                                                                    
 1013   3            |  |   CALL SYS$CANCEL(%VAL(INCHAN))                                                                           
 1014   3 *          |  |   IF (FIRST)                                                                                              
 1015   4            |  |      FIRST = .FALSE.                                                                                      
                     |  |     +-----------------------------------------------------------------------------------------------------
 1016   4 *          |  |     |DO FOR J=PAGLEN+1,COMLIN                                                                             
 1017   5            |  |     |   CALL LIB$ERASE_LINE(J,1)                                                                          
 1018   4 *          |  |     |END DO FOR                                                                                           
                     |  |     +-----------------------------------------------------------------------------------------------------
 1019   4 *          |  |      IF (LENLMT .LT. 0)                                                                                   
 1020   5 *          |  |         IF (LINLEN(I) .LE. -LENLMT)                                                                       
 1021   6            |  |            CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I)),PAGLEN+1,1)                                           
 1022   5 *          |  |         ELSE                                                                                              
 1023   6            |  |            CALL LIB$PUT_SCREEN(LINES(I)(:-LENLMT)//CRLF//                                                 
 1024            1   |  |                  LINES(I)(1-LENLMT:LINLEN(I)),PAGLEN+1,1)                                                 
 1025   5 *          |  |         ENDIF                                                                                             
 1026   4 *          |  |      ELSE                                                                                                 
 1027   5 *          |  |         IF (LINLEN(I) .GT. LENLMT)                                                                        
 1028   6            |  |            CALL LIB$PUT_SCREEN(LINES(I)(:LENLMT),PAGLEN+1,1)                                              
 1029   5 *          |  |         ELSE                                                                                              
 1030   6            |  |            CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I)),PAGLEN+1,1)                                           
 1031   5 *          |  |         ENDIF                                                                                             
 1032   4 *          |  |      ENDIF                                                                                                
 1033   3 *          |  |   ELSE                                                                                                    
 1034   4 *          |  |      IF (SECOND)                                                                                          
 1035   5            |  |         SECOND = .FALSE.                                                                                  
 1036   5            |  |         IF (LENLMT .LT. 0 .AND. LINLEN(I) .GT. (-LENLMT))                                                 
 1037            1   |  |               CALL LIB$PUT_SCREEN(CRLF,COMLIN,1)                                                          
 1038   4 *          |  |      ELSE                                                                                                 
 1039   5            |  |         CALL LIB$PUT_SCREEN(CRLF,COMLIN,1)                                                                
 1040   4 *          |  |      ENDIF                                                                                                
 1041   4 *          |  |      IF (LENLMT .LT. 0)                                                                                   
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   30


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1042   5 *          |  |         IF (LINLEN(I) .LE. -LENLMT)                                                                       
 1043   6            |  |            CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I)),COMLIN,1)                                             
 1044   5 *          |  |         ELSE                                                                                              
 1045   6            |  |            CALL LIB$PUT_SCREEN(LINES(I)(:-LENLMT)//CRLF//                                                 
 1046            1   |  |                  LINES(I)(1-LENLMT:LINLEN(I)),COMLIN,1)                                                   
 1047   5 *          |  |         ENDIF                                                                                             
 1048   4 *          |  |      ELSE                                                                                                 
 1049   5 *          |  |         IF (LINLEN(I) .GT. LENLMT)                                                                        
 1050   6            |  |            CALL LIB$PUT_SCREEN(LINES(I)(:LENLMT),COMLIN,1)                                                
 1051   5 *          |  |         ELSE                                                                                              
 1052   6            |  |            CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I)),COMLIN,1)                                             
 1053   5 *          |  |         ENDIF                                                                                             
 1054   4 *          |  |      ENDIF                                                                                                
 1055   3 *          |  |   ENDIF                                                                                                   
 1056   3            |  |   CALL LIB$SET_CURSOR(1,1)                                                                                
 1057   3 *          |  |   EXECUTE (WAIT_FOR_SCROLL_AST)                                                                           
 1058   3 *          |  |   IF (STOPIT)                                                                                             
 1059   4            |  |      PAGEND = I                                                                                           
 1060   4 *          |  |      EXECUTE (GET_START_LINE)                                                                             
 1061   4 *          |  |      IF (.NOT.FIRST)                                                                                      
 1062   5            |  |         CALL LIB$PUT_SCREEN(CRLF,COMLIN,1)                                                                
 1063   5            |  |         IF (PAGLEN .EQ. (COMLIN - 2))                                                                     
 1064            1   |  |               CALL LIB$PUT_SCREEN(CRLF,COMLIN,1)                                                          
 1065   5            |  |         CALL LIB$SET_CURSOR(1,1)                                                                          
 1066   4 *          |  |      ENDIF                                                                                                
 1067   4 *          |  |      EXECUTE (WRITE_BLOCK_NUMBER)                                                                         
 1068   4 *          |  |      EXECUTE (FREE_FLAGS_EXIT)                                                                            
 1069   4            |  |      RETURN                                                                                               
              <-----------------                                                                                                    
 1070   3 *          |  |   ENDIF                                                                                                   
 1071   2 *          |  |END DO FOR                                                                                                 
                     |  +-----------------------------------------------------------------------------------------------------------
 1072       C        |                              C                                                                               
 1073       C        |                              C***   Input to line buffer                                                     
 1074       C        |                              C                                                                               
 1075       C        |                              C                                                                               
 1076       C        |                              C---   End of file                                                              
 1077       C        |                              C                                                                               
 1078   2 *          |   IF (BLK .GT. EBK)                                                                                          
 1079   3            |      PAGEND = NLINES                                                                                         
 1080   3 *          |      EXECUTE (GET_START_LINE)                                                                                
 1081   3            |      CALL SYS$CANCEL(%VAL(INCHAN))                                                                           
 1082   3 *          |      IF (.NOT.FIRST)                                                                                         
 1083   4            |         CALL LIB$PUT_SCREEN(CRLF,COMLIN,1)                                                                   
 1084   4            |         CALL LIB$SET_CURSOR(1,1)                                                                             
 1085   3 *          |      ENDIF                                                                                                   
 1086   3 *          |      EXECUTE (WRITE_BLOCK_NUMBER)                                                                            
 1087   3 *          |      EXECUTE (FREE_FLAGS_EXIT)                                                                               
 1088   3            |      RETURN                                                                                                  
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   31


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

              <--------------                                                                                                       
 1089   2 *          |   ENDIF                                                                                                      
 1090   2 *          |   IF (BLK .LT. (EBK - 6))                                                                                    
 1091       C        |                              C                                                                               
 1092       C        |                              C---   Not near the end of the file                                             
 1093       C        |                              C                                                                               
 1094   3            |      CALL BLKSIN(BLK,I,BUFFER(NBUF+1))                                                                       
 1095   3 *          |      IF (I .EQ. 0)                                                                                           
 1096   4 *          |         EXECUTE (READ_ERROR)                                                                                 
 1097   3 *          |      ENDIF                                                                                                   
 1098   2 *          |   ELSE                                                                                                       
 1099       C        |                              C                                                                               
 1100       C        |                              C---   Near the end of the file                                                 
 1101       C        |                              C                                                                               
 1102   3            |      I = 0                                                                                                   
                     |     +--------------------------------------------------------------------------------------------------------
 1103   3 *          |     |DO FOR J=BLK,EBK                                                                                        
 1104   4            |     |   CALL BLKIN(BLK,II,BUFFER(NBUF+I+1))                                                                  
 1105   4 *          |     |   IF (II .EQ. 0)                                                                                       
 1106   5 *          |     |      EXECUTE (READ_ERROR)                                                                              
 1107   4 *          |     |   ENDIF                                                                                                
 1108   4            |     |   I = I + II                                                                                           
 1109   3 *          |     |END DO FOR                                                                                              
                     |     +--------------------------------------------------------------------------------------------------------
 1110   2 *          |   ENDIF                                                                                                      
 1111   2            |   NBUF = NBUF + I                                                                                            
 1112   2            |   LINEP = NLINES                                                                                             
 1113   2            |   PBUF = 1                                                                                                   
 1114   2            |   CALL LINCON(.FALSE.)                                                                                       
 1115   1 *          |END DO FOREVER                                                                                                
                     +--------------------------------------------------------------------------------------------------------------
 1116     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   32


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1117     *        PROCEDURE (FREE_FLAGS_EXIT)                                                                                      
 1118       C                                       CP    This routine exits from scrolling.  It frees the event flags, cancels     
 1119       C                                       CP    any input requests to the terminal, resets the LEDs (#3 off) and          
 1120       C                                       CP    returns.                                                                  
 1121   1 *           EXECUTE (CANCEL_STOPPER)                                                                                      
 1122   1             CALL LIB$FREE_EF(TIMFLG)                                                                                      
 1123   1 *           EXECUTE (HOME_PLUS_LEDS_EXIT)                                                                                 
 1124     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   33


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1125     *        PROCEDURE (GET_LAST_LINE)                                                                                        
 1126       C                                       CP    This procedure determines PAGEND given LINEP                              
 1127   1             OLDEND = PAGEND                                                                                               
 1128   1 *           IF (LENLMT .LT. 0)                                                                                            
 1129   2                I = PAGLEN                                                                                                 
                        +-----------------------------------------------------------------------------------------------------------
 1130   2 *             |DO FOR PAGEND=LINEP,LINEP+PAGLEN                                                                           
 1131   3               |   I = I + (LINLEN(PAGEND) - 1)/LENLMT - 1                                                                 
 1132   3 *             |   UNDO IF (I .LE. 0)                                                                                      
                        <----                                                                                                       
 1133   2 *             |END DO FOR                                                                                                 
                        +-----------------------------------------------------------------------------------------------------------
 1134   1 *           ELSE                                                                                                          
 1135   2                PAGEND = LINEP + PAGLEN - 1                                                                                
 1136   1 *           ENDIF                                                                                                         
 1137     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   34


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1138     *        PROCEDURE (GET_START_LINE)                                                                                       
 1139       C                                       CP    This procedure determines LINEP given a value for PAGEND                  
 1140   1 *           IF (LENLMT .LT. 0)                                                                                            
 1141   2                I = PAGLEN                                                                                                 
                        +-----------------------------------------------------------------------------------------------------------
 1142   2 *             |DO FOR LINEP=PAGEND,PAGEND-PAGLEN,-1                                                                       
 1143   3               |   I = I + (LINLEN(LINEP) - 1)/LENLMT - 1                                                                  
 1144   3 *             |   UNDO IF (I .LE. 0)                                                                                      
                        <----                                                                                                       
 1145   2 *             |END DO FOR                                                                                                 
                        +-----------------------------------------------------------------------------------------------------------
 1146   1 *           ELSE                                                                                                          
 1147   2                LINEP = PAGEND - PAGLEN + 1                                                                                
 1148   1 *           ENDIF                                                                                                         
 1149     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   35


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1150     *        PROCEDURE (HIT_BEGINNING)                                                                                        
 1151       C                                       CP    This procedure is executed if the position goes past the beginning        
 1152       C                                       CP    of the file.  Everything is reset to the beginning of the file.           
 1153   1             BLK = 1                                                                                                       
 1154   1 *           EXECUTE (INPUT_SEVEN_BLOCKS)                                                                                  
 1155   1             CALL LINCON(.TRUE.)                                                                                           
 1156   1             LINEP = 1                                                                                                     
 1157     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   36


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1158     *        PROCEDURE (HOLD_CURRENT_SETUP)                                                                                   
 1159       C                                       CP    This routine is used in searches.  It holds all the information           
 1160       C                                       CP    needed to recreate the current position and array conditions.             
                     +--------------------------------------------------------------------------------------------------------------
 1161   1 *          |DO FOR I=1,NLINES                                                                                             
 1162   2            |   HLIN(I) = LINES(I)                                                                                         
 1163   2            |   HLINLN(I) = LINLEN(I)                                                                                      
 1164   2            |   HCCLIN(1,I) = CCLINE(1,I)                                                                                  
 1165   2            |   HCCLIN(2,I) = CCLINE(2,I)                                                                                  
 1166   1 *          |END DO FOR                                                                                                    
                     +--------------------------------------------------------------------------------------------------------------
 1167   1             HLINES = NLINES                                                                                               
 1168   1             HLINEP = LINEP                                                                                                
 1169   1 *           IF (NBUF .NE. 0)                                                                                              
                        +-----------------------------------------------------------------------------------------------------------
 1170   2 *             |DO FOR I=1,NBUF                                                                                            
 1171   3               |   HBUFER(I) = BUFFER(I)                                                                                   
 1172   2 *             |END DO FOR                                                                                                 
                        +-----------------------------------------------------------------------------------------------------------
 1173   1 *           ENDIF                                                                                                         
 1174   1             HPBUF = PBUF                                                                                                  
 1175   1             HNBUF = NBUF                                                                                                  
 1176   1             HBLK = BLK                                                                                                    
 1177   1             HSBLK = SBLK                                                                                                  
 1178   1             HLBLK = LBLK                                                                                                  
 1179   1             HLPBUF = LPBUF                                                                                                
 1180   1 *           EXECUTE (QUEUE_STOPPER)                                                                                       
 1181     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   37


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1182     *        PROCEDURE (HOME_PLUS_LEDS_EXIT)                                                                                  
 1183       C                                       CP    This routine homes the cursor, resets the LEDs (#3 off).                  
 1184   1 *           IF (VT100)                                                                                                    
 1185   2                CALL LIB$PUT_SCREEN(CHAR(ESC)//'[0q',1,1)                                                                  
 1186   2                IF (RANGE(1,1) .NE. 0 .AND. RANGE(1,2) .NE. 0)                                                             
 1187            1             CALL LIB$PUT_SCREEN(CHAR(ESC)//'[4q')                                                                
 1188   2                IF (DIRECT .LT. 0) CALL LIB$PUT_SCREEN(CHAR(ESC)//'[2q')                                                   
 1189   1 *           ELSE                                                                                                          
 1190   2                CALL LIB$SET_CURSOR(1,1)                                                                                   
 1191   1 *           ENDIF                                                                                                         
 1192     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   38


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1193     *        PROCEDURE (INPUT_SEVEN_BLOCKS)                                                                                   
 1194       C                                       CP    This procedure inputs seven blocks of data                                
 1195   1 *           IF (BLK .LT. (EBK - 6))                                                                                       
 1196       C                                       C                                                                               
 1197       C                                       C***   Not near the end of the file                                             
 1198       C                                       C                                                                               
 1199   2                SBLK = BLK                                                                                                 
 1200   2                CALL BLKSIN(BLK,NBUF,BUFFER)                                                                               
 1201   2 *              IF (NBUF .EQ. 0)                                                                                           
 1202   3 *                 EXECUTE (READ_ERROR)                                                                                    
 1203   2 *              ENDIF                                                                                                      
 1204   1 *           ELSE                                                                                                          
 1205       C                                       C                                                                               
 1206       C                                       C***   Near the end of the file                                                 
 1207       C                                       C                                                                               
 1208   2                BLK = EBK - 6                                                                                              
 1209   2 *              IF (BLK .GT. 0)                                                                                            
 1210   3                   SBLK = BLK                                                                                              
 1211   3                   CALL BLKSIN(BLK,NBUF,BUFFER)                                                                            
 1212   3 *                 IF (NBUF .EQ. 0)                                                                                        
 1213   4 *                    EXECUTE (READ_ERROR)                                                                                 
 1214   3 *                 ENDIF                                                                                                   
 1215   2 *              ELSE                                                                                                       
 1216       C                                       C                                                                               
 1217       C                                       C***   Do this if file size is < 7 blocks                                       
 1218       C                                       C                                                                               
 1219   3                   BLK = 1                                                                                                 
 1220   3                   SBLK = 1                                                                                                
 1221   3                   NBUF = 0                                                                                                
                           +--------------------------------------------------------------------------------------------------------
 1222   3 *                |DO FOR I=BLK,EBK                                                                                        
 1223   4                  |   CALL BLKIN(BLK,J,BUFFER(NBUF+1))                                                                     
 1224   4 *                |   IF (J .EQ. 0)                                                                                        
 1225   5 *                |      EXECUTE (READ_ERROR)                                                                              
 1226   4 *                |   ENDIF                                                                                                
 1227   4                  |   NBUF = NBUF + J                                                                                      
 1228   3 *                |END DO FOR                                                                                              
                           +--------------------------------------------------------------------------------------------------------
 1229   2 *              ENDIF                                                                                                      
 1230   1 *           ENDIF                                                                                                         
 1231     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   39


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1232     *        PROCEDURE (JUMP_LINES)                                                                                           
 1233       C                                       CP    This procedure moves the current position NUMBER lines.                   
 1234   1 *           IF ((NUMBER + LINEP) .GT. (NLINES - PAGLEN + 1))                                                              
 1235       C                                       C                                                                               
 1236       C                                       C***   Big jumps forward                                                        
 1237       C                                       C                                                                               
 1238   2                SECOND = .FALSE.                                                                                           
                        +-----------------------------------------------------------------------------------------------------------
 1239   2 *             |DO FOREVER                                                                                                 
 1240   3 *             |   IF (BLK .GT. EBK)                                                                                       
 1241   4               |      LINEP = NLINES - PAGLEN + 1                                                                          
 1242   4               |      IF (LINEP .LT. 1) LINEP = 1                                                                          
 1243   4               |      JNUMB = NUMBER                                                                                       
 1244   4 *             |      UNDO                                                                                                 
                        <-------                                                                                                    
 1245   3 *             |   ENDIF                                                                                                   
 1246   3               |   CALL BLKIN(BLK,I,BUFFER(NBUF+1))                                                                        
 1247   3 *             |   IF (I .EQ. 0)                                                                                           
 1248   4 *             |      EXECUTE (READ_ERROR)                                                                                 
 1249   3 *             |   ENDIF                                                                                                   
 1250   3               |   NBUF = NBUF + I                                                                                         
 1251   3               |   PBUF = 1                                                                                                
 1252   3               |   CALL LINCON(.FALSE.)                                                                                    
 1253   3 *             |   IF (STOPIT)                                                                                             
 1254   4 *             |      EXECUTE (CANCEL_COMMAND)                                                                             
 1255   3 *             |   ENDIF                                                                                                   
 1256   3 *             |   IF ((LINEP + NUMBER) .LE. (NLINES - PAGLEN + 1))                                                        
 1257   4               |      LINEP = LINEP + NUMBER                                                                               
 1258   4 *             |      UNDO                                                                                                 
                        <-------                                                                                                    
 1259   3 *             |   ENDIF                                                                                                   
 1260   3 *             |   IF ((NLINES - LINEP) .GE. (600 - 100))                                                                  
 1261   4               |      SECOND = .TRUE.                                                                                      
 1262   4               |      NUMBER = NUMBER - NLINES + LINEP - 1                                                                 
 1263   4               |      LINEP = NLINES                                                                                       
 1264   3 *             |   ENDIF                                                                                                   
 1265   2 *             |END DO FOREVER                                                                                             
                        +-----------------------------------------------------------------------------------------------------------
 1266   2                IF (SECOND) NUMBER = 25                                                                                    
 1267   1 *           ELSE                                                                                                          
 1268   2 *              IF ((NUMBER + LINEP) .LE. 0)                                                                               
 1269       C                                       C                                                                               
 1270       C                                       C***   Big jumps backward                                                       
 1271       C                                       C                                                                               
 1272   3                   NUMBER = -(NUMBER + LINEP)                                                                              
 1273   3                   INUMBR = 1 - LINEP                                                                                      
 1274   3 *                 IF (RFM .EQ. 1 .AND. RAT .NE. 2 .AND. RAT .NE. -2)                                                      
 1275       C                                       C                                                                               
 1276       C                                       C---   Fixed record length with no carriage-control                             
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   40


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1277       C                                       C                                                                               
 1278   4 *                    IF (RAT .LT. 0)                                                                                      
 1279       C                                       C===   No spanned                                                               
 1280   5                         BLK = SBLK - NUMBER*IFSZ/RECBLK - 1                                                               
 1281   5                         J = RECBLK/IFSZ - NUMBER + (SBLK-BLK-1)*RECBLK/IFSZ                                               
 1282   4 *                    ELSE                                                                                                 
 1283       C                                       C===   Spanned                                                                  
 1284   5                         I = 512*(CCLINE(1,1) - 1) + CCLINE(2,1) -                                                         
 1285            1                      IFSZ*NUMBER                                                                                 
 1286   5                         J = LIB$EXTZV(0,8,I)                                                                              
 1287   5                         IF (J .EQ. 0) J = 512                                                                             
 1288   5                         BLK = I/512 + 1                                                                                   
 1289   4 *                    ENDIF                                                                                                
 1290   4 *                    IF (STOPIT)                                                                                          
 1291   5 *                       EXECUTE (CANCEL_COMMAND)                                                                          
 1292   4 *                    ENDIF                                                                                                
 1293   4 *                    IF (BLK .LE. 0)                                                                                      
 1294   5                         BLK = 1                                                                                           
 1295   5                         J = 1                                                                                             
 1296   4 *                    ENDIF                                                                                                
 1297       C                                       C===   Input lines                                                              
 1298   4 *                    EXECUTE (INPUT_SEVEN_BLOCKS)                                                                         
 1299   4                      CALL LINCON(.TRUE.)                                                                                  
 1300   4                      LINEP = J                                                                                            
 1301   4                      NUMBER = 25                                                                                          
 1302   3 *                 ELSE                                                                                                    
 1303       C                                       C                                                                               
 1304       C                                       C---   Variable length records and/or carriage-control                          
 1305       C                                       C                                                                               
                              +-----------------------------------------------------------------------------------------------------
 1306   4 *                   |DO FOR I=1,NLINES                                                                                    
 1307   5 *                   |   UNDO IF (CCLINE(1,I) .NE. 0)                                                                      
                              <----                                                                                                 
 1308   4 *                   |END DO FOR                                                                                           
                              +-----------------------------------------------------------------------------------------------------
 1309   4                      BLK = CCLINE(1,I)                                                                                    
 1310   4                      PBUF = CCLINE(2,I)                                                                                   
 1311   4                      CALL BLKIN(BLK,NBUF,BUFFER)                                                                          
 1312   4 *                    IF (NBUF .EQ. 0)                                                                                     
 1313   5 *                       EXECUTE (READ_ERROR)                                                                              
 1314   4 *                    ENDIF                                                                                                
                              +-----------------------------------------------------------------------------------------------------
 1315   4 * 1810              |DO                                                                                                   
 1316   5                     |   SECOND = .TRUE.                                                                                   
                              |  +--------------------------------------------------------------------------------------------------
 1317   5 * 1820              |  |DO FOREVER                                                                                        
 1318   6 *                   |  |   IF (NUMBER .LT. 0)                                                                             
 1319   7                     |  |      NUMBER = 25                                                                                 
 1320   7 *                   |  |      UNDO                                                                                        
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   41


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

                              |  <-------                                                                                           
 1321   6 *                   |  |   ENDIF                                                                                          
 1322   6 *                   |  |   IF (RFM .EQ. 1)                                                                                
 1323       C                 |  |                  C                                                                               
 1324       C                 |  |                  C===  Fixed length records (must have carriage-control)                         
 1325       C                 |  |                  C                                                                               
 1326   7                     |  |      PBUF = PBUF - IFSZ                                                                          
 1327   7 *                   |  |      IF (PBUF .LT. 1)                                                                            
 1328   8                     |  |         BLK = BLK - 2                                                                            
 1329   8 *                   |  |         IF (BLK .LE. 0)                                                                          
 1330   9 *                   |  |            EXECUTE (HIT_BEGINNING)                                                               
 1331   9 *                   |  |            IF (SECOND)                                                                           
 1332  10                     |  |               NUMBER = INUMBR                                                                    
 1333   9 *                   |  |            ELSE                                                                                  
 1334  10                     |  |               NUMBER = 25                                                                        
 1335   9 *                   |  |            ENDIF                                                                                 
 1336   9 *                   |  |            UNDO 1810                                                                             
                              <----------------                                                                                     
 1337   8 *                   |  |         ENDIF                                                                                    
 1338   8                     |  |         CALL BLKIN(BLK,NBUF,BUFFER)                                                              
 1339   8 *                   |  |         IF (NBUF .EQ. 0)                                                                         
 1340   9 *                   |  |            EXECUTE (READ_ERROR)                                                                  
 1341   8 *                   |  |         ENDIF                                                                                    
 1342   8                     |  |         SECOND = .FALSE.                                                                         
 1343   8                     |  |         PBUF = PBUF + NBUF                                                                       
 1344   7 *                   |  |      ENDIF                                                                                       
 1345   7 *                   |  |      IF (BUFFER(PBUF) .EQ. '1')                                                                  
 1346   8                     |  |         NUMBER = NUMBER - 3                                                                      
 1347   7 *                   |  |      ELSE                                                                                        
 1348   8 *                   |  |         IF (BUFFER(PBUF) .EQ. '0')                                                               
 1349   9                     |  |            NUMBER = NUMBER - 2                                                                   
 1350   8 *                   |  |         ELSE                                                                                     
 1351   9                     |  |            NUMBER = NUMBER - 1                                                                   
 1352   8 *                   |  |         ENDIF                                                                                    
 1353   7 *                   |  |      ENDIF                                                                                       
 1354   6 *                   |  |   ELSE                                                                                           
 1355       C                 |  |                  C                                                                               
 1356       C                 |  |                  C===   Variable length records                                                  
 1357       C                 |  |                  C                                                                               
                              |  |     +--------------------------------------------------------------------------------------------
 1358   7 *                   |  |     |DO FOREVER                                                                                  
                              |  |     |  +-----------------------------------------------------------------------------------------
 1359   8 *                   |  |     |  |DO FOR I=PBUF-1,2,-1                                                                     
 1360   9 *                   |  |     |  |   IF (.NOT.I)                                                                           
 1361  10 *                   |  |     |  |      IF (BUFFER(I) .EQ. 0)                                                              
 1362  11                     |  |     |  |         J = LIB$EXTZV(0,8,BUFFER(I-1))                                                  
 1363  11 *                   |  |     |  |         IF (J .LE. LRL)                                                                 
 1364  12                     |  |     |  |            IF (J) J = J + 1                                                             
 1365  12 *                   |  |     |  |            IF (BUFFER(I+J+2) .EQ. 0)                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   42


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1366  13 *                   |  |     |  |               IF (RAT .EQ. 2 .OR. RAT .EQ. -2)                                          
 1367  14 *                   |  |     |  |               IF (BUFFER(I+FSZ+1) .EQ. '1')                                             
 1368  15                     |  |     |  |               NUMBER = NUMBER - 3                                                       
 1369  14 *                   |  |     |  |               ELSE                                                                      
 1370  15 *                   |  |     |  |               IF (BUFFER(I+FSZ+1) .EQ. '0')                                             
 1371  16                     |  |     |  |               NUMBER = NUMBER - 2                                                       
 1372  15 *                   |  |     |  |               ELSE                                                                      
 1373  16                     |  |     |  |               NUMBER = NUMBER - 1                                                       
 1374  15 *                   |  |     |  |               ENDIF                                                                     
 1375  14 *                   |  |     |  |               ENDIF                                                                     
 1376  13 *                   |  |     |  |               ELSE                                                                      
 1377  14                     |  |     |  |               NUMBER = NUMBER - 1                                                       
 1378  14 *                   |  |     |  |               IF (RAT .EQ. 3 .OR. RAT .EQ. -3)                                          
 1379  15                     |  |     |  |               IF (LIB$EXTZV(7,1,BUFFER(I+1)) .EQ. 0)                                    
 1380            1            |  |     |  |               NUMBER = NUMBER -                                                         
 1381            2            |  |     |  |               LIB$EXTZV(0,7,BUFFER(I+1))                                                
 1382  15                     |  |     |  |               IF (LIB$EXTZV(7,1,BUFFER(I+2)) .EQ. 0)                                    
 1383            1            |  |     |  |               NUMBER = NUMBER -                                                         
 1384            2            |  |     |  |               LIB$EXTZV(0,7,BUFFER(I+2))                                                
 1385  14 *                   |  |     |  |               ENDIF                                                                     
 1386  13 *                   |  |     |  |               ENDIF                                                                     
 1387  13                     |  |     |  |               PBUF = I - 1                                                              
 1388  13 *                   |  |     |  |               CYCLE 1820                                                                
                              |  |<------------------------                                                                         
 1389  12 *                   |  |     |  |            ENDIF                                                                        
 1390  11 *                   |  |     |  |         ENDIF                                                                           
 1391  10 *                   |  |     |  |      ENDIF                                                                              
 1392   9 *                   |  |     |  |   ENDIF                                                                                 
 1393   9 *                   |  |     |  |   IF (STOPIT)                                                                           
 1394  10 *                   |  |     |  |      EXECUTE (CANCEL_COMMAND)                                                           
 1395   9 *                   |  |     |  |   ENDIF                                                                                 
 1396   8 *                   |  |     |  |END DO FOR                                                                               
                              |  |     |  +-----------------------------------------------------------------------------------------
 1397       C                 |  |     |            C===  New block                                                                 
                              |  |     |  +-----------------------------------------------------------------------------------------
 1398   8 *                   |  |     |  |DO FOR I=1,150                                                                           
 1399   9                     |  |     |  |   CAPBUF(I) = BUFFER(I)                                                                 
 1400   8 *                   |  |     |  |END DO FOR                                                                               
                              |  |     |  +-----------------------------------------------------------------------------------------
 1401   8                     |  |     |   BLK = BLK - 2                                                                            
 1402   8 *                   |  |     |   IF (BLK .LE. 0)                                                                          
 1403   9 *                   |  |     |      IF (SECOND)                                                                           
 1404  10                     |  |     |         NUMBER = INUMBR                                                                    
 1405   9 *                   |  |     |      ELSE                                                                                  
 1406  10                     |  |     |         NUMBER = 25                                                                        
 1407   9 *                   |  |     |      ENDIF                                                                                 
 1408   9 *                   |  |     |      EXECUTE (HIT_BEGINNING)                                                               
 1409   9 *                   |  |     |      UNDO 1810                                                                             
                              <----------------                                                                                     
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   43


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1410   8 *                   |  |     |   ENDIF                                                                                    
 1411   8                     |  |     |   CALL BLKIN(BLK,PBUF,BUFFER)                                                              
 1412   8 *                   |  |     |   IF (PBUF .EQ. 0)                                                                         
 1413   9 *                   |  |     |      EXECUTE (READ_ERROR)                                                                  
 1414   8 *                   |  |     |   ENDIF                                                                                    
 1415   8                     |  |     |   SECOND = .FALSE.                                                                         
                              |  |     |  +-----------------------------------------------------------------------------------------
 1416   8 *                   |  |     |  |DO FOR I=1,150                                                                           
 1417   9                     |  |     |  |   BUFFER(PBUF+I) = CAPBUF(I)                                                            
 1418   8 *                   |  |     |  |END DO FOR                                                                               
                              |  |     |  +-----------------------------------------------------------------------------------------
 1419   7 *                   |  |     |END DO FOREVER                                                                              
                              |  |     +--------------------------------------------------------------------------------------------
 1420   6 *                   |  |   ENDIF                                                                                          
 1421   5 *                   |  |END DO FOREVER                                                                                    
                              |  +--------------------------------------------------------------------------------------------------
 1422   5                     |   BLK = BLK - 1                                                                                     
 1423   5                     |   J = PBUF                                                                                          
 1424   5 *                   |   EXECUTE (INPUT_SEVEN_BLOCKS)                                                                      
 1425   5                     |   CALL LINCON(.TRUE.)                                                                               
                              |  +--------------------------------------------------------------------------------------------------
 1426   5 *                   |  |DO FOR I=1,NLINES                                                                                 
 1427   6 *                   |  |   IF (CCLINE(1,I) .EQ. SBLK .AND. CCLINE(2,I) .EQ. J)                                            
 1428   7                     |  |      LINEP = I                                                                                   
 1429   7 *                   |  |      UNDO                                                                                        
                              |  <-------                                                                                           
 1430   6 *                   |  |   ENDIF                                                                                          
 1431   5 *                   |  |END DO FOR                                                                                        
                              |  +--------------------------------------------------------------------------------------------------
 1432   4 *                   |END DO                                                                                               
                              +-----------------------------------------------------------------------------------------------------
 1433   3 *                 ENDIF                                                                                                   
 1434   2 *              ELSE                                                                                                       
 1435       C                                       C                                                                               
 1436       C                                       C---   Jumps within the stored buffer                                           
 1437       C                                       C                                                                               
 1438   3                   LINEP = LINEP + NUMBER                                                                                  
 1439   2 *              ENDIF                                                                                                      
 1440   1 *           ENDIF                                                                                                         
 1441   1 *           EXECUTE (CANCEL_STOPPER)                                                                                      
 1442     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   44


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1443     *        PROCEDURE (OUTPUT_RANGE)                                                                                         
 1444       C                                       CP    This procedure performs the output for the print, list, and append        
 1445       C                                       CP    commands.  Which is being used is determined by the value of PRINT        
 1446       C                                       CP    (-1 = print, 0 = append, 1 = list).                                       
 1447       C                                       C                                                                               
 1448       C                                       C---   Open printer output file                                                 
 1449       C                                       C                                                                               
 1450   1             CALL PRTOPN(PRINT)                                                                                            
 1451   1 *           IF (PRINT .EQ. 47)                                                                                            
 1452   2 *              EXECUTE (ERROR_EXIT)                                                                                       
 1453   1 *           ENDIF                                                                                                         
 1454   1 *           EXECUTE (HOLD_CURRENT_SETUP)                                                                                  
 1455       C                                       C                                                                               
 1456       C                                       C---   Point to right place                                                     
 1457       C                                       C                                                                               
 1458   1 *           IF (NUMFLG)                                                                                                   
 1459   2                NUMBER = DIRECT*ANUMB                                                                                      
 1460   2                RFLAG = .FALSE.                                                                                            
 1461   1 *           ELSE                                                                                                          
 1462   2 *              IF (RANGE(1,2) .EQ. 0)                                                                                     
 1463   3                   NUMBER = PAGLEN                                                                                         
 1464   3                   RFLAG = .FALSE.                                                                                         
 1465   2 *              ELSE                                                                                                       
 1466   3                   RFLAG = .TRUE.                                                                                          
 1467   2 *              ENDIF                                                                                                      
 1468   1 *           ENDIF                                                                                                         
 1469   1 *           IF (RFLAG)                                                                                                    
 1470   2 *              IF (RANGE(1,1) .LT. RANGE(1,2) .OR. (RANGE(1,1) .EQ.                                                       
 1471            1             RANGE(1,2) .AND. RANGE(2,1) .LE. RANGE(2,2)))                                                        
 1472   3                   BLK = RANGE(1,1)                                                                                        
 1473   3                   PBUF = RANGE(2,1)                                                                                       
 1474   3                   IENDPB = RANGE(1,2)                                                                                     
 1475   3                   IENDPP = RANGE(2,2)                                                                                     
 1476   2 *              ELSE                                                                                                       
 1477   3                   BLK = RANGE(1,2)                                                                                        
 1478   3                   PBUF = RANGE(2,2)                                                                                       
 1479   3                   IENDPB = RANGE(1,1)                                                                                     
 1480   3                   IENDPP = RANGE(2,1)                                                                                     
 1481   2 *              ENDIF                                                                                                      
 1482   2                SBLK = BLK                                                                                                 
 1483   2                CALL BLKIN(BLK,NBUF,BUFFER)                                                                                
 1484   2 *              IF (NBUF .EQ. 0)                                                                                           
 1485   3 *                 EXECUTE (READ_ERROR)                                                                                    
 1486   2 *              ENDIF                                                                                                      
 1487   1 *           ELSE                                                                                                          
 1488   2 *              IF (NUMBER .LT. 0)                                                                                         
 1489   3                   INUMB = NUMBER                                                                                          
 1490   3 *                 EXECUTE (FIND_NON_CC_LINE)                                                                              
 1491   3                   IENDPB = CCLINE(1,I)                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   45


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1492   3                   IENDPP = CCLINE(2,I)                                                                                    
 1493   3 *                 EXECUTE (JUMP_LINES)                                                                                    
 1494   3                   NUMBER = -1000                                                                                          
 1495   2 *              ENDIF                                                                                                      
 1496   2 *              EXECUTE (FIND_NON_CC_LINE)                                                                                 
 1497   2                BLK = CCLINE(1,I)                                                                                          
 1498   2                PBUF = CCLINE(2,I)                                                                                         
 1499   2                SBLK = BLK                                                                                                 
 1500   2                CALL BLKIN(BLK,NBUF,BUFFER)                                                                                
 1501   2 *              IF (NBUF .EQ. 0)                                                                                           
 1502   3 *                 EXECUTE (READ_ERROR)                                                                                    
 1503   2 *              ENDIF                                                                                                      
 1504   1 *           ENDIF                                                                                                         
 1505   1             IBLK = SBLK                                                                                                   
 1506       C                                       C                                                                               
 1507       C                                       C---   Print loop                                                               
 1508       C                                       C                                                                               
                     +--------------------------------------------------------------------------------------------------------------
 1509   1 *          |DO FOREVER                                                                                                    
 1510   2 *          |   IF (STOPIT)                                                                                                
 1511   3            |      CALL PRTCLS(STOPIT)                                                                                     
 1512   3 *          |      EXECUTE (RESTORE_HELD_SETUP)                                                                            
 1513   3 *          |      EXECUTE (FREE_FLAGS_EXIT)                                                                               
 1514   3            |      RETURN                                                                                                  
              <--------------                                                                                                       
 1515   2 *          |   ENDIF                                                                                                      
 1516   2 *          |   IF (RFM .EQ. 1)                                                                                            
 1517   3            |      I = FSZ                                                                                                 
 1518   2 *          |   ELSE                                                                                                       
 1519   3            |      I = LIB$EXTZV(0,8,BUFFER(PBUF))                                                                         
 1520   2 *          |   ENDIF                                                                                                      
 1521   2 *          |   IF (I)                                                                                                     
 1522   3            |      K = 1                                                                                                   
 1523   2 *          |   ELSE                                                                                                       
 1524   3            |      K = 0                                                                                                   
 1525   2 *          |   ENDIF                                                                                                      
 1526   2 *          |   IF ((PBUF + I + K - 1) .GT. NBUF .OR. (RFM .NE. 1 .AND.                                                    
 1527            1   |         (PBUF + K + I + 1) .GT. NBUF))                                                                       
 1528   3 *          |      UNDO IF (BLK .GT. EBK)                                                                                  
                     <-------                                                                                                       
                     |     +--------------------------------------------------------------------------------------------------------
 1529   3 *          |     |DO FOR J=PBUF,NBUF                                                                                      
 1530   4            |     |   BUFFER(J-PBUF+1) = BUFFER(J)                                                                         
 1531   3 *          |     |END DO FOR                                                                                              
                     |     +--------------------------------------------------------------------------------------------------------
 1532   3            |      IBLK = BLK                                                                                              
 1533   3            |      CALL BLKIN(BLK,J,BUFFER(NBUF-PBUF+2))                                                                   
 1534   3 *          |      IF (J .EQ. 0)                                                                                           
 1535   4 *          |         EXECUTE (READ_ERROR)                                                                                 
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   46


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1536   3 *          |      ENDIF                                                                                                   
 1537   3 *          |      IF (PBUF .GT. NBUF .AND. RFM .NE. 1)                                                                    
 1538   4            |         I = LIB$EXTZV(0,8,BUFFER(1))                                                                         
 1539   4 *          |         IF (I)                                                                                               
 1540   5            |            K = 1                                                                                             
 1541   4 *          |         ELSE                                                                                                 
 1542   5            |            K = 0                                                                                             
 1543   4 *          |         ENDIF                                                                                                
 1544   3 *          |      ENDIF                                                                                                   
 1545   3            |      INDSFT = PBUF - NBUF - 1                                                                                
 1546   3            |      NBUF = NBUF - PBUF + J + 1                                                                              
 1547   3            |      PBUF = 1                                                                                                
 1548   2 *          |   ENDIF                                                                                                      
 1549   2            |   J = PBUF + INDSFT                                                                                          
 1550   2 *          |   IF (RFM .NE. 1)                                                                                            
 1551   3            |      PBUF = PBUF + 2 + FSZ                                                                                   
 1552   3            |      I = I - FSZ                                                                                             
 1553   2 *          |   ENDIF                                                                                                      
 1554   2 *          |   IF (.NOT.RFLAG)                                                                                            
 1555   3 *          |      IF (RAT .EQ. 2 .OR. RAT .EQ. -2)                                                                        
 1556   4 *          |         IF (BUFFER(PBUF) .EQ. '0')                                                                           
 1557   5            |            NUMBER = NUMBER - 1                                                                               
 1558   4 *          |         ELSE                                                                                                 
 1559   5            |            IF (BUFFER(PBUF) .EQ. '1') NUMBER = NUMBER - 2                                                    
 1560   4 *          |         ENDIF                                                                                                
 1561   3 *          |      ELSE                                                                                                    
 1562   4 *          |         IF (RAT .EQ. 3 .OR. RAT .EQ. -3)                                                                     
 1563   5            |            IF (LIB$EXTZV(7,1,BUFFER(PBUF-2)) .EQ. 0)                                                         
 1564            1   |                  NUMBER = NUMBER - LIB$EXTZV(0,7,BUFFER(PBUF-2))                                             
 1565   5            |            IF (LIB$EXTZV(7,1,BUFFER(PBUF-1)) .EQ. 0)                                                         
 1566            1   |                  NUMBER = NUMBER - LIB$EXTZV(0,7,BUFFER(PBUF-1))                                             
 1567   4 *          |         ENDIF                                                                                                
 1568   3 *          |      ENDIF                                                                                                   
 1569   2 *          |   ENDIF                                                                                                      
 1570   2            |   CALL PRTOUT(I,BUFFER(PBUF))                                                                                
 1571   2            |   IF (.NOT.RFLAG) NUMBER = NUMBER - 1                                                                        
 1572   2            |   PBUF = PBUF + I + K                                                                                        
 1573   2 *          |   UNDO IF ((.NOT.RFLAG .AND. NUMBER .LE. 0) .OR. (RFLAG .AND.                                                
 1574            1   |         (IBLK .GT. IENDPB .OR. (IBLK .LE. IENDPB .AND.                                                       
 1575            2   |         J .GE. (IENDPP + 512*(IENDPB - IBLK))))))                                                            
                     <----                                                                                                          
 1576   1 *          |END DO FOREVER                                                                                                
                     +--------------------------------------------------------------------------------------------------------------
 1577   1             CALL PRTCLS                                                                                                   
 1578   1 *           EXECUTE (RESTORE_HELD_SETUP)                                                                                  
 1579   1 *           EXECUTE (FREE_FLAGS_EXIT)                                                                                     
 1580     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   47


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1581     *        PROCEDURE (QUEUE_STOPPER)                                                                                        
 1582       C                                       CP    This procedure sets up an AST to allow the user to stop an                
 1583       C                                       CP    operation.                                                                
 1584   1             STOPIT = .FALSE.                                                                                              
 1585   1             CALL LIB$GET_EF(IOFLAG)                                                                                       
 1586   1 *           IF (IOFLAG .EQ. -1)                                                                                           
 1587   2                CALL LIB$PUT_SCREEN('Unable to allocate necessary event '//                                                
 1588            1             'flag.  OPERATION ABORTED.',COMLIN,20)                                                               
 1589   2 *              EXECUTE (ERROR_EXIT)                                                                                       
 1590   1 *           ENDIF                                                                                                         
 1591   1             CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),%VAL('1171'X),IOSB,                                                    
 1592            1          STOPSC,,INBUF,%VAL(1),,,,)                                                                              
 1593     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   48


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1594     *        PROCEDURE (READ_ERROR)                                                                                           
 1595       C                                       CP    This procedure terminates program execution with an error message.        
 1596       C                                       CP    It is used when an input error occurs.                                    
 1597   1             CALL RESTRM(INCHAN)                                                                                           
 1598   1             CALL BLKCLS                                                                                                   
 1599   1             CLOSE (UNIT=9)                                                                                                
 1600   1             CALL SYS$DASSGN(%VAL(INCHAN))                                                                                 
 1601   1             CALL LIB$PUT_OUTPUT(CRLF//'ERROR READING FILE')                                                               
 1602   1             CALL EXIT                                                                                                     
 1603     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   49


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1604     *        PROCEDURE (REFRESH_EXIT)                                                                                         
 1605       C                                       CP    This procedure refreshes the screen (puts up a new set of lines           
 1606       C                                       CP    corresponding to the current line position), resets the LEDs (#3          
 1607       C                                       CP    off).                                                                     
 1608   1             CALL WORKNG(.FALSE.)                                                                                          
 1609   1 *           IF (NLINES .LT. PAGEND)                                                                                       
                        +-----------------------------------------------------------------------------------------------------------
 1610   2 *             |DO FOREVER                                                                                                 
 1611   3 *             |   IF (BLK .GT. EBK)                                                                                       
 1612   4               |      PAGEND = NLINES                                                                                      
 1613   4 *             |      UNDO                                                                                                 
                        <-------                                                                                                    
 1614   3 *             |   ELSE                                                                                                    
 1615   4               |      CALL BLKIN(BLK,I,BUFFER(NBUF+1))                                                                     
 1616   4 *             |      IF (I .EQ. 0)                                                                                        
 1617   5 *             |         EXECUTE (READ_ERROR)                                                                              
 1618   4 *             |      ENDIF                                                                                                
 1619   4               |      NBUF = NBUF + I                                                                                      
 1620   4               |      PBUF = 1                                                                                             
 1621   4               |      CALL LINCON(.FALSE.)                                                                                 
 1622   4 *             |      UNDO IF (NLINES .GE. PAGEND)                                                                         
                        <-------                                                                                                    
 1623   3 *             |   ENDIF                                                                                                   
 1624   2 *             |END DO FOREVER                                                                                             
                        +-----------------------------------------------------------------------------------------------------------
 1625   1 *           ENDIF                                                                                                         
 1626   1             CALL LIB$ERASE_PAGE(1,1)                                                                                      
                     +--------------------------------------------------------------------------------------------------------------
 1627   1 *          |DO FOR I=LINEP,PAGEND                                                                                         
 1628   2 *          |   IF (LENLMT .GT. 0)                                                                                         
 1629   3 *          |      IF (LENLMT .GT. LINLEN(I))                                                                              
 1630   4            |         CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I))//CRLF)                                                      
 1631   3 *          |      ELSE                                                                                                    
 1632   4            |         CALL LIB$PUT_SCREEN(LINES(I)(:LENLMT)//CRLF)                                                         
 1633   3 *          |      ENDIF                                                                                                   
 1634   2 *          |   ELSE                                                                                                       
 1635   3 *          |      IF (LINLEN(I) .LE. -LENLMT)                                                                             
 1636   4            |         CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I))//CRLF)                                                      
 1637   3 *          |      ELSE                                                                                                    
 1638   4            |         CALL LIB$PUT_SCREEN(LINES(I)(:-LENLMT)//CRLF//                                                       
 1639            1   |               LINES(I)(1-LENLMT:LINLEN(I))//CRLF)                                                            
 1640   3 *          |      ENDIF                                                                                                   
 1641   2 *          |   ENDIF                                                                                                      
 1642   1 *          |END DO FOR                                                                                                    
                     +--------------------------------------------------------------------------------------------------------------
 1643   1 *           EXECUTE (WRITE_BLOCK_NUMBER)                                                                                  
 1644   1 *           EXECUTE (HOME_PLUS_LEDS_EXIT)                                                                                 
 1645     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   50


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1646     *        PROCEDURE (RESTORE_HELD_SETUP)                                                                                   
 1647       C                                       CP    This routine is used in searches.  It restores the position and           
 1648       C                                       CP    arrays that have previously been saved by HOLD_CURRENT_SETUP.             
 1649   1             CALL WORKNG(.FALSE.)                                                                                          
 1650   1             NBUF = HNBUF                                                                                                  
 1651   1             PBUF = HPBUF                                                                                                  
 1652   1             NLINES = HLINES                                                                                               
 1653   1             LINEP = HLINEP                                                                                                
                     +--------------------------------------------------------------------------------------------------------------
 1654   1 *          |DO FOR I=1,NLINES                                                                                             
 1655   2            |   LINES(I) = HLIN(I)                                                                                         
 1656   2            |   LINLEN(I) = HLINLN(I)                                                                                      
 1657   2            |   CCLINE(1,I) = HCCLIN(1,I)                                                                                  
 1658   2            |   CCLINE(2,I) = HCCLIN(2,I)                                                                                  
 1659   1 *          |END DO FOR                                                                                                    
                     +--------------------------------------------------------------------------------------------------------------
 1660   1 *           IF (NBUF .NE. 0)                                                                                              
                        +-----------------------------------------------------------------------------------------------------------
 1661   2 *             |DO FOR I=1,NBUF                                                                                            
 1662   3               |   BUFFER(I) = HBUFER(I)                                                                                   
 1663   2 *             |END DO FOR                                                                                                 
                        +-----------------------------------------------------------------------------------------------------------
 1664   1 *           ENDIF                                                                                                         
 1665   1             BLK = HBLK                                                                                                    
 1666   1             SBLK = HSBLK                                                                                                  
 1667   1             LBLK = HLBLK                                                                                                  
 1668   1             LPBUF = HLPBUF                                                                                                
 1669     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   51


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1670     *        PROCEDURE (SCROLL_BLANK_LINE_POST)                                                                               
 1671       C                                       CP    This routine is used in scrolling backwards in non-FIXfiles.  It prints   
 1672       C                                       CP    a blank line then waits for one timer interval (which is set by the       
 1673       C                                       CP    scrolling speed), and then checks for the stop signal.                    
 1674   1 *           EXECUTE (SCROLL_DOWN)                                                                                         
 1675   1 *           EXECUTE (WAIT_FOR_SCROLL_AST)                                                                                 
 1676   1 *           IF (STOPIT)                                                                                                   
 1677   2 *              EXECUTE (VAR_BACK_SCROLL_EXIT)                                                                             
 1678   1 *           ENDIF                                                                                                         
 1679     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   52


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1680     *        PROCEDURE (SCROLL_BLANK_LINE_PRE)                                                                                
 1681       C                                       CP    This routine is used in scrolling backward in FIX files.  It waits        
 1682       C                                       CP    one timer interval (set by scrolling speed), checks for the stop          
 1683       C                                       CP    signal, then writes one blank line.                                       
 1684   1 *           EXECUTE (WAIT_FOR_SCROLL)                                                                                     
 1685   1 *           IF (STOPIT)                                                                                                   
 1686   2 *              EXECUTE (BACK_SCROLL_EXIT)                                                                                 
 1687   1 *           ENDIF                                                                                                         
 1688   1 *           EXECUTE (SCROLL_DOWN)                                                                                         
 1689   1             CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),%VAL('1171'X),IOSB,                                                    
 1690            1          STOPSC,,INBUF,%VAL(1),,,,)                                                                              
 1691     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   53


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1692     *        PROCEDURE (SCROLL_BLANK_LINE_VAR_PRE)                                                                            
 1693       C                                       CP    This routine is used in scrolling backward in non-FIX files.  It          
 1694       C                                       CP    waits for one timer interval (set by scrolling speed), checks for         
 1695       C                                       CP    the stop signal, and then writes one blank line.                          
 1696   1 *           EXECUTE (WAIT_FOR_SCROLL)                                                                                     
 1697   1 *           IF (STOPIT)                                                                                                   
 1698   2 *              EXECUTE (VAR_BACK_SCROLL_EXIT)                                                                             
 1699   1 *           ENDIF                                                                                                         
 1700   1 *           EXECUTE (SCROLL_DOWN)                                                                                         
 1701   1             CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),%VAL('1171'X),IOSB,                                                    
 1702            1          STOPSC,,INBUF,%VAL(1),,,,)                                                                              
 1703     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   54


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1704     *        PROCEDURE (SCROLL_DOWN)                                                                                          
 1705       C                                       CP    This procedure scrolls the screen down one line and leaves the            
 1706       C                                       CP    cursor at the upper left hand corner.                                     
 1707   1             CALL SYS$CANCEL(%VAL(INCHAN))                                                                                 
 1708   1             CALL LIB$SET_CURSOR(1,1)                                                                                      
 1709   1             CALL LIB$DOWN_SCROLL()                                                                                        
 1710   1             CALL LIB$SET_CURSOR(1,1)                                                                                      
 1711     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   55


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1712     *        PROCEDURE (SCROLL_REFRESH_EXIT)                                                                                  
 1713       C                                       CP    This procedure scrolls to the proper line, resets the LED's (#3           
 1714       C                                       CP    off).                                                                     
 1715   1             CALL WORKNG(.FALSE.)                                                                                          
 1716   1 *           IF (NUMBER .GT. 0)                                                                                            
 1717       C                                       C                                                                               
 1718       C                                       C***   Forward scrolling                                                        
 1719       C                                       C                                                                               
 1720   2 *              IF (OLDEND .NE. PAGEND)                                                                                    
 1721       C                                       C                                                                               
 1722       C                                       C---   Make sure there is something to do                                       
 1723       C                                       C                                                                               
 1724       C                                       C---   Get extra lines if necessary                                             
 1725       C                                       C                                                                               
 1726   3 *                 IF (NLINES .LT. PAGEND)                                                                                 
                              +-----------------------------------------------------------------------------------------------------
 1727   4 *                   |DO FOREVER                                                                                           
 1728   5 *                   |   IF (BLK .GT. EBK)                                                                                 
 1729   6                     |      PAGEND = NLINES                                                                                
 1730   6 *                   |      UNDO                                                                                           
                              <-------                                                                                              
 1731   5 *                   |   ELSE                                                                                              
 1732   6                     |      CALL BLKIN(BLK,I,BUFFER(NBUF+1))                                                               
 1733   6 *                   |      IF (I .EQ. 0)                                                                                  
 1734   7 *                   |         EXECUTE (READ_ERROR)                                                                        
 1735   6 *                   |      ENDIF                                                                                          
 1736   6                     |      NBUF = NBUF + I                                                                                
 1737   6                     |      PBUF = 1                                                                                       
 1738   6                     |      CALL LINCON(.FALSE.)                                                                           
 1739   6 *                   |      UNDO IF (NLINES .GE. PAGEND)                                                                   
                              <-------                                                                                              
 1740   5 *                   |   ENDIF                                                                                             
 1741   4 *                   |END DO FOREVER                                                                                       
                              +-----------------------------------------------------------------------------------------------------
 1742   3 *                 ENDIF                                                                                                   
 1743       C                                       C                                                                               
 1744       C                                       C---   Output new lines                                                         
 1745       C                                       C                                                                               
                           +--------------------------------------------------------------------------------------------------------
 1746   3 *                |DO FOR I=PAGLEN+1,COMLIN                                                                                
 1747   4                  |   CALL LIB$ERASE_LINE(I,1)                                                                             
 1748   3 *                |END DO FOR                                                                                              
                           +--------------------------------------------------------------------------------------------------------
 1749   3                   CALL LIB$SET_CURSOR(PAGLEN+1,1)                                                                         
                           +--------------------------------------------------------------------------------------------------------
 1750   3 *                |DO FOR I=OLDEND+1,PAGEND                                                                                
 1751   4 *                |   IF (LENLMT .GT. 0)                                                                                   
 1752   5 *                |      IF (LINLEN(I) .GE. LENLMT)                                                                        
 1753   6                  |         CALL LIB$PUT_SCREEN(LINES(I)(:LENLMT)//CRLF)                                                   
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   56


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1754   5 *                |      ELSE                                                                                              
 1755   6                  |         CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I))//CRLF)                                                
 1756   5 *                |      ENDIF                                                                                             
 1757   4 *                |   ELSE                                                                                                 
 1758   5 *                |      IF (LINLEN(I) .LE. -LENLMT)                                                                       
 1759   6                  |         CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I))//CRLF)                                                
 1760   5 *                |      ELSE                                                                                              
 1761   6                  |         CALL LIB$PUT_SCREEN(LINES(I)(:-LENLMT)//CRLF//                                                 
 1762            1         |               LINES(I)(1-LENLMT:LINLEN(I))//CRLF)                                                      
 1763   5 *                |      ENDIF                                                                                             
 1764   4 *                |   ENDIF                                                                                                
 1765   3 *                |END DO FOR                                                                                              
                           +--------------------------------------------------------------------------------------------------------
 1766   2 *              ENDIF                                                                                                      
 1767   1 *           ELSE                                                                                                          
 1768   2 *              IF (NUMBER .LT. 0)                                                                                         
 1769       C                                       C                                                                               
 1770       C                                       C***   Backward scrolling                                                       
 1771       C                                       C                                                                               
                           +--------------------------------------------------------------------------------------------------------
 1772   3 *                |DO FOR I=LINEP-NUMBER-1,LINEP,-1                                                                        
 1773   4 *                |   EXECUTE (SCROLL_DOWN)                                                                                
 1774   4 *                |   IF (ABS(LENLMT) .GE. LINLEN(I))                                                                      
 1775   5                  |      CALL LIB$PUT_SCREEN(LINES(I)(:LINLEN(I)))                                                         
 1776   4 *                |   ELSE                                                                                                 
 1777   5 *                |      IF (LENLMT .LT. 0)                                                                                
 1778       C              |                        C                                                                               
 1779       C              |                        C---   This assumes that LINLEN<=2*LENLMT                                       
 1780       C              |                        C                                                                               
 1781   6 *                |         EXECUTE (SCROLL_DOWN)                                                                          
 1782   6                  |         CALL LIB$PUT_SCREEN(LINES(I)(:-LENLMT)//CRLF//                                                 
 1783            1         |               LINES(I)(1-LENLMT:LINLEN(I)))                                                            
 1784   5 *                |      ELSE                                                                                              
 1785   6                  |         CALL LIB$PUT_SCREEN(LINES(I)(:LENLMT))                                                         
 1786   5 *                |      ENDIF                                                                                             
 1787   4 *                |   ENDIF                                                                                                
 1788   3 *                |END DO FOR                                                                                              
                           +--------------------------------------------------------------------------------------------------------
 1789   2 *              ENDIF                                                                                                      
 1790   2                CALL LIB$SET_CURSOR(PAGLEN+1,1)                                                                            
 1791   1 *           ENDIF                                                                                                         
 1792   1 *           EXECUTE (WRITE_BLOCK_NUMBER)                                                                                  
 1793   1 *           EXECUTE (HOME_PLUS_LEDS_EXIT)                                                                                 
 1794     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   57


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1795     *        PROCEDURE (SEARCH_ERROR_EXIT)                                                                                    
 1796       C                                       CP    This procedure stops execution of a search command with an error.         
 1797       C                                       CP    while restoring the held setup and getting rid of the I/O request         
 1798       C                                       CP    to the terminal                                                           
 1799   1 *           EXECUTE (CANCEL_STOPPER)                                                                                      
 1800   1             IF (VT100A) CALL LIB$PUT_SCREEN(REVVID)                                                                       
 1801   1             JJ = 1                                                                                                        
                     +--------------------------------------------------------------------------------------------------------------
 1802   1 *          |DO FOR I=1,10                                                                                                 
 1803   2 *          |   UNDO IF (SBFLEN(I) .EQ. 0 .OR. JJ .GT. (IABS(LENLMT) - 58))                                                
                     <----                                                                                                          
 1804   2            |   CAPLIN(JJ:) = SRCHBF(I)(:SBFLEN(I))                                                                        
 1805   2            |   JJ = SBFLEN(I) + JJ + 2                                                                                    
 1806   1 *          |END DO FOR                                                                                                    
                     +--------------------------------------------------------------------------------------------------------------
 1807   1             IF (JJ .GT. (IABS(LENLMT) - 58)) JJ = IABS(LENLMT) - 58                                                       
 1808   1             CALL LIB$PUT_SCREEN(CAPLIN(:JJ-2)//'  Not found',COMLIN,                                                      
 1809            1          IABS(LENLMT)-JJ-34)                                                                                     
 1810   1             IF (VT100A) CALL LIB$PUT_SCREEN(REGVID,1,1)                                                                   
 1811   1 *           EXECUTE (STOP_WITH_ERROR)                                                                                     
 1812     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   58


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1813     *        PROCEDURE (STOP_WITH_ERROR)                                                                                      
 1814       C                                       CP    This procedure stops execution of a command with an error exit,           
 1815       C                                       CP    while restoring the held setup and getting rid of the I/O request         
 1816       C                                       CP    to the terminal                                                           
 1817   1 *           EXECUTE (CANCEL_STOPPER)                                                                                      
 1818   1 *           EXECUTE (RESTORE_HELD_SETUP)                                                                                  
 1819   1 *           EXECUTE (ERROR_EXIT)                                                                                          
 1820     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   59


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1821     *        PROCEDURE (VAR_BACK_SCROLL_EXIT)                                                                                 
 1822       C                                       CP    This routine exits from scrolling backwards in non-FIX files.  It         
 1823       C                                       CP    sets the position to the correct place in the buffer, then converts       
 1824       C                                       CP    the rest of the buffer, sets the current line position, resets the        
 1825       C                                       CP    LEDs (#3 off) and returns.                                                
 1826   1             NBUF = PBUF                                                                                                   
 1827   1             PBUF = I - 1                                                                                                  
 1828   1 *           EXECUTE (BACK_SCROLL_EXIT)                                                                                    
 1829     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   60


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1830     *        PROCEDURE (WAIT_FOR_SCROLL)                                                                                      
 1831       C                                       CP    This procedure waits for the scrolling interval to pass.                  
 1832   1             CALL SYS$SETIMR(%VAL(TIMFLG),DELTIM,,)                                                                        
 1833   1             CALL SYS$WAITFR(%VAL(TIMFLG))                                                                                 
 1834     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   61


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1835     *        PROCEDURE (WAIT_FOR_SCROLL_AST)                                                                                  
 1836       C                                       CP    This procedure waits for the scrolling interval to pass after             
 1837       C                                       CP    queueing the stop command AST.                                            
 1838   1             CALL SYS$QIO(%VAL(IOFLAG),%VAL(INCHAN),%VAL('1171'X),IOSB,                                                    
 1839            1          STOPSC,,INBUF,%VAL(1),,,,)                                                                              
 1840   1             CALL SYS$SETIMR(%VAL(TIMFLG),DELTIM,,)                                                                        
 1841   1             CALL SYS$WAITFR(%VAL(TIMFLG))                                                                                 
 1842     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   62


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1843     *        PROCEDURE (WORKING)                                                                                              
 1844       C                                       CP    This procedure turns on LED 1 and starts up the working message.          
 1845   1 *           IF (VT100)                                                                                                    
 1846   2                CALL LIB$PUT_SCREEN(CHAR(ESC)//'[0;1q')                                                                    
 1847   2                IF (DIRECT .LT. 0) CALL LIB$PUT_SCREEN(CHAR(ESC)//'[2q')                                                   
 1848   2                IF (RANGE(1,1) .NE. 0 .AND. RANGE(1,2) .NE. 0)                                                             
 1849            1             CALL LIB$PUT_SCREEN(CHAR(ESC)//'[4q')                                                                
 1850   1 *           ENDIF                                                                                                         
 1851   1             CALL WORKNG(.TRUE.)                                                                                           
 1852     *        END PROCEDURE                                                                                                    
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   63


 LINE NST
  NUM LVL S INPUT S-FORTRAN STATEMENT

 1853     *        PROCEDURE (WRITE_BLOCK_NUMBER)                                                                                   
 1854       C                                       CP    This procedure scrolls an extra line if needed (if dividing line          
 1855       C                                       CP    (BOX) switch is chosen, and writes out the block number in the            
 1856       C                                       CP    lower right corner.                                                       
 1857   1             IF (PAGLEN .EQ. (COMLIN - 2)) CALL LIB$PUT_SCREEN(CRLF)                                                       
 1858   1             CALL LIB$ERASE_LINE(COMLIN,1)                                                                                 
 1859       C                                       C                                                                               
 1860       C                                       C***   Output block number                                                      
 1861       C                                       C                                                                               
 1862   1             IF (VT100A) CALL LIB$PUT_SCREEN(REVVID)                                                                       
                     +--------------------------------------------------------------------------------------------------------------
 1863   1 *          |DO FOR I=LINEP,NLINES                                                                                         
 1864   2 *          |   UNDO IF (CCLINE(1,I) .NE. 0)                                                                               
                     <----                                                                                                          
 1865   1 *          |END DO FOR                                                                                                    
                     +--------------------------------------------------------------------------------------------------------------
 1866   1             WRITE (UNIT=TEMPCH,FMT=2000)CCLINE(1,I)                                                                       
 1867   1   2000      FORMAT (I5)                                                                                                   
 1868   1             I = LIB$SKPC(' ',TEMPCH)                                                                                      
 1869   1             CALL LIB$PUT_SCREEN('Block '//TEMPCH(I:),COMLIN,                                                              
 1870            1          IABS(LENLMT)+I-11)                                                                                      
 1871   1             IF (VT100A) CALL LIB$PUT_SCREEN(REGVID,1,1)                                                                   
 1872     *        END PROCEDURE                                                                                                    
 1873              END                                                                                                              
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   64


                                        PROCEDURE CROSS-REFERENCE TABLE

 LINE   PROCEDURE NAME                              REFERENCE LINES

  580  BACKWARD_SCROLLING             
                                323 

  431  BACKWARD_SEARCH                
                                283   287 

  409  BACK_SCROLL_EXIT               
                                665  1686  1828 

  828  CANCEL_COMMAND                 
                                496   575   942   984  1254  1291  1394 

  836  CANCEL_STOPPER                 
                                229   362   401   550   844   979  1121  1441  1799  1817 

  841  ERROR_EXIT                     
                                221   240   268   315   330  1452  1589  1819 

  855  FIND_NON_CC_LINE               
                                242  1490  1496 

  998  FORWARD_SCROLLING              
                                321 

  866  FORWARD_SEARCH                 
                                281   289 

 1117  FREE_FLAGS_EXIT                
                                428   613   811  1068  1087  1513  1579 

 1125  GET_LAST_LINE                  
                                228   261   426   450   549   611   810   885   978 

 1138  GET_START_LINE                 
                               1060  1080 

 1150  HIT_BEGINNING                  
                                809  1330  1408 

 1158  HOLD_CURRENT_SETUP             
                                223   343   464   899  1454 

 1182  HOME_PLUS_LEDS_EXIT            
                                304   333   364   833  1123  1644  1793 

 1193  INPUT_SEVEN_BLOCKS             
                                247   966  1154  1298  1424 

 1232  JUMP_LINES                     
                                227   348  1493 
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   65


                                        PROCEDURE CROSS-REFERENCE TABLE

 LINE   PROCEDURE NAME                              REFERENCE LINES

 1443  OUTPUT_RANGE                   
                                370   377 

 1581  QUEUE_STOPPER                  
                                317  1180 

 1594  READ_ERROR                     
                                418   471   475   524   529   535   568   628   636   819   920   930 
                               1096  1106  1202  1213  1225  1248  1313  1340  1413  1485  1502  1535 
                               1617  1734 

 1604  REFRESH_EXIT                   
                                233   262   387   452   551   889   980 

 1646  RESTORE_HELD_SETUP             
                                363   832  1512  1578  1818 

 1670  SCROLL_BLANK_LINE_POST         
                                705   722 

 1680  SCROLL_BLANK_LINE_PRE          
                                686   687   690 

 1692  SCROLL_BLANK_LINE_VAR_PRE      
                                736   767   768   771 

 1704  SCROLL_DOWN                    
                                591   601   669   672   726   741   747   778  1674  1688  1700  1773 
                               1781 

 1712  SCROLL_REFRESH_EXIT            
                                231   454   887 

 1795  SEARCH_ERROR_EXIT              
                                467   561   912 

 1813  STOP_WITH_ERROR                
                               1811 

 1821  VAR_BACK_SCROLL_EXIT           
                                799  1677  1698 

 1830  WAIT_FOR_SCROLL                
                                663   797  1684  1696 

 1835  WAIT_FOR_SCROLL_AST            
                                609  1057  1675 

 1843  WORKING                        
                                198 
 
 CFG, INC.      S-FORTRAN PROCESSOR VERSION 1.6(9)        DOIT                  30-SEP-83      07:36:41      PAGE   66


                                        PROCEDURE CROSS-REFERENCE TABLE

 LINE   PROCEDURE NAME                              REFERENCE LINES

 1853  WRITE_BLOCK_NUMBER             
                                427   612  1067  1086  1643  1792 

       0 DIAGNOSTICS GENERATED
