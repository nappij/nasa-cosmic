*XEROX* DATA=(1,80),MARGIN=10,BOF=55,FORMAT=P07TCC,END;

                      INTERACTIVE CONTROLS ANALYSIS

                              Version 3.13
                            December 7, 1988


























                                Volume  2

                                 I N C A   

                            REFERENCE  MANUAL












John P. Downing                                        Frank H. Bauer
Old Dominion Systems, Inc.                Goddard Space Flight Center




















































































































                            Abstract


The program INCA (INteractive Controls Analysis) is primarily
intended for the analysis and design of feedback control systems.
Using the interactive graphics capability, the user can quickly
plot a root locus, frequency response, or time response of either
a continuous time system or a sampled data system.  The system
configuration and parameters can be easily changed, allowing the
user to design compensation networks and perform sensitivity
analyses in a very convenient manner.

INCA is designed to be an interactive program for use with both
small and large order systems.  The user can do all transfer
function manipulations and plotting without leaving INCA,
although provisions are made to input transfer functions from
data files.  By using a small set of commands, one can compute
and edit transfer functions, and then examine these functions by
using the ROOT_LOCUS, FREQUENCY_RESPONSE, and TIME_RESPONSE
capabilities.  Long calculations can be done in batch mode and
the results examined interactively.  If an analysis needs to be
repeated several times, a journal file capability has been
included in INCA.  This stores an entire sequence of commands,
generated during an INCA session into a
file which can be accessed later.

The program is capable of working with both continuous time systems and
sampled data systems.  For continuous time systems the Laplace transform
is used, and for sampled data systems the Z-transform or  W-transform is
used.  The capability of converting from a Laplace transform to a Z-
transform and between Z-transform and W-transform is provided. 

A zoom feature is provided to allow closer examination of plots, and a
find feature allows the determination of the gain at a particular point on
a root locus plot.  The graphics package can handle a variety of
terminals, and the program can also be run in batch mode. 

The current version is written for the VAX.  A number of non-standard
features of the VAX Pascal compiler were used, and some effort will be
required to convert the program to run on a different machine.  All
features used have Ada equivalents, however. 












                              Page  i






















































                              Page  ii


                              Preface


For a quick overview and a guided tour of INCA's basic capabilities
read the INCA Primer (Volume I).  Use the INCA Reference Manual
(Volume II) for more information on INCA's versatile capabilities, or
if a description of a specific command is required.  The INCA Theory
Manual (Volume III) provides descriptions of the analytic algorithms
and the program architecture. 

This program was originally based on LSAP (Linear Systems Analysis
Program) developed by D. J. Duven at Iowa State University.  That
program was written in PL/I and was limited for use on IBM machines. 

A second version of LSAP was created in PASCAL by T. P. Weis with help
from D. J. Balaban, H. R. Brand, S. M. Lanning, and R. K. Yamauchi.
The control system engineer responsible for the development was C. J.
Herget. The effort was supported by the enzyme Research Project at
Lawrence Livermore Laboratory under the direction of J. W. Frazier. 

The present program was rewritten and greatly expanded for use on the
VAX computer at Goddard Space Flight Center by J. P. Downing (Old
Dominion Systems, Inc.).  The control system engineer responsible for
the development was F. H. Bauer (Code_712.4).  This project was
carried out by Old Dominion Systems under contracts NAS5-27242 and
NAS5-29177 under the direction of J. D. Azzolini (Code_712.1).  We
would also like to thank M. D. Femiano (Code_712.3) and G. E. Morduch
(ODS) for mathematical help in developing the Z domain algorithms, A.
H. Forbes (ODS) for developing many of the terminal drivers, and C. J.
Thorpe for developing the INCA version 2.0x conversion routines, the
screen editor and the hardcopy drivers.  We would like to thank Tobin 
C. Anthony for the describing function capabilities.  In addition, we
would also like to thank the other members of the Guidance and Control
Branch (Code_712) for their help, ideas, comments, and debugging aid. 


















                              Page  iii






















































                              Page  iv

                         TABLE OF CONTENTS




1           Introduction  . . . . . . . . . . . . . . . . . . . . . .   1
1.1          Files  . . . . . . . . . . . . . . . . . . . . . . . . .   2
1.2          Installation   . . . . . . . . . . . . . . . . . . . . .   2
1.2.1         Files   . . . . . . . . . . . . . . . . . . . . . . . .   3
1.2.2         Terminal Map  . . . . . . . . . . . . . . . . . . . . .   3
1.3          Batch processing   . . . . . . . . . . . . . . . . . . .   5
1.4          Startup-file   . . . . . . . . . . . . . . . . . . . . .   5
1.4.1         Example   . . . . . . . . . . . . . . . . . . . . . . .   6

2           GIN_mode  . . . . . . . . . . . . . . . . . . . . . . . .   7
2.1          Batch operation  . . . . . . . . . . . . . . . . . . . .   7
2.2          Summary  . . . . . . . . . . . . . . . . . . . . . . . .   7
2.3          B-BackZoom   . . . . . . . . . . . . . . . . . . . . . .   8
2.4          D-DeZoom   . . . . . . . . . . . . . . . . . . . . . . .   8
2.5          E-Exit   . . . . . . . . . . . . . . . . . . . . . . . .   9
2.6          K-Keyboard   . . . . . . . . . . . . . . . . . . . . . .   9
2.7          L-Lower left   . . . . . . . . . . . . . . . . . . . . .   9
2.8          P-Plot   . . . . . . . . . . . . . . . . . . . . . . . .  10
2.9          Q-sQuare zoom area   . . . . . . . . . . . . . . . . . .  10
2.10         R-Redraw   . . . . . . . . . . . . . . . . . . . . . . .  10
2.11         U-upper right  . . . . . . . . . . . . . . . . . . . . .  11
2.12         X-exit   . . . . . . . . . . . . . . . . . . . . . . . .  11
2.13         Z-zoom   . . . . . . . . . . . . . . . . . . . . . . . .  11
2.14         #-frame-select   . . . . . . . . . . . . . . . . . . . .  12
2.15         *-toggle-frame-all   . . . . . . . . . . . . . . . . . .  12
2.16         =-frame-select   . . . . . . . . . . . . . . . . . . . .  12
2.17         .-backframe-select   . . . . . . . . . . . . . . . . . .  12
2.18         space-frame-cancel   . . . . . . . . . . . . . . . . . .  13
2.19         ?-frame-display  . . . . . . . . . . . . . . . . . . . .  13
2.20         $-UTILITIES-comm.  . . . . . . . . . . . . . . . . . . .  13
2.21         %-hardcopy   . . . . . . . . . . . . . . . . . . . . . .  13
2.22         !-metafile   . . . . . . . . . . . . . . . . . . . . . .  14
2.23         ^-usertext   . . . . . . . . . . . . . . . . . . . . . .  14
2.24         \-userline   . . . . . . . . . . . . . . . . . . . . . .  14

3           ANALYZE   . . . . . . . . . . . . . . . . . . . . . . . .  15
3.1          DESCRIBING_FUNCTION  . . . . . . . . . . . . . . . . . .  15
3.1.1         MEMORYLESS_SYSTEM   . . . . . . . . . . . . . . . . . .  16
3.1.1.1        DEAD_ZONE  . . . . . . . . . . . . . . . . . . . . . .  16
3.1.1.2        LIMITER  . . . . . . . . . . . . . . . . . . . . . . .  16
3.1.1.3        QUANTIZER  . . . . . . . . . . . . . . . . . . . . . .  17
3.1.1.4        SCHMITT_TRIGGER  . . . . . . . . . . . . . . . . . . .  17
3.1.2         MEMORY_SYSTEM   . . . . . . . . . . . . . . . . . . . .  17
3.1.2.1        PWPF_MODULATOR   . . . . . . . . . . . . . . . . . . .  18
3.2          FREQUENCY_RESPONSE   . . . . . . . . . . . . . . . . . .  18
3.2.1         EXPRESSION  . . . . . . . . . . . . . . . . . . . . . .  19
3.2.2         FUNCTION  . . . . . . . . . . . . . . . . . . . . . . .  19

                              Page  v

3.2.2.1        Sampling Period  . . . . . . . . . . . . . . . . . . .  19
3.2.2.2        Minimum Frequency  . . . . . . . . . . . . . . . . . .  19
3.2.2.3        Maximum Frequency  . . . . . . . . . . . . . . . . . .  20
3.2.2.4        Maximum dB change  . . . . . . . . . . . . . . . . . .  20
3.2.2.5        Max. phase change  . . . . . . . . . . . . . . . . . .  20
3.2.2.6        Max. Nyquist angle   . . . . . . . . . . . . . . . . .  20
3.2.3         STAR  . . . . . . . . . . . . . . . . . . . . . . . . .  21
3.2.3.1        Plant Function   . . . . . . . . . . . . . . . . . . .  21
3.2.3.2        Feedback Function  . . . . . . . . . . . . . . . . . .  22
3.2.3.3        Zero Order Hold  . . . . . . . . . . . . . . . . . . .  22
3.2.3.4        Delay Time   . . . . . . . . . . . . . . . . . . . . .  22
3.2.3.5        Evaluation Levels  . . . . . . . . . . . . . . . . . .  22
3.3          ROOT_LOCUS   . . . . . . . . . . . . . . . . . . . . . .  22
3.3.1         CONTOUR   . . . . . . . . . . . . . . . . . . . . . . .  23
3.3.1.1        Independent var.   . . . . . . . . . . . . . . . . . .  23
3.3.1.2        Minimum value  . . . . . . . . . . . . . . . . . . . .  24
3.3.1.3        Maximum value  . . . . . . . . . . . . . . . . . . . .  24
3.3.2         EXPRESSION  . . . . . . . . . . . . . . . . . . . . . .  24
3.3.3         FUNCTION  . . . . . . . . . . . . . . . . . . . . . . .  24
3.3.3.1        Description  . . . . . . . . . . . . . . . . . . . . .  25
3.3.3.2        Phase Angle  . . . . . . . . . . . . . . . . . . . . .  25
3.3.3.3        Radius Control   . . . . . . . . . . . . . . . . . . .  25
3.3.3.4        Maximum Bend   . . . . . . . . . . . . . . . . . . . .  26
3.3.3.5        Window Size  . . . . . . . . . . . . . . . . . . . . .  26
3.3.4         ROOTS_ONLY  . . . . . . . . . . . . . . . . . . . . . .  26
3.4          TIME_RESPONSE  . . . . . . . . . . . . . . . . . . . . .  26
3.4.1         Input   . . . . . . . . . . . . . . . . . . . . . . . .  27
3.4.1.1        Functions  . . . . . . . . . . . . . . . . . . . . . .  27
3.4.1.2        Zero Order Hold  . . . . . . . . . . . . . . . . . . .  27
3.4.1.3        Delay Time   . . . . . . . . . . . . . . . . . . . . .  27
3.4.1.4        Type of Input  . . . . . . . . . . . . . . . . . . . .  28
3.4.1.5        Type Gain Control  . . . . . . . . . . . . . . . . . .  28
3.4.1.6        Sample Period  . . . . . . . . . . . . . . . . . . . .  28
3.4.1.7        Time Interval  . . . . . . . . . . . . . . . . . . . .  28
3.4.1.8        Number of Substeps   . . . . . . . . . . . . . . . . .  29
3.4.1.9        Stopping time  . . . . . . . . . . . . . . . . . . . .  29
3.4.2         CLOSED_LOOP   . . . . . . . . . . . . . . . . . . . . .  29
3.4.3         FEEDBACK_SAMPLER  . . . . . . . . . . . . . . . . . . .  30
3.4.4         PLANT_SAMPLER   . . . . . . . . . . . . . . . . . . . .  30
3.4.5         SIMPLE_SYSTEM   . . . . . . . . . . . . . . . . . . . .  30

4           CURVE   . . . . . . . . . . . . . . . . . . . . . . . . .  31
4.1          AUDIT  . . . . . . . . . . . . . . . . . . . . . . . . .  31
4.2          DELETE   . . . . . . . . . . . . . . . . . . . . . . . .  31
4.3          LOAD   . . . . . . . . . . . . . . . . . . . . . . . . .  31
4.4          RENAME   . . . . . . . . . . . . . . . . . . . . . . . .  32
4.5          SAVE   . . . . . . . . . . . . . . . . . . . . . . . . .  32
4.6          TABLE  . . . . . . . . . . . . . . . . . . . . . . . . .  32
4.6.1         AUDIT   . . . . . . . . . . . . . . . . . . . . . . . .  33
4.6.2         FILE  . . . . . . . . . . . . . . . . . . . . . . . . .  33
4.6.3         VIEW  . . . . . . . . . . . . . . . . . . . . . . . . .  33
4.7          VIEW   . . . . . . . . . . . . . . . . . . . . . . . . .  33

                              Page  vi

4.8          WORMFORMAT   . . . . . . . . . . . . . . . . . . . . . .  34

5           FUNCTION  . . . . . . . . . . . . . . . . . . . . . . . .  35
5.1          Description  . . . . . . . . . . . . . . . . . . . . . .  35
5.1.1         Fields  . . . . . . . . . . . . . . . . . . . . . . . .  35
5.1.1.1        Name   . . . . . . . . . . . . . . . . . . . . . . . .  36
5.1.1.2        Storage  . . . . . . . . . . . . . . . . . . . . . . .  36
5.1.1.3        Creation   . . . . . . . . . . . . . . . . . . . . . .  36
5.1.1.4        Comment  . . . . . . . . . . . . . . . . . . . . . . .  37
5.1.1.5        Plane  . . . . . . . . . . . . . . . . . . . . . . . .  37
5.1.1.6        Tau  . . . . . . . . . . . . . . . . . . . . . . . . .  37
5.1.1.7        Gain   . . . . . . . . . . . . . . . . . . . . . . . .  38
5.1.1.8        Polynomials  . . . . . . . . . . . . . . . . . . . . .  38
5.1.2         normalization   . . . . . . . . . . . . . . . . . . . .  38
5.1.3         predefined  . . . . . . . . . . . . . . . . . . . . . .  39
5.1.4         reserved-names  . . . . . . . . . . . . . . . . . . . .  39
5.2          AUDIT  . . . . . . . . . . . . . . . . . . . . . . . . .  39
5.3          COMPUTE  . . . . . . . . . . . . . . . . . . . . . . . .  40
5.3.1         Expressions   . . . . . . . . . . . . . . . . . . . . .  40
5.3.2         Evaluation  . . . . . . . . . . . . . . . . . . . . . .  41
5.3.3         Functions   . . . . . . . . . . . . . . . . . . . . . .  41
5.3.4         Predefined  . . . . . . . . . . . . . . . . . . . . . .  41
5.3.5         User-defined  . . . . . . . . . . . . . . . . . . . . .  42
5.3.6         Constants   . . . . . . . . . . . . . . . . . . . . . .  42
5.3.7         + operator  . . . . . . . . . . . . . . . . . . . . . .  42
5.3.8         - operator  . . . . . . . . . . . . . . . . . . . . . .  43
5.3.9         * operator  . . . . . . . . . . . . . . . . . . . . . .  43
5.3.10        / operator  . . . . . . . . . . . . . . . . . . . . . .  43
5.3.11        ^ operator  . . . . . . . . . . . . . . . . . . . . . .  44
5.3.12        $(named) operators  . . . . . . . . . . . . . . . . . .  44
5.4          DELETE   . . . . . . . . . . . . . . . . . . . . . . . .  44
5.5          EDIT   . . . . . . . . . . . . . . . . . . . . . . . . .  44
5.5.1         GRAPHIC   . . . . . . . . . . . . . . . . . . . . . . .  45
5.5.1.1        Commands   . . . . . . . . . . . . . . . . . . . . . .  45
5.5.1.1.1       A-add   . . . . . . . . . . . . . . . . . . . . . . .  46
5.5.1.1.2       B-BackZoom  . . . . . . . . . . . . . . . . . . . . .  46
5.5.1.1.3       C-Comment   . . . . . . . . . . . . . . . . . . . . .  46
5.5.1.1.4       D-DeZoom  . . . . . . . . . . . . . . . . . . . . . .  46
5.5.1.1.5       E-Exit  . . . . . . . . . . . . . . . . . . . . . . .  47
5.5.1.1.6       F-Fix-function  . . . . . . . . . . . . . . . . . . .  47
5.5.1.1.7       G-Gain  . . . . . . . . . . . . . . . . . . . . . . .  47
5.5.1.1.8       H-Help  . . . . . . . . . . . . . . . . . . . . . . .  47
5.5.1.1.9       K-Keyboard  . . . . . . . . . . . . . . . . . . . . .  48
5.5.1.1.10      L-Lower left  . . . . . . . . . . . . . . . . . . . .  48
5.5.1.1.11      N-Name  . . . . . . . . . . . . . . . . . . . . . . .  48
5.5.1.1.12      O-Original  . . . . . . . . . . . . . . . . . . . . .  49
5.5.1.1.13      P-Plane   . . . . . . . . . . . . . . . . . . . . . .  49
5.5.1.1.14      Q-sQuare-zoom-area  . . . . . . . . . . . . . . . . .  49
5.5.1.1.15      R-Redraw  . . . . . . . . . . . . . . . . . . . . . .  49
5.5.1.1.16      S-Sample-Period   . . . . . . . . . . . . . . . . . .  50
5.5.1.1.17      T-Type function   . . . . . . . . . . . . . . . . . .  50
5.5.1.1.18      U-upper right   . . . . . . . . . . . . . . . . . . .  50

                              Page  vii

5.5.1.1.19      W-Width-of-grid   . . . . . . . . . . . . . . . . . .  51
5.5.1.1.20      X-exit  . . . . . . . . . . . . . . . . . . . . . . .  51
5.5.1.1.21      Z-zoom  . . . . . . . . . . . . . . . . . . . . . . .  51
5.5.1.1.22      2..9-Widen-Window   . . . . . . . . . . . . . . . . .  52
5.5.1.1.23      $-QPLOT-command   . . . . . . . . . . . . . . . . . .  52
5.5.1.1.24      %-hardcopy  . . . . . . . . . . . . . . . . . . . . .  52
5.5.1.1.25      ^-usertext  . . . . . . . . . . . . . . . . . . . . .  52
5.5.1.1.26      \-userline  . . . . . . . . . . . . . . . . . . . . .  53
5.5.2         LINE  . . . . . . . . . . . . . . . . . . . . . . . . .  53
5.5.2.1        BODEGAIN_FACTORED  . . . . . . . . . . . . . . . . . .  53
5.5.2.2        DEGREE_POLAR   . . . . . . . . . . . . . . . . . . . .  54
5.5.2.3        FACTORED   . . . . . . . . . . . . . . . . . . . . . .  54
5.5.2.4        POLAR  . . . . . . . . . . . . . . . . . . . . . . . .  55
5.5.2.5        ROOTS  . . . . . . . . . . . . . . . . . . . . . . . .  55
5.5.2.6        UNFACTORED   . . . . . . . . . . . . . . . . . . . . .  55
5.5.2.7        ZETA_OMEGA   . . . . . . . . . . . . . . . . . . . . .  56
5.5.2.8        Commands   . . . . . . . . . . . . . . . . . . . . . .  56
5.5.2.8.1       CHECK   . . . . . . . . . . . . . . . . . . . . . . .  56
5.5.2.8.2       DENOMINATOR   . . . . . . . . . . . . . . . . . . . .  57
5.5.2.8.2.1      ADD  . . . . . . . . . . . . . . . . . . . . . . . .  57
5.5.2.8.2.2      CHANGE   . . . . . . . . . . . . . . . . . . . . . .  57
5.5.2.8.2.3      DEGREE   . . . . . . . . . . . . . . . . . . . . . .  57
5.5.2.8.2.4      VIEW   . . . . . . . . . . . . . . . . . . . . . . .  58
5.5.2.8.3       HEADING   . . . . . . . . . . . . . . . . . . . . . .  58
5.5.2.8.3.1      COMMENT  . . . . . . . . . . . . . . . . . . . . . .  58
5.5.2.8.3.2      GAIN   . . . . . . . . . . . . . . . . . . . . . . .  58
5.5.2.8.3.3      NAME   . . . . . . . . . . . . . . . . . . . . . . .  59
5.5.2.8.3.4      PLANE  . . . . . . . . . . . . . . . . . . . . . . .  59
5.5.2.8.3.5      SAMPLING_PERIOD  . . . . . . . . . . . . . . . . . .  59
5.5.2.8.3.6      VIEW   . . . . . . . . . . . . . . . . . . . . . . .  59
5.5.2.8.4       NUMERATOR   . . . . . . . . . . . . . . . . . . . . .  60
5.5.2.8.4.1      ADD  . . . . . . . . . . . . . . . . . . . . . . . .  60
5.5.2.8.4.2      CHANGE   . . . . . . . . . . . . . . . . . . . . . .  60
5.5.2.8.4.3      DEGREE   . . . . . . . . . . . . . . . . . . . . . .  60
5.5.2.8.4.4      VIEW   . . . . . . . . . . . . . . . . . . . . . . .  61
5.5.2.8.5       VIEW  . . . . . . . . . . . . . . . . . . . . . . . .  61
5.5.2.8.6       XIT   . . . . . . . . . . . . . . . . . . . . . . . .  61
5.5.3         SCREEN  . . . . . . . . . . . . . . . . . . . . . . . .  61
5.6          GENERATE   . . . . . . . . . . . . . . . . . . . . . . .  62
5.6.1         ALGEBRAIC_OPERATOR  . . . . . . . . . . . . . . . . . .  62
5.6.1.1        COS  . . . . . . . . . . . . . . . . . . . . . . . . .  62
5.6.1.2        COSD   . . . . . . . . . . . . . . . . . . . . . . . .  62
5.6.1.3        EXP  . . . . . . . . . . . . . . . . . . . . . . . . .  63
5.6.1.4        EXP10  . . . . . . . . . . . . . . . . . . . . . . . .  63
5.6.1.5        LOG  . . . . . . . . . . . . . . . . . . . . . . . . .  63
5.6.1.6        LOG10  . . . . . . . . . . . . . . . . . . . . . . . .  63
5.6.1.7        SIN  . . . . . . . . . . . . . . . . . . . . . . . . .  64
5.6.1.8        SIND   . . . . . . . . . . . . . . . . . . . . . . . .  64
5.6.1.9        SQRT   . . . . . . . . . . . . . . . . . . . . . . . .  64
5.6.2         CONVERSION  . . . . . . . . . . . . . . . . . . . . . .  64
5.6.2.1        $W   . . . . . . . . . . . . . . . . . . . . . . . . .  65
5.6.2.2        $WH  . . . . . . . . . . . . . . . . . . . . . . . . .  65

                              Page  viii

5.6.2.3        $Z   . . . . . . . . . . . . . . . . . . . . . . . . .  65
5.6.2.4        $ZH  . . . . . . . . . . . . . . . . . . . . . . . . .  66
5.6.3         DYNAMIC_EQUATION  . . . . . . . . . . . . . . . . . . .  67
5.6.4         FILTER  . . . . . . . . . . . . . . . . . . . . . . . .  67
5.6.4.1        BESSEL   . . . . . . . . . . . . . . . . . . . . . . .  67
5.6.4.2        BUTTERWORTH  . . . . . . . . . . . . . . . . . . . . .  68
5.6.4.3        CHEBYSHEV  . . . . . . . . . . . . . . . . . . . . . .  68
5.6.4.4        ITAE   . . . . . . . . . . . . . . . . . . . . . . . .  68
5.6.5         INPUT   . . . . . . . . . . . . . . . . . . . . . . . .  69
5.6.5.1        ACCELERATION   . . . . . . . . . . . . . . . . . . . .  69
5.6.5.2        COMBINATION  . . . . . . . . . . . . . . . . . . . . .  69
5.6.5.3        IMPULSE  . . . . . . . . . . . . . . . . . . . . . . .  69
5.6.5.4        DAMPED_OSCILLATOR  . . . . . . . . . . . . . . . . . .  70
5.6.5.5        RAMP   . . . . . . . . . . . . . . . . . . . . . . . .  70
5.6.5.6        STEP   . . . . . . . . . . . . . . . . . . . . . . . .  70
5.6.6         MISCELLANEOUS   . . . . . . . . . . . . . . . . . . . .  71
5.6.6.1        CLOSED_LOOP  . . . . . . . . . . . . . . . . . . . . .  71
5.6.6.1.1       evaluation  . . . . . . . . . . . . . . . . . . . . .  71
5.6.6.1.2       examples  . . . . . . . . . . . . . . . . . . . . . .  72
5.6.6.2        PD_CONTROL_LAW   . . . . . . . . . . . . . . . . . . .  72
5.6.6.3        PID_CONTROL_LAW  . . . . . . . . . . . . . . . . . . .  72
5.6.7         STATIC_EQUATION   . . . . . . . . . . . . . . . . . . .  73
5.7          LOAD   . . . . . . . . . . . . . . . . . . . . . . . . .  73
5.7.1         Example   . . . . . . . . . . . . . . . . . . . . . . .  73
5.8          SAVE   . . . . . . . . . . . . . . . . . . . . . . . . .  74
5.9          UNDELETE   . . . . . . . . . . . . . . . . . . . . . . .  74
5.10         VIEW   . . . . . . . . . . . . . . . . . . . . . . . . .  74
5.10.1        BODEGAIN_FACTORED   . . . . . . . . . . . . . . . . . .  75
5.10.2        DEGREE_POLAR  . . . . . . . . . . . . . . . . . . . . .  75
5.10.3        EXPAND_PART_FRACT   . . . . . . . . . . . . . . . . . .  76
5.10.4        FACTORED  . . . . . . . . . . . . . . . . . . . . . . .  76
5.10.5        NO_EVALUATION   . . . . . . . . . . . . . . . . . . . .  77
5.10.6        POLAR   . . . . . . . . . . . . . . . . . . . . . . . .  77
5.10.7        ROOTS   . . . . . . . . . . . . . . . . . . . . . . . .  78
5.10.8        SUMMARY   . . . . . . . . . . . . . . . . . . . . . . .  78
5.10.9        UNFACTORED  . . . . . . . . . . . . . . . . . . . . . .  79
5.10.10       ZETA_OMEGA  . . . . . . . . . . . . . . . . . . . . . .  79

6           PROJECT   . . . . . . . . . . . . . . . . . . . . . . . .  80
6.1          AUDIT  . . . . . . . . . . . . . . . . . . . . . . . . .  80
6.2          CHANGE   . . . . . . . . . . . . . . . . . . . . . . . .  81
6.3          LOAD   . . . . . . . . . . . . . . . . . . . . . . . . .  81
6.4          OLD_INCA_LOAD  . . . . . . . . . . . . . . . . . . . . .  81
6.5          SAVE   . . . . . . . . . . . . . . . . . . . . . . . . .  82
6.6          VIEW   . . . . . . . . . . . . . . . . . . . . . . . . .  82

7           MISC  . . . . . . . . . . . . . . . . . . . . . . . . . .  83
7.1          CONVERT_INCA_200   . . . . . . . . . . . . . . . . . . .  83
7.1.1         ALL_INCA_FILES  . . . . . . . . . . . . . . . . . . . .  83
7.1.2         FRE_FILES   . . . . . . . . . . . . . . . . . . . . . .  83
7.1.3         LOC_FILES   . . . . . . . . . . . . . . . . . . . . . .  83
7.1.4         SOU_FILES   . . . . . . . . . . . . . . . . . . . . . .  84

                              Page  ix

7.1.5         TIR_FILES   . . . . . . . . . . . . . . . . . . . . . .  84
7.1.6         WOR_FILES   . . . . . . . . . . . . . . . . . . . . . .  84
7.2          NO_ERROR_TRAP  . . . . . . . . . . . . . . . . . . . . .  85
7.3          ZAP_SCREEN   . . . . . . . . . . . . . . . . . . . . . .  85

8           PLOT  . . . . . . . . . . . . . . . . . . . . . . . . . .  86
8.1          EMPTY  . . . . . . . . . . . . . . . . . . . . . . . . .  86
8.2          NEW  . . . . . . . . . . . . . . . . . . . . . . . . . .  86
8.3          OLD  . . . . . . . . . . . . . . . . . . . . . . . . . .  86
8.4          subcommand   . . . . . . . . . . . . . . . . . . . . . .  87
8.4.1         Summary   . . . . . . . . . . . . . . . . . . . . . . .  87
8.4.2         C-curve label   . . . . . . . . . . . . . . . . . . . .  87
8.4.3         F-Find  . . . . . . . . . . . . . . . . . . . . . . . .  88
8.4.4         G-Gfind   . . . . . . . . . . . . . . . . . . . . . . .  88
8.4.5         H-Help  . . . . . . . . . . . . . . . . . . . . . . . .  88
8.4.6         I-ID label  . . . . . . . . . . . . . . . . . . . . . .  88
8.4.7         M-Margins   . . . . . . . . . . . . . . . . . . . . . .  89
8.4.8         O-Open  . . . . . . . . . . . . . . . . . . . . . . . .  89
8.4.9         S-Select  . . . . . . . . . . . . . . . . . . . . . . .  89
8.4.9.1        Summary  . . . . . . . . . . . . . . . . . . . . . . .  90
8.4.9.2        A-Amplitude Scale  . . . . . . . . . . . . . . . . . .  90
8.4.9.3        B-Bode Plot  . . . . . . . . . . . . . . . . . . . . .  91
8.4.9.4        C-Nichols Plot   . . . . . . . . . . . . . . . . . . .  91
8.4.9.5        D-dB Scale   . . . . . . . . . . . . . . . . . . . . .  91
8.4.9.6        F-Frequency Scale  . . . . . . . . . . . . . . . . . .  91
8.4.9.7        H-Hz Scale   . . . . . . . . . . . . . . . . . . . . .  92
8.4.9.8        I-Infinity Cir. Scale  . . . . . . . . . . . . . . . .  92
8.4.9.9        L-Log Freq. Scale  . . . . . . . . . . . . . . . . . .  92
8.4.9.10       M-Magnitude Plot   . . . . . . . . . . . . . . . . . .  93
8.4.9.11       N-Nyquist Plot   . . . . . . . . . . . . . . . . . . .  93
8.4.9.12       O-Origin   . . . . . . . . . . . . . . . . . . . . . .  93
8.4.9.13       P-Phase Plot   . . . . . . . . . . . . . . . . . . . .  93
8.4.9.14       R-RPS Scale  . . . . . . . . . . . . . . . . . . . . .  94
8.4.9.15       S-Strip Bode Plot  . . . . . . . . . . . . . . . . . .  94
8.4.9.16       V-PopovPlot/Value  . . . . . . . . . . . . . . . . . .  94
8.4.9.17       W-Wrapping   . . . . . . . . . . . . . . . . . . . . .  95
8.4.9.18       ESC-ESCape   . . . . . . . . . . . . . . . . . . . . .  95
8.4.10        T-Type function   . . . . . . . . . . . . . . . . . . .  95
8.4.11        V-Value   . . . . . . . . . . . . . . . . . . . . . . .  96
8.4.12        W-Window  . . . . . . . . . . . . . . . . . . . . . . .  96
8.4.12.1       Summary  . . . . . . . . . . . . . . . . . . . . . . .  97
8.4.12.2       B-send to Back   . . . . . . . . . . . . . . . . . . .  97
8.4.12.3       D-Delete   . . . . . . . . . . . . . . . . . . . . . .  97
8.4.12.4       F-send to Front  . . . . . . . . . . . . . . . . . . .  97
8.4.12.5       I-Inset  . . . . . . . . . . . . . . . . . . . . . . .  98
8.4.12.6       Z-Zoom window  . . . . . . . . . . . . . . . . . . . .  98
8.4.12.7       ESC-ESCape   . . . . . . . . . . . . . . . . . . . . .  98

9           SET   . . . . . . . . . . . . . . . . . . . . . . . . . .  99
9.1          BOUNDARY_GRID  . . . . . . . . . . . . . . . . . . . . .  99
9.2          CLOSENESS_TO_ZERO  . . . . . . . . . . . . . . . . . . .  99
9.3          DB   . . . . . . . . . . . . . . . . . . . . . . . . . .  99

                              Page  x

9.4          EDIT_FORMAT  . . . . . . . . . . . . . . . . . . . . . . 100
9.5          FREQUENCY_PLOT   . . . . . . . . . . . . . . . . . . . . 100
9.6          LOGARITHMIC_FREQ   . . . . . . . . . . . . . . . . . . . 100
9.7          HERTZ  . . . . . . . . . . . . . . . . . . . . . . . . . 101
9.8          LOGO_SHOW  . . . . . . . . . . . . . . . . . . . . . . . 101
9.9          NEARNESS   . . . . . . . . . . . . . . . . . . . . . . . 101
9.10         QZ_ADD_CUTOFF  . . . . . . . . . . . . . . . . . . . . . 101
9.11         ROOT_MAXIMUM   . . . . . . . . . . . . . . . . . . . . . 102
9.12         SEARCH_CIRCLE  . . . . . . . . . . . . . . . . . . . . . 102
9.13         TOP_RIGHT_LABEL  . . . . . . . . . . . . . . . . . . . . 102
9.14         WRAP   . . . . . . . . . . . . . . . . . . . . . . . . . 103
9.15         ZAGGING  . . . . . . . . . . . . . . . . . . . . . . . . 103

10          UTILITIES   . . . . . . . . . . . . . . . . . . . . . . . 104
10.1         input-syntax   . . . . . . . . . . . . . . . . . . . . . 104
10.1.1        special input   . . . . . . . . . . . . . . . . . . . . 104
10.1.2        character   . . . . . . . . . . . . . . . . . . . . . . 105
10.1.3        question  . . . . . . . . . . . . . . . . . . . . . . . 105
10.1.4        string  . . . . . . . . . . . . . . . . . . . . . . . . 105
10.1.5        logical name  . . . . . . . . . . . . . . . . . . . . . 106
10.1.6        integer   . . . . . . . . . . . . . . . . . . . . . . . 106
10.1.7        real numbers  . . . . . . . . . . . . . . . . . . . . . 106
10.1.8        cursor-input  . . . . . . . . . . . . . . . . . . . . . 107
10.2         ABORT  . . . . . . . . . . . . . . . . . . . . . . . . . 107
10.3         BUG_REPORT   . . . . . . . . . . . . . . . . . . . . . . 108
10.4         control-C  . . . . . . . . . . . . . . . . . . . . . . . 108
10.5         COLOR  . . . . . . . . . . . . . . . . . . . . . . . . . 108
10.5.1        color-model   . . . . . . . . . . . . . . . . . . . . . 109
10.5.2        color-spec  . . . . . . . . . . . . . . . . . . . . . . 109
10.5.3        LIST  . . . . . . . . . . . . . . . . . . . . . . . . . 110
10.5.4        SET   . . . . . . . . . . . . . . . . . . . . . . . . . 110
10.5.4.1       BOX  . . . . . . . . . . . . . . . . . . . . . . . . . 110
10.5.4.2       CURSOR_1   . . . . . . . . . . . . . . . . . . . . . . 110
10.5.4.3       CURSOR_2   . . . . . . . . . . . . . . . . . . . . . . 111
10.5.4.4       DARKGRAY   . . . . . . . . . . . . . . . . . . . . . . 111
10.5.4.5       FILL   . . . . . . . . . . . . . . . . . . . . . . . . 111
10.5.4.6       GIN_FRAMEALL   . . . . . . . . . . . . . . . . . . . . 112
10.5.4.7       GIN_FRAMELOCK  . . . . . . . . . . . . . . . . . . . . 112
10.5.4.8       GIN_FRAMESELECT  . . . . . . . . . . . . . . . . . . . 112
10.5.4.9       GIN_NORMAL   . . . . . . . . . . . . . . . . . . . . . 112
10.5.4.10      HEADING  . . . . . . . . . . . . . . . . . . . . . . . 113
10.5.4.11      NUMBER   . . . . . . . . . . . . . . . . . . . . . . . 113
10.5.4.12      OVERBOX  . . . . . . . . . . . . . . . . . . . . . . . 113
10.5.4.13      OVERCHAR   . . . . . . . . . . . . . . . . . . . . . . 113
10.5.4.14      PANE   . . . . . . . . . . . . . . . . . . . . . . . . 114
10.5.4.15      PLOTBACK   . . . . . . . . . . . . . . . . . . . . . . 114
10.5.4.16      POLARGRID  . . . . . . . . . . . . . . . . . . . . . . 114
10.5.4.17      TEXTBACK   . . . . . . . . . . . . . . . . . . . . . . 114
10.5.4.18      TEXTBOX  . . . . . . . . . . . . . . . . . . . . . . . 115
10.5.4.19      TEXTCHAR   . . . . . . . . . . . . . . . . . . . . . . 115
10.5.4.20      WINDOW   . . . . . . . . . . . . . . . . . . . . . . . 115
10.5.4.21      XGRID  . . . . . . . . . . . . . . . . . . . . . . . . 115

                              Page  xi

10.5.4.22      XLABEL   . . . . . . . . . . . . . . . . . . . . . . . 116
10.5.4.23      XSUBGRID   . . . . . . . . . . . . . . . . . . . . . . 116
10.5.4.24      XTICK  . . . . . . . . . . . . . . . . . . . . . . . . 116
10.5.4.25      YGRID  . . . . . . . . . . . . . . . . . . . . . . . . 116
10.5.4.26      YLABEL   . . . . . . . . . . . . . . . . . . . . . . . 117
10.5.4.27      YSUBGRID   . . . . . . . . . . . . . . . . . . . . . . 117
10.5.4.28      YTICK  . . . . . . . . . . . . . . . . . . . . . . . . 117
10.5.4.29      ZOOMBOX  . . . . . . . . . . . . . . . . . . . . . . . 117
10.5.4.30      ZOOMFILL   . . . . . . . . . . . . . . . . . . . . . . 118
10.5.4.31      BOUNDARY   . . . . . . . . . . . . . . . . . . . . . . 118
10.5.4.32      C1   . . . . . . . . . . . . . . . . . . . . . . . . . 118
10.5.4.33      C2   . . . . . . . . . . . . . . . . . . . . . . . . . 118
10.5.4.34      C3   . . . . . . . . . . . . . . . . . . . . . . . . . 119
10.5.4.35      C4   . . . . . . . . . . . . . . . . . . . . . . . . . 119
10.5.4.36      C5   . . . . . . . . . . . . . . . . . . . . . . . . . 119
10.5.4.37      C6   . . . . . . . . . . . . . . . . . . . . . . . . . 119
10.5.4.38      C7   . . . . . . . . . . . . . . . . . . . . . . . . . 120
10.5.4.39      C8   . . . . . . . . . . . . . . . . . . . . . . . . . 120
10.5.4.40      C9   . . . . . . . . . . . . . . . . . . . . . . . . . 120
10.5.4.41      C10  . . . . . . . . . . . . . . . . . . . . . . . . . 120
10.5.4.42      C11  . . . . . . . . . . . . . . . . . . . . . . . . . 120
10.5.4.43      C12  . . . . . . . . . . . . . . . . . . . . . . . . . 121
10.5.4.44      C13  . . . . . . . . . . . . . . . . . . . . . . . . . 121
10.5.4.45      C14  . . . . . . . . . . . . . . . . . . . . . . . . . 121
10.5.4.46      C15  . . . . . . . . . . . . . . . . . . . . . . . . . 121
10.5.4.47      FIND   . . . . . . . . . . . . . . . . . . . . . . . . 122
10.5.4.48      GIN_SELECT   . . . . . . . . . . . . . . . . . . . . . 122
10.5.4.49      GIN_WINDOW   . . . . . . . . . . . . . . . . . . . . . 122
10.5.4.50      HELP   . . . . . . . . . . . . . . . . . . . . . . . . 122
10.5.4.51      LOGOEDGE   . . . . . . . . . . . . . . . . . . . . . . 123
10.5.4.52      LOGOFILL   . . . . . . . . . . . . . . . . . . . . . . 123
10.5.4.53      LOGOLINE   . . . . . . . . . . . . . . . . . . . . . . 123
10.5.4.54      MAGNITUDE  . . . . . . . . . . . . . . . . . . . . . . 123
10.5.4.55      PHASE  . . . . . . . . . . . . . . . . . . . . . . . . 123
10.5.4.56      POLE   . . . . . . . . . . . . . . . . . . . . . . . . 124
10.5.4.57      PROJECT  . . . . . . . . . . . . . . . . . . . . . . . 124
10.5.4.58      T1   . . . . . . . . . . . . . . . . . . . . . . . . . 124
10.5.4.59      T2   . . . . . . . . . . . . . . . . . . . . . . . . . 124
10.5.4.60      T3   . . . . . . . . . . . . . . . . . . . . . . . . . 125
10.5.4.61      T4   . . . . . . . . . . . . . . . . . . . . . . . . . 125
10.5.4.62      T5   . . . . . . . . . . . . . . . . . . . . . . . . . 125
10.5.4.63      T6   . . . . . . . . . . . . . . . . . . . . . . . . . 125
10.5.4.64      T7   . . . . . . . . . . . . . . . . . . . . . . . . . 126
10.5.4.65      T8   . . . . . . . . . . . . . . . . . . . . . . . . . 126
10.5.4.66      T9   . . . . . . . . . . . . . . . . . . . . . . . . . 126
10.5.4.67      T10  . . . . . . . . . . . . . . . . . . . . . . . . . 126
10.5.4.68      TIME   . . . . . . . . . . . . . . . . . . . . . . . . 127
10.5.4.69      ZERO   . . . . . . . . . . . . . . . . . . . . . . . . 127
10.6         EDIT_FILE  . . . . . . . . . . . . . . . . . . . . . . . 127
10.7         FRAME  . . . . . . . . . . . . . . . . . . . . . . . . . 127
10.7.1        SET   . . . . . . . . . . . . . . . . . . . . . . . . . 128
10.7.1.1       AZIMUTH_PERCENT  . . . . . . . . . . . . . . . . . . . 128

                              Page  xii

10.7.1.2       BOX_COLOR  . . . . . . . . . . . . . . . . . . . . . . 129
10.7.1.3       FILL_COLOR   . . . . . . . . . . . . . . . . . . . . . 129
10.7.1.4       HEADING_COLOR  . . . . . . . . . . . . . . . . . . . . 129
10.7.1.5       MAXTICKS   . . . . . . . . . . . . . . . . . . . . . . 129
10.7.1.6       PANE_COLOR   . . . . . . . . . . . . . . . . . . . . . 130
10.7.1.7       RADIAL_PERCENT   . . . . . . . . . . . . . . . . . . . 130
10.7.1.8       SQUAREBOX  . . . . . . . . . . . . . . . . . . . . . . 130
10.7.1.9       SUBTICKSIZE  . . . . . . . . . . . . . . . . . . . . . 130
10.7.1.10      TICKSIZE   . . . . . . . . . . . . . . . . . . . . . . 131
10.7.1.11      WINDOW_COLOR   . . . . . . . . . . . . . . . . . . . . 131
10.7.2        X_AXIS  . . . . . . . . . . . . . . . . . . . . . . . . 131
10.7.2.1       GRID_COLOR   . . . . . . . . . . . . . . . . . . . . . 131
10.7.2.2       LABEL_COLOR  . . . . . . . . . . . . . . . . . . . . . 132
10.7.2.3       NUMBER_COLOR   . . . . . . . . . . . . . . . . . . . . 132
10.7.2.4       ROUNDING   . . . . . . . . . . . . . . . . . . . . . . 132
10.7.2.5       SUBGRID  . . . . . . . . . . . . . . . . . . . . . . . 132
10.7.2.6       SUBTICK  . . . . . . . . . . . . . . . . . . . . . . . 133
10.7.2.7       TICK   . . . . . . . . . . . . . . . . . . . . . . . . 133
10.7.3        Y_AXIS  . . . . . . . . . . . . . . . . . . . . . . . . 133
10.7.3.1       GRID_COLOR   . . . . . . . . . . . . . . . . . . . . . 133
10.7.3.2       LABEL_COLOR  . . . . . . . . . . . . . . . . . . . . . 134
10.7.3.3       NUMBER_COLOR   . . . . . . . . . . . . . . . . . . . . 134
10.7.3.4       ROUNDING   . . . . . . . . . . . . . . . . . . . . . . 134
10.7.3.5       SUBGRID  . . . . . . . . . . . . . . . . . . . . . . . 134
10.7.3.6       SUBTICK  . . . . . . . . . . . . . . . . . . . . . . . 135
10.7.3.7       TICK   . . . . . . . . . . . . . . . . . . . . . . . . 135
10.8         GENERAL_HELP   . . . . . . . . . . . . . . . . . . . . . 135
10.9         HARDCOPY   . . . . . . . . . . . . . . . . . . . . . . . 135
10.9.1        CONFIGURE   . . . . . . . . . . . . . . . . . . . . . . 136
10.9.2        EXTERNAL  . . . . . . . . . . . . . . . . . . . . . . . 136
10.9.2.1       BITMAP   . . . . . . . . . . . . . . . . . . . . . . . 137
10.9.2.1.1      Data Format   . . . . . . . . . . . . . . . . . . . . 137
10.9.2.2       TEK4510  . . . . . . . . . . . . . . . . . . . . . . . 138
10.9.2.2.1      Command Line  . . . . . . . . . . . . . . . . . . . . 139
10.9.2.2.2      Primary   . . . . . . . . . . . . . . . . . . . . . . 139
10.9.2.2.3      Width   . . . . . . . . . . . . . . . . . . . . . . . 139
10.9.2.2.4      Copies  . . . . . . . . . . . . . . . . . . . . . . . 139
10.9.2.2.5      Landscape/Portrait  . . . . . . . . . . . . . . . . . 139
10.9.2.2.6      Text Style  . . . . . . . . . . . . . . . . . . . . . 140
10.9.2.3       TEK4014H   . . . . . . . . . . . . . . . . . . . . . . 140
10.9.2.3.1      Command Line  . . . . . . . . . . . . . . . . . . . . 140
10.9.3        NONE  . . . . . . . . . . . . . . . . . . . . . . . . . 140
10.9.4        LOCAL   . . . . . . . . . . . . . . . . . . . . . . . . 141
10.9.5        VIEW  . . . . . . . . . . . . . . . . . . . . . . . . . 141
10.10        HELP   . . . . . . . . . . . . . . . . . . . . . . . . . 141
10.11        INPUT_SOURCE_FILE  . . . . . . . . . . . . . . . . . . . 142
10.11.1       filename  . . . . . . . . . . . . . . . . . . . . . . . 142
10.11.2       parameters  . . . . . . . . . . . . . . . . . . . . . . 142
10.11.3       example   . . . . . . . . . . . . . . . . . . . . . . . 143
10.12        JOURNAL_KEEP   . . . . . . . . . . . . . . . . . . . . . 143
10.13        MENU   . . . . . . . . . . . . . . . . . . . . . . . . . 143
10.14        OS   . . . . . . . . . . . . . . . . . . . . . . . . . . 144

                              Page  xiii

10.15        QPLOT_INPUT_FILE   . . . . . . . . . . . . . . . . . . . 144
10.15.1       filename  . . . . . . . . . . . . . . . . . . . . . . . 144
10.15.2       parameters  . . . . . . . . . . . . . . . . . . . . . . 145
10.15.3       example   . . . . . . . . . . . . . . . . . . . . . . . 145
10.16        SET  . . . . . . . . . . . . . . . . . . . . . . . . . . 145
10.16.1       Character Sizes   . . . . . . . . . . . . . . . . . . . 146
10.16.2       ASSIST  . . . . . . . . . . . . . . . . . . . . . . . . 146
10.16.3       CHAR_SPACING  . . . . . . . . . . . . . . . . . . . . . 146
10.16.4       DOTSIZE   . . . . . . . . . . . . . . . . . . . . . . . 147
10.16.5       EDITOR  . . . . . . . . . . . . . . . . . . . . . . . . 147
10.16.6       FIELD_WIDTH   . . . . . . . . . . . . . . . . . . . . . 147
10.16.7       HEIGHT  . . . . . . . . . . . . . . . . . . . . . . . . 148
10.16.8       KEYPRESS  . . . . . . . . . . . . . . . . . . . . . . . 148
10.16.9       LINE_SPACING  . . . . . . . . . . . . . . . . . . . . . 148
10.16.10      MACRO   . . . . . . . . . . . . . . . . . . . . . . . . 148
10.16.11      NOPRESS_WAIT  . . . . . . . . . . . . . . . . . . . . . 149
10.16.12      OVERLAY_KILL  . . . . . . . . . . . . . . . . . . . . . 149
10.16.13      PATH  . . . . . . . . . . . . . . . . . . . . . . . . . 149
10.16.14      RESOLUTION  . . . . . . . . . . . . . . . . . . . . . . 149
10.16.15      VERIFY  . . . . . . . . . . . . . . . . . . . . . . . . 150
10.16.16      WIDTH   . . . . . . . . . . . . . . . . . . . . . . . . 150
10.17        TERMINAL   . . . . . . . . . . . . . . . . . . . . . . . 150
10.17.1       AUTO  . . . . . . . . . . . . . . . . . . . . . . . . . 151
10.17.2       CONFIGURE   . . . . . . . . . . . . . . . . . . . . . . 151
10.17.3       QUERY_VT  . . . . . . . . . . . . . . . . . . . . . . . 151
10.17.4       SELECT  . . . . . . . . . . . . . . . . . . . . . . . . 152
10.17.4.1      ANSI364  . . . . . . . . . . . . . . . . . . . . . . . 152
10.17.4.2      AUTO   . . . . . . . . . . . . . . . . . . . . . . . . 152
10.17.4.3      DUMB   . . . . . . . . . . . . . . . . . . . . . . . . 152
10.17.4.4      ERGO301  . . . . . . . . . . . . . . . . . . . . . . . 153
10.17.4.5      NONE   . . . . . . . . . . . . . . . . . . . . . . . . 153
10.17.4.6      PCPLOT   . . . . . . . . . . . . . . . . . . . . . . . 153
10.17.4.7      QUERY_VT   . . . . . . . . . . . . . . . . . . . . . . 154
10.17.4.8      TEK4010  . . . . . . . . . . . . . . . . . . . . . . . 154
10.17.4.9      TEK4014  . . . . . . . . . . . . . . . . . . . . . . . 154
10.17.4.10     TEK4016  . . . . . . . . . . . . . . . . . . . . . . . 154
10.17.4.11     TEK4105  . . . . . . . . . . . . . . . . . . . . . . . 155
10.17.4.12     TEK4106  . . . . . . . . . . . . . . . . . . . . . . . 155
10.17.4.12.1    Dialog Lines  . . . . . . . . . . . . . . . . . . . . 156
10.17.4.12.2    Hardcopy-Device   . . . . . . . . . . . . . . . . . . 156
10.17.4.12.3    Tek4695 size  . . . . . . . . . . . . . . . . . . . . 156
10.17.4.12.4    Tek4510 source  . . . . . . . . . . . . . . . . . . . 156
10.17.4.12.5    Copy Needed   . . . . . . . . . . . . . . . . . . . . 157
10.17.4.12.6    Primary   . . . . . . . . . . . . . . . . . . . . . . 157
10.17.4.12.7    Width   . . . . . . . . . . . . . . . . . . . . . . . 157
10.17.4.12.8    Copies  . . . . . . . . . . . . . . . . . . . . . . . 157
10.17.4.12.9    Landscape/Portrait  . . . . . . . . . . . . . . . . . 158
10.17.4.12.10   Text Style  . . . . . . . . . . . . . . . . . . . . . 158
10.17.4.13     TEK4107  . . . . . . . . . . . . . . . . . . . . . . . 158
10.17.4.14     TEK4109  . . . . . . . . . . . . . . . . . . . . . . . 158
10.17.4.15     TGRAF  . . . . . . . . . . . . . . . . . . . . . . . . 159
10.17.4.16     TEK4114  . . . . . . . . . . . . . . . . . . . . . . . 159

                              Page  xiv

10.17.4.17     TEK4115  . . . . . . . . . . . . . . . . . . . . . . . 159
10.17.4.18     TEK4207  . . . . . . . . . . . . . . . . . . . . . . . 160
10.17.4.19     TV922  . . . . . . . . . . . . . . . . . . . . . . . . 160
10.17.4.20     UNKNOWN  . . . . . . . . . . . . . . . . . . . . . . . 160
10.17.4.21     VDITERM  . . . . . . . . . . . . . . . . . . . . . . . 160
10.17.4.22     VERSAMAC   . . . . . . . . . . . . . . . . . . . . . . 161
10.17.4.23     VS100  . . . . . . . . . . . . . . . . . . . . . . . . 161
10.17.4.24     VT_EMUL  . . . . . . . . . . . . . . . . . . . . . . . 161
10.17.4.25     VT100  . . . . . . . . . . . . . . . . . . . . . . . . 162
10.17.4.26     VT102  . . . . . . . . . . . . . . . . . . . . . . . . 163
10.17.4.27     VT125  . . . . . . . . . . . . . . . . . . . . . . . . 163
10.17.4.28     VT220  . . . . . . . . . . . . . . . . . . . . . . . . 163
10.17.4.29     VT240  . . . . . . . . . . . . . . . . . . . . . . . . 164
10.17.4.30     VT241  . . . . . . . . . . . . . . . . . . . . . . . . 164
10.17.5       UNKNOWN   . . . . . . . . . . . . . . . . . . . . . . . 164
10.17.6       VIEW  . . . . . . . . . . . . . . . . . . . . . . . . . 165
10.18        VIEW   . . . . . . . . . . . . . . . . . . . . . . . . . 165
10.18.1       COMPOSITE   . . . . . . . . . . . . . . . . . . . . . . 165
10.18.2       MAP_OF_TERMINALS  . . . . . . . . . . . . . . . . . . . 165
10.18.3       SOURCE  . . . . . . . . . . . . . . . . . . . . . . . . 166
10.18.4       TIME  . . . . . . . . . . . . . . . . . . . . . . . . . 166
10.18.5       VERSION   . . . . . . . . . . . . . . . . . . . . . . . 166
10.19        @-sign   . . . . . . . . . . . . . . . . . . . . . . . . 166
10.19.1       filename  . . . . . . . . . . . . . . . . . . . . . . . 167
10.19.2       parameters  . . . . . . . . . . . . . . . . . . . . . . 167
10.19.3       example   . . . . . . . . . . . . . . . . . . . . . . . 167
10.20        ;-semicolon  . . . . . . . . . . . . . . . . . . . . . . 168

11          VIEW  . . . . . . . . . . . . . . . . . . . . . . . . . . 169
11.1         AUDIT_FILE   . . . . . . . . . . . . . . . . . . . . . . 169
11.2         COMPOSITE  . . . . . . . . . . . . . . . . . . . . . . . 169
11.3         LOGO   . . . . . . . . . . . . . . . . . . . . . . . . . 169
11.4         NEWS   . . . . . . . . . . . . . . . . . . . . . . . . . 170
11.5         USED_CPU_TIME  . . . . . . . . . . . . . . . . . . . . . 170
11.6         VERSION  . . . . . . . . . . . . . . . . . . . . . . . . 170

12          XIT   . . . . . . . . . . . . . . . . . . . . . . . . . . 171
12.1         PRINT_AUDIT_FILE   . . . . . . . . . . . . . . . . . . . 171
12.2         DELETE_AUDIT_FILE  . . . . . . . . . . . . . . . . . . . 171
12.3         BOTH_PRINT_DELETE  . . . . . . . . . . . . . . . . . . . 171
12.4         SAVE_AUDIT_FILE  . . . . . . . . . . . . . . . . . . . . 171
12.5         REMOVE_OLD_VERSIONS  . . . . . . . . . . . . . . . . . . 172

13          Bibliography  . . . . . . . . . . . . . . . . . . . . . . 173









                              Page  xv






















































                              Page  xvi

1   Introduction
----------------

     The program INCA (INteractive Controls Analysis) is primarily
intended for the analysis and design of feedback control systems.
Using the interactive graphics capability, the user can quickly plot a
root locus, frequency response, or time response of either a
continuous time system or a sampled data system.  The system
configuration and parameters can be easily changed, allowing the user
to design compensation networks and perform sensitivity analyses in a
very convenient manner.

     INCA is designed to be an interactive program for use with both
small and large order systems.  The user can perform all transfer
function manipulations and plotting without leaving INCA, although
provisions are made to read transfer functions from data files.  By
using a small set of commands, the user can create, calculate and edit
transfer functions, and then examine these functions using the
ROOT_LOCUS, FREQUENCY_RESPONSE, and TIME_RESPONSE capabilities.

     The transfer function (hereafter refered to as just "function")
is the basic unit of INCA.  The functions are normally grouped into an
entity called a "project".  A project can be anything the user wants
it to be, and contains a group of distinct but related functions.

     INCA is suitable only for systems which can be described by a
collection of rational transfer fuctions.  These functions can be
either Laplace transforms, Z-transforms or W-Transforms.  A function
is the quotient of two real polynomials in s,z or w.

     Multiplication and division in function expressions are done by
collection and cancellation of factors.  Addition, subtraction, and
plane transformation use the QZ algorithm in most cases, although
sometimes a polynomial rooter must be used.

     The maximum order of the polynomials is one hundred. It is
assumed that the coefficient of the highest order term is unity.  The
function definition also contains the gain.  Z and W plane functions
have an associated sampling period. The maximum number of transfer
functions which can be defined is limited by system quotas.

     Transfer functions are stored in either factored form (STATIC) or
has a FORTRAN like expression (DYNAMIC).  STATIC functions are stored
internally in factored form for maximum accuracy.  The root locus and
frequency response routines are designed for use with large order
systems.  These routines are protected from overflow and do not use a
polynomial rooter.

     Since INCA has extensive graphics capabilities, it is suggested
that a graphics terminal be used.  If one is not available, however,
any terminal can be used to explore the non-graphics capabilities of


                              Page   1

INCA.

     INCA currently runs on the VAX/VMS operating system only.  The
graphics can be displayed on the Tektronics 401x, 410x, and 420x, and
VT24x and several other terminals.  Non-graphics commands can be
executed on any terminal, and batch capabilitity also exists.




1.1   Files
-----------

     INCA creates and uses several different types of files in the
course of a session.  The file types each have a different default
extension.  A brief summary is given below.

File type              ext   Format         Created by          Used by
-------------------   ----   ------     ------------------ ------------------
Project File          .PRO   binary     Automatically      Initialization
Audit File            .AUD   ascii      Automatically      user
Function Save         .DAT   ascii      FUNCTION SAVE      FUNCTION LOAD
Command Source        .SOU   ascii      user               UTILITIES ATSIGN
                                                           UTILITIES INPUT
Root Locus Data       .RL    ascii      CURVE SAVE         CURVE LOAD
Freq. Resp. Data      .FR    ascii      CURVE SAVE         CURVE LOAD
Time Resp. Data       .TR    ascii      CURVE SAVE         CURVE LOAD
Workspace File        .WOR   binary     INCA 2.0x          PROJECT OLD_INCA
-------------------   ----   ------     ------------------ ------------------

     The user can also write or generate his own .DAT, .RL, .FR, or
.TR files.  Thus INCA's graphics capability could be used to analyze
data produced by other application programs.  It is important to
realize that the format be exactly right or unpredictable results
might occur.




1.2   Installation
------------------

     INCA has been designed for easy transfer among computers of the VAX
family while remaining as easy to use as possible.  Decide on a
directory in which to place INCA, and the place the files INCA.EXE,
INCA.HLB and SETUP.EXE in that directory.  Run the setup program, and
several more files will be create as described below.  One of these
files is names LOGIN.INC.  The user should include this in his login
file, and INCA will be ready to use regardless of the current directory.




                              Page   2

1.2.1   Files
-------------

     These files are needed for the proper functioning of INCA.

INCA.EXE           INCA executable image.
INCA.HLB           INCA online help library.
SETUP.EXE          Used to generate the following files...

INCANEWS.DAT       This is a short text file containing news
                   of interest to INCA users.  It is displayed
                   at the beginning of each INCA session, and
                   also when the SHOW /NEWS command is used.
TERMINAL.MAP       This is a listing of the type of each
                   terminal currently available on the
                   system.  This file should be maintained by
                   the system manager for maximum convenience
                   of INCA users.




1.2.2   Terminal Map
--------------------

     The file QPLOTHOME:TERMMAP.DAT should contain a listing of the
various terminals on the system.  It is convenient for users if this
file be kept up to date, as then users will not need to type in their
terminal type when they begin an INCA session.  Note that disc drives
should also be included in this table, as they serve as terminals for
batch jobs.  A list of allowable terminal types is given under the
terminal command.

; PORT   NAME   HARDCOPY CONFIGURATION FILE comments
;----- -------- -------- ------------------ ---------------------
; Non terminal ports
;----- -------- -------- ------------------ ---------------------
OPA0   DUMB     LOCAL                       B11 S332  = DecWriter
CRA0   NONE     NONE                        B11 S332  = Card Rdr
DUA0   NONE     NONE                        B11 S332  = Hard Disc
DUA1   NONE     NONE                        B11 S332  = Hard Disc
DUA2   NONE     NONE                        B11 S332  = Hard Disc
;----- -------- -------- ------------------ ---------------------
RTA0   UNKNOWN  LOCAL                       DecNet
RTA1   UNKNOWN  LOCAL                       DecNet
RTA2   UNKNOWN  LOCAL                       DecNet
RTA3   UNKNOWN  LOCAL                       DecNet
;----- -------- -------- ------------------ ---------------------
; TTAx group
;----- -------- -------- ------------------ ---------------------
TTA0   UNKNOWN  LOCAL                       B5


                              Page   3

TTA1   UNKNOWN  LOCAL                       B5
TTA2   UNKNOWN  LOCAL                       B5
TTA3   UNKNOWN  LOCAL                       B5
TTA4   UNKNOWN  LOCAL                       B5
TTA5   UNKNOWN  LOCAL                       B5
TTA6   UNKNOWN  LOCAL                       B5
TTA7   TEK4014  LOCAL                       B5  (AFDFE)
;----- -------- -------- ------------------ ---------------------
; TTBx group
;----- -------- -------- ------------------ ---------------------
TTB0   VT240    LOCAL                       B5  (AFJPS)
TTB1   UNKNOWN  LOCAL                       B5
TTB2   UNKNOWN  LOCAL                       DTI
TTB3   UNKNOWN  LOCAL
TTB4   TEK4109  CI300                       B11 S332    temp for Louise
TTB5   TV922    CI300                       B11 S332
TTB6   DUMB     LOCAL                       B5  (AFRSS)
TTB7   UNKNOWN  LOCAL                       Phone
;----- -------- -------- ------------------ ---------------------
; TTCx group
;----- -------- -------- ------------------ ---------------------
TTC0   UNKNOWN  LOCAL                       B5
TTC1   UNKNOWN  LOCAL                       B5
TTC2   UNKNOWN  LOCAL                       DTI 53134
TTC3   UNKNOWN  LOCAL                       Phone
TTC4   UNKNOWN  LOCAL                       DTI 53137
TTC5   UNKNOWN  LOCAL                       DTI 53138
TTC6   UNKNOWN  LOCAL                       DTI 53139
TTC7   UNKNOWN  LOCAL                       DTI 53140
;----- -------- -------- ------------------ ---------------------
; TXAx group
;----- -------- -------- ------------------ ---------------------
TXA0   UNKNOWN  NONE                        B5 = Fast printer
TXA1   UNKNOWN  LOCAL                       Phone
TXA2   UNKNOWN  LOCAL                       B5
TXA3   UNKNOWN  LOCAL                       B5
TXA4   TEK4107  LOCAL                       B5
TXA5   UNKNOWN  LOCAL                       B5
TXA6   UNKNOWN  LOCAL                       B5
TXA7   TEK4114  LOCAL                       B11 S332
;----- -------- -------- ------------------ ---------------------
; TXBx group
;----- -------- -------- ------------------ ---------------------
TXB0   UNKNOWN  LOCAL                       Phone
TXB1   UNKNOWN  LOCAL                       Phone
TXB2   VT100    LOCAL                       B11
TXB3   DUMB     LOCAL                       B11
TXB4   VS550    LOCAL                       B11 E221
TXB5   VS550    LOCAL                       B11 E208
TXB6   VT125    LOCAL                       B11 E235 = Pro 380
TXB7   VT125    LOCAL                       B11 ???? = MacIntosh


                              Page   4

;----- -------- -------- ------------------ ---------------------
; TXCx group
;----- -------- -------- ------------------ ---------------------
TXC0   UNKNOWN  LOCAL                       DTI 53135
TXC1   UNKNOWN  LOCAL                       DTI 53136
TXC2   TEK4109  LOCAL    ROOMS221           B11 S221
TXC3   TEK4107  LOCAL    ROOMS221           B11 S221
TXC4   TV922    LOCAL                       B11 S221B
TXC5   TEK4107  LOCAL    ROOMS221           B11 S221
TXC6   VT100    LOCAL                       B11 S121
TXC7   TEK4207  LOCAL                       B11 S129
;----- -------- -------- ------------------ ---------------------




1.3   Batch processing
----------------------

     INCA can be run in the batch mode for jobs that are too lenghty
for interactive processing.  All commands are available except for
those graphics mode commands that require a cursor position.

     To run a batch job in INCA it is necessary to create a VAX
command file (".COM" default extension).  The command file should set
default directories and do any necessary assignments, and then contain
the line

     "$ INCA/NONE project".

The next lines should contain all INCA commands needed for the run,
including the final XIT command.  For information on how to set up
INCA commands, see the ATSIGN command.




1.4   Startup-file
------------------

     The user can customize the INCA status as he desires by using a
INCA.SOU file.  At the start of any INCA session, a search is made for
a file with the name INCA.SOU in the users current directory.  This is
similar in concept to the LOGIN.COM file.  If the file exists, the
next input is taken from this file, and continues so until an end of
file is found.  This file can also be in any higher level
subdirectory, up to and including the main directory.  If the INCA.SOU
file is placed in the main directory, it will be used for any INCA
sessions done by the user.

     The user may rerun his startup file at any time by entering:


                              Page   5


          @INCA, or
          U I INCA.

     A sample login file is qiven under example.




1.4.1   Example
---------------

     The following example will set the NEARNESS fuzz factor to the
default value.  It is a good idea to put SHOW /NEWS at the end of your
login file to repeat the news of the day, which may have flashed by
too quick to see.

;--------------------------------
;    Sample Login file
;
;
; Set up three macros:
;    Q = Xit Delete
;    E = Function Edit Screen
;    Z = Misc No_Error_Trap Yes
U S M Q X D
U S M E F E S
U S M Z M N Y
; Turn gridding on in both X and Y directions.
U F X G DARKGRAY
U F Y G DARKGRAY
; Make default frequency response plot a Nichols Plot.
SET FREQUENCY_PLOT       C-NICHOLS
; Set Zagging on Nyquist plots
SET ZAGGING              40
; Clear screen.
M Z
;
;    End of Sample Login file
;--------------------------------













                              Page   6

2   GIN_mode
------------

     When a plot is displayed on the screen, most subsequent input is
made using the graphics input (GIN) or "cursor" mode.  In this mode
the graphics cursor will appear, which is usually a small cross or a
set of crosshairs.  This cursor can be moved by using various keys or
controls on the terminal.  The exact nature of these controls is
terminal dependent.  When the graphics cursor is placed in the desired
position, the user presses a key on the keyboard to execute a command.
Different commands are assigned to different keys.

     Most graphics mode commands use the position of the graphics cursor
as additional input.  This information might be a point on the plot to
be examined, the corner of a window for a zoom operation, or the
position at which to place a label.

     An unexecutable command is signaled by sounding the terminal bell
three times.  This might happen if the cursor was not at a valid point
of the plot, or the status was not appropriate (e.g., attempting a
zoom without the window being set).

     Many commands are application dependent, but many are common to
different QPLOT applications.  For the sake of consistency, these
common commands are described below.




2.1   Batch operation
---------------------

     When in batch mode the cursor position is not meaningful.  A
GIN mode command in batch mode will require three inputs, separated
by spaces.  These are:

          a)  Command, only first letter is significant.
          b)  X-position, a real number.
          c)  Y-position, a real number.




2.2   Summary
-------------

     This table summarizes the GIN mode commands.  The availability
columns indicate for which of the plot types the command is valid.
Whether input is needed or the cursor position is significant is also
indicated.



                              Page   7

          COMMAND:                INPUT  CURSOR
          ------------------      -----  ------
          B-BackZoom                -       -
          D-Dezoom                  -       -
          E-Exit                    -       -
          K-Keyboard              limits    -
          L-Lower left              -       Y
          P-Plot                    -       -
          Q-square zoom area        -       -
          R-Redraw                  -       -
          U-Upper right             -       Y
          X-Xit                     -       -
          Z-Zoom                    -       -
          #-Select frame number     -       -
          *-Toggle select all frames       -       -
          =-Select frame            -       -
          .-Select background frame -       -
          space-Cancel frame select -       -
          ?-Count frame by bells    -       -
          $-UTILITIES command    command    -
          %-hardcopy                -       -
          !-metafile                -       -
          ^-user text          color,string -
          \-user line          color,points -
          ------------------      -----  ------




2.3   B-BackZoom
----------------

     The scale of each view reached by using the <Z-Zoom> command is
pushed onto a special stack.  This command will pop one view off of
the stack, allowing a previous view to be reexamined.  Display items
such as those resulting from the <F-find> and <V-values> commands will
be lost.

     Additional input :     None
     Cursor position :      No effect.




2.4   D-DeZoom
--------------

     This command allows the user to reverse the <Z-zoom> command. The
plot will be redrawn at the original scale.  Display items such as
those resulting from the <F-find> and <V-values> commands will be
lost.


                              Page   8


     Additional input :     None
     Cursor position :      No effect.




2.5   E-Exit
------------

     This command will cause an exit from the cursor mode and a return
to command mode.  The user can return to the cursor mode by using the
modifier <OLD> on the command that created the plot in question, for
example "PLOT OLD".  This command is the same as <X-Xit>.

     Additional input :     None
     Cursor position :      No effect.




2.6   K-Keyboard
----------------

     This command allows the corners of the zoom area to be input from
the keyboard.  The zoom area is defined by minima and maxima for both
the X and Y coordinates.  After the coordinates are entered the area
to be zoomed will be shown on the screen as a rectangle.  If the
<L-Lower left> or <U-Upper right> commands are used before the zoom is
executed that corner will be repositioned and the rectangle redrawn.

     Additional input :     Minimum, maximum values of X and Y.
     Cursor position :      No effect.




2.7   L-Lower left
------------------

     This command uses the cursor coordinates to set a corner of the
zoom area.  The related command <U-Upper right> may be used to set the
other corner.  When both corners are set the area to be zoomed will be
shown on the screen as a rectangle.  If this command is repeated
before the zoom is executed the corner will be repositioned and the
rectangle redrawn.  It should be noted that the point selected using
this command need not necessarily be the lowest or the leftmost of the
two points selected.

     Additional input :     None
     Cursor position :      One of the corners of the Zoom Window.


                              Page   9





2.8   P-Plot
------------

     This command allows the user to refresh the current plot.  The
plot will be redrawn at the current scale, and with the same curves as
were drawn originally.  Unlike the <R-Redraw> command, images such as
those resulting from the <F-find> and <V-values> commands will be
redrawn.

     Additional input :     None
     Cursor position :      No effect.




2.9   Q-sQuare zoom area
------------------------

     This command will ensure that the zoom area is square, that is,
has the same scale on the X and Y axes. The zoom area must be
completely defined.  Both minima and maxima for both the X and Y
coordinates must have been defined, at which point the area to be
zoomed will be shown on the screen as a rectangle.  The square command
will enlarge the rectangle so that it is a square having the size of
the longer side of the rectangle.  This command should not be used if
the two axes represent wildly different quantities.

     Additional input :     None
     Cursor position :      No effect.




2.10   R-Redraw
---------------

     This command allows the user to refresh the current plot.  The
plot will be redrawn at the current scale, and with the same curves as
were drawn originally.  Images such as those resulting from the
<F-find> and <V-values> commands will be lost.

     Additional input :     None
     Cursor position :      No effect.






                              Page  10

2.11   U-upper right
--------------------

     This command uses the cursor coordinates to set a corner of the
zoom area.  The related command <L-lower left> may be used to set the
other corner.  When both corners are set the area to be zoomed will be
shown on the screen as a rectangle.  If this command is repeated
before the zoom is executed the corner will be repositioned and
rectangle redrawn.  It should be noted that the point selected using
this command need not necessarily be the uppermost or the rightmost of
the two points selected.

     Additional input :     None
     Cursor position :      One of the corners of the Zoom Window.




2.12   X-exit
-------------

     This command will cause an exit from the cursor mode and a return
to command mode.  The user can return to the cursor mode by using the
modifier <OLD> on the command that created the plot in question, for
example "PLOT OLD".  This command is the same as <E-exit>.

     Additional input :     None
     Cursor position :      No effect.




2.13   Z-zoom
-------------

     This command allows the user to enlarge a portion of a plot
without recalculating any of the data.  Both minima and maxima for
both the X and Y coordinates must have been defined, at which point
the area to be zoomed will be shown on the screen as a rectangle. The
zoom coordinates may be entered as real numbers using the <K-keyboard>
command, or through use of the cursor by using the <L-lower left> and
<U-Upper right> commands.  Use of the <Q-square zoom area> command
will ensure that both X and Y axes have the same scale.  After this
command is used, the zoomed area will be filled in with the ZOOMFILL
color, and the user may use the R-Redraw command to create the zoomed
plot.

     Additional input :     None
     Cursor position :      No effect.




                              Page  11

2.14   #-frame-select
---------------------

      This command will select the frame for the next command that
must be in a specific frame.  The next key pressed must be a number
that is the number of the desired frame.  The background frame is
number 0, and the first frame drawn is number 1.  The remaining frames
are numbered in the order drawn.  Only frames up to number 9 can be
accessed using this command.

     Additional input :     None
     Cursor position :      No effect.




2.15   *-toggle-frame-all
-------------------------

      This command will toggle the select all frames flag.  When this
flag is on, the commands B,D,K,L,Q,U, and Z will be sent to all
frames.

     Additional input :     None
     Cursor position :      No effect.




2.16   =-frame-select
---------------------

      This command will select the frame for the next command that
must be in a specific frame.  The cursor must be in the plotting area
(not border) of the current frame.

     Additional input :     None
     Cursor position :      No effect.




2.17   .-backframe-select
-------------------------

      This command will select the background frame for the next
command that must be in a specific frame.

     Additional input :     None
     Cursor position :      No effect.



                              Page  12

2.18   space-frame-cancel
-------------------------

      The space bar will cancel the previous selection of a frame made
by either the "#" or "=" commands.

     Additional input :     None
     Cursor position :      No effect.




2.19   ?-frame-display
----------------------

      This command will count off the current selected frame (from the
"#" or "=" commands.  This command does not count as the next
"command" for the purpose of those two frame-setting commands.

     Additional input :     None
     Cursor position :      No effect.




2.20   $-UTILITIES-comm.
------------------------

     This command allows the user to access the HELP library and VAX
facility from the graphics mode.  Other input will return to graphics
mode with no effect.

     Additional input :     None.
     Cursor position :      No effect.




2.21   %-hardcopy
-----------------

     This command allows the user to create a hardcopy of the
currently displayed plot.

     Additional input :     As needed (terminal dependent).
     Cursor position :      No effect.







                              Page  13

2.22   !-metafile
-----------------

     This command allows the user to create a metafile of the
currently displayed plot.  The metafile can be displayed and
edited using the QPLOT Graphics Editor and Replotter for
Metafiles (GERM) program.

     Additional input :     None.
     Cursor position :      No effect.




2.23   ^-usertext
-----------------

     This command allows the user to place text of any color any
place on the plot.  The key used is shift-6 on most keyboards.

     Additional input :     Color and text.
     Cursor position :      Location text is to be placed.




2.24   \-userline
-----------------

     This command allows the user to draw a line on the plot.
The user is asked to enter the color and the user (real) coordinates
of two endpoints.  A line will then be drawn in the color selected.

     Additional input :     Color and coordinates.
     Cursor position :      No effect.


















                              Page  14

3   ANALYZE
-----------

     This command is used to perform various analyses on transfer
function.  The result of the analysis is stored in a data structure
called a curve.  The curve data can be manipulated using the CURVE
command and displayed using the PLOT command.  There are currently
three types of analyses.  The NO_ERROR_TRAP command is used to turn
off error trapping for debugging purposes.

     Format:     ANALYZE  command  modifier  [parameters]




3.1   DESCRIBING_FUNCTION
-------------------------

   The describing function is a method used to calculate the gain and
phase characteristics of a nonlinear device. Different types of
nonlinear devices are modelled differently according to their
structure. Nonlinear devices are classified into two types: MEMORY and
MEMORYLESS. The gain and phase of a nonlinear device are calculated by
comparing the output of the nonlinear device to an sinusoidal input.
The nonlinear output is approximated as the first harmonic of a
Fourier sine series. The gain and phase change between the two sine
curves is referred to as the gain and phase of the nonlinear device.

     The describing function is plotted in the frequency domain; it is
used to evaluate a nonlinear control system's tendency toward limit
cycling.  A limit cycle occurs when the following relation is met:

                      1 + N(X,w)*G(jw) = 0

where N(X,w) is the complex describing function relation, X is the
amplitude of the input sinusoid, w is frequency of the input sinusoid,
G(jw) is the frequency response of the linear portion of the control
system.  The above equation can be represented as:

                      G(jw) = -1 / N(X,w).

The expression on the right-hand side of the equation is known as the
inverse describing function.  INCA plots the gain and phase values
derived from the inverse DF along with the linear frequency response;
if the two curves intersect, the system may experience a limit cycle
oscillation with amplitude X and frequency w. The describing function
is plotted in the frequency domain; predictions for limit cycling are
best evaluated in the Nichols or Nyquist plot forms.

     Format:     ANALYZE  DESCRIBING_FUNCTION  modifier  [parameters]



                              Page  15

3.1.1   MEMORYLESS_SYSTEM
-------------------------

     The memoryless nonlinear device produces output which is
independent of the input sinusoidal frequency. The describing function
gain and phase are known in analytical form.  INCA increments the
input amplitude X in the same way w is varied in the frequency
response algorithm.  Currently, INCA supports four types of memoryless
nonlinearities.




3.1.1.1   DEAD_ZONE
-------------------

     The deadzone nonlinearity is shown below.  It is found in many
control systems. The user is queried for the deadzone width and slope.

                                  f(X)

                                    |      /
                                    |     /
                                    |    /
                           ------------------- X
                               /    |
                              /     |
                             /      |




3.1.1.2   LIMITER
-----------------

     The limiter is found in many control systems.  As shown below,
the output of the device is linear over a certain region but limited
at a certain value. The user is queried for the the limiting amplitude
and the linear slope of the device.

                                 f(X)

                                    |   ------
                                    |  /
                                    | /
                           ------------------- X
                                  / |
                                 /  |
                           ------   |




                              Page  16

3.1.1.3   QUANTIZER
-------------------

     Many sensors obtain information in quantized form.  The user has
the option of fixing three elements of the quantizer model:

                       1) No. of output levels
                       2) Amplitude of first output state
                       3) Enter quantization width

This device is modelled as an odd symmetric nonlinearity; the number
of output levels refers to the number of non-zero output levels for a
positive input. Amplitudes of additional output states of the
quantizer are multiples of the amplitude of the first output state.
The quantization width is the lowest non-zero value of X.




3.1.1.4   SCHMITT_TRIGGER
-------------------------

     The Schmitt trigger is often referred to as a hysteresis. This
nonlinearity is an odd symmetric device.  INCA lets the user fix three
of the Schmitt trigger parameters - u-on, u-off, and u-max.  U-on and
u-off are the switching values of the Schmitt trigger.  When the rate
of change of X is positive, u-on is the largest value of X that
produces no output. Conversely, when the rate of change of X is
negative, u-off is the smallest value of X that produces output.
U-max is the output level of the Schmitt trigger.  The INCA default
for this value is 1.



                                   f(X)

                                    |  ---------
                                    |  |  |
                                    |  |  |
                           ------------------- X
                              |  |  |
                              |  |  |
                         ---------  |




3.1.2   MEMORY_SYSTEM
---------------------

     A memory-type nonlinearity produces different output for


                              Page  17

different values of sinusoidal input frequency.  As a result, the
describing functions for memory-type devices consist of multiple
curves.  The roughly horizontal lines are lines of constant frequency
where X is incremented and w is held constant.  The vertical curve to
the right of the plot is the minimum amplitude line; this line is a
function of both amplitude and frequency.




3.1.2.1   PWPF_MODULATOR
------------------------

     This device is a combination of a Schmitt trigger and a
first-order filter inside a feedback loop.  The PWPF modulator has
been used on several spacecraft attitude control systems as pulse
modulator for reaction jets. The user is asked to supply the following
information about the modulator:

           1) U-on
           2) U-off
           3) U-max (defined to be 1)
           4) Km - Filter gain
           5) Tm - Filter time constant
           6) Minimum and maximum sinusoidal input frequency
           7) Frequency increment




3.2   FREQUENCY_RESPONSE
------------------------

     This procedure computes the frequency response of a function or
expression by evaluating the function for various values of s =
j*frequency. The stepping interval and range of the variable frequency
may be entered by the user, or the default values determined by INCA
may be used.

     The frequency response is plotted in one of several formats (Bode
plot, (Bode) Magnitude plot, (Bode) Phase plot, Nyquist plot, Nichols
plot, Popov plot, or (Bode) Strip plot), and with various scalings on
the frequency and magnitude axes. Graphics mode is then entered.
Graphics mode commands allow manipulation of the plot and printing or
saving of the data.  The commands are described in detail under the
graphics-mode topic.

     Format:     ANALYZE  FREQUENCY_RESPONSE  modifier  [parameters]





                              Page  18

3.2.1   EXPRESSION
------------------

     This can be any valid INCA expression.  The expression is
evaluated and the resulting function used.  Otherwise this modifier
has the same effect as the FUNCTION modifier.

     Format:     ANALYZE  FREQUENCY_RESPONSE  EXPRESSION  expression




3.2.2   FUNCTION
----------------

     The frequency response is calculated by evaluating the function
at various points in the complex plane.  The spacing of the evaluation
points is variable, and decreases when the dB, phase, Nyquist
angle change rapidly, or when near a root of the function.

     Format:     ANALYZE  FREQUENCY_RESPONSE  FUNCTION  function-name

The user is queried for the following information:

          1)  Sampling Period (if necessary).
          2)  Minimum frequency.
          3)  Maximum frequency.
          4)  Maximum dB change.
          5)  Maximum phase change.
          6)  Maximum Nyquist angle change.




3.2.2.1   Sampling Period
-------------------------

     This can be any valid INCA expression.  See the main topic
Expressions for more details and examples.  The resulting function
must be in the K plane (i.e., a constant).




3.2.2.2   Minimum Frequency
---------------------------

     This is the lowest value of the frequency to be used, and will be
the first for which the frequency response will be calculated.  The
value entered must be greater than zero.  The default value may be
obtained by simply hitting <RETURN>.  This default value is 1/100 of


                              Page  19

the minimum absolute value of any non-zero root or pole, or 0 for a
sampled system.




3.2.2.3   Maximum Frequency
---------------------------

     This is the highest value of the frequency to be used.  The value
entered must be greater than the minimum frequency.  The default value
may be obtained by simply hitting <RETURN>.  This default value is 100
times the maximum absolute value of any zero or pole, or the Nyquist
frequency for a sampled system.




3.2.2.4   Maximum dB change
---------------------------

     The frequency stepping routine will only allow the amplitude of
the evaluated function to change by a certain amount.  If the change
is greater, the frequency step size is reduced and the function is
evaluated again.  The default value for the maximum amplitude change
is five dB.




3.2.2.5   Max. phase change
---------------------------

     The frequency stepping routine will only allow the phase of the
evaluated function to change by a certain amount.  If the change is
greater, the frequency step size is reduced and the function is
evaluated again.  The default value for the maximum phase change is
five degrees.




3.2.2.6   Max. Nyquist angle
----------------------------

     The Nyquist angle is a special concept used by the frequency
stepping routine, and is given by

     Ny.An.  =  arctan ( <amplitude in dB>  * 3 / <phase in degrees> )

     The frequency stepping routine will only allow the Nyquist angle


                              Page  20

of the evaluated function to change by a certain amount.  If the
change is greater, the frequency step size is reduced and the function
is evaluated again.  The default value for the maximum Nyquist angle
change is five degrees.




3.2.3   STAR
------------

     When the star operator is used, a summation is made over various
values of frequency, as given by the expression

                         +n
                         --
  GHSTAR (j * w)    =    >    GH (j * w + k * j * wsample)
                         --
                        k=-n

     The evaluation is similar to that used with the EXPRESSION
modifier, except an additional check is made for the frequency-shifted
images of the zeroes and poles of the S plane function.

     Format:     ANALYZE  FREQUENCY_RESPONSE  STAR

Input for the STAR modifier includes:

          1)  Plant function.
          2)  Feedback function.
          3)  Zero order hold.
          4)  Delay time.
          5)  Summation level.
          6)  Remaining input is the same as in the EXPRESSION
              modifier




3.2.3.1   Plant Function
------------------------

     This can be any valid INCA expression or function.  See the main
topic Expressions for more details and examples.  The resulting
function must be in the S plane.








                              Page  21

3.2.3.2   Feedback Function
---------------------------

     This can be any valid INCA expression or function.  See the main
topic Expressions for more details and examples.  The resulting
function must be in the Z or W plane.




3.2.3.3   Zero Order Hold
-------------------------

     Answer Yes or No to this question.  Only the first letter is
significant.  Any other response will result in the question being
repeated.




3.2.3.4   Delay Time
--------------------

     This can be any valid INCA expression or function.  See the main
topic Expressions for more details and examples.  The resulting
function must be in the K plane (i.e., a constant).




3.2.3.5   Evaluation Levels
---------------------------

     When the star operator is used, a summation is made over various
values of frequency, as given by the expression

                         +n
                         --
  GHSTAR (j * w)    =    >    GH (j * w + k * j * wsample)
                         --
                        k=-n

The evaluation level refers to the integer quantity n, which can be
any non-negative integer less than 50.




3.3   ROOT_LOCUS
----------------



                              Page  22

     This subcommand will compute the locus of roots of an expression.
There are two varieties, the standard locus and the root contour.  The
standard (Evans) locus is used for classical root locus problems.  The
root locus of a function G are those points satisfying the following
equation: 1 + (k * G) = 0.  The locus is the set of roots for positive
values of the real variable k.  The function G may be in any plane,
but the degree of the numerator must be less than or equal to the
degree of the denominator.

     The root contour will compute the locus for ANY expression.  This
is done by calculating the expression for various values of the
independent variable, and the rooting the resulting transfer function.
Obviously the use of a polynomial rooter places various limits on this
technique.

     Format:     ANALYZE  ROOT_LOCUS  modifier  [expression]




3.3.1   CONTOUR
---------------

     This command will calculate a root locus for a non-standard
expression:  1 + G(i) = 0.  In this case <i> is the independent
variable, and must appear in one or more of the dynamic functions or
expressions used to form the expression G(i).

     Format:     ANALYZE  ROOT_LOCUS  CONTOUR  [expression]

The user is then queried for the expression if not entered, and for
the following information:

          1)  Independent variable.
          2)  Minimum value.
          3)  Maximum value.

The contour locus routine uses a polynomial rooter, and thus is not as
accurate as the routine used in the standard (Evans-type) root locus.




3.3.1.1   Independent var.
--------------------------

     This can be any valid INCA function name, and should be an
element required for the evaluation of the expression G(i).





                              Page  23

3.3.1.2   Minimum value
-----------------------

     This is the minimum value used for the independent variable.




3.3.1.3   Maximum value
-----------------------

     This is the maximum value used for the independent variable.
Evaluation of g(i) will stop when <i> reaches this value.




3.3.2   EXPRESSION
------------------

     This can be any valid INCA expression.  The expression is
evaluated and the resulting function used.  Otherwise this modifier
has the same effect as the FUNCTION modifier.

     Format:     ANALYZE  ROOT_LOCUS  EXPRESSION  expression




3.3.3   FUNCTION
----------------

     This qualifer is the default, and creates a root locus curve
using the algorithm described in the INCA Theory Manual.  Because the
poles of the function are used to determine the number of branches,
the numerator of the function G must not have a greater degree than
the denominator.

     Format:     ANALYZE  ROOT_LOCUS  FUNCTION  function-name

The user is then queried for the following information:

          1)  Phase angle.
          2)  Radius Control.
          3)  Maximum Bend.
          4)  Window Size.

Giving the default answer (press <RETURN>) will produce a satisfactory
plot for almost all problems.




                              Page  24

3.3.3.1   Description
---------------------

     Each pole of the function is associated with a branch.  If there
is a multiple pole, there is an equivalent number of branches.  Each
branch starts at a pole and wanders through the complex plane, either
ending at a zero or leaving the field of view and continuing forever
in a specific direction.  However, if two or more branches intersect,
the point is called a breakpoint, and each segment of each branch is
considered by INCA to be a separate branch.  Thus the number of
branches in INCA may be more than the degree of the denominator.

     The points where branches of the root locus intersect are called
break points.  The angles between different branches at a breakpoint
is always the same, and is 360 degrees divided by the number of
branches.

     A list of branches ending near each break point is printed.  The
midpoint of these branchends is also printed, and is presumed to be
the location of the breakpoint.




3.3.3.2   Phase Angle
---------------------

     Any angle can be given between -180 degrees and 360 degrees.
Of particular interest are 0 degree phase plots, although these can
also be generated by placing a minus sign in front of the input
expression.  Varying this parameter can also give the user an
indication of the system phase margin without performing a frequency
response analysis.




3.3.3.3   Radius Control
------------------------

     Parameter used to control maximum radius of the search circle.
The default value is 0.25.  The algorithm is structured to iteratively
search for the loci crossing point on a circle centered at the last
computed loci point.  The algorithm adjusts the circle radius in such
a manner that sharp turns of the loci are prohibited within the search
circle.  For more information, see the INCA Theory Manual.

     If you get NUMERIC_PROB as a branch ending (instead of the normal
BREAKPOINT, ZERO_FOUND, or  OUTSIDE_REG), chances are that this
parameter or the maximum bend parameter should be reduced. If it
appears that a break point has been stepped over decrease the value of


                              Page  25

the Radius Control.




3.3.3.4   Maximum Bend
----------------------

     Maximum loci bending allowed in one step.  The default value is
five degrees, which should be adequate for most purposes.  If you get
NUMERIC_PROB as a branch ending (instead of the normal BREAKPOINT,
ZERO_FOUND, or  OUTSIDE_REG), chances are that this parameter or the
radius control parameter should be reduced.




3.3.3.5   Window Size
---------------------

     This parameter controls the size of the area viewed on the plot.
The default value is two, which means that the plot is twice the
radius of the square bounding the zeroes and poles.  If you wish to
plot more of the root locus, increase the size of this parameter.
Note that data is generated for an area extending to twice the radius
of the window size.




3.3.4   ROOTS_ONLY
------------------

     This command will suppress the calculation of the locus and
display only the zeroes and poles of the function resulting when the
expression is evaluated.  The expression can be any valid INCA
expression.  See the main topic expression for more details.

     Format:     ANALYZE  ROOT_LOCUS  ROOTS_ONLY  [expression]




3.4   TIME_RESPONSE
-------------------

     This procedure computes the time response of one or more
functions (either S, Z or W plane ) by computing the inverse Laplace
or inverse Z transform.  The step size and time range may be entered
by the user, or the default values may be used.  An input function is
also required.  A series of curves derived from closed loop transfer


                              Page  26

functions with variable compensation gain may be generated.

     Format:     ANALYZE  TIME_RESPONSE  modifier  [expression]




3.4.1   Input
-------------

     The input of the TIME_RESPONSE commands has many options, and to
describe them all would be too lengthy for inclusion here.  the use of
block diagrams should make the input requests largely self explanatory.
Note, however, that when a function is requested, it is often required
that the function be in a specific plane(s).  If the function is not
in that plane, the request will be repeated.




3.4.1.1   Functions
-------------------

     These can be any valid INCA expression or function.  See the main
topic Expressions for more details and examples.




3.4.1.2   Zero Order Hold
-------------------------

     Answer Yes or No to this question.  Only the first letter is
significant.  Any other response will result in the question being
repeated.




3.4.1.3   Delay Time
--------------------

     This can be any valid INCA expression.  See the main topic
Expressions for more details and examples.  The resulting function
must be in the K plane (i.e., a constant).








                              Page  27

3.4.1.4   Type of Input
-----------------------

     The type of input function is indicated by one of the following
letters.  Additional input is required as indicated.

         I   -- Impulse function
         S   -- Step function, requires step coefficient.
         R   -- Ramp function, requires ramp coefficient.
         A   -- Acceleration function, requires acc. coefficient.
         C   -- Combined function, requires step coefficient, ramp
                   coefficient, and acceleration coefficient.
         S   -- Oscillator function, requires frequency.
         U   -- User function, requires expression.




3.4.1.5   Type Gain Control
---------------------------

     The type of gain control is indicated by one of the following
letters.  Additional input to specify the actual gain is required.

         O   -- One gain
         S   -- Sensitivity analysis, entry of compensation gains
                required as follows.  The compensation gains are
                either entered as a minimum and maximum, and the
                gains spaced equally, or each gain is entered
                individually.  In the latter case it is recommended
                that the gains be entered in ascending order.




3.4.1.6   Sample Period
-----------------------

     This can be any valid INCA expression.  See the main topic
Expressions for more details and examples.  The resulting function
must be in the K plane (i.e., a constant).




3.4.1.7   Time Interval
-----------------------

     This is the interval between evaluation steps.  This input is
requested for continuous systems only.



                              Page  28

3.4.1.8   Number of Substeps
----------------------------

     This is the number of steps for which the time response is
evaluated during each sample period.  This input is requested for
combined continuous/discrete systems only.




3.4.1.9   Stopping time
-----------------------

     This is the last value of time for which the time response is to
be calculated.  The default stopping time is calulated using the steps
size and 1/3 of the maximum number of steps available.




3.4.2   CLOSED_LOOP
-------------------

     The time response procedure is capable of calculating for
immediate plotting several closed loop transfer functions (with
variable compensation gain) for a system of this form:


                ---       ---------     ----------     -------
            +  /   \     | compen- |   |  compen- |   | plant |
   ---------- ( SUM )----| sation  |---|  sation  |---| func- |-------->
               \   /     |  gain   |   | function |   | tion  |   |
                ---       ---------     ----------     -------    |
                 ^                                                |
                 |                                                |
                 |                    ----------                  |
                 |                   | feedback |                 |
                  -------------------| function |-----------------
                                      ----------

     The closed loop transfer function must be defined in terms of
previously defined functions.  The new function is computed using the
following equation.

             CLTF = [K * CF * PF] / [1 + (K * CF * PF * FF)]

     The plant, feedback, and compensation functions are entered in
response to queries.  The various compensation gains may be entered
either as a count and range or else the various steps may be entered
individually.



                              Page  29

     Format:     ANALYZE  TIME_RESPONSE  CLOSED_LOOP




3.4.3   FEEDBACK_SAMPLER
------------------------

     This modifier is similar to the CLOSED_LOOP modifier except
that a sampler, time delay, discrete function and possible zero order
hold have been inserted in the feedback loop.  The capability for
intersample time response also exists, making use of the advanced Z
transform.  For more information see the INCA Theory Manual.

     Format:     ANALYZE  TIME_RESPONSE  FEEDBACK_SAMPLER




3.4.4   PLANT_SAMPLER
---------------------

     This modifier is similar to the CLOSED_LOOP modifier except
that a sampler, time delay, discrete function and possible zero order
hold have been inserted in the plant loop.  The capability for
intersample time response also exists, making use of the advanced Z
transform.  For more information see the INCA Theory Manual.

     Format:     ANALYZE  TIME_RESPONSE  PLANT_SAMPLER




3.4.5   SIMPLE_SYSTEM
---------------------

     This modifier calulates the time response of one function
combined with the user's choice of seven input functions.

     Format:     ANALYZE  TIME_RESPONSE  SIMPLE_SYSTEM  [expression]













                              Page  30

4   CURVE
---------

     Curves are used in INCA to store the results of analytical
calculations, including the Root Locus, and Frequency and Time
Response.  The curve command allows the user to examine, rename,
delete, write, and load curves.

     The curves are given default names by the analysis module
which created them.  For example, the result of a frequency response
analysis is placed in the curve "FR".  This curve is plotted
automatically immediately after the analysis is complete.  However, if
the user wants to plot this curve again, he may type just "PLOT FR"
instead of repeating the analysis.

     Format:     CURVE  modifier  [parameters]




4.1   AUDIT
-----------

     This modifier will place in the audit file a list of various
parameters for the currently defined curves.  This includes the name,
label, and type.

     Format:     CURVE  AUDIT




4.2   DELETE
------------

     This modifier will delete one or all of the currently defined
curves.

     Format:     CURVE  DELETE  [ALL]  [curve-name]




4.3   LOAD
----------

     This modifier is used to read a curve disc file.  Items may be
placed in a disc file by using the CURVE SAVE command.  The user will
be asked to select a filename. The extension must be one of the
following:



                              Page  31

                  .FR      Frequency response result.
                  .RL      Root locus result.
                  .TR      Time response result.

The curve file must be in ASCII format, and the order of certain items
is critical.

     Format:     CURVE  LOAD  file-name




4.4   RENAME
------------

     The RENAME modifier is used to rename a curve.  This command is
used to preserve previously generated curves when a new analysis is
being done, since the new curve will have the standard name (FR, RL or
TR) as the old curve.

     Format:     CURVE  RENAME  old-curve-name  new-curve-name




4.5   SAVE
----------

     This modifier will cause a curve to be saved in a curve disc
file. The user will be asked to select a curve, and then to select a
filename.  No extension is allowed, as INCA will add the extension
depending upon the type of curve:

                  .FR      Frequency response result.
                  .RL      Root locus result.
                  .TR      Time response result.

The curve data is then written to this file in ASCII format.

     Format:     CURVE  SAVE  curve-name  file-name




4.6   TABLE
-----------

     This modifier is used to generate a table of the
results contained in a particular curve.  These are made in an
easily read format, suitable for placing in a report or kept as a
written record.  The destination is one of the following:


                              Page  32


     Format:     CURVE  TABLE  destination  curve-name  [file-name]




4.6.1   AUDIT
-------------

     The table will be written to the audit file.

     Format:     CURVE  TABLE  AUDIT  curve-name




4.6.2   FILE
------------

     The table will be written to a file.  After selecting a curve,
the user must then select a file name.

     Format:     CURVE  FILE  file-name




4.6.3   VIEW
------------

     The table will be displayed on the terminal screen.  Use CTRL-C
or CTRL-O to abort display.

     Format:     CURVE  TABLE VIEW  curve-name




4.7   VIEW
----------

     This modifier will display a list of various parameters for the
currently defined curves.  This includes the name, label, and type.

     Format:     CURVE  VIEW








                              Page  33

4.8   WORMFORMAT
----------------

     This modifier is used to generate a dat base of the results
for use by the WORM program.  It only works (currently) for time
response curves.  The WORM format is R8, and the number of locations
is equal to one plus the number of gains used.

     Format:     CURVE  WORMFORMAT  file-name












































                              Page  34

5   FUNCTION
------------

     INCA is essentially a manipulator of polynomial functions. The
function command allows the user to examine, edit, delete, write, and
load functions.  The main graphics commands of INCA (root locus,
frequency response and time response) all operate on a function or
function expression.

     Some modifiers to this command create a new function.  If the
new function has the same name as an existing function, the old
function is placed in a ten-function "trash bin".  The UNDELETE
modifier can be used to retreive accidentally trashed functions.

     Format:     FUNCTION  modifier  [parameters]




5.1   Description
-----------------

     INCA functions are either STATIC or DYNAMIC.  The static type is
stored as a list of numerator and denominator factors, and is also
called FACTORED.  The dynamic type is stored as a character string,
and is evaluated to produce a factored type when needed for analysis.

     INCA factored functions are restricted to quotients of real
polynomials with degree less than or equal to 100.  While complex
factors may be obtained when a real polynomial is factored, these
roots must always appear as conjugate pairs.  The number of functions
allowed is limited to 500.




5.1.1   Fields
--------------

     The functions are maintained in a linked list.  Each function has
a number of fields:

     1)  NAME             -- A 30 character string (left justified).
     2)  STORAGE          -- Number of bytes required to store.
     3)  CREATION         -- Date and time of creation.
     4)  COMMENT          -- A 80 character string.
     5)  TYPE             -- Factored or Dynamic.

STATIC or FACTORED type:
     6)  PLANE            -- Either "K", "S", "Z", or "W".  (Domain).
     7)  TAU              -- Sample Period.  (For "Z" and "W" plane only).


                              Page  35

     8)  GAIN             -- Numerator gain.
     9)  POLYNOMIALS      -- Numerator and denominator factors.

DYNAMIC type:
     6)  Expression character string.




5.1.1.1   Name
--------------

     A function is referenced by means of its name.  Thus no two
functions can have the same name, and INCA has numerous checks to
ensure that such a case does not occur.  The name can have a maximum
of 30 characters, the first of which is alphabetic (A-Z) and the
remainder of which are alphanumeric (A-Z,0-9,_).  No blanks are
allowed inside the name.

     Certain words should not be used as function names.  These
have predefined meanings in INCA.

          ALL       Used in function selection
          NEW       Used in function selection
          PI        3.14159...
          S         plane variable
          W         plane variable
          Z         plane variable

     Since the name field also includes two bytes for a length
indicator, the total length of the name field is 32 bytes.




5.1.1.2   Storage
-----------------

     This field contains the function storage requirements in bytes.
It is required for the internal workings of INCA, and is displayed for
the sake of completeness, and for user information.  This field cannot
be changed by the user.




5.1.1.3   Creation
------------------

     The time and date of creation are stored in the function
definition.  These fields are for documentation purposes only.  The


                              Page  36

information is automatically inserted into the function, and cannot be
changed by the user.




5.1.1.4   Comment
-----------------

     This field is for documentation purposes only.  The comment can
be up to 80 characters in length, and may contain any printable
character.  Since the comment field also includes two bytes for a
length indicator, the total length of the comment field is 82 bytes.
This field is usually filled in automatically by commands that create
a new function, such as the FUNCTION COMPUTE and FUNCTION GENERATE
FILTER commands.




5.1.1.5   Plane
---------------

     This field indicates the domain of the function.  INCA currently
supports "S", "Z", and "W" plane functions only.  If the function has
no zeros or poles, it is a constant function, and is assigned the
plane of "K".  K-plane functions may be used in combination with
functions in any other plane.  Functions with different planes or
periods cannot be combined.  The PLANE field occupies one byte of
storage.




5.1.1.6   Tau
-------------

     This field indicates the sample period (in seconds) associated
with a function in the "Z" or "W" domain.  This field contains the
value UNDEFINED for "S" and "K" domain functions, and for "Z" and "W"
domain functions that have not yet been assigned a sample period.  If
two functions are combined, one of which has an undefined sample
period, the resulting will function will have the sample period of the
other function.  Functions with different sample periods cannot be
combined.  This field occupies eight bytes of storage.








                              Page  37

5.1.1.7   Gain
--------------

     This field contains the gain of the function. This field occupies
eight bytes of storage.




5.1.1.8   Polynomials
---------------------

     Polynomials are stored in the factored form only.  This method is
numerically superior, see the INCA theory manual for more details.
The maximum order of each polynomial is 100.  Each polynomial has
three fields:

     1)  DEG     -- Number of distinct factors.
     2)  F       -- A 120 element array of complex numbers (factors)
                 -- paired with their power.  The power is either plus
                    (for numerator factors) or minus (denominator).  A
                    power of zero is automatically removed.  Only the
                    positive imaginary half of a complex pair is
                    stored.

     All integers are stored in longword format (4 bytes).  Complex
numbers are stored as a pair (real, then imaginary) of double
precision floating point numbers (8 bytes each).




5.1.2   normalization
---------------------

     After functions are defined, it is necessary to ensure that they
are in the appropriate format.  This process is called normalization.
There are seven steps in normalization:

          1)  Check that name is left justified, is not completely
              blank, contains no internal blanks, begins with a letter
              and contains only letters, numbers, and the underline (_).
          2)  Change nearly zero factors to zero.
          3)  Make nearly real factors real.
          4)  Remove very large factors, and adjust gain accordingly.
          5)  Matching up non-adjacent complex pairs.  Unmatched pairs
              will cause an error.
          6)  Collecting nearly equal factors.
          7)  Canceling nearly equal factors in numerator and denominator.
          8)  Removing factors with zero exponents.
          9)  Check plane and sample period consistency.


                              Page  38





5.1.3   predefined
------------------

     There are a number of functions built into the function evaluator
that might be considered predefined.  These include constant functions
associated with all real numbers, the constant function PI, and the
functions S, Z and W.  The last three have a gain of 1 and a single
factor of zero in the numerator (order 1).

      Large or small real numbers that require exponential notation
must be enclosed in brackets.  The brackets are unnecessary for
constants of more reasonable size.  Brackets are also required for
negative constants.  Sample predefined functions are given below.

        S              Z              W              PI
        1              1.234          234190         1.23d6
        12             0              123E34         45




5.1.4   reserved-names
----------------------

     The following character strings are reserved words in INCA and
should not be used as function names.

     UTILITIES      Command:  Access QPLOT utilities.
     HELP           Command:  Access Help Library.
     ABORT          Command:  Abnormal return to command level.
     ALL            All functions will be processed.
     S,Z,W,PI       Predefined functions.
     UNDEFINED      Special numeric value.




5.2   AUDIT
-----------

     This qualifer may be used to list functions in the audit file.
There are a number of formats available. The default format is HEADER.
 If a format for the roots is given, a dynamic function will first be
converted to static format. If no parameter is given all functions are
displayed.  For more information, check for the appropriate format in
the FUNCTION VIEW command documentation.



                              Page  39

     Format:     FUNCTION  AUDIT  format  [ALL]  [function-name]




5.3   COMPUTE
-------------

     This modifier allows a function to be defined in terms of other
functions and constants.  The resultant function is the equation -- it
is recomputed each time the function in question is needed. If you
define a function in terms of itself, an infinite recursion loop will
be created, resulting in an error condition.  The expression can be
any valid INCA expression.  See the main topic Expressions for more
details and examples.

     The FUNCTION COMPUTE command is unique in that the command and
modifier are optional when not in menu mode.  Any unrecognized command
line with an equals sign will be considered a compute command.  After
the first function has been defined, the user need only enter the
function[:]=expression portion.  The ":" is also optional, and has
been provided for the benefit of PASCAL, ADA, and MODULA-2 users.
After the function has been entered, press return to return to the
main command level, or enter more functions if desired.

     Format:     [FUNCTION  COMPUTE]  [function[:]=expression]
                 [function[:]=expression]
                 .
                 .
                 .
                 [function[:]=expression]
                 (blank line)




5.3.1   Expressions
-------------------

     Expressions are used throughout INCA as a means of creating or
entering a function.  If an expression is too long to type on one
line, finish the line with a backslash character "\". INCA will prompt
for the expression continuation.

     An operator can be of three types, unary, binary and named.  A
unary operator must be the first item in an expression or
subexpression.  A binary operator operates on the operands on both
sides of the operator.  Binary operators are one of the familiar
mathematical symbols (+-*/^).  A named operator operates on one or
more operands enclosed in parentheses following the operator.  These
operators must begin with a dollar sign ($) and be followed by a


                              Page  40

specific string of characters.  Example named operators include $Z,
$WH, and $CLOOP.




5.3.2   Evaluation
------------------

     All operands must be functions, constants, or expressions.
The expression is evalated in the following order.

                  ()   Parentheses are used to override priority
                  $    Priority of named operators is
                       determined by enclosing parentheses
                       around arguments.
                  ^    Exponentiation has highest priority.
                  +,-  Unary plus/minus has next highest priority.
                  *,/
                  +,-  Lowest priority.

     The order of evaluation can be modified by the use of
parentheses.  Evaluation proceeds from left to right among operators of
equal precedence.  A copy of the function is used in computations;
thus the result function name may be the same as that of one of the
operands.




5.3.3   Functions
-----------------

     If an expression contains no operators, it must be a single function.
If the first character of the function is a letter, then it is checked
against the list of predefined and user-defined functions.  Otherwise,
the function must be a numeric constant, and it is converted to a real
number.




5.3.4   Predefined
------------------

     There are four predefined functions:

           S           S domain, single zero at (0,0).
           Z           Z domain, single zero at (0,0).
           W           W domain, single zero at (0,0).
           PI          K domain, no zeores or poles.


                              Page  41


     These functions are recognized by their one or two character
names.  These names should not be used for user defined functions.




5.3.5   User-defined
--------------------

     The list of user defined functions is searched for a match.  If
no matching name is found, the user is asked if he desires to reenter
the function name.  If the answer is no, an error condition is raised,
and the function evaluation is aborted.




5.3.6   Constants
-----------------

     The string is converted to a real number using the VAX run time
library routine.  Exponential format is allowed, including plus or
minus signs on the exponent.




5.3.7   + operator
------------------

     The + operator uses one of two methods.  To determine the method
used, the compined order of all of the denominators is determined.
If this number is less than the SETtable variable QZcutoff, and none
of the numerators is larger than the associated denominator, the QZ
algorithm is used as described in the theroy manual.  Otherwise this
method is used.  Given that:

          R = F1 + F2  where    F1 = k1*A1/B1  and  F2 = k2*A2/B2
then
                      (k1 * A1 * B2)  +  (k2 * A2 * B1)
                 R =  ---------------------------------
                                  (B1 * B2)

     The three products are first computed.  The two products in the
numerator are then expanded and added together coefficient by
coefficient.  The sum is then factored, and the terms collected and
canceled with those in the denominator.





                              Page  42

5.3.8   - operator
------------------

     The - operator uses the following method.  Given that:

          R = F1 - F2  where    F1 = k1*A1/B1  and  F2 = k2*A2/B2
then
                      (k1 * A1 * B2)  -  (k2 * A2 * B1)
                 R =  ---------------------------------
                                  (B1 * B2)

     The method is similar to that used by the + operator, except that
the numerator products are subtracted.  The same limits apply. The -
operator can also be used on the first term of an expression, for
example "-S*(S-1)".  In this case it is termed a unary operator.




5.3.9   * operator
------------------

     The * operator uses the following method.  Given that:

          R = F1 * F2  where    F1 = k1*A1/B1  and  F2 = k2*A2/B2
then
                      (k1 * k2) * (A1 * A2)
                 R =  ---------------------
                            (B1 * B2)

     The computation is straightforward.  The gains are multiplied
together to get the resultant function gain.  Since the polynomials
are in factored form, all that is needed is to group together the
factors, and then collect and cancel common factors.




5.3.10   / operator
-------------------

     The / operator uses the following method.  Given that:

          R = F1 / F2  where    F1 = k1*A1/B1  and  F2 = k2*A2/B2
then
                      (k1 / k2) * (A1 * B2)
                 R =  ---------------------
                            (B1 * A2)

     The computation is straightforward.  The gains are divided
to get the resultant function gain.  Since the polynomials are


                              Page  43

in factored form, all that is needed is to group together the factors,
and then collect and cancel common factors.




5.3.11   ^ operator
-------------------

     This is an exponentiation operator.  The first operand can be any
function, but the second operand must be a constant function (plane=K,
no zeroes or poles) and must have a positive integer value.  The
evaluation is done by repeated multiplication.




5.3.12   $(named) operators
---------------------------

     These operators are capapable of a multitude of operations.  They
are grouped in to categories such as algebraic, conversion, input, and
miscellanous.  More help is available in these various groupings under
the FUNCTION GENERATE command, which offers an easy way to use named
operators to create static functions.  Dynamic functions using named
operators must, of course, use the "$" operator format.




5.4   DELETE
------------

     This command may be used to delete a particular function, or to
delete all functions.

     If the "ALL" is entered as a function name, all functions will be
deleted.  A confirmation will be requested if any functions are
currently defined.  Otherwise the list of functions is then searched
for one with a matching name, and such a function is deleted if found.
 If no matching function is found, a message is printed and control
returns to the command level.

     Format:     FUNCTION  DELETE  [ALL]  [function-name]




5.5   EDIT
----------



                              Page  44

     This modifier invokes the INCA function editor, which can be
used to create and modify functions. The user should understand the
data content of a function before using the function editor.  This
information can be found under the topic "Functions". A function can
be edited in any one of a number of formats.  Regardless of entry
format, the function is stored in factored form using the numerator
gain.  Nearly identical factors (within 1 ppm) are collected and
canceled if necessary.  Functions entered in unfactored format are
first factored.

     Format:     FUNCTION  EDIT  format  [function-name]




5.5.1   GRAPHIC
---------------

     This format invokes the INCA graphic function editor, which can
be used to create and modify functions.  The user should understand
the data content of a function before using the function editor.  This
information can be found under the topic "Functions".  The function is
stored in factored form using the numerator gain.  Nearly identical
factors (within 1 ppm) are collected and canceled if necessary.
This command is for testing and instructional use only, and is not
designed for accurate entry of functions.

     Format:     FUNCTION  EDIT  GRAPHIC  [function-name]




5.5.1.1   Commands
------------------

     Many different graphic editor commands (subcommands) are
available.  The commands listed below are available to inspect and
manipulate the function.  These commands are activated by the use of
one letter abbreviations.  Hitting the key that is the appropriate
abbreviation will immediately activate the desired function -- it is
not necessary to use the <return> or <enter> key.

     Most graphics editor commands use the position of the graphics
cursor as additional input.  This information might be a point on the
plot to be examined, the corner of a window for a zoom operation, or
the position at which to place a label.  An unexecutable command is
signaled by sounding the terminal bell three times.  This might
happen if the cursor was not at a valid point of the plot, or the
status was not appropriate (e.g., attempting a zoom without the window
being set).



                              Page  45

5.5.1.1.1   A-add
-----------------

     This command will allow the user to add a zero or pole to the
function.  Just place the crosshairs at the proper point, and press
"A" followed by "Z" for a zero, or "P" for a pole.  A real root will
be created at the point indicated, moved up or down if necessary so as
to place the point on the real axis.  If a complex root is desired,
press "C" immediately after pressing "A".

     Additional input :     None.
     Cursor position :      No effect.




5.5.1.1.2   B-BackZoom
----------------------

     The scale of each view reached by using the <Z-Zoom> command is
pushed onto a special stack.  This command will pop one view off of
the stack, allowing a previous view to be reexamined.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.3   C-Comment
---------------------

     This command will allow the user to enter a new comment.  The old
comment is displayed, and the user is prompted to enter the new
comment.  To retain the old comment, just press <RETURN>.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.4   D-DeZoom
--------------------

     This command allows the user to reverse the <Z-zoom> command. The
plot will be redrawn at the original scale.  Display items such as
those resulting from the <T-Type> command will be lost.

     Additional input :     None
     Cursor position :      No effect.


                              Page  46





5.5.1.1.5   E-Exit
------------------

     This command will cause an exit from the cursor mode and a return
to command mode.  This command is the same as <X-Xit>.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.6   F-Fix-function
--------------------------

     This command will round the currently defined roots off to the
graphics editor's internal 'grid'.  The size of the grid is controlled
by the "W-Width" command.  All new roots are automatically rounded to
grid locations.  It is necessary to round roots to the grid before
they can be canceled out using the "A-Add" command.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.7   G-Gain
------------------

     This command will allow the user to enter a new gain.  The old
gain is displayed, and the user is prompted to enter the new
gain.  To retain the old gain, just press <RETURN>.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.8   H-Help
------------------

     This command will display a menu of the active and available
graphics editor commands at the cursor location.

     Additional input :     None


                              Page  47

     Cursor position :      No effect.




5.5.1.1.9   K-Keyboard
----------------------

     This command allows the corners of the zoom area to be input from
the keyboard.  The zoom area is defined by minima and maxima for both
the X and Y coordinates.  After the coordinates are entered the area
to be zoomed will be shown on the screen as a rectangle.  If the
<L-Lower left> or <U-Upper right> commands are used before the zoom is
executed that corner will be repositioned and rectangle redrawn.

     Additional input :     Minimum, maximum values of X and Y.
     Cursor position :      No effect.




5.5.1.1.10   L-Lower left
-------------------------

     This command uses the cursor coordinates to set a corner of the
zoom area.  The related command <U-Upper right> may be used to set the
other corner.  When both corners are set the area to be zoomed will be
shown on the screen as a rectangle.  If this command is repeated
before the zoom is executed the corner will be repositioned and
rectangle redrawn.  It should be noted that the point selected using
this command need not necessarily be the lowest or the leftmost of the
two points selected.

     Additional input :     none
     Cursor position :      One of the corners of the Zoom Window.




5.5.1.1.11   N-Name
-------------------

     This command will allow the user to change the name of the
function.  The old name is displayed, and the user is prompted to
enter the new name.  To retain the old name, just press <RETURN>.

     Additional input :     None
     Cursor position :      No effect.





                              Page  48

5.5.1.1.12   O-Original
-----------------------

     This command cancels all changes made in the current editing
session redisplays the original function.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.13   P-Plane
--------------------

     This command will allow the user to change the function plane.
The old plane is displayed, and the user is prompted to enter the new
plane.  To retain the old plane, just press <RETURN>.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.14   Q-sQuare-zoom-area
-------------------------------

     This command will ensure that the zoom area is square, that is,
has the same scale on the X and Y axes. The zoom area must be
completely defined.  Both minima and maxima for both the X and Y
coordinates must have been defined, at which point the area to be
zoomed will be shown on the screen as a rectangle.  The square command
will enlarge the rectangle so that it is a square having the size of
the longer side of the rectangle.  This command should not be used if
the two axes represent wildly different quantities.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.15   R-Redraw
---------------------

     This command allows the user to refresh the current plot.  The
plot will be redrawn at the current scale, and with the same curves as
were drawn originally.  Images such as those resulting from the
<T-Type> command will be lost.



                              Page  49

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.16   S-Sample-Period
----------------------------

     This command will allow the user to change the sample period of
the function.  The old sample period is displayed, and the user is
prompted to enter the new sample period.  To retain the old sample
period, just press <RETURN>.

     Additional input :     None
     Cursor position :      No effect.




5.5.1.1.17   T-Type function
----------------------------

     This command will write a brief description of the function used
at the cursor position.  All numbers are displayed with only a few
digits of precision. The following items are displayed:

          Function name.
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of distinct numerator factors and their orders.
          Number of distinct denominator factors.
          List of distinct denominator factors and their orders.

     Additional input :     none
     Cursor position :      Position at which function description is
                            to be written.




5.5.1.1.18   U-upper right
--------------------------

     This command uses the cursor coordinates to set a corner of the
zoom area.  The related command <L-lower left> may be used to set the
other corner.  When both corners are set the area to be zoomed will be
shown on the screen as a rectangle.  If this command is repeated
before the zoom is executed the corner will be repositioned and


                              Page  50

rectangle redrawn.  It should be noted that the point selected using
this command need not necessarily be the uppermost or the rightmost of
the two points selected.

     Additional input :     none
     Cursor position :      One of the corners of the Zoom Window.




5.5.1.1.19   W-Width-of-grid
----------------------------

     This command changes the size of the graphics editor's internal
'grid'.  All new roots are automatically rounded to grid locations.
It is necessary to round roots to the grid before they can be canceled
out using the "A-Add" command.

     Additional input :     Width.
     Cursor position :      No effect.




5.5.1.1.20   X-exit
-------------------

     This command will cause an exit from the cursor mode and a return
to command mode.  This command is the same as <E-exit>.

     Additional input :     none
     Cursor position :      No effect.




5.5.1.1.21   Z-zoom
-------------------

     This command allows the user to enlarge a portion of a plot
without recalculating any of the data.  Both minima and maxima for
both the X and Y coordinates must have been defined, at which point
the area to be zoomed will be shown on the screen as a rectangle. The
zoom coordinates may be entered as real numbers using the <K-keyboard>
command, or through use of the cursor by using the <L-lower left> and
<U-Upper right> commands.  Use of the <Q-square zoom area> command
will ensure that both X and Y axes have the same scale.

     Additional input :     none
     Cursor position :      No effect.



                              Page  51

5.5.1.1.22   2..9-Widen-Window
------------------------------

     This commands will 'UnZoom' by a particular factor.  The
currently visible area will be reduced by the digit entered, and the
function surrounded by blank space.  After using this command new
roots can be entered with a larger magnitude than currently possible.

     Additional input :     None
     Cursor position :      No effect.





5.5.1.1.23   $-QPLOT-command
----------------------------

     This command allows the user to access the HELP library and VAX
facility from the graphics mode.  Other input will return to graphics
mode with no effect.

     Additional input :     None.
     Cursor position :      No effect.




5.5.1.1.24   %-hardcopy
-----------------------

     This command allows the user to create a hardcopy of the
currently displayed plot.

     Additional input :     As needed (terminal dependent).
     Cursor position :      No effect.




5.5.1.1.25   ^-usertext
-----------------------

     This command allows the user to place text of any color any
place on the plot.  The key used is shift-6 on most keyboards.

     Additional input :     Text and color.
     Cursor position :      Location text is to be placed.





                              Page  52

5.5.1.1.26   \-userline
-----------------------

     This command allows the user to draw a line on the plot.

     Additional input :     Text and coordinates.
     Cursor position :      No effect.




5.5.2   LINE
------------

     The function line editor is designed for foolproof if somewhat
cumbersome operation.  It is similar in style to an old-style text
line editor.  The user must enter command to select the item to be
edited, and then enter the new value.

     This is the best editor for batch operation.  It has been
extensively changed since INCA 2.0x, and does NOT support the old
command structure, nor the source file converter.  The batch edit
files must be converted by hand.

     Format:     FUNCTION  EDIT  LINE  [function-name]




5.5.2.1   BODEGAIN_FACTORED
---------------------------

     This format is the same as the factored format except that the
Bode (or DC) gain is used instead of the numerator gain.  To convert
from numerator gain to Bode gain one multiplies by the conversion
factor described below.  The reverse transformation is done by
dividing by the conversion factor.  The conversion factor (C) is
computed as follows.  First calculate a function (F) of all factors:

     To compute F, express factor in form  (s + a +bi)

            If  b<>0          THEN      F = sqrt (a**2 + b**2)
            If  b=0 and a<>0  THEN      F = a
            If  b=0 and a=0   THEN      F = 1

     Then                product of F's for numerator factors
                   C =  --------------------------------------
                        product of F's for denominator factors

     and       <numerator-gain> = <bodegain> / C



                              Page  53

     Format:     FUNCTION  EDIT  LINE  BODEGAIN_FACTORED
                                                [function-name]




5.5.2.2   DEGREE_POLAR
----------------------

     This format allows the magnitude and angle of the roots to be
edited.  The following items are queried.

          Function name.
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of magnitude, phase in degrees, and order for distinct
             numerator factors.
          Number of distinct denominator factors.
          List of magnitude, phase in degrees, and order for distinct
             denominator factors.

     Format:     FUNCTION  EDIT  LINE  DEGREE_POLAR  [function-name]




5.5.2.3   FACTORED
------------------

     The FACTORED option is the default.  This option allows a
function to be entered in factored form.  The following items are
queried:

          Function name (if necessary)
          Plane
          Gain
          Number of distinct zeroes
          Number of distinct poles
          Factors of numerator
          Factors of denominator

     The factored form is the normal storage format for INCA
functions.  Note that roots in the left half plane are entered with
POSITIVE real numbers.

     Format:     FUNCTION  EDIT  LINE  FACTORED  [function-name]





                              Page  54

5.5.2.4   POLAR
---------------

     This format allows the magnitude and angle of the roots to be
edited.  The following items are queried.

          Function name.
          Format identifier ('POLAR FORM').
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of magnitude, phase in radians, and order for distinct
             numerator factors.
          Number of distinct denominator factors.
          List of magnitude, phase in radians, and order for distinct
             denominator factors.

     Format:     FUNCTION  EDIT  LINE  POLAR  [function-name]




5.5.2.5   ROOTS
---------------

     This option allows the roots of a function to be entered.
The following items are queried:

          Function name (if necessary)
          Plane
          Gain
          Number of distinct zeroes
          Number of distinct poles
          Roots of numerator
          Roots of denominator

     The roots of a function are the normal INCA printout format. Note
that roots in the left half plane are entered with NEGATIVE real
numbers.

     Format:     FUNCTION  EDIT  LINE  ROOTS  [function-name]




5.5.2.6   UNFACTORED
--------------------

     This option allows a function to be entered in unfactored form.
The following items are queried:


                              Page  55


          Function name (if necessary)
          Plane
          Order of numerator
          Order of denominator
          Coefficients of numerator in increasing order.
          Coefficients of denominator in increasing order.

     The function is converted to factored form before being stored.

     Format:     FUNCTION  EDIT  LINE  UNFACTORED  [function-name]




5.5.2.7   ZETA_OMEGA
--------------------

     This format will allow a function to be entered in a Zeta-Omega
format.  The following items are queried.

          Function name.
          Format identifier ('ZETA_OMEGA FORM').
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of zeta, omega, order for distinct numerator factors.
          Number of distinct denominator factors.
          List of zeta, omega, order for distinct denominator factors.

     Format:     FUNCTION  EDIT  LINE  ZETA_OMEGA  [function-name]




5.5.2.8   Commands
------------------

     Many different line editor commands (subcommands) are available.




5.5.2.8.1   CHECK
-----------------

     Check function for self-consistency.  The name is checked for
compatible format, and the zeroes and poles are canceled and
collected.



                              Page  56

     Format:     CHECK




5.5.2.8.2   DENOMINATOR
-----------------------

     Format:     DENOMINATOR  denominator-subcommand  [parameter]




5.5.2.8.2.1   ADD
-----------------

     This command is used to extend the denominator polynomial.
New coefficients (unfactored format) or roots (other formats)
are entered after using this command.  Just pressing <RETURN>
will terminate the entry of new data in unfactored format.
Entering a order of 0 will terminate the entry of new data in
other formats.

     Format:     DENOMINATOR  ADD




5.5.2.8.2.2   CHANGE
--------------------

     This command will type out denominator root nn in the
appropriate format.  The user will then be asked to reenter the
factor or coefficient.  Just pressing <RETURN> will cause the
old data to be retained.

     Format:     DENOMINATOR  CHANGE  [root-number]




5.5.2.8.2.3   DEGREE
--------------------

     This command can be used to reduce the degree of the
denominator polynomial (unfactored format) or the number of
distinct roots (other formats). The current degree or root count
will be typed. The user will then be asked to enter a new degree
or root count, and the polynomial will be truncated at that
point.



                              Page  57

     Format:     DENOMINATOR  DEGREE  [integer]




5.5.2.8.2.4   VIEW
------------------

     This command will display the entire denominator for inspection.

     Format:     DENOMINATOR  VIEW  [root-number]




5.5.2.8.3   HEADING
-------------------

     This command allows the user to edit the function heading, which
consists of the name, comment, plane, gain, and sample period (for Z
and W plane functions).

     Format:     HEADING  heading-subcommand  [parameter]




5.5.2.8.3.1   COMMENT
---------------------

     This command will type the current comment, and then ask
the user to enter a new comment.  Just pressing <RETURN> will
cause the old comment to be retained.

     Format:     HEADING  COMMENT  [character-string]




5.5.2.8.3.2   GAIN
------------------

     This command will type the current gain, and then ask the
user to enter the new gain.  Just pressing <RETURN> will cause
the old gain to be retained.  The gain may be any real number.
This is either the numerator gain (in most cases) or the Bode
gain (in BODEGAIN_FACTORED format).

     Format:     HEADING  GAIN  [real-number]




                              Page  58

5.5.2.8.3.3   NAME
------------------

     This command will type the current name, and then ask the
user to enter a new name.  Just pressing <RETURN> will cause the
old name to be retained.

     Format:     HEADING  NAME  [logical-name]




5.5.2.8.3.4   PLANE
-------------------

     The function plane must be one of the four characters "S",
"Z", "W", or "K".  The first three represent the plane of the
function, and the last indicates a constant without zeroes or
poles.  Any other character is rejected with a warning message
and the prompt is repeated.

     Format:     HEADING  PLANE  [character]




5.5.2.8.3.5   SAMPLING_PERIOD
-----------------------------

     This command can only be used if the function is in the Z
or W plane.  The current sample period will be typed, and the
user will be asked to enter the new sample period.  Just
pressing <RETURN> will cause the old sample period to be
retained.  The sample period must be a positive real number.

     Format:     HEADING  SAMPLING_PERIOD  [real-number]




5.5.2.8.3.6   VIEW
------------------

    This comment will type the function heading, including name,
creation time, date, plane, gain, and sample period (if in Z or
W plane).







                              Page  59

5.5.2.8.4   NUMERATOR
---------------------

     Format:     NUMERATOR  numerator-subcommand  [parameter]




5.5.2.8.4.1   ADD
-----------------

     This command is used to extend the numerator polynomial.
New coefficients (unfactored format) or roots (other formats)
are entered after using this command.  Just pressing <RETURN>
will terminate the entry of new data in unfactored format.
Entering a order of 0 will terminate the entry of new data in
other formats.

     Format:     NUMERATOR  ADD




5.5.2.8.4.2   CHANGE
--------------------

     This command will type out NUMERATOR root nn in the
appropriate format.  The user will then be asked to reenter the
factor or coefficient.  Just pressing <RETURN> will cause the
old data to be retained.

     Format:     NUMERATOR  CHANGE  [root-number]




5.5.2.8.4.3   DEGREE
--------------------

     This command can be used to reduce the degree of the
NUMERATOR polynomial (unfactored format) or the number of
distinct roots (other formats). The current degree or root count
will be typed. The user will then be asked to enter a new degree
or root count, and the polynomial will be truncated at that
point.

     Format:     NUMERATOR  DEGREE  [integer]






                              Page  60

5.5.2.8.4.4   VIEW
------------------

     This command will list the entire NUMERATOR for inspection.

     Format:     NUMERATOR  VIEW  [root-number]




5.5.2.8.5   VIEW
----------------

     This command will list the entire function in the current
format for inspection.

     Format:     VIEW




5.5.2.8.6   XIT
---------------

     Exit function editor and save the function.  The old function
will be thrown in the trash, and may be accessed using the FUNCTION
UNDELETE command.

     Format:     XIT




5.5.3   SCREEN
--------------

     The function screen editor is implemented by writing the
function to a file ('INCAFCN.DAT') and then calling the EDT editor to
allow the user to edit the file.  After the user exits EDT in the
normal manner, the file is read by a "compiler" program which checks
the modified function for errors.  If errors are found, the user is
returned to EDT for corrections.  The error messages are placed in the
file itself -- and they are automatically removed by the compiler on
the next pass.

     Format:     FUNCTION  EDIT  SCREEN  [function-name]







                              Page  61

5.6   GENERATE
--------------

     This modifier provides a variety of ways to easily create new
transfer functions.  The functions so generated are STATIC, and thus
are not dependent on other constants.  Use the FUNCTION COMPUTE
command and the expression format if you wish to make dynamic
functions.

     Format:     FUNCTION  GENERATE  [modifiers]




5.6.1   ALGEBRAIC_OPERATOR
--------------------------

     The modifiers contained in this modifier are used for simple
algebraic and triginometric operations.  The argument must be a
constant (no roots) function or an expression which evaulates to a
constant function.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  [modifier]




5.6.1.1   COS
-------------

     This operator takes the cosine of a constant (K-plane) function.
It is useful for calculating other constants, particularily in the Z
plane.  The argument is in radians.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  COS
     Expression: $COS (angle-in-radians)




5.6.1.2   COSD
--------------

     This operator takes the cosine of a constant (K-plane) function.
It is useful for calculating other constants, particularily in the Z
plane.  The argument is in degrees.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  COSD
     Expression: $COSD (angle-in-degrees)




                              Page  62

5.6.1.3   EXP
-------------

     This operator calculates the exponential function (exp(x)), that
is, the inverse of the natural logarithm.  The parameter must be a
constant (K-plane) function.  This operator is useful for calculating
other constants.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  EXP
     Expression: $EXP (const)




5.6.1.4   EXP10
---------------

     This operator calculates 10 raised to a given power, that is, the
inverse of the base 10 logarithm.  The parameter must be a constant
(K-plane) function.  This operator is useful for calculating other
constants.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  EXP10
     Expression: $EXP10 (const)




5.6.1.5   LOG
-------------

     This operator takes the base e (natural) logarithm of a constant
(K-plane) function.  It is useful for calculating other constants.
The parameter must be greater than or equal to zero.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  LOG
     Expression: $LOG (const)




5.6.1.6   LOG10
---------------

     This operator takes the base 10 logarithm of a constant (K-plane)
function.  It is useful for calculating other constants.  The parameter
must be greater than or equal to zero.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  LOG10
     Expression: $LOG10 (const)



                              Page  63

5.6.1.7   SIN
-------------

     This operator takes the sine of a constant (K-plane) function.
It is useful for calculating other constants, particularily in the Z
plane.  The argument is in radians.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  SIN
     Expression: $SIN (angle-in-radians)




5.6.1.8   SIND
--------------

     This operator takes the sine of a constant (K-plane) function.
It is useful for calculating other constants, particularily in the Z
plane.  The argument is in degrees.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  SIND
     Expression: $SIND (angle-in-degrees)




5.6.1.9   SQRT
--------------

     This operator takes the square root of a constant (K-plane)
function. It is useful for calculating other constants.  The argument
must be greater than or equal to zero.

     Format:     FUNCTION  GENERATE  ALGEBRAIC_OPERATOR  [modifier]
     Expression: $SQRT (const)




5.6.2   CONVERSION
------------------

     This modifier allows conversion from one plane to another.  If
the original plane is the S plane, an optional zero order hold and/or
advance factor may be added.  For more information, check the
conversion subtopic of expressions or the INCA theory manual.
The operators $Z, $ZH, $W, and $WH allow conversion of functions
from one plane to another.  The conversion process involved is
described below.

     Format:     FUNCTION  GENERATE  CONVERSION


                              Page  64

     Expression: $W (S-function, sampleperiod [,advancefactor])
                 $W (Z-function)
                 $W (W-function, sampleperiod)
                 $WH (S-function, sampleperiod [,advancefactor])
                 $Z (S-function, sampleperiod [,advancefactor])
                 $Z (Z-function, sampleperiod)
                 $Z (W-function)
                 $ZH (S-function, sampleperiod [,advancefactor])




5.6.2.1   $W
------------

     This operator allows a function in the S or Z plane to be
converted to the W plane.  It also allows a sample period to be
assigned to a function already in the W plane.

     If the function is in the S plane, the operands include the name
of the function to be converted, the sampling period, and the
(optional) advanced modifier.  The operation is performed by first
converting from S to Z, and then converting from Z to W.

     If the function is in the Z plane, there is only one operand
since the sampling period is already defined.  If the function is in
the W plane, there are two operands, the second being the sample
period.  This operand must be constant (no zeroes or poles) and
greater than zero.

     The W-plane conversion is a bilinear transformation.
Everywhere a Z appears in the function, it is replaced by the
expression  (1+w*T/2) / (1-w*T/2), where T is the sample period.




5.6.2.2   $WH
-------------

     This operator allows a function in the S plane (NOT Z plane) to
be converted to the W plane with the inclusion of a zero order hold.




5.6.2.3   $Z
------------

     This operator allows a function in the S or W plane to be
converted to the Z plane.  It also allows a sample period to be


                              Page  65

assigned to a function already in the Z plane.

     If the function is in the S plane, the operands include the name
of the function to be converted, the sampling period, and the
(optional) advanced modifier.  If the function is in the Z plane,
there are two operands, the second being the sample period.  This
operand must be constant (no zeroes or poles) and greater than zero.

     The conversion from the S plane to the Z plane is quite
complicated.  In addition to the S plane function, the sample period
is needed (this must be a constant or a K plane function).  A zero
order hold may be included in the conversion process if desired.  This
is implemented by using the $ZH operator instead of the $Z operator.
An optional advance factor is allowed (which must also be a constant
or K plane function).  The advance factor allows users to do the
so-called advanced or modified Z-transform.

The process of conversion consists of the following steps.  Here the
letter A is pole, T is the sample period, and D is the advance factor,
and K is the numerator of the partial fraction.

     1)   Divide function by S if zero order hold is included.
     2)   Calculate partial fraction expansion of function.
     3)   Convert denominator of expanded function, by using
          expression   s+A  -->   z-exp(A*T).
     4)   Convert numerator of expanded function, by using
          expression    K   -->   K * exp(-A*D*T).......
            .
            .
            .
     5)   Add the terms of the partial fraction together and
          factor the numerator.
     6)   Multiply function by (Z-1)/Z if zero order hold is included.

More detailed information is available in the INCA Theory Manual.

     If the function is in the W plane, there is only one operand
since the sampling period is already defined.  The conversion from the
W plane to the Z plane is a bilinear transformation.  Everywhere a W
appears in the function, it is replaced by the expression  (2/T) *
(z-1) / (z+1), where T is the sample period.




5.6.2.4   $ZH
-------------

     This operator allows a function in the S plane (NOT W plane) to
be converted to the Z plane with the inclusion of a zero order hold.



                              Page  66

5.6.3   DYNAMIC_EQUATION
------------------------

     This modifier allows a function to be defined in terms of other
functions and constants.  The result function is the equation -- it is
recomputed each time the function in question is needed. If you define
a function in terms of itself, an infinite recursion loop will be
create, resulting in an error condition.  The expression can be any
valid INCA expression.  See the main topic Expressions for more
details and examples.

     Format:     FUNCTION  GENERATE  DYNAMIC_EQUATION
                                             [function[:]=expression]




5.6.4   FILTER
--------------

     The FILTER modifier will create a new STATIC function.  There are
several common filters listed below.  Two inputs are required for most
filters -- Bandwidth and Order.  The bandwidth is entered in radians
per second, and has a default value of 1.  The order is usually a
count of the number of poles.  The default value is 2.

     Format:     FUNCTION  GENERATE  FILTER  filter-type




5.6.4.1   BESSEL
----------------

     The Bessel filter is an all-pole constant time delay filter.
It exhibits linear phase response characteristics over the filter
pass band.  The phase linearity characteristics are superior to the
Butterworth and Chebyshev filters, but the amplitude resonse is
inferior.

     To design a Bessel filter, the following specifications are
required:

     1)  Bandwidth (r/s)
     2)  Order

     Format:     FUNCTION  GENERATE  FILTER  BESSEL
     Expression: $BESSEL (bandwidth,order)





                              Page  67

5.6.4.2   BUTTERWORTH
---------------------

     The Butterworth filter is designed to meet frequency-response
amplitude specifications such that the transfer function H(jw) is
taken to have n poles, to have all its zeros at w=infinity, to have a
bandwidth ranging from zero to w=W, and to have an amplitude
characteristic which has the value 1.0 at w=0 and is as flat as
possible at the passband center.  The Butterworth filter is a set of
poles evenly spaced on a semi-circle in the left half plane.  There
are two parameters.

     1)  Bandwidth (r/s)
     2)  Order (maximum is 20)

     Format:     FUNCTION  GENERATE  FILTER  BUTTERWORTH
     Expression: $BUTTER (bandwidth,order)




5.6.4.3   CHEBYSHEV
-------------------

     A chebyshev filter is an all-pole filter with the following
characteristics:

     1)   An equal amount of ripple in the pass band (equiripple)
     2)   Monotonically decreasing with frequency above the pass band
     3)   Steepest possible cutoff rate in the transmission band.

     The following specifications are required:

     1)   Bandwidth (r/s)
     2)   Order
     3)   Ripple (in dB)     (default = 0.5)

     Format:     FUNCTION  GENERATE  FILTER  CHEBYSHEV
     Expression: $CHEBYS (bandwidth,order,ripple)




5.6.4.4   ITAE
--------------

     An ITAE (minimum Integral of Time-multiplied Absolute Error)
filter is a set of poles designed to reduce the transmission error.
There are two parameters.

     1)  Bandwidth (r/s)


                              Page  68

     2)  Order (maximum is 8)

     Format:     FUNCTION  GENERATE  FILTER  ITAE
     Expression: $ITAE (bandwidth,order)




5.6.5   INPUT
-------------

     Format:     FUNCTION  GENERATE  INPUT  [input-type]




5.6.5.1   ACCELERATION
----------------------

     This operator will produce the Laplace transform corresponding to
a constant acceleration.  The parameter must be a constant expression,
with no zeroes or poles.

     Format:     FUNCTION  GENERATE  INPUT  ACCELERATION  [acc-const]
     Expression: $ACC (acc-const)




5.6.5.2   COMBINATION
---------------------

     This operator will produce the Laplace transform corresponding to
a summation of step, ramp, and acceleration components.  The
parameters must be constant expressions, with no zeroes or poles.
Additional components can be added as desired to represent the rate of
change of acceleration, and so on.

     Format:     FUNCTION  GENERATE  INPUT  COMBINATION
     Expression: $SRA (step-const [,ramp-const [,acc-const ...]])




5.6.5.3   IMPULSE
-----------------

     This modifier will create an impulse function.  It has no
equivalent expression operator.  It is equivalent to a constant
function of gain one.



                              Page  69

     Format:     FUNCTION  GENERATE  INPUT  IMPULSE
     Expression: 1




5.6.5.4   DAMPED_OSCILLATOR
---------------------------

     This operator will produce the Laplace transform corresponding to
a damped oscillator.  The parameters must be constant expressions,
with no zeroes or poles.  The frequency must be given in radians per
second, and the phase is given in radians.  This operator is evaluated
as:
                    cos(th) * (s+a) - sin(th) * w
                    -----------------------------
                      (s+a) ^ 2    +    w ^ 2

     Format:     FUNCTION  GENERATE  INPUT  DAMPED_OSCILATOR
                                                           [acc-const]
     Expression: $DOSC (frequency [,phase-in-radians [,damping]])
                 $DOSCD (frequency [,phase-in-degrees [,damping]])




5.6.5.5   RAMP
--------------

     This operator will produce the Laplace transform corresponding to
a constant ramp.  The parameter must be a constant expression, with no
zeroes or poles.

     Format:     FUNCTION  GENERATE  INPUT  RAMP  [ramp-const]
     Expression: $RAMP (ramp-const)




5.6.5.6   STEP
--------------

     This operator will produce the Laplace transform corresponding to
a constant step.  The parameter must be a constant expression, with no
zeroes or poles.

     Format:     FUNCTION  GENERATE  INPUT  STEP  [step-const]
     Expression: $STEP (step-const)





                              Page  70

5.6.6   MISCELLANEOUS
---------------------

     Various uncategorizable function types are lumped together
in this modifier.  For more information see the individual modifiers.

     Format:     FUNCTION  GENERATE  MISCELLANEOUS  [modifier]




5.6.6.1   CLOSED_LOOP
---------------------

     The CLOOP operator may be used to calculate a closed loop
transfer function in a simplified manner. The compensation, plant, and
feedback functions are the three operands, and must all be
present.  The system is of this form:

            +       ------------     ------------
   -----------O----| comp. fcn. |---| plant fcn. |--------------->
              ^     ------------     ------------    |
              | -       -------------------          |
               --------| feedback function |---------
                        -------------------

     Format:     FUNCTION  GENERATE  MISCELLANEOUS  CLOSED_LOOP
     Expression: $CLOOP (comp-fcn, plant-fcn, feedback-fcn)




5.6.6.1.1   evaluation
----------------------

     The result of the $CLOOP operator is computed using the following
equation.

               CLTF = $CLOOP (CF,PF,FF)
               CLTF = (CF * PF) / (1 + (CF * PF * FF))

     Where CF is the compensation function, PF is the plant
function, and FF is the feedback function.  If we let

                    CF = P/Q,   PF = R/S,   FF = U/V

then,
                                 (P * R * V)
             CLTF   =     -------------------------
                          (Q * S * V) + (P * R * U)



                              Page  71

5.6.6.1.2   examples
--------------------

     The following examples illustrate the use of the $CLOOP operator.
All functions must be in the same plane, or in the K plane.

               CLTF = $CLOOP(1,g,h)       equiv. to  g/(1+g*h)
               CLTF = $CLOOP(23,g*g2,h)   equiv. to  23*g*g2/(1+23*g*g2*h)




5.6.6.2   PD_CONTROL_LAW
------------------------

     This operator allows the user to develop a position and rate
(derivative) or PD control law.  To design the controller, the user
must know the Bode or DC gain of the rest of the control loop.  If the
rest of the loop consists of just the plant, the loop gain of the
system is the reciprocal of the system inertia.

There are three parameters:

     1)  Controller bandwidth (r/s)
     2)  Damping ratio (default = 0.707...)
     3)  Loop gain (recriprocal of inertia).

     Format:     FUNCTION  GENERATE  MISCELLANEOUS  PD_CONTROL_LAW
     Expression: $PD (bandwidth, damping-ratio, gain)




5.6.6.3   PID_CONTROL_LAW
-------------------------

     This operator allows the user to design a Position-plus-Integral-
plus-Derivative (PID) Control Law.  To design the controler, the user
must know the Bode or DC gain of the rest of the control loop.  If the
rest of the loop consists of just the plant, the loop gain is the
reciprocal of the inertia.

There are three parameters:

     1)  Controller bandwidth (r/s)
     2)  Damping ratio (default = 0.707...)
     3)  Loop gain (recriprocal of inertia).
     4)  Integral Loop Weighting factor.  (Default = 1)

     Format:     FUNCTION  GENERATE  MISCELLANEOUS  PID_CONTROL_LAW
     Expression: $PID (bandwidth, damping-ratio, gain, ...)


                              Page  72





5.6.7   STATIC_EQUATION
-----------------------

     This modifier allows a function to be defined in terms of other
functions and constants.  The resulting equation is then evaluated,
and the function is stored in factored form. If you define a function
in terms of itself, the old function value will be used before it is
trashed.  The expression can be any valid INCA expression.  See the
main topic Expressions for more details and examples.

     Format:     FUNCTION  GENERATE  STATIC_EQUATION
                                             [function[:]=expression]




5.7   LOAD
----------

     The format of the file required by the LOAD modifier is best
illustrated by the example below.  This is the same format as created
by the FUNCTION SAVE FACTORED or FUNCTION AUDIT FACTORED commands.
Thus a properly formatted function-textfile could be created by
editing the audit file.  The output itself can be edited if desired,
but the format cannot be changed.

     Format:     FUNCTION  LOAD  file-name




5.7.1   Example
---------------

------------------------------------------------------------------------------

Function name  = A
Storage requirements              268
Function last modified on      11:07:41.40  18-SEP-1987
Comment:

ROOTED FORM
Function plane = S
Gain = -0.354468949192959

Numerator   has  4 distinct roots:
  S=  - 0.42456766000000000                                      Order =  1


                              Page  73

  S=  + 0.65550000000000000                                      Order =  1
  S=  - 0.60000000000000001     - j* 0.46000000000000000         Order =  1
  S=  - 0.60000000000000001     + j* 0.46000000000000000         Order =  1

Denominator has  4 distinct roots:
  S=  - 0.11000000000000000     - j* 0.46000000000000000         Order =  2
  S=  - 0.11000000000000000     + j* 0.46000000000000000         Order =  2
  S=  -  1.0800000000000000     - j* 0.16000000000000000         Order =  1
  S=  -  1.0800000000000000     + j* 0.16000000000000000         Order =  1

------------------------------------------------------------------------------




5.8   SAVE
----------

     The format of the file produced by the SAVE modifier is best
illustrated by the example under the FUNCTION LOAD command.  This is
the same format as created by the FUNCTION VIEW FACTORED or FUNCTION
AUDIT FACTORED commands. The file can be edited if desired, but the
format cannot be changed.

     Format:     FUNCTION  SAVE  file-name




5.9   UNDELETE
--------------

     This command allows the user to retreive previously deleted
functions.  Every time a function is deleted, it is placed in an
internal "trash barrel".  The last ten deleted functions can be
examined using the UNDELETE modifier.  The user is then asked if he
wants to recover each one in turn.  If he answers yes, the function is
copied into the list of active functions.  It remains in the trash as
well.  If a currently existing function has the same name, it is
deleted.

     Format:     FUNCTION  UNDELETE




5.10   VIEW
-----------

     This qualifer may be used to view functions on the terminal.
There are a number of formats available.  The default format is


                              Page  74

HEADER.  If a format for the roots is given, a dynamic function will
first be converted to static format.  If no parameter is given all
functions are displayed.

     Format:     FUNCTION  VIEW  format  [ALL]  [function-name]

     The ALL parameter will cause all existing functions to be printed
in the format chosen.  The function-name-parameter is incompatable
with the ALL parameter, and if both are given the second parameter
will be ignored.




5.10.1   BODEGAIN_FACTORED
--------------------------

      The following items are sent to the terminal display.  Appropriate
labels are provided.

          Function name.
          Format identifier ('BODEGAIN_FACTORED FORM').
          Function plane.
          Function bode gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of distinct numerator factors and their orders.
          Number of distinct denominator factors.
          List of distinct denominator factors and their orders.

     Format:     FUNCTION  VIEW  BODEGAIN_FACTORED  [ALL]  [function-name]




5.10.2   DEGREE_POLAR
---------------------

     The following items are sent to the terminal display.  Appropriate
labels are provided.

          Function name.
          Format identifier ('DEGREE_POLAR FORM').
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of magnitude, phase in degrees, and order for distinct
             numerator factors.
          Number of distinct denominator factors.
          List of magnitude, phase in degrees, and order for distinct


                              Page  75

             denominator factors.

     Format:     FUNCTION  VIEW  DEGREE_POLAR  [ALL]  [function-name]




5.10.3   EXPAND_PART_FRACT
--------------------------

     This modifier will cause the function to be typed in partial
fraction format.  If the function is given by:

   F(S) = k  [(s+a1)^p1 . . . (s+am)^pm] / [(s+b1)^q1 . . . (s+bn)^qn]

     the partial fraction expansion is given by:

                  c11         c12                     c1q1
          F(S) =  ----  +  ---------  +  . . .  +  ----------
                  s+b1     (s+b1)**2               (s+b1)**q1
               .
               .
                  cn1         cn2                     cnqn
               +  ----  +  ---------  +  . . .  +  ----------
                  s+bn     (s+bn)**2               (s+bn)**qn

     and the following items are sent to the terminal display.

          Function name.
          Format identifier ('PARTIAL FRACTION FORM').
          Function sample period (if in Z or W plane).
          List of partial fraction terms.

     Format:     FUNCTION  VIEW  EXPAND_PART_FRACT  [ALL]  [function-name]




5.10.4   FACTORED
-----------------

     This format will give the description closest to internal format,
although the function header is truncated.  The following items are
sent to the terminal display.  Appropriate labels are provided.

          Function name.
          Format identifier ('FACTORED FORM').
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.


                              Page  76

          List of distinct numerator factors and their orders.
          Number of distinct denominator factors.
          List of distinct denominator factors and their orders.

     Format:     FUNCTION  VIEW  FACTORED  [ALL]  [function-name]




5.10.5   NO_EVALUATION
----------------------

     This format will give the description closest to internal format.
 The following items are sent to the terminal display.  Appropriate
labels are provided.

          Function name.
          Function creation date and time.
          Function comment.

Either
          Format identifier ('FACTORED FORM').
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of distinct numerator factors and their orders.
          Number of distinct denominator factors.
          List of distinct denominator factors and their orders.
Or
          Format identifier ('DYNAMIC FUNCTION').
          Expression string.

     Format:     FUNCTION  VIEW  NO_EVALUATION  [ALL]  [function-name]




5.10.6   POLAR
--------------

     The following items are sent to the terminal display.  Appropriate
labels are provided.

          Function name.
          Format identifier ('POLAR FORM').
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of magnitude, phase in radians, and order for distinct


                              Page  77

             numerator factors.
          Number of distinct denominator factors.
          List of magnitude, phase in radians, and order for distinct
             denominator factors.

     Format:     FUNCTION  VIEW  POLAR  [ALL]  [function-name]




5.10.7   ROOTS
--------------

     The following items are sent to the terminal display.  Appropriate
labels are provided.

          Function name.
          Format identifier ('ROOTED FORM').
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator roots.
          List of distinct numerator roots and their orders.
          Number of distinct denominator roots.
          List of distinct denominator roots and their orders.

     Format:     FUNCTION  VIEW  [ALL]  [function-name]




5.10.8   SUMMARY
----------------

     This modifier is used to display a one line summary of all of the
functions in the current project, as listed below:

          Function name
Either
          Function plane
          Function gain
          Numerator factors (real + complex)
          Denominator factors (real + complex)
          Comment
Or
          Expression string.

     Format:     FUNCTION  VIEW  SUMMARY





                              Page  78

5.10.9   UNFACTORED
-------------------

     This modifier will type the function in unfactored polynomial
form. The function factors are multiplied together to give the real
coefficients of the unfactored numerator and denominator polynomials.
The numerator polynomial is multiplied by the function numerator gain.
The following items are sent to the terminal display.

          Function name.
          Format identifier ('UNFACTORED FORM').
          Function plane.
          Function sample period (if in Z or W plane).
          Order of numerator.
          List of numerator coefficients.
          Order of denominator.
          List of denominator coefficients.

     Format:     FUNCTION  VIEW  UNFACTORED  [ALL]  [function-name]




5.10.10   ZETA_OMEGA
--------------------

     The following items are sent to the terminal display.  Appropriate
labels are provided.

          Function name.
          Format identifier ('ZETA_OMEGA FORM').
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of zeta, omega, and order for distinct numerator factors.
          Number of distinct denominator factors.
          List of zeta, omega, and order for distinct denominator factors.

     Format:     FUNCTION  VIEW  ZETA_OMEGA  [ALL]  [function-name]













                              Page  79

6   PROJECT
-----------

     When the INCA program is started, the user must select a
particular PROJECT.  A project is a group of related transfer
functions.  These functions are saved in the Project File for that
particular project.  The project file has an extension of ".PRO", for
example "BLANK.PRO".

     The project command allows the user to access the project data
file.  INCA automatically maintains a project file for each project
that the user has initiated.  This file has the same name as the
project, and an extension of ".PRO".  It is written in binary format.
As a protection against system crashes, the INCA program automatically
rewrites this workfile whenever a function is newly defined, created,
or modified.  The workfile is opened, rewriten with all currently
defined functions, and then closed.  Thus if the system crashes during
an INCA session, or even if you accidently delete a function, all one
needs to do is restart INCA.  The contents of the workfile are
automatically read whenever an INCA session is begun.

     A project name must contain less than nine characters, so as to
conform to the old VAX file naming conventions.

     The project name may be entered in two different ways.  The
quickest way is to type the project name after the word "INCA" when
you begin an INCA session, for example "INCA TEST".  The users
directory will then be searched for the project workspace file.  If
the file is not found, the user will be asked to reenter the project
name.

     If the user does not use the above method, a list of current
projects will be displayed and the user will be asked to make a
selection.  Note that the name can be abbreviated.  If the name is not
on the list, the user will be asked to reenter the name to confirm the
creation of a new project.

     Format:     PROJECT  modifier  [project-name]




6.1   AUDIT
-----------

     This modifier is used to place in the audit file a one line
summary of all of the functions in the current project, as listed
below:

          Function name
Either


                              Page  80

          Function plane
          Function gain
          Numerator factors (real + complex)
          Denominator factors (real + complex)
          Comment
Or
          Expression string.

     Format:     PROJECT  AUDIT




6.2   CHANGE
------------

     This modifier is used to change from one project to another.
The functions currently defined will be discarded, and those in the
new project will be loaded into memory.  The directory can be changed
using the UTILITIES SET PATH command.

     Format:     PROJECT  CHANGE  [project-name]




6.3   LOAD
----------

     This modifier is used to read a project file.  The functions
defined in this file will overwrite those currently in memory.  This
capability is most useful for merging projects together.

     Format:     PROJECT  LOAD  [project-name]




6.4   OLD_INCA_LOAD
-------------------

     This modifier is used to read the workspace (.WOR) files created
by INCA version 2.0x.  These workspace files served the same purpose
as the current project files, but were much larger and less flexible.
This command is provided to allow INCA 2.0x users to easily convert to
the present version.  Notice that all INCA 2.0x functions are STATIC!

     Format:     PROJECT  OLD_INCA_LOAD  [workspace-name]





                              Page  81

6.5   SAVE
----------

     This subcommand is used to write the project file.  This command
should be used at the end of a source file that creates new functions,
since the automatic save of the project file is not done during source
file operations.

     Format:     PROJECT  SAVE




6.6   VIEW
----------

     This modifier is used to display a one line summary of all of the
functions in the current project, as listed below:

          Function name
Either
          Function plane
          Function gain
          Numerator factors (real + complex)
          Denominator factors (real + complex)
          Comment
Or
          Expression string.

     Format:     PROJECT  VIEW























                              Page  82

7   MISC
--------

     Some seldom used and unrelated routines are collected here.

     Format:     MISC




7.1   CONVERT_INCA_200
----------------------

     This command will convert files from old INCA (Version 2.00
through 2.08 to the new INCA format.  The old files are retained
unchanged, except for the .SOU files, which are renamed with the
extension '.SOUOLD.

     Format:     MISC  CONVERT_INCA_200




7.1.1   ALL_INCA_FILES
----------------------

     Format:     MISC  CONVERT_INCA_200  ALL_INCA_FILES

     All files are converted.




7.1.2   FRE_FILES
-----------------

     This modifier will allow the user to convert all or selected
frequency response plot (.FRE) files.  The new version will be given
the extension .FR, which is required by INCA 3.00.

     Format:     MISC  CONVERT_INCA_200  FRE_FILES




7.1.3   LOC_FILES
-----------------

     This modifier will allow the user to convert all or selected root
locus plot (.LOC) files.  The new version will be given the extension
.RL, which is required by INCA 3.00.


                              Page  83


     Format:     MISC  CONVERT_INCA_200  LOC_FILES




7.1.4   SOU_FILES
-----------------

     This modifier will allow the user to convert all or selected
command source (.SOU) files.  The old file will be given a new
extension (.SOUOLD) and the new source file will be given the
extension .SOU, as required by INCA 3.00.  This conversion is
difficult because of the new command structure, and many commands were
not converted.  These have been commented out in the new version.  The
user may wish to examine the new source files and complete the
conversion by hand.

     Format:     MISC  CONVERT_INCA_200  SOU_FILES




7.1.5   TIR_FILES
-----------------

     This modifier will allow the user to convert all or selected
time response plot (.TIR) files.  The new version will be given
the extension .TR, which is required by INCA 3.00.

     Format:     MISC  CONVERT_INCA_200  TIR_FILES




7.1.6   WOR_FILES
-----------------

     This modifier will allow the user to convert all or selected
project workspace (.WOR) files.  The new project file will be given
the extension .PRO, which is required by INCA 3.00.  In addition,
INCA 3.00 can directly read workspace files using the command
PROJECT OLD_INCA_LOAD workspace-name

     Format:     MISC  CONVERT_INCA_200  WOR_FILES








                              Page  84

7.2   NO_ERROR_TRAP
-------------------

     The NO_ERROR_TRAP command will cause the QPLOT error handler to
be disabled.  Thus any error will cause the application program to
"crash". Since the system error report will then give the exact line
number and procedure in which the error occured, this command is
useful for debugging purposes.

     Format:     MISC  NO_ERROR_TRAP




7.3   ZAP_SCREEN
----------------

      The ZAP_SCREEN command will erase the terminal screen, and
return terminal to normal text (VT100 if possible) mode.

     Format:     MISC  ZAP_SCREEN
































                              Page  85

8   PLOT
--------

     The plot command will plot one or more of the existing curves.
If no curves are given, the last curves plotted will be plotted again.

     The curves are generated using the FREQUENCY_RESPONSE,
ROOT_LOCUS, or TIME_RESPONSE commands, or may be read from an external
file using the LOAD /CURVE command.

     Format:       PLOT  [modifier]




8.1   EMPTY
-----------

     This modifier will cause an empty plot to be generated.  Any
plots desired must be added using the "O" command.

     Format:       PLOT  EMPTY




8.2   NEW
---------

     This modifier will cause the user to be prompted for the curves
to be plotted, as well as additional information concerning the plot
type.  This is the default modifier.

     Format:       PLOT  [NEW]




8.3   OLD
---------

     This modifier will redraw the last plot(s) used, as they were
before the graphics mode was exited.

     Format:       PLOT  OLD








                              Page  86

8.4   subcommand
----------------

     After completion of a plot, INCA will enter the graphics input
mode.  In this mode one-key commands are available to inspect and
manipulate the plot.  While not all of the cursor mode commands are
available at all times, the same key will usually initiate a
consistent operation.

     INCA specific commands are described below.  More information and
commands are available under the GIN_mode topic, at the main help
level.




8.4.1   Summary
---------------

     This table summarizes the cursor_mode commands.  The availability
columns indicate for which of the plot types the command is valid.
Whether input is needed or the cursor position is significant is also
indicated.

          COMMAND:                 AVAILABLILTY      INPUT  CURSOR
          ------------------      - - - - - - - -     -----  ------
          C-Curve label           R T M P N C V S       -       Y
          F-Find                  R T M P N C V S       -       Y
          G-Gfind                 R T M P N C V S       -       Y
          H-Help                  R T M P N C V S       -       Y
          I-ID label              R T M P N C V S     label     Y
          M-Margins                   M P N C V S       -       Y
          O-Open                  R T M P N C V S      many     -
          S-Select                R T M P N C V S   curve(opt)  -
          T-Type function         R T M P N C V S       -       Y
          S-Value                 R   M P N C V S     k or w    -
          ------------------      - - - - - - - -     -----  ------




8.4.2   C-curve label
---------------------

     This command can be used to label the Various curves by means of
a legend to the side of the plot, or perhaps in an empty space on the
plot.  A line segment with the dot pattern/color of each curve will be
drawn along with the label for that curve.

     Additional input :     None
     Cursor position :      Curve label location.


                              Page  87





8.4.3   F-Find
--------------

     This command computes the value at a specific point on a plotted
curve.  The value and the coordinates of the point are then written to
the graphics screen. Occasionally, the value at a requested point is
not found, and three BELLs will be heard.  The exact items displayed
depend upon the type of plot.

     Additional input :     None.
     Cursor position :      Point for which the value is to be found.




8.4.4   G-Gfind
---------------

     This command computes the value at a specific point on a plotted
curve.  The value of the point is then written to the graphics
screen.  Occasionally, the value at a requested point is not found, and
three BELLs will be heard. The exact item displayed depend upon the
type of plot.

     Additional input :     None.
     Cursor position :      Point for which the value is to be found.




8.4.5   H-Help
--------------

     This command will display a menu of the active and available
graphics mode commands at the cursor location.

     Additional input :     None
     Cursor position :      Menu location




8.4.6   I-ID label
------------------

     This command is used to change the labels assigned to the various
curves.


                              Page  88


     Additional input :     Label to be used.
     Cursor position :      No effect.




8.4.7   M-Margins
-----------------

     This command will generate a list of crossings of the stability
boundary.  In a frequency response plot this is the zero dB and 180 degree
lines.  In a root locus plot this is the imaginary axis.

     Additional input :     None.
     Cursor position :      Margin List Location.




8.4.8   O-Open
--------------

     This command will allow a new window to be added to the plot.
The user is asked to enter curve name[s] for the new window.  The plot
is redrawn with the new window added.

     Additional input :     Zoom window must have been created in
                            base frame using the L, U, and K commands.
     Cursor position :      No effect.




8.4.9   S-Select
----------------

     This command is used to select a different method of display.
Exactly which methods are available depends upon the type of
calculation done (ROOT_LOCUS, etc.).  However, this command can always
be used to select one curve if many are visible, and sometimes can be
used to change the scaling of the axes or to switch from one type of
plot to another (for example, from Bode to Nyquist).  There are
defaults for the scalings and plot types that can be changed by this
commands.  These defaults can be changed by the set command.

     The select command by itself does nothing; the next key pressed
does the action.  In this respect it resembles the function key of a
calculator or the gold key of EDT.  Unless the ESCape option is used,
the select command always results in the plot being redrawn.



                              Page  89

     Additional input :     Select mode command, described below.
     Cursor position :      No effect.




8.4.9.1   Summary
-----------------

     This table summarizes the select_mode commands.  The availability
columns indicate for which of the plot types the command is valid.
Whether input is needed or the cursor position is significant is also
indicated.

          COMMAND:                  AVAILABLILTY        INPUT  CURSOR
          ------------------      - - - - - - - - -     -----  ------
          A-Amplitude Scale           B M P N C V S       -       -
          B-Bode Plot                 B M P N C V S       -       -
          C-Nichols Plot              B M P N C V S       -       -
          D-dB Scale                  B M P N C V S       -       -
          F-Frequency Scale           B M P N C V S       -       -
          H-Hz Scale                  B M P N C V S       -       -
          I-Infinity Circle Scale     B M P N C V S     scale     -
          L-Log Frequency Scale       B M P N C V S       -       -
          M-Magnitude Plot            B M P N C V S       -       -
          N-Nyquist Plot              B M P N C V S       -       -
          O-Origin                          N           origin    -
          P-Phase Plot                B M P N C V S       -       -
          R-RPS Scale                 B M P N C V S       -       -
          S-Strip Bode Plot           B M P N C V S       -       -
          V-Popov Plot                B M P N C V S       -       -
          W-Wrapping                  B M P N C V S       -       -
          ESC-ESCape              R T B M P N C V S       -       -
          ------------------      - - - - - - - - -     -----  ------




8.4.9.2   A-Amplitude Scale
---------------------------

     This command is used to change the scaling of the magnitude axis
to absolute amplitude.  This command is only valid for a frequency
response plot.

     Additional input :     None
     Cursor position :      No effect.






                              Page  90

8.4.9.3   B-Bode Plot
---------------------

     This command is used to draw a combined Bode Magnitude and Bode
Phase plot when another type of plot is currently displayed.  This
command is only valid for a frequency response plot.  This is the
default plot type.

     Additional input :     None
     Cursor position :      No effect.




8.4.9.4   C-Nichols Plot
------------------------

     This command is used to draw a Nichols plot when another type of
plot is currently displayed.  A Nichols plot is a plot of phase
(horizontal) versus magnitude (vertical).

     Additional input :     None
     Cursor position :      No effect.




8.4.9.5   D-dB Scale
--------------------

     Additional input :     None
     Cursor position :      No effect.

     This command is used to change the scaling of the magnitude axis
to dB.  This command is only valid inside the FREQUENCY_RESPONSE
command.  The command will not work when a Bode Phase plot is
currently displayed.  This is the default scaling for the magnitude
axis.

     Additional input :     None
     Cursor position :      No effect.




8.4.9.6   F-Frequency Scale
---------------------------

     This command is used to change the scaling of the frequency axis
to linear.  This command is only valid inside the FREQUENCY_RESPONSE
command.  The command will not work when a Nyquist, Nichols, or Popov


                              Page  91

plot is currently displayed.

     Additional input :     None
     Cursor position :      No effect.




8.4.9.7   H-Hz Scale
--------------------

     This command is only valid for a frequency response plot.  This
command is used to change the scaling of the frequency axis to Hertz.
The scaling can be either Hertz or radians per second.

     Additional input :     None
     Cursor position :      No effect.




8.4.9.8   I-Infinity Cir. Scale
-------------------------------

     This command is used to change the scaling of the infinity circle
visible on Nyquist plots .  This circle appears when a pole lies
exactly on the imaginary axis.  The default value is 200 dB. This
means that the circle is drawn 200 dB outside of the largest dB value
of one of the approaches to the infinite value.  If there is a double
pole, the circle would be drawn at 400dB.  The circle at zero
magnitude (encountered when crossing a zero) is drawn about 200 dB
below the smallest dB value approaching the pole.  This command is
only valid inside the FREQUENCY_RESPONSE command.

     Additional input :     Scale value in dB.
     Cursor position :      No effect.




8.4.9.9   L-Log Freq. Scale
---------------------------

     This command is used to change the scaling of the frequency axis
to logarithmic.  This command is only valid inside the
FREQUENCY_RESPONSE command.  The command will not work when a Nyquist,
Nichols, or Popov plot is currently displayed.  This is the default
scaling for the magnitude axis.

     Additional input :     None.
     Cursor position :      No effect.


                              Page  92





8.4.9.10   M-Magnitude Plot
---------------------------

     This command is used to draw a Bode Magnitude plot when another
type of frequency response plot is currently displayed.  A Bode
magnitude plot is a plot of frequency (horizontal) versus magnitude
(vertical, in either log or dB scale).

     Additional input :     None.
     Cursor position :      No effect.




8.4.9.11   N-Nyquist Plot
-------------------------

     This command is used to draw a Nyquist plot when another type of
frequency response plot is currently displayed.  A Nyquist plot is a
plot of magnitude (radial direction) versus phase (azimuthal
direction).

     Additional input :     None.
     Cursor position :      No effect.




8.4.9.12   O-Origin
-------------------

     This command allows the user to change the origin of a Nyquist
plot.  The value is entered by the user and the curves recalculated.
The portion of a curve that has a magnitude less than the selected
origin disappears.

     Additional input :     Origin value in dB.
     Cursor position :      No effect.




8.4.9.13   P-Phase Plot
-----------------------

     This command is used to draw a Bode Phase plot when another type
of frequency response plot is currently displayed.  A Bode phase plot


                              Page  93

is a plot of frequency (horizontal) versus phase (vertical).

     Additional input :     None.
     Cursor position :      No effect.




8.4.9.14   R-RPS Scale
----------------------

     This command is only valid for a frequency response plot.  This
command is used to change the scaling of the frequency axis to radians
per second.  The scaling can be either Hertz or radians per second.
This is the default scaling for the frequency axis.

     Additional input :     None.
     Cursor position :      No effect.




8.4.9.15   S-Strip Bode Plot
----------------------------

     This command is used to draw a combined Bode Magnitude and Bode
Phase plot when another type of plot is currently displayed.  This
command is only valid for a frequency response plot.  Unlike the
regular Bode plot type, in the Bode strip plot, the magnitude and
phase plots are drawn one above the other, and not overlaid.

     Additional input :     None
     Cursor position :      No effect.




8.4.9.16   V-PopovPlot/Value
----------------------------

     This command has two meanings, depending upon whether a Frequency
Response or Time Response plot is being examined.

     In frequency response plots, this command is used to draw a Popov
plot when another type of frequency response plot is currently
displayed. A Popov plot is a plot of real part (horizontal) versus the
product of imaginary part times frequency (vertical).

     Additional input :     None.
     Cursor position :      No effect.



                              Page  94

     In time response plots this command will allow the user to
relabel the vertical axis in Time Response plots.  The plot will be
redrawn after this command is given.

     Additional input :     New label for vertical axis.
     Cursor position :      No effect.




8.4.9.17   W-Wrapping
---------------------

     This command allows the user to change the origin of the phase
scale.  The value is entered by the user and the plot redrawn.

     Additional input :     Wrapping value (phase origin) in degrees.
     Cursor position :      No effect.




8.4.9.18   ESC-ESCape
---------------------

     This command will cancel the Select command, returning to the
graphics mode.

     Additional input :     None.
     Cursor position :      No effect.




8.4.10   T-Type function
------------------------

     This command will write a brief description of the function used
at the cursor position.  All numbers are displayed with only a few
digits of precision. The following items are displayed:

          Function name.
          Function plane.
          Function numerator gain.
          Function sample period (if in Z or W plane).
          Number of distinct numerator factors.
          List of distinct numerator factors and their orders.
          Number of distinct denominator factors.
          List of distinct denominator factors and their orders.

     Additional input :     None


                              Page  95

     Cursor position :      Position at which function description is
                            to be written.




8.4.11   V-Value
----------------

     This command computes the points on the plotted curves that are
associated with a certain value.  These points are then marked with a
polygonal or star-shaped symbol, and a key to the right of the plot
shows the associated value. The points are found by searching an array
of values versus coordinates until the values are found that bracket
the requested value.  A linear interpolation is then done.  If the
value entered is not in the range contained in the array, three BELLs
will be heard. The values and point coordinates used depends on the
type of plot:

                   Root Locus         Nyquist           Nichols
  ------------   --------------   ---------------   ---------------
  Value               Gain           Frequency         Frequency
  ------------   --------------   ---------------   ---------------

     Additional input :     Value for which coordinates are to be found.
     Cursor position :      No effect.




8.4.12   W-Window
-----------------

     This command is used to change the characteristics of a currently
displayed plotting window.  The window selected by the W command is
outlined (including legend and label area) in the GIN_WINDOW color,
and the cursor is changed to that color.

     The window command by itself does nothing; the next key pressed
does the action.  In this respect it resembles the function key of a
calculator or the gold key of EDT.  Unless the ESCape option is used,
the window command always results in the plot being redrawn.

     Additional input :     Window mode command, described below.
     Cursor position :      No effect.








                              Page  96

8.4.12.1   Summary
------------------

     This table summarizes the window_mode commands. Whether input is
needed or the cursor position is significant is also indicated.

          COMMAND:                INPUT  CURSOR
          ------------------      -----  ------
          B-send to Back            -       -
          D-Delete                  -       -
          F-send to Front           -       -
          I-create Inset window     -       -
          Z-Zoom window             -       -
          ESC-ESCape                -       -
          ------------------      -----  ------




8.4.12.2   B-send to Back
-------------------------

     This command makes the selected window the first one drawn, so
that it lies in back of all other windows.

     Additional input :     None.
     Cursor position :      No effect.




8.4.12.3   D-Delete
-------------------

     This command deletes the selected window.  It may be recreated
using the "O" command.

     Additional input :     None.
     Cursor position :      No effect.




8.4.12.4   F-send to Front
--------------------------

     This command makes the selected window the last one drawn, so
that it lies in front of all other windows.

     Additional input :     None.
     Cursor position :      No effect.


                              Page  97





8.4.12.5   I-Inset
------------------

     This command will duplicate the current window, and give it the
title "INSET".  Both windows may now be manipulated independently.
The plot is redrawn with the new window added.

     Additional input :     Zoom window must have been created in
                            base frame using the L, U, and K commands.
     Cursor position :      No effect.




8.4.12.6   Z-Zoom window
------------------------

     This command changes the size of the selected window to match the
zoom box in the base or background frame.  If that zoom box has not
been selected, there is no effect and a warning bell is sounded.

     Additional input :     Zoom window must have been created in
                            base frame using the L, U, and K commands.
     Cursor position :      No effect.




8.4.12.7   ESC-ESCape
---------------------

     This command will cancel the Window command, returning to the
graphics mode.

     Additional input :     None.
     Cursor position :      No effect.













                              Page  98

9   SET
-------

     This command may be used to change INCA parameters. The audit
file will contain a status report on the changed parameter.

     The quantity to be changed is given by the required modifier. The
new value is given by the parameter.  If the parameter is omitted or
is incorrect you will be asked to enter the new parameter.  Just
pressing <RETURN> will cause the old value to be retained.  The input
to many qualfiiers is either ON or OFF.  In these cases, if both ON
and OFF are entered an error will result.  In addition, INCA keys on
the second letter only.  Thus "ON", "ONE", "EN" and "ANNIE_OAKLEY"
will all be interpreted as the ON parameter.

     Format:     SET  modifier  [parameter]




9.1   BOUNDARY_GRID
-------------------

     This modifier controls whether the stability boundary lines are
drawn on root locus and frequency response plots.

     Format:     SET  BOUNDARY_GRID  [ON]  [OFF]
     Default:    ON




9.2   CLOSENESS_TO_ZERO
-----------------------

     When new functions are created, INCA checks to ensure that there
are no errors, and that like zeroes and poles are collected and
cancelled.  The CLOSENESS_TO_ZERO criteria is the minimum absolute
value of a root for it to be considered distinct from (0,0).

     Format:     SET  CLOSENESS_TO_ZERO  real-number
     Default:    1d-12




9.3   DB
--------

     When a frequency response calculation is done, a certain
magnitude scale is used if the user does not specify it in the PLOT


                              Page  99

command.  Options are the dB scale or the magnitude scale, which is
set by turning dB OFF.

     Format:     SET  DB  [ON]  [OFF]
     Default:    ON




9.4   EDIT_FORMAT
-----------------

     When functions are edited, a certain format is used if the user
does not specify a format in the EDIT command modifier. The edit
format is a letter indicating the default format.  Valid formats
are given in the discussion of the EDIT command modifiers.

     Format:     SET  EDIT_FORMAT  edit-format
     Default:    Roots




9.5   FREQUENCY_PLOT
--------------------

     When a frequency response calculation is done, a certain plot
type, magnitude scale and frequency scale is used if the user does not
specify it in the FREQUENCY_RESPONSE command modifier.  Valid plot
types are Bode, Magnitude(Bode), Phase(Bode), Nyquist,
C-Nichols, V-Popov and Strip-Bode.

     Format:     SET  FREQUENCY_PLOT  plot-type
     Default:    Bode




9.6   LOGARITHMIC_FREQ
----------------------

     When a frequency response calculation is done, a certain
frequency scale is used if the user does not specify it in the PLOT
command.  Options are the logarithmic frequency scale or the linear
frequency scale, which is set by turning this flag OFF.

     Format:     SET  LOGARITHMIC_FREQ  [ON]  [OFF]
     Default:    ON





                              Page 100

9.7   HERTZ
-----------

     When a frequency response calculation is done, a certain
frequency scale is used if the user does not specify it in the PLOT
command.  Options are the Hertz scale or the radians per second scale, which is
set by turning Hertz OFF.

     Format:     SET  HERTZ  [ON]  [OFF]
     Default:    OFF




9.8   LOGO_SHOW
---------------

     This modifier controls whether the INCA logo is written on
each plot.

     Format:     SET  LOGO_SHOW  [ON]  [OFF]
     Default:    ON




9.9   NEARNESS
--------------

     When new functions are created, INCA checks to ensure that there
are no errors, and that near equal zeroes and poles are collected and
canceled.  The nearness criteria is the minimum relative closeness of
two zeroes/poles for them to be considered separate.

     Format:     SET  NEARNESS  real-number
     Default:    1d-6




9.10   QZ_ADD_CUTOFF
--------------------

     When functions in INCA are added together as part of a function
evaluation, it is done in one of two ways.  If the order of the
addends is small, the addition is done by multiplying the denominators
together to find the new denominator, and the creating the numerator
as a sum of unfactored polynimials created by multiplying out each
numerator by all but one of the denominators.  The unfactored
numerator polynomial is the rooted using the Jenkins algorithm.  As an
alternative, the QZ algorithm can be used to evaluate the numerator


                              Page 101

factors.  The QZ_ADD_CUTOFF modifier determines the minimum order at
which the QZ algoritm is used.

     Format:     SET  QZ_ADD_CUTOFF  real-number
     Default:    5




9.11   ROOT_MAXIMUM
-------------------

     When a polynomial is to be factored (rooted), the Jenkins
polynomial rooter is used.  This routine does not work above 50th
order, and can be unrealiable above 20th order.  This modifier is used
to control the maximum order which can be rooted without error.

     Format:     SET  ROOT_MAXIMUM  integer
     Default:    20




9.12   SEARCH_CIRCLE
--------------------

     This parameter controls the size of the search circle used in the
'F' graphics mode command (for frequency response and time response
only).  When the 'F' key is pressed, all curves are searched for the
calculated data point closest to the cursor point.  If the point is
not within the search circle, the find is not successful.  The default
search circle size is 4096, which is twice the length of the tick
marks, and 1/16 of the width of the screen.

     Format:     SET  SEARCH_CIRCLE  integer]
     Default:    4096




9.13   TOP_RIGHT_LABEL
----------------------

     This modifier controls a parameter in QPLOT, which is the
graphics package used by INCA.  This particular parameter controls
whether labels are to be displayed on all four sides of the plot or
not.

     Format:     SET  TOP_RIGHT_LABEL  [ON]  [OFF]
     Default:    OFF



                              Page 102

9.14   WRAP
-----------

     When a frequency response calculation is done, the phase is
measured in degrees.  The degrees are displayed over a band with a
width of 360 degrees.  The start of this band can be set using this
modifier.

     Format:     SET  WRAP  angle-in-degrees
     Default:    0




9.15   ZAGGING
--------------

     This command is used to change the quality of the infinity circle
visible on Nyquist plots.  This circle appears when a pole lies
exactly on the imaginary axis.  Setting this parameter different from
zero will result in the circle having a jagged appearance.  A good
value for attractive zagging is 30 (dB).

     Format:     SET  ZAGGING  real-number
     Default:    0




























                              Page 103

10   UTILITIES
--------------

     The UTILITIES command level provides a number of commands that
allow the user to configure the graphics package to his needs, and
also setting the terminal type and plotting device.  UTILITIES commands
must be given at the UTILITIES prompt, or after the UTILITIES built-in
command is given.

     QPLOT provides a number of commands that allow the user to
configure the graphics package to his needs and to provide useful
services such as access to HOST operating system commands, HELP
libraries, indirect file input, and Control-C interrupts.  These are
available at all times, and must be spelled out in full, since all
user input is scanned for these commands.  Once the command is
completed, the prompt of the application program will be repeated.
The UTILITIES command itself is such a command, the others are
indicated in the Format specification.




10.1   input-syntax
-------------------

     QPLOT user input is handled by a set of common input routines.
These input routines always convert lowercase letters to uppercase
before use. There are routines to read a single character, character
strings, logical names, integers, real and complex numbers, and
answers to questions. Some special features of these routines are
described under the various topics.




10.1.1   special input
----------------------

     There are certain special input strings that are recognized by
QPLOT and converted to a context-sensitive values.  These inputs are:

DEFAULT     -- Each input query has a default value.  This is usually
               either the current value or sometimes a null or zero
               value.
LIMITS      -- If numeric input is expected, this string will cause
               the current input limits and default value to be
               printed.
NEGATE      -- If numeric input is expected, this string will be
               converted to the negative of the default value.  This
               string is not recognized for string input.
NULL        -- If string input is expected, this string will be


                              Page 104

               converted to a string of zero length.  Note that if
               a string of zero length is entered, the default value
               will be used.
PI          -- If real numeric input (floating point) is expected,
               this string will cause the value of PI (3.14159...)
               to be given as the input string.
UNDEFINED   -- If real numeric input (floating point) is expected,
               this string will cause a special real value
               UNDEFINED to be assigned to the input string.




10.1.2   character
------------------

     Character input consists of a single ASCII character.  If more
than one character is entered before pressing return, the first
character is used.  If no characters are given, or if the string
"DEFAULT" is typed, the default character is used.




10.1.3   question
-----------------

     If there is a question expecting a yes/no answer, the first
character of the response is used as the answer. If this character is
"Y" (or "y") the answer given is interpreted as "yes". If this
character is "N" (or "n") the answer given is interpreted as "no".
Any other reponse will cause the question to be repeated.




10.1.4   string
---------------

     String input consists of a string of zero or more ASCII
characters.  If no characters are given, or if the string "DEFAULT" is
typed, the default character is used.  If the string "NULL" is typed,
the null string (of length 0) is assumed.  Occasionally lower case
letters are allowed in string input, for example when titles or labels
are being entered.








                              Page 105

10.1.5   logical name
---------------------

     Logical name input is used for the entry of strings which must
contain no blanks, such as those used to name items that are later
used by a parsing routine.  A logical name consists of a string of
zero or more non-blank ASCII characters.  If no characters are given,
or if the string "DEFAULT" is typed, the default character is used.
If the string "NULL" is typed, the null string (of length 0) is
assumed.




10.1.6   integer
----------------

     Integer input is checked for proper format and compared to limits
before being accepted.  The proper format for an integer consists of
an optional sign ("+" or "-") and a string of digits.  No spaces are
allowed within this sequence. If the format is improper, a conversion
error is generated and the prompting message is repeated.

     Generally integer input is allowed only within certain limits --
If a number outside the range is entered, a message is generated and
the prompt is repeated.

     If the user enters no data (only blanks and a carriage return),
the default value is used. The word "DEFAULT" may also be used to
select the default value, and the word "NEGATE" (or "NEG") may be used
to select the negative of the default value. The value of the limits
and the default value may be displayed by typing "LIMITS" (or "LIM")
instead of a numeric value.




10.1.7   real numbers
---------------------

     Real number input is checked for proper format and compared to
limits before being accepted.  No spaces are allowed within this
sequence. If the format is improper, a conversion error is generated
and the prompting message is repeated.

     Often real input is allowed only within certain limits -- If a
number outside the range is entered, a message is generated and the
prompt is repeated.

     If the user enters no data (only blanks and a carriage return)
the default value is used. The word "DEFAULT" may also be used to


                              Page 106

select the default value, and the word "NEGATE" (or "NEG") may be used
to select the negative of the default value. The value of the limits
and the default value may be displayed by typing "LIMITS" (or "LIM")
instead of a numeric value.

The proper format for a real number consists of:

          1)  An optional sign ("+" or "-")
          2)  A string of digits (a decimal point may be present)
          3)  An optional exponent, consisting of
              3A)  A letter ("D", "d", "E", or "e")
              3B)  An optional sign ("+" or "-")
              3C)  A two-place string of digits





10.1.8   cursor-input
---------------------

     Cursor input is used to activate commands that inspect and
manipulate a plot, so as not to spoil the image with extraneous
writing.  A single keystroke is used -- There is no need to hit the
<return> or <enter> key.

     Many cursor mode commands use the position of the graphics cursor
as additional input.  This might be a point on the plot to
be examined, the corner of a window for a zoom operation, or the
position at which to place a label.  If a non-graphics terminal is
being used, only the key pressed is signifcant.

     In batchmode, the cursor input is different.  The cursor position
must be entered as a pair of numbers.  Three input items are required,
separated by spaces.  These are:

          a)  Command, only first letter is significant.
          b)  X-position, an integer between 0 and 65535.
          c)  Y-position, an integer between 0 and 49151.




10.2   ABORT
------------

     The ABORT command will cause an error to be "created".  The
effect is similar to an overflow or other arithmetic error.  If the
error handler is ON (it should be except in unusual circumstances),
the current command will be terminated and control will return to the
command level.  If the error handler is OFF, all of the present run


                              Page 107

will be abolished.  The error handler may be turned OFF using the
MISC NO_ERROR_TRAP command.

     Format:      ABORT
                  UTILITIES  ABORT

This command can be given at any time!  There are no parameters or
inputs.




10.3   BUG_REPORT
-----------------

     This command is used to report a bug in a QPLOT application
program.  The user is placed in the EDT editor, and may then enter
the problem.  If the user exits with EXIT, the report is completed,
otherwise the report is suppressed.

     Format:     UTILITIES  BUG_REPORT




10.4   control-C
----------------

     The CONTROL-C command will cause an error to be "created". The
effect is similar to an overflow or other arithmetic error.  If the
error handler is ON (it should be except in unusual circumstances),
the current command will be terminated and control will return to the
command level.  If the error handler is OFF, all of the present run
will be abolished.  The error handler may be turned OFF using the
NO_ERROR_TRAPPING command.

     To use the CONTROL-C command just press the CTRL and C keys at
the same time.  There are no parameters or inputs.  The CONTROL-C
command can be given at any time after the initialization phase.

     Format:     <ctrl-c>

This command can be given at any time!




10.5   COLOR
------------

     QPLOT applications use different colors for different roles.


                              Page 108

For instance the time might be displayed in red while the graphic
crosshairs might be shown in yellow.  Therefore various "logical"
colors have been defined so that the user can easily change them.  The
logical colors have names like "BOX" (the color of the box around the
plot) or perhaps "TIME" (the color that the time string is written
in).

     Format:     UTILITIES  COLOR  [modifier]  [color  [color-spec]]

     If no qulaifier or parameter is specified, QPLOT will prompt for
the color and its new color assignment.  QPLOT recognizes all of the
named colors listed by the command COLOR LIST.




10.5.1   color-model
--------------------

     Color definition and mixing is based on the hue-lightness-
saturation (HLS) color model. Each color is described by three
characteristics: hue, lightness, and saturation.  Hue is the basic
color, such as red, green, or blue-magenta. This characteristic varies
on a scale from 0 to 360 with blue at zero. Lightness varies from 0
(black) to 100 (white).  A value of 50 will allow the hue to be most
visible.  Saturation identifies the amount of color present, varying
from 0 (gray) to 100 (full color).  A value of 100 makes the colors
the brightest.  Some monochrome terminals display several shades of
gray.  On these terminals, one of the shades will be chosen to match a
given HLS value.




10.5.2   color-spec
-------------------

     A color is specified in the following format:

     color-spec:    [number]  color-name   [[[number]  color-name] ...]

     That is, a color specification consists of a list of colors,
each of which may be preceded by a real number.  The total length of
the string cannot exceed 30 characters.  Color names can be
abbreviated, as long as they remain distinct.  The number can be any
real number, and defaults to 1.00.  The color names can be colors that
have already been defined in terms of other colors.  Note that it is
possible create an endless recursion loop in this way.  For this
reason, a recursion limit of 10 has been imposed.




                              Page 109

10.5.3   LIST
-------------

     This modifier will list the predefined colors in QPLOT with the
HLS values or definition strings that characterize them.  This list
includes four pseudo-colors which can be used in altering or combining
these named colors.  These are dark, light, clear, and blink.  The
first two are identical to black and white.  The second two are the
absence of color and are specified as if they were black, but have an
attribute to distinguish between clear (C) and blink (B).

     Format:     UTILITIES  COLOR  LIST




10.5.4   SET
------------

     This modifier will allow the user to change the QPLOT and
application defined logical colors.  The colors which can be set by
the UTILITIES COLOR command include both those listed below plus any
defined by the application program. Using the UTILITIES COLOR LIST
command will list all colors currently defined.  A list of the QPLOT
logical colors is given below. Some color definitions are application
dependent, and will be found under the COLORS topic.

     Format:     UTILITIES  COLOR  SET  [color  [color-spec]]




10.5.4.1   BOX
--------------

     This item defines the color for the border around a graphic
display. For a monochrome terminal, the box will appear as a normal
line.

     Format:     UTILITIES  COLOR  SET  BOX  [color-spec]
     Default:    WHITE




10.5.4.2   CURSOR_1
-------------------

     This item defines the color for the first cursor.  For a
monochrome terminal, the cursor will appear in the normal tint. Some
color terminals may not allow the user to change the cursor color, and


                              Page 110

this command will have no effect.

     Format:     UTILITIES  COLOR  SET  CURSOR_1  [color-spec]
     Default:    RED




10.5.4.3   CURSOR_2
-------------------

     This item defines the color for the second cursor. The
cursor color alternates between the colors assigned to cursor 1 and
cursor 2.  To prevent this blinking effect, set the two colors the
same. For a monochrome terminal, the cursor will alternate between the
normal tint and black.  Some color terminals may not allow the user to
change the cursor color, and this command will have no effect.

     Format:     UTILITIES  COLOR  SET  CURSOR_2  [color-spec]
     Default:    YELLOW




10.5.4.4   DARKGRAY
-------------------

     This item defines a special shade of gray used for tick marks and
grids.  The user can set the XGRID and YGRID colors to this value
(the default is clear) and their color will match the tick marks.

     Format:     UTILITIES  COLOR  SET  DARKGRAY  [color-spec]
     Default:    DARK GRAY GRAY




10.5.4.5   FILL
---------------

     This item defines the color of the area inside the box on a
two dimensional plot.  For a monochrome terminal the fill will NOT be
painted.

     Format:     UTILITIES  COLOR  SET  FILL  [color-spec]
     Default:    DARK BLUE GRAY







                              Page 111

10.5.4.6   GIN_FRAMEALL
-----------------------

     This item defines the color for the crosshairs or graphics input
cursor when the "all" frame selection has been made.  This selection
(for the next input only) is made using the "*" commands.  On some color
terminals this color cannot be changed. For a monochrome terminal the
graphics cursor will appear in normal tint.

     Format:     UTILITIES  COLOR  SET  GIN_FRAMEALL  [color-spec]
     Default:    CYAN




10.5.4.7   GIN_FRAMELOCK
------------------------

     This item defines the color for the crosshairs or graphics input
cursor when a frame has been selected (locked) for the next input by
using the "=" or "#" commands.  On some color terminals this color
cannot be changed. For a monochrome terminal the graphics cursor will
appear in normal tint.

     Format:     UTILITIES  COLOR  SET  GIN_FRAMELOCK  [color-spec]
     Default:    LIGHT GREEN




10.5.4.8   GIN_FRAMESELECT
--------------------------

     This item defines the color for the crosshairs or graphics input
cursor when a frame is to be selected using the "#" command.  No other
command can be entered at this time.  On some color terminals this color
cannot be changed. For a monochrome terminal the graphics cursor will
appear in normal tint.

     Format:     UTILITIES  COLOR  SET  GIN_FRAMELOCK  [color-spec]
     Default:    GRAY




10.5.4.9   GIN_NORMAL
---------------------

     This item defines the color for the crosshairs or graphics
input cursor. On some color terminals this color cannot be changed.
For a monochrome terminal the graphics cursor will appear in normal


                              Page 112

tint.

     Format:     UTILITIES  COLOR  SET  GIN_NORMAL  [color-spec]
     Default:    LIGHT YELLOW




10.5.4.10   HEADING
-------------------

     This item defines the color in which the heading (title) of the
plot is printed.  For a monochrome terminal the title will appear as
normal print.

     Format:     UTILITIES  COLOR  SET  HEADING  [color-spec]
     Default:    WHITE




10.5.4.11   NUMBER
------------------

     This item defines the color in which the numbers beside the
scale of a plot will be printed. For a monochrome terminal the numbers
will appear as normal print.

     Format:     UTILITIES  COLOR  SET  NUMBER  [color-spec]
     Default:    WHITE




10.5.4.12   OVERBOX
-------------------

     This item defines the color of the character cell in the
text overlay mode, if it is available on the terminal in use.  For a
monochrome terminal, the overbox will appear in clear or black.

     Format:     UTILITIES  COLOR  SET  OVERBOX  [color-spec]
     Default:    CLEAR




10.5.4.13   OVERCHAR
--------------------

     This item defines the color for the characters printed in


                              Page 113

the text overlay mode, if it is available on the terminal in use. For
a monochrome terminal, the characters will appear in their normal
tint.

     Format:     UTILITIES  COLOR  SET  OVERCHAR  [color-spec]
     Default:    LIGHT RED




10.5.4.14   PANE
----------------

     This item defines the color of the background for each frame.

     Format:     UTILITIES  COLOR  SET  PANE  [color-spec]
     Default:    CLEAR




10.5.4.15   PLOTBACK
--------------------

     This item defines the color of the graphics background.  For
a monochrome terminal the background will always be black.

     Format:     UTILITIES  COLOR  SET  PLOTBACK  [color-spec]
     Default:    BLACK




10.5.4.16   POLARGRID
---------------------

     This item defines the color of the grid on polar plots. For a
monochrome terminal the grid will be drawn as normal lines.

     Format:     UTILITIES  COLOR  SET  POLARGRID  [color-spec]
     Default:    CLEAR




10.5.4.17   TEXTBACK
--------------------

     This item defines the color for the background in the text
mode. For a monochrome terminal and for color terminals which do not
have this color capability, the background will be black.


                              Page 114


     Format:     UTILITIES  COLOR  SET  TEXTBACK  [color-spec]
     Default:    DARK BLUE




10.5.4.18   TEXTBOX
-------------------

     This item defines the color for the character cell in text
mode. For a monochrome terminal, the character cell will be clear or
black.

     Format:     UTILITIES  COLOR  SET  TEXTBOX  [color-spec]
     Default:    BLUE




10.5.4.19   TEXTCHAR
--------------------

     This item defines the color of the characters printed in the
text mode.  For a monochrome terminal, the characters will appear in
their normal tint.

     Format:     UTILITIES  COLOR  SET  TEXTCHAR  [color-spec]
     Default:    WHITE




10.5.4.20   WINDOW
------------------

     This item defines the color of the border of each frame.

     Format:     UTILITIES  COLOR  SET  WINDOW  [color-spec]
     Default:    BLACK




10.5.4.21   XGRID
-----------------

     This item defines the color of the primary grid in the X
direction drawn on a plot. For a monochrome terminal the grid will be
drawn as normal lines.



                              Page 115

     Format:     UTILITIES  COLOR  SET  XGRID  [color-spec]
     Default:    CLEAR




10.5.4.22   XLABEL
------------------

     This item defines the color in which the label on the X axis
is printed.  For a monochrome terminal the label will appear as normal
print.

     Format:     UTILITIES  COLOR  SET  XLABEL  [color-spec]
     Default:    WHITE




10.5.4.23   XSUBGRID
--------------------

     This item defines the color of the secondary grid lines in the X
direction drawn between labeled ticks. For a monochrome terminal the
subgrid will be drawn as normal lines.

     Format:     UTILITIES  COLOR  SET  XSUBGRID  [color-spec]
     Default:    CLEAR




10.5.4.24   XTICK
-----------------

     This item defines the color of the tick marks in the X direction
on the scale of a plot. For a monochrome terminal the tick marks will
appear in normal tint.

     Format:     UTILITIES  COLOR  SET  XTICK  [color-spec]
     Default:    DARKGRAY




10.5.4.25   YGRID
-----------------

     This item defines the color of the primary grid in the Y
direction drawn on a plot. For a monochrome terminal the grid will be
drawn as normal lines.


                              Page 116


     Format:     UTILITIES  COLOR  SET  YGRID  [color-spec]
     Default:    DARKGRAY




10.5.4.26   YLABEL
------------------

     This item defines the color in which the label on the Y axis
is printed.  For a monochrome terminal the label will appear as normal
print.

     Format:     UTILITIES  COLOR  SET  YLABEL  [color-spec]
     Default:    WHITE




10.5.4.27   YSUBGRID
--------------------

     This item defines the color of the secondary grid lines in the Y
direction drawn between labeled ticks. For a monochrome terminal the
subgrid will be drawn as normal lines.

     Format:     UTILITIES  COLOR  SET  YSUBGRID  [color-spec]
     Default:    CLEAR




10.5.4.28   YTICK
-----------------

     This item defines the color of the tick marks in the Y direction
on the scale of a plot. For a monochrome terminal the tick marks will
appear in normal tint.

     Format:     UTILITIES  COLOR  SET  YTICK  [color-spec]
     Default:    DARKGRAY




10.5.4.29   ZOOMBOX
-------------------

     This item defines the color of the box drawn to outline the zoom
area after the upper and lower corners have been selected.


                              Page 117


     Format:     UTILITIES  COLOR  SET  ZOOMBOX  [color-spec]
     Default:    YELLOW




10.5.4.30   ZOOMFILL
--------------------

     This item defines the color of the box fill used after the Zoom
command ("Z") has been given.  This filling of the zoom box tells the
user that the zoom coordinates have been accepted.  The user may then
redraw, or manipulate other plotting frames and windows.

     Format:     UTILITIES  COLOR  SET  ZOOMFILL  [color-spec]
     Default:    BROWN




10.5.4.31   BOUNDARY
--------------------

     The stability boundaries and points on root locus, nyquist,
nichols, and popov plots are drawn in this color.

     Format:     UTILITIES  COLOR  SET  BOUNDARY  [color-spec]
     Default:    RED




10.5.4.32   C1
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C1  [color-spec]
     Default:    GREEN




10.5.4.33   C2
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.



                              Page 118

     Format:     UTILITIES  COLOR  SET  C2  [color-spec]
     Default:    BLUE




10.5.4.34   C3
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C3  [color-spec]
     Default:    CYAN




10.5.4.35   C4
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C4  [color-spec]
     Default:    MAGENTA




10.5.4.36   C5
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C5  [color-spec]
     Default:    BLUE MAGENTA




10.5.4.37   C6
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C6  [color-spec]
     Default:    BLUE CYAN



                              Page 119

10.5.4.38   C7
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C7  [color-spec]
     Default:    GREEN CYAN




10.5.4.39   C8
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C8  [color-spec]
     Default:    GREEN YELLOW




10.5.4.40   C9
--------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C9  [color-spec]
     Default:    YELLOW




10.5.4.41   C10
---------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C10  [color-spec]
     Default:    RED




10.5.4.42   C11
---------------



                              Page 120

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C11  [color-spec]
     Default:    LAVENDER




10.5.4.43   C12
---------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C12  [color-spec]
     Default:    LIGHT BLUE




10.5.4.44   C13
---------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C13  [color-spec]
     Default:    PURPLE




10.5.4.45   C14
---------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.

     Format:     UTILITIES  COLOR  SET  C14  [color-spec]
     Default:    BROWN




10.5.4.46   C15
---------------

     The curves that are plotted on root locus and frequency response
plots (except combined bode) are plotted using one of these Cn colors.



                              Page 121

     Format:     UTILITIES  COLOR  SET  C15  [color-spec]
     Default:    PINK




10.5.4.47   FIND
----------------

     The information printed with the "F" command.

     Format:     UTILITIES  COLOR  SET  FIND  [color-spec]
     Default:    MAGENTA




10.5.4.48   GIN_SELECT
----------------------

     The graphics cursor is changed to this color after the S (Select)
graphics mode command is selected.

     Format:     UTILITIES  COLOR  SET  GIN_SELECT  [color-spec]
     Default:    GREEN




10.5.4.49   GIN_WINDOW
----------------------

     The graphics cursor is changed to this color after the W (Window)
graphics mode command is selected.

     Format:     UTILITIES  COLOR  SET  GIN_WINDOW  [color-spec]
     Default:    MAGENTA




10.5.4.50   HELP
----------------

     The list of grafmode commands produced by the "H" command.

     Format:     UTILITIES  COLOR  SET  HELP  [color-spec]
     Default:    RED





                              Page 122

10.5.4.51   LOGOEDGE
--------------------

     The edge of the INCA logo is drawn in this color.

     Format:     UTILITIES  COLOR  SET  LOGOEDGE  [color-spec]
     Default:    YELLOW




10.5.4.52   LOGOFILL
--------------------

     The filled area of the INCA logo is drawn in this color.

     Format:     UTILITIES  COLOR  SET  LOGOFILL  [color-spec]
     Default:    RED




10.5.4.53   LOGOLINE
--------------------

     The center lines in the INCA logo is drawn in this color.

     Format:     UTILITIES  COLOR  SET  LOGOLINE  [color-spec]
     Default:    ORANGE




10.5.4.54   MAGNITUDE
---------------------

     The curves that are plotted in a frequency response combined
Bode plot use this color for the magnitude plot.

     Format:     UTILITIES  COLOR  SET  MAGNITUDE  [color-spec]
     Default:    GREEN




10.5.4.55   PHASE
-----------------

     The curves that are plotted in a frequency response combined
Bode plot use this color for the phase plot.



                              Page 123

     Format:     UTILITIES  COLOR  SET  PHASE  [color-spec]
     Default:    BLUE




10.5.4.56   POLE
----------------

     If a single curve is plotted in a root locus plot, this color is
used for the small cross that indicates the poles.

     Format:     UTILITIES  COLOR  SET  POLE  [color-spec]
     Default:    BLUE CYAN




10.5.4.57   PROJECT
-------------------

     The project name.

     Format:     UTILITIES  COLOR  SET  PROJECT  [color-spec]
     Default:    CYAN




10.5.4.58   T1
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T1  [color-spec]
     Default:    GREEN




10.5.4.59   T2
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T2  [color-spec]
     Default:    GREEN 2 CYAN


                              Page 124





10.5.4.60   T3
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T3  [color-spec]
     Default:    CYAN




10.5.4.61   T4
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T4  [color-spec]
     Default:    BLUE CYAN




10.5.4.62   T5
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T5  [color-spec]
     Default:    BLUE




10.5.4.63   T6
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T6  [color-spec]


                              Page 125

     Default:    BLUE MAGENTA




10.5.4.64   T7
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T7  [color-spec]
     Default:    MAGENTA




10.5.4.65   T8
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T8  [color-spec]
     Default:    RED




10.5.4.66   T9
--------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.

     Format:     UTILITIES  COLOR  SET  T9  [color-spec]
     Default:    ORANGE




10.5.4.67   T10
---------------

     The curves that are plotted in a time response plot use the
following colors in the sequence given.  The default colors are listed
below.



                              Page 126

     Format:     UTILITIES  COLOR  SET  T10  [color-spec]
     Default:    BROWN




10.5.4.68   TIME
----------------

     The current time.

     Format:     UTILITIES  COLOR  SET  TIME  [color-spec]
     Default:    RED




10.5.4.69   ZERO
----------------

     If a single curve is plotted in a root locus plot, this color is
used for the small octogon that indicates the zeros.

     Format:     UTILITIES  COLOR  SET  ZERO  [color-spec]
     Default:    CYAN




10.6   EDIT_FILE
----------------

     This command allows quick acess to the EDT editor for the editing
of text files.  The editor is brought up in KEYPAD mode if the
terminal is VT100 (ANSI 3.64) compatible.

     Format:     UTILITIES  EDIT_FILE  [filename]




10.7   FRAME
------------

     This command is used with the various modifiers to control the
the construction of plotting frames.  Each type of plot has a
"template" which is used whenever a plot of that type is desired.
The number and names of these templates are application dependent.
Whenever a frame command is executed, the user is first asked if
he wishes to enter a value for all frames.  If no value (a blank
line) is entered, the user will be queried for each frame template.


                              Page 127


     Format:     UTILITIES  FRAME  [modifier]  [options]

     Some of the frame commands may be used to change the colors of
the various background items in the frame. The item to be changed is
given by the modifier.  The new color is given by the argument.  The
color may be one or more standard qplot colors, given in the
UTILITIES COLOR LIST command.  A color is specified in the following
format:

     color-spec:    [number]  color-name   [[[number]  color-name] ...]

     That is, a color specification consists of a list of colors,
each of which may be preceded by a real number.  The total length of
the string cannot exceed 30 characters.  Color names can be
abbreviated, as long as they remain distinct.  The number can be any
real number, and defaults to 1.00.  The color names can be colors that
have already been defined in terms of other colors.  Note that it is
possible create an endless recursion loop in this way.  For this
reason, a recursion limit of 10 has been imposed.




10.7.1   SET
------------

     This command may be used to change QPLOT parameters that control
the construction of plotting frames.  The audit file, if implemented
for the application, will contain a status report on the changed
parameter.  If no argument is given, the user will be prompted to
enter a value.  Pressing <RETURN> will cause the current value to be
retained.  If no modifier is given, the values of all frame
parameters will be listed.

     The quantity to be changed is given by the modifier. The new
value is given by the argument.  If the argument is omitted or is
incorrect you will be asked to enter the new value.  Just pressing
<RETURN> will then cause the old value to be retained.

     Format:     UTILITIES  FRAME  SET  [modifier]  [argument]




10.7.1.1   AZIMUTH_PERCENT
--------------------------

     This parameter controls the percentage of the azimuthal grid that
is drawn in polar plots.



                              Page 128

     Format:     UTILITIES  FRAME  SET  AZIMUTH_PERCENT
                                                [integer-argument]
     Default:    65




10.7.1.2   BOX_COLOR
--------------------

     This parameter controls the color of the box around the plot.

     Format:     UTILITIES  FRAME  SET  BOX  [color-spec]
     Default:    "BOX"




10.7.1.3   FILL_COLOR
---------------------

     This parameter controls the color of the fill in the plot area.

     Format:     UTILITIES  FRAME  SET  FILL  [color-spec]
     Default:    "FILL"




10.7.1.4   HEADING_COLOR
------------------------

     This parameter controls the color of the heading above the plot.

     Format:     UTILITIES  FRAME  SET  HEADING  [color-spec]
     Default:    "HEADING"




10.7.1.5   MAXTICKS
-------------------

     This parameter controls the maximum number of major tick marks on
any border in X-Y plots.

     Format:     UTILITIES  FRAME  SET  MAXTICKS  [integer-argument]
     Default:    8





                              Page 129

10.7.1.6   PANE_COLOR
---------------------

     This parameter controls the color of the fill in the frame area.

     Format:     UTILITIES  FRAME  SET  PANE  [color-spec]
     Default:    "PANE"




10.7.1.7   RADIAL_PERCENT
-------------------------

     This parameter controls the percentage of the radial grid that is
drawn on polar plots.

     Format:     UTILITIES  FRAME  SET  RADIAL_PERCENT
                                               [integer-argument]
     Default:    65




10.7.1.8   SQUAREBOX
--------------------

     This parameter controls whether the plotting window (white box)
will be forced to be square.  If this flag is on, the value of
the XFRAME UPPER_LIMIT parameter is ignored.

     Format:     UTILITIES  FRAME  SET  SQUAREBOX  [boolean-argument]
     Default:    depends upon frame template used.




10.7.1.9   SUBTICKSIZE
----------------------

     This parameter controls the size of the minor (sub) tick marks
along the horizontal and vertical borders of the plot.  The range is 0
to 2000.

     Format:     UTILITIES  FRAME  SET  SUBTICKSIZE  [integer-argument]
     Default:    640







                              Page 130

10.7.1.10   TICKSIZE
--------------------

     This parameter controls the size of the major tick marks along
the horizontal and vertical borders of the plot.  The range is 480
to 4000.

     Format:     UTILITIES  FRAME  SET  TICKSIZE  [integer-argument]
     Default:    1024




10.7.1.11   WINDOW_COLOR
------------------------

     This parameter controls the color of the box around the frame.

     Format:     UTILITIES  FRAME  SET  WINDOW  [color-spec]
     Default:    "WINDOW"




10.7.2   X_AXIS
---------------

     This command may be used to change QPLOT parameters that control
the construction of plotting frames.  In particular, this command
controls those parameters associated with plotting the X-axis.  The
audit file, if implemented for the application, will contain a status
report on the changed parameter.  If no argument is given, the user
will be prompted to enter a value.  Pressing <RETURN> will cause the
current value to be retained.  If no modifier is given, the values of
all Frame X-axis parameters will be listed.

     The quantity to be changed is given by the modifier. The new
value is given by the argument.  If the argument is omitted or is
incorrect you will be asked to enter the new value.  Just pressing
<RETURN> will then cause the old value to be retained.

     Format:     UTILITIES  FRAME  X_AXIS  [modifier]  [argument]




10.7.2.1   GRID_COLOR
---------------------

     This parameter controls the color of the main grid lines in the X
direction.


                              Page 131


     Format:     UTILITIES  FRAME  X_AXIS  GRID_COLOR  [color-spec]
     Default:    "XGRID"




10.7.2.2   LABEL_COLOR
----------------------

     This parameter controls the color of the label on the X axis.

     Format:     UTILITIES  FRAME  X_AXIS  LABEL_COLOR  color-spec]
     Default:    "XLABEL"




10.7.2.3   NUMBER_COLOR
-----------------------

     This parameter controls the color of the numbers around the plot,
but only those on the X axis.

     Format:     UTILITIES  FRAME  X_AXIS  NUMBER_COLOR  [color-spec]
     Default:    "XNUMBER"




10.7.2.4   ROUNDING
-------------------

     This parameter controls whether the limits are to be rounded to
integer multiples of the ticksize.

     Format:     UTILITIES  FRAME  X_AXIS  ROUNDING  [boolean-argument]
     Default:    OFF




10.7.2.5   SUBGRID
------------------

     This parameter controls the color of the secondary grid lines in
the X direction.

     Format:     UTILITIES  FRAME  X_AXIS  SUBGRID  [color-spec]
     Default:    "XSUBGRID"



                              Page 132

10.7.2.6   SUBTICK
------------------

     This parameter controls the color of the in-between tick marks in
the X direction on the border of the plot.

     Format:     UTILITIES  FRAME  X_AXIS  SUBTICK  [color-spec]
     Default:    "XSUBTICK"




10.7.2.7   TICK
---------------

     This parameter controls the color of the tick marks in the X
direction on the border of the plot.

     Format:     UTILITIES  FRAME  X_AXIS  TICK  [color-spec]
     Default:    "XTICK"




10.7.3   Y_AXIS
---------------

     This command may be used to change QPLOT parameters that control
the construction of plotting frames.  In particular, this command
controls those parameters associated with plotting the Y-axis.  The
audit file, if implemented for the application, will contain a status
report on the changed parameter.  If no argument is given, the user
will be prompted to enter a value.  Pressing <RETURN> will cause the
current value to be retained.  If no modifier is given, the values of
all Frame Y-axis parameters will be listed.

     The quantity to be changed is given by the modifier. The new
value is given by the argument.  If the argument is omitted or is
incorrect you will be asked to enter the new value.  Just pressing
<RETURN> will then cause the old value to be retained.

     Format:     UTILITIES  FRAME  Y_AXIS  [modifier]  [argument]




10.7.3.1   GRID_COLOR
---------------------

     This parameter controls the color of the main grid lines in the Y
direction.


                              Page 133


     Format:     UTILITIES  FRAME  Y_AXIS  GRID_COLOR  [color-spec]
     Default:    "YGRID"




10.7.3.2   LABEL_COLOR
----------------------

     This parameter controls the color of the label on the Y axis.

     Format:     UTILITIES  FRAME  Y_AXIS  LABEL_COLOR  color-spec]
     Default:    "YLABEL"




10.7.3.3   NUMBER_COLOR
-----------------------

     This parameter controls the color of the numbers around the plot,
but only those on the Y axis.

     Format:     UTILITIES  FRAME  Y_AXIS  NUMBER_COLOR  [color-spec]
     Default:    "YNUMBER"




10.7.3.4   ROUNDING
-------------------

     This parameter controls whether the limits are to be rounded to
integer multiples of the ticksize.

     Format:     UTILITIES  FRAME  Y_AXIS  ROUNDING  [boolean-argument]
     Default:    OFF




10.7.3.5   SUBGRID
------------------

     This parameter controls the color of the secondary grid lines in
the Y direction.

     Format:     UTILITIES  FRAME  Y_AXIS  SUBGRID  [color-spec]
     Default:    "YSUBGRID"



                              Page 134

10.7.3.6   SUBTICK
------------------

     This parameter controls the color of the in-between tick marks in
the Y direction on the border of the plot.

     Format:     UTILITIES  FRAME  Y_AXIS  SUBTICK  [color-spec]
     Default:    "YSUBTICK"




10.7.3.7   TICK
---------------

     This parameter controls the color of the tick marks in the Y
direction on the border of the plot.

     Format:     UTILITIES  FRAME  Y_AXIS  TICK  [color-spec]
     Default:    "YTICK"




10.8   GENERAL_HELP
-------------------

     The GENERAL_HELP command accesses the application program Help
Library, which is capable of providing an abundance of useful
information about the application program.  This library is organized
in the same manner as the VAX system help library.  Once a topic has
been selected, information about various sub-topics can be obtained by
just entering the name of the sub-topic.  If <RETURN> is given as a
response to any prompt, the help system moves up one level (from
sub-topic to topic, etc.) and eventually out of the Help Library.  If
a topic (sub-topic) is not found, a list of all available topics
(subtopics) is given.

     Format:     UTILITIES  GENERAL_HELP  [topic]  [sub-topic] ...

     The help library is also accesed if the "?" key is pressed while
the QPLOT menuing system is active (as indicated on the menu).




10.9   HARDCOPY
---------------

     This command is used to set and display the type of hardcopy
device being used.  Alterations can also be made to the plotting


                              Page 135

routine parameters through this command.

     Format:     UTILITIES  HARDCOPY  [modifier]  [parameter]

     If the HARDCOPY command is given without a modifier, the hardcopy
device currently selected will be listed.  If the SETUP modifier is
used, the user will be prompted for new parameters for the currently
selected device.  If any other modifier is used, the hardcopy device
will be changed to that given.  Descriptions are given under the
specific modifiers.




10.9.1   CONFIGURE
------------------

      The hardcopy device driver can be given instructions to control
the size, orientation, and other characteristics of the plot. These
instructions are different for each type of plotting device. The user
will be asked questions to fully configure the previously selected
plotting device.  The variables which might be set with the modifier
include plot mode density, plot size, and plot orientation.  Details
about use of these parameters is given in description of each specific
hard-copy device.

     In addition to the hardware-specific options, the Non-Local
Hardcopy Command Line must be given.  This command file will take
the QPLOT generated file and output it to a device of the appropriate
type located on the user's VAX.

     Format:     UTILITIES  HARDCOPY  CONFIGURE




10.9.2   EXTERNAL
-----------------

     QPLOT contains drivers for the following plotters.  These devices
must be connected directly to the VAX, and preferably be used with a
queue.  Some devices may need special VAX software, known as a device
driver, to work properly.  It should be noted that the QPLOT software
for a particular graphics device may be (and often is) called a driver.
The device drivers mentioned here are lower level devices, and are
obtained from DEC or from the hardware manufacturer, and have nothing
to do with QPLOT.

     Format:     UTILITIES  HARDCOPY  EXTERNAL  device-type




                              Page 136

10.9.2.1   BITMAP
-----------------

     Use of this modifier means that the plot information is placed in
a file for use by other programs.  The data format of the file is
unique to QPLOT, and is described below.  The filename is BITMAP.PLT,
and a new version is created for each hardcopy command.

     Format:     UTILITIES  HARDCOPY  EXTERNAL  BITMAP

Setting the command line (By using the HARDCOPY CONFIGURE command)
will cause that command line to be issued to the VAX (via a SPAWN
command) after a hardcopy has been executed. The default command line
is null, meaning that the file is saved for future use.




10.9.2.1.1   Data Format
------------------------

     The file BITMAP.PLT consists of many variable length records,
each record corresponding to one plotting action.  The reading program
must read these records into a buffer, and be able to detect the
number of bytes read in each record.  In Pascal, read into a VARYING
string, and cast into a properly formatted variant record.  In
FORTRAN, read into a LOGICAL*1 array, and equvalence or transfer to
the desired types.  The record format is:

 Field     Type            Position    Description        Values
 -----     -------------   --------    ----------------   -------------
 1         BYTE            1-1         Instruction Type   (0-8)
 2         UNSIGNED_WORD   2-3         X-Position         (0-65535)
 3         UNSIGNED_WORD   4-5         Y-Position         (0-65535)
 4         DOUBLEWORD      6-9         Hue                (0-360)
 5         DOUBLEWORD      10-13       Lightness          (0-100)
 6         DOUBLEWORD      14-17       Saturation         (0-100)
 7         CHAR            18          Attribute          (" ","B","C")
 8         STRING          6-end       Text String
 -----     -------------   --------    ----------------   -------------

     The first byte of each record is the instruction type.  The
various values have the following meanings:

 Val Len Instruction     Position     Other
 --- --- -------------   ----------   -------------------------------------
 0   18  Set Color       Not Used     Hue, Lightness, Saturation, Attribute
 1   18  Open Panel      Not Used     Hue, Lightness, Saturation, Attribute
 2    5  Close Panel     Not Used     none
 3    5  Position Pen    X,Y          none
 4    5  Draw Line       X,Y          none


                              Page 137

 5    5  Set Text Size   Wid,Hgt      none
 6    5  Set Text Space  Char,Line    none
 7    5+ Print Text      X,Y          String
 8    5  Flush Buffer    None Used    none
 --- --- -------------   ----------   -------------------------------------

Notes:

     o    The attribute character modifies the color, as follows.

          " " -- no change.
          "B" -- Blinking color.
          "C" -- Clear, HLS value has no effect.  Do not draw.

     o    Colors with a lightness of zero should not be drawn
          except on top of a panel, or if they can be drawn in
          the background color.

     o    Normal plotting window is 0 to 65535 in the X direction,
          and 0 to 49151 in the Y direction.

     o    The text size is the width and height of the character cell.
          Subtract the character and line spacing to find the size
          of a full size character.  For example, a capital H would
          be (width - character_spacing) units wide, and (height
          - line_spacing) units high.

     o    The length of the text string is determined by taking the
          length of the record and subtracting five.




10.9.2.2   TEK4510
------------------

     Use of this modifier means that plot data is to be prepared in
Tektronix 4510 Color Rasterizer format.  It is then directed to a
file, and then to a device of that type that is connected directly
to the VAX as indicated by the command line parameter.  The filename is
TEK4510.PLT, and a new version is created for each hardcopy command.

     Format:     UTILITIES  HARDCOPY  EXTERNAL  TEK4510

Use of the HARDCOPY CONFIGURE command when this device is selected
will allow the following device specific parameters to be changed.







                              Page 138

10.9.2.2.1   Command Line
-------------------------

The command line is issued after the hardcopy is made to this device,
and usually indicates further actions to be performed on the file.
The default command line is null, meaning that the file is created
for future use.




10.9.2.2.2   Primary
--------------------

     If the primary color option is selected, all colors are
converted to one of the seven "primary" colors that can be printed by
the Tektronix printers without dithering. The colors include the four
ink colors (yellow, cyan, magenta, and black) and three mixtures (red,
green, and blue).  All other colors are "rounded" to one in this set.




10.9.2.2.3   Width
------------------

     This option controls the width of the lines on the plot.  Only
four values (1-4) are accepted, the rest have no effect.  A width of
one will produce very narrow lines, and is the factory default.  A
width of 4 will produce the widest lines, about one sixteenth of an
inch.




10.9.2.2.4   Copies
-------------------

     This option controls the number of copies to be made of the
plot.  The maximum value is nine.  The plot is downloaded to the
Tek4510 unit only once.




10.9.2.2.5   Landscape/Portrait
-------------------------------

     If the plot is in landscape format the plot will be as large as
possible, and take up most of one sheet of the paper.  This is
normally the default orientation. In portrait format, where the long


                              Page 139

length of the paper is in the vertical direction.  This format will
produce plots smaller in size.




10.9.2.2.6   Text Style
-----------------------

     This option controls whether stroke or string precision graphtext
is to be used.  See the Tek4510 manual for further details.




10.9.2.3   TEK4014H
-------------------

     Use of this modifier means that plot data is to be prepared in
TEK4014 format.  It is then directed to a file.  The file may sent to
a hardcopy device requiring TEK4014 format, or can also be displayed
on most Tektronix terminals simply by typing it out.  The filename is
TEK4014H.PLT, and a new version is created for each hardcopy command.

     Format:     UTILITIES  HARDCOPY  EXTERNAL  TEK4014H

Use of the HARDCOPY CONFIGURE command when this device is selected
will allow the following device specific parameters to be changed.




10.9.2.3.1   Command Line
-------------------------

The command line is issued after the hardcopy is made to this device,
and usually indicates further actions to be performed on the file.
The default command line is null, meaning that the file is created
for future use.




10.9.3   NONE
-------------

     This modifier signifies that no hard-copy device is connected to
the terminal.  It is used in batch-mode operation when the job may be
printed/plotted on a device selected by the system operator.

     Format:     UTILITIES  HARDCOPY  NONE


                              Page 140





10.9.4   LOCAL
--------------

     Use of this modifier means that the terminal is connected
directly to a hard-copy device rather than the data stream being
routed through the computer to the device.  No parameter is provided
for identifying the particular printer/plotter.  If the LOCAL hardcopy
device is selected, device configuration (if necessary) is done using
the TERMINAL CONFIGURE command.

     Format:     UTILITIES  HARDCOPY  LOCAL




10.9.5   VIEW
-------------

     This modifer will display the various characteristics of a
non-local hardcopy device (one attached to the VAX, not the terminal).
To display characteristics of local hardcopy devices (those attached
directly to the terminal and not connected to the VAX) use the
UTILITIES TERMINAL VIEW command.

     Format:     UTILITIES  HARDCOPY  VIEW




10.10   HELP
------------

     The HELP command accesses the application program Help Library,
which is capable of providing an abundance of useful information about
the application program.  This library is organized in the same manner
as the VAX system help library.  Once a topic has been selected,
information about various sub-topics can be obtained by just entering
the name of the sub-topic.  If <RETURN> is given as a response to any
prompt, the help system moves up one level (from sub-topic to topic,
etc.) and eventually out of the Help Library.  If a topic (sub-topic)
is not found, a list of all available topics (subtopics) is given.

     Format:     HELP  [topic]  [sub-topic]  [sub-sub-topic] ...
                 This command can be given at any time!

     The help library is also accesed if the "?" key is pressed while
the QPLOT menuing system is active (as indicated on the menu).


                              Page 141





10.11   INPUT_SOURCE_FILE
-------------------------

     This command transfers control of an applications program to a
file. Subsequent input will be read from the file indicated.  The
presence of this command in such a file will cause control to be
shifted to second file, and control will return to the first file upon
completion of the second file.  Files can be nested to a depth of
five, at which time an error message will be generated.

     Format:     UTILITIES  INPUT_SOURCE_FILE  filename  [parameters]

     This command is identical in action to the atsign command, but it
can be reached from the UTILITIES command level with using the shift
key which is needed to make an atsign (shift-2).




10.11.1   filename
------------------

     The filename is any valid VAX filespec, and thus may include
device names, directories, and subdirectories.  There is a default
extension of .SOU (source).

     Sample commands:

     UTILITIES INPUT TEST.SOU
     U I TEST




10.11.2   parameters
--------------------

     Up to nine parameters may be included following the filename, each
one separated by blanks.  These parameters will be used to substitute
for the strings 'Pn' in lines read from the source file.  All
occurances are substituted, and are done in numerical order.  The
string 'Pn' must be exactly correct, with a capital "P" and where
"n" is one of the digits from 1 to 9.






                              Page 142

10.11.3   example
-----------------

;   A file to change the size of the characters on a 4100 series terminal.
;   Note that semicolons indicate comments.
;
OPTIONS SET HEIGHT 1232
OPTIONS SET WIDTH   720
OPTIONS SET LINE_SPACING 416
OPTIONS SET CHAR_SPACING 208
;
;   End of sample file.




10.12   JOURNAL_KEEP
--------------------

     This command saves the journal file.  When a QPLOT application is
started, a journal file is begun with the name JOURNAL.SOU.  All user
input is copied to the active file.  This file thus forms a
supplementary record of each entry. When this command is given, the
journal file is closed, and the parameter is used to rename the
existing journal file. A new journal file is begun to save subsequent
commands. The user is given the option to immediately edit the journal
file and remove extraneous commands. It creates a file for use with
the ATSIGN command. The active journal file is deleted when the
application is terminated.

     Format:     UTILITIES  JOURNAL_KEEP  [filename-argument]
     Default:    JOURNAL_SAVE.SOU




10.13   MENU
------------

     The MENU command controls whether the QPLOT menuing system is
activated.  The menus will appear if

        1)  The menuing system is active.
        2)  The terminal is in text mode.
        3)  No source file is active.

When menus are displayed the arrow keys can be used to move the cursor
among the various selections.  When the proper selection is reached,
just press <RETURN> to select that item.  Alternatively, just press
the key corresponding to item you wish to select.  The help library is
also accessed if the "?" key is pressed while the QPLOT menuing system


                              Page 143

is active (as indicated on the menu).

     This command may be used to toggle the menu on and off.  The
initial value is on.

     Format:     UTILITIES  MENU




10.14   OS
----------

      The OS command allows access to the host operating system
language. For example, "OS DIR" will likely generate a directory
listing.

Format:          OS  [OS-command]
                 UTILITIES  OS  [OS-command]
                 This command can be given at any time!




10.15   QPLOT_INPUT_FILE
------------------------

     This command transfers control of an applications program to a
QPLOT system file.  The file must be selected from those in the
QPLOTHOME directory.  These files are created by the owner of the
QPLOTHOME directory, who is probably the one who installed INCA on
your system.  These files can be used to configure system hardcopy
devices, and other useful things.  Subsequent input will be read
from the file indicated.

     Format:     UTILITIES  QPLOT_INPUT_FILE  filename  [parameters]




10.15.1   filename
------------------

     The filename is the name (sans extension) of any file in the
QPLOTHOME directory that has the extension SOU.








                              Page 144

10.15.2   parameters
--------------------

     Up to nine parameters may be included following the filename, each
one separated by blanks.  These parameters will be used to substitute
for the strings 'Pn' in lines read from the source file.  All
occurances are substituted, and are done in numerical order.  The
string 'Pn' must be exactly correct, with a capital "P" and where
"n" is one of the digits from 1 to 9.




10.15.3   example
-----------------

;   A file to change the size of the characters on a 4100 series terminal.
;   Note that semicolons indicate comments.
;
OPTIONS SET HEIGHT 1232
OPTIONS SET WIDTH   720
OPTIONS SET LINE_SPACING 416
OPTIONS SET CHAR_SPACING 208
;
;   End of sample file.




10.16   SET
-----------

     This command may be used to change some QPLOT parameters.  The audit
file, if implemented for the application, will contain a status report
on the changed parameter.  If no argument is given, the user will be
prompted to enter a value.  Pressing <RETURN> will cause the current
value to be retained.  If no modifier is given, the values of all
SETtable parameters will be listed.

     The quantity to be changed is given by the modifier. The new
value is given by the argument.  If the argument is omitted or is
incorrect you will be asked to enter the new value.  Just pressing
<RETURN> will then cause the old value to be retained.

     Format:     UTILITIES  SET  [modifier]  [argument]








                              Page 145

10.16.1   Character Sizes
-------------------------

  In addition to the normal text displayed on the terminal in text
mode, QPLOT permits construction of larger or smaller characters for
uses such as legends on large graphs.  Note that all characters on the
same graph must be the same size, however.  Any character in the ASCII
set may be drawn in this way.  The SET command governs the size of
these characters.  The modifiers used for this purpose are:

     HEIGHT
     CHAR_SPACING
     LINE_SPACING
     WIDTH

These are defined in their respective alphabetical order below.

The sum of the height and top margin by the sum of the width and right
margin defines the size of a cell for a constructed character.  The de-
fault size of a character cell is approximately 600 by 1000 units, where
the maximum size is approximately 3000 by 5000 units.  The size and number
of these units depends on the particular terminal.  The practical
minimum size of a cell is approximately 40 by 60 units which corresponds
to the size of usual characters at 80 characters per line.




10.16.2   ASSIST
----------------

     This parameter turns the assist flag on and off.  When the flag
is on, a "hint" is given before each line of user input, telling the
user what type of input is expected, and what the default is. Also, if
numeric input is expected, the minimum and maximum is given.  In
addition, a confirmation is given after all default input.  That is,
if a null string or the word "DEFAULT" is entered, QPLOT will tell the
user what value the program is using.

     Format:     UTILITIES  SET  ASSIST  [boolean-argument]
     Default:    OFF




10.16.3   CHAR_SPACING
----------------------

     This parameter controls the margin between characters when seen
on the terminal display.  The initial value of this parameter is
approximately 100, but it depends upon the type of terminal.  This


                              Page 146

quantity is reset to the initial value whenever the terminal type is
changed.  The user should not change this parameter if the terminal in
use is capable of displaying only one character size.

     Format:     UTILITIES  SET  CHAR_SPACING  [integer-argument]
     Default:    terminal dependent




10.16.4   DOTSIZE
-----------------

     This parameter controls the size of the dots used when multiple
curves are displayed on a non-color terminal.  The initial value of
this parameter is approximately 64, but depends upon the type of
terminal.  It is 0 for a color terminal, for instance.  This quantity
is reset to the initial value whenever the terminal type is changed.
The range is 0 to 256.

     Format:     UTILITIES  SET  DOTSIZE  [integer-argument]
     Default:    terminal dependent




10.16.5   EDITOR
----------------

     The command may be used to change the editor used by QPLOT.  The
default is the "EDT" editor, which is a called procedure (system
service) and is very fast.  The editor will come up in change (screen
edit) mode if the user is using a VT100 compatible terminal.  If
another editor is selected, a new process must be 'spawned', resulting
in a possible delay of several seconds.

     Format:     UTILITIES  SET  EDITOR  [string-argument]
     Default:    OFF




10.16.6   FIELD_WIDTH
---------------------

     QPLOT prints real numbers with a certain width. The field width
is the number of characters per real number in the printout.

     Format:     UTILITIES  SET  FIELD_WIDTH  [integer-argument]
     Default:    24



                              Page 147

10.16.7   HEIGHT
----------------

     This parameter controls the height of characters within their
individual cells on the terminal display.  The initial value of this
parameter is approximately 800, but it depends upon the type of
terminal. This quantity is reset to the initial value whenever the
terminal type is changed.  The user should not change this parameter
if the terminal in use is capable of displaying only one character
size.

     Format:     UTILITIES  SET  HEIGHT  [integer-argument]
     Default:    terminal dependent




10.16.8   KEYPRESS
------------------

     This modifier will change a flag which controls whether the user
is given the prompt "Press any key to continue" after certain commands
are exectuted.  The parameter for this command is one of the strings
"Y", "N", "YES", "NO", "ON" or "OFF".

     Format:     UTILITIES  SET  KEYPRESS  [boolean-parameter]
     Default:    OFF




10.16.9   LINE_SPACING
----------------------

     This parameter controls the spacing between lines of text on the
terminal display.  The initial value of this parameter is
approximately 200, but it depends upon the type of terminal.  This
quantity is reset to the initial value whenever the terminal type is
changed.  The user should not change this parameter if the terminal in
use is capable of displaying only one character size.

     Format:     UTILITIES  SET  LINE_SPACING  [integer-argument]
     Default:    terminal dependent




10.16.10   MACRO
----------------

     Sometimes the same command needs to be repeated several times. In


                              Page 148

these cases it can be advantageous to teach QPLOT an abbreviation or
macro for the command.  This is done by using the SET MACRO command.
Main menu selections are checked for this substitution.

     Format:     UTILITIES  SET  MACRO  key=string
     Default:    none




10.16.11   NOPRESS_WAIT
-----------------------

     This modifier will change a value which is the wait after
certain commands are executed.  The parameter for this command is the
new value of the wait period in seconds.

     Format:     UTILITIES  SET  NOPRESS_WAIT  [real-parameter]
     Default:    2.0




10.16.12   OVERLAY_KILL
-----------------------

     This parameter controls whether the text overlay available on
certain terminals is turned off while plotting is being done.

     Format:     UTILITIES  SET  OVERLAY_KILL  [boolean-argument]
     Default:    ON




10.16.13   PATH
---------------

     This parameter changes the default directory, or displays the
current directory.

     Format:     UTILITIES  SET  PATH  [path-argument]
     Default:    OFF




10.16.14   RESOLUTION
---------------------

     This parameter controls the size of the fuzz area when graphic


                              Page 149

input is being used.  The initial value of this parameter is
approximately 64, but depends upon the type of terminal.  This
quantity is reset to the initial value whenever the terminal type is
changed.  The range is 1 to 4096.

     Format:     UTILITIES  SET  RESOLUTION  [integer-argument]
     Default:    terminal dependent




10.16.15   VERIFY
-----------------

     This parameter controls the verify flag.  This works similar to
the SET VERIFY command on the VAX.  When commands are being read from
a source file, and the verify flag is OFF, non-graphic output to the
terminal will be suppressed.

     Format:     UTILITIES  SET  VERIFY  [boolean-argument]
     Default:    true




10.16.16   WIDTH
----------------

     This parameter controls the width of characters on the terminal
display.  The initial value of this parameter is approximately 500,
but it depends upon the type of terminal.  This quantity is reset to
the initial value whenever the terminal type is changed.  The user
should not change this parameter if the terminal in use is capable of
displaying only one character size.

     Format:     UTILITIES  SET  WIDTH  [integer-argument]
     Default:    terminal dependent




10.17   TERMINAL
----------------

     This command is used to change or display the terminal type.
If the modifier is present, the terminal type will be changed.  If
the modifier is not present, the terminal type will be displayed.

     Format:     UTILITIES  TERMINAL  [modifier]

     The QPLOT library used by these applications programs will


                              Page 150

operate with several different types of terminals.  These include the
TEK4014, TEK4109, TEK4114, and VT100.  For a full list use the SELECT
modifier to observe the possible modifiers for the TERMINAL
command. Any of these may be used in the command to change the
terminal type.  Setup and use instructions for all of the terminals
are provided in the description of each terminal below.

     The type of terminal is written to the audit file and displayed
on the terminal.




10.17.1   AUTO
--------------

     This modifier will compare the device number (TTA1, etc.)
to those in a terminal map (QPLOTHOME:TERMINAL.MAP) file.  The
hardcopy selection and configuration will also be set.  The map file
is usually maintained by the system manager and contains a list of
current device numbers and their types. If this terminal, or other
peripheral device, is not registered correctly, the system manager
should be asked to correct the file.

     Format:     UTILITIES  TERMINAL  AUTO




10.17.2   CONFIGURE
-------------------

      The terminal driver can be given instructions to control various
characteristics of the plot.  These instructions are different for
each type of terminal.  The user will be asked questions to fully
configure the previously selected plotting device.  The parameters set
by the user's answers are briefly described under the individual
terminals below.

     Format:     UTILITIES  TERMINAL  CONFIGURE




10.17.3   QUERY_VT
------------------

     This modifier uses a feature of ANSI 3.64 standard terminals
(VT100 series) that requires the terminal to report its type
automatically when a certain escape sequence is sent.  QPLOT will then
examine the report and classify the terminal as a VT100, VT102, VT125,


                              Page 151

VT220, or VT241.  If an no report is received after five seconds, or
an incorrect report is recieved, the type is changed to unknown, and
the procedure below is used.  Note that other types will also report,
for instance a TEK4109 will report itself to be a VT100, since it is
VT100 compatible.  Thus this terminal modifier should only be used if
the user knows that the terminal is one of the above five.

     Format:     UTILITIES  TERMINAL  QUERY_VT




10.17.4   SELECT
----------------

     This modifier selects a new terminal type.  This can be useful
when QPLOT thinks you have the wrong terminal type do to an error at
startup or an incorrect or missing terminal map file.

     Format:     UTILITIES  TERMINAL  SELECT  [terminal-type]




10.17.4.1   ANSI364
-------------------

     The VT100 protocol has been standardized as ANSI (American
National Standards Institute) standard number 3.64.  Thus any terminal
that support this standard is VT100 compatible.

     Format:     UTILITIES  TERMINAL  SELECT  ANSI364




10.17.4.2   AUTO
----------------

     Use of this terminal type cause the same effect as the AUTO
modifier.

     Format:     UTILITIES  TERMINAL  SELECT  AUTO




10.17.4.3   DUMB
----------------

     This terminal type will cancel all terminal-dependent output,


                              Page 152

such as graphics commands.  The screen cannot be cleared.  Dumb
terminals are considered to have their own local graphic hardcopy
device.  When a hardcopy command is issued to a dumb terminal, a rough
plot will be produced using character cell graphics.  The user can use
cursor input by typing in the key, row, and column numbers.  This
designation is suitable for hardcopy terminals and others not
supported by QPLOT.

     Format:     UTILITIES  TERMINAL  SELECT  DUMB




10.17.4.4   ERGO301
-------------------

     This terminal is made by Microterm, Inc.  It is VT100 compatible
with a Tektronix type graphics option.  The resolution is very poor
(about 720 x 200) and is monochrome only.

     Format:     UTILITIES  TERMINAL  SELECT  ERGO301




10.17.4.5   NONE
----------------

     This terminal type will cancel all terminal output.  User input
is expected as usual.  The use of this modifier in an interactive
mode is not recommended, and will cause a fatal error.  Its principal
use is in batch mode.

     Format:     UTILITIES  TERMINAL  SELECT  NONE




10.17.4.6   PCPLOT
------------------

     This terminal type is designed for use with the IBM-PC
PC-Plot terminal program.

     Format:     UTILITIES  TERMINAL  SELECT  PCPLOT

     The following options in the PC-Plot program must be set:

     Terminal type:   TEK 4010/ VT100/ TEK 4027 (Partial)




                              Page 153

10.17.4.7   QUERY_VT
--------------------

     Use of this terminal type will cause the same effect as the
QUERY_VT modifier.

     Format:     UTILITIES  TERMINAL  SELECT  QUERY_VT




10.17.4.8   TEK4010
-------------------

     This terminal is made by Tektronix, Inc.  There is no
configuration necessary for this terminal.  Note that many other
terminals and emulators attempt to mimic a TEK4010.  In most cases the
QPLOT user should use one of the specially designed terminal drivers
if one is available, as most also feature VT100 compatibility, but
always in a different way.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4010




10.17.4.9   TEK4014
-------------------

     This terminal is made by Tektronix, Inc.  There is no
configuration necessary for this terminal.  Note that many other
terminals and emulators attempt to mimic a TEK4014.  In most cases the
QPLOT user should use one of the specially designed terminal drivers
if one is available, as most also feature VT100 compatibility, but
always in a different way.  This terminal is different from the
TEK4010 type in that different size characters are supported. The
resolution of this terminal is 1024 x 768.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4014




10.17.4.10   TEK4016
--------------------

     This terminal is made by Tektronix, Inc.  This terminal is
different from the TEK4014 type in that higher resolution lines
are drawn, with a resolution of 4096 x 3072.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4016


                              Page 154





10.17.4.11   TEK4105
--------------------

     This terminal is made by Tektronix, Inc., and is totally
compatible with the VT100 type, as far as QPLOT's commands are
concerned.  It is also capable of color graphics, and is a
near-ideal terminal for QPLOT applications.  It has a resolution
of 480 x 360, with 8 out of 16 colors.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4105

     The terminal must be configured as follows:

          GENERAL:     SNOOPY:                NO
          COMMUNICAT.: EOMCHARS:              CR LF (^M^J)
                       EOLSTRING:             'CR'  ('^M')
                       BYPASSCANCEL:          LF    (^J)

Other settings may be adjusted as desired.




10.17.4.12   TEK4106
--------------------

     This terminal is made by Tektronix, Inc., and is totally
compatible with the VT100 type, as far as QPLOT's commands are
concerned.  It is also capable of graphics, and in many ways is the
ideal terminal for QPLOT applications.  The resolution of this
terminal is 640 x 480, with 16 out of 64 colors.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4106

     The terminal must be configured as follows:

          GENERAL:     SNOOPY:                NO
          COMMUNICAT.: EOMCHARS:              CR LF (^M^J)
                       EOLSTRING:             'CR'  ('^M')
                       EOFSTRING:             'SB'  ('^Z')
                       BYPASSCANCEL:          LF    (^J)
          2PPI:        PASSIGN                P0: PPORT (If copy sent by VAX)
                                  or          P0: 4510 (If copy not sent by VAX)

Other settings may be adjusted as desired.

The TEK4106 terminal can be connected to (amomg others) a TEK4692/3/5/6


                              Page 155

color printer and a TEK4510 rasterizer, which is in turn connected to
a printer.  Use of the UTILITIES TERMINAL CONFIGURE command when this
terminal is selected will allow the following device specific parameters
to be changed.




10.17.4.12.1   Dialog Lines
---------------------------

     The number of lines in the dialog area that can be quickly
displayed may vary, particularily when a terminal emulator is used.
This parameter will change the number of lines.




10.17.4.12.2   Hardcopy-Device
------------------------------

     Either the TEK4695 printer (A), the TEK4510 rasterizer (B) or
none (Z) must be selected.




10.17.4.12.3   Tek4695 size
---------------------------

     If the TEK4695 hardcopy device is selected, this question will be
asked.  Large plots will fill the entire sheet in Landscape format.
Small plots are about 3 times smaller in portrait format.  The current
option allows the user to continue to use what ever size was
previously selected as remembered or setup inside the printer.




10.17.4.12.4   Tek4510 source
-----------------------------

     If the TEK4510 hardcopy device is selected, this question will be
asked.  If segment source is selected, the plotting data will be
dumped from the terminal's internal memory.  Segment source should be
used only if the TEK4107 or TEK4109 types is selected.  Vax source
should be used if the terminal has no segment memory, or it is not
being used.





                              Page 156

10.17.4.12.5   Copy Needed
--------------------------

     If the TEK4510 hardcopy device is selected, this question will be
asked.  The answer to this question depends upon how the 2PPI PASSIGN
parameter was set during the terminal setup (see above).  Incorrect
setting of this option will cause either two copies or no copies to be
generated.




10.17.4.12.6   Primary
----------------------

     If the TEK4510 hardcopy device is selected, this question will be
asked.  If the primary color option is selected, all colors are
converted to one of the seven "primary" colors that can be printed by
the Tektronix printers without dithering. The colors include the four
ink colors (yellow, cyan, magenta, and black) and three mixtures (red,
green, and blue).  All other colors are "rounded" to one in this set.




10.17.4.12.7   Width
--------------------

     If the TEK4510 hardcopy device is selected, this question will be
asked.  This option controls the width of the lines on the plot.  Only
four values (1-4) are accepted, the rest have no effect.  A width of
one will produce very narrow lines, and is the factory default.  A
width of 4 will produce the widest lines, about one sixteenth of an
inch.




10.17.4.12.8   Copies
---------------------

     If the TEK4510 hardcopy device is selected, this question will be
asked.  This option controls the number of copies to be made of the
plot.  The maximum value is nine.  The plot is downloaded to the
Tek4510 unit only once.








                              Page 157

10.17.4.12.9   Landscape/Portrait
---------------------------------

     If the TEK4510 hardcopy device is selected, this question will be
asked.  If the plot is in landscape format the plot will be as large
as possible, and take up most of one sheet of the paper.  This is
normally the default orientation. In portrait format, where the long
length of the paper is in the vertical direction.  This format will
produce plots smaller in size.




10.17.4.12.10   Text Style
--------------------------

     If the TEK4510 hardcopy device is selected, this question will be
asked.  This option controls whether stroke or string precision
graphtext is to be used.  See the Tek4510 manual for further details.




10.17.4.13   TEK4107
--------------------

     This terminal is made by Tektronix, Inc., and is totally
compatibile with the TEK4106 type, and also features local segment
memory.  The segment memory is supported by QPLOT.  The TEK4106 type
may also be used if segment memory is not needed.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4107




10.17.4.14   TEK4109
--------------------

     This terminal is made by Tektronix, Inc., and is totally
compatibile with the TEK4106 type, and this QPLOT terminal driver
supports segment memory. The TEK4106 type may also be used if segment
memory is not needed.  The TEK4109 terminal has a larger palette
then other terminals in this series (TEK4106, TEK4107, TEK4207).
QPLOT does support this distinction, and the full palette of 4096
colors is available on the TEK4109.  The resolution of this
terminal is 640 x 480, with 16 out of 4096 colors.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4109




                              Page 158

10.17.4.15   TGRAF
------------------

     This terminal emulator for the IBM-PC is made by GrafPoint, Inc.,
and is totally compatibile with the TEK4107 type, and this QPLOT
terminal driver supports segment memory. The TEK4106 type may also be
used if segment memory is not needed.  The dialog area is set to five
lines for this type, to help compensate for poor performance in
scrolling the dialog area.

      Format:    UTILITIES  TERMINAL  SELECT  TGRAF




10.17.4.16   TEK4114
--------------------

     This terminal is made by Tektronix, Inc., and is totally
compatibile with the TEK4014.  In addition, a number of additional
features are supported by QPLOT, including the dialog area.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4114

     Colors are supported on this terminal by drawing different colors
using different line styles.  White will appear as solid lines, gray
as dotted lines, and other colors as a mixture of dots and dashes.

     The terminal must be configured as follows:

          SNOOPY:                NO
          PAGEFULL:              NONE
          EOMCHARS:              CR LF (^M^J)
          EOLSTRING:             'CR'  ('^M')
          BYPASSCANCEL:          LF    (^J)

Other setting may be adjusted as desired.




10.17.4.17   TEK4115
--------------------

     Format:     UTILITIES  TERMINAL  SELECT  TEK4115








                              Page 159

10.17.4.18   TEK4207
--------------------

     This terminal is made by Tektronix, Inc., and is totally
compatibile with the TEK4106 type, and also features local segment
memory.  The segment memory is supported by QPLOT.  The TEK4106 type
may also be used if segment memory is not needed.

     Format:     UTILITIES  TERMINAL  SELECT  TEK4207




10.17.4.19   TV922
------------------

     This terminal is made by Televideo Inc., and is totally
compatibile with the VT100 type, as far as QPLOT's commands are
concerned.

     Format:     UTILITIES  TERMINAL  SELECT  TV922




10.17.4.20   UNKNOWN
--------------------

     Use of this terminal type cause the same effect as the UNKNOWN
modifier.

     Format:     UTILITIES  TERMINAL  SELECT  UNKNOWN




10.17.4.21   VDITERM
--------------------

     This terminal type is an IBM-PC or compatible running the IBM
Graphics Terminal Emulator program.  This program emulates a
Lear-Siegler ADM-3A terminal in text mode and limited features of
a Tektronics 4105 terminal in graphics mode.  QPLOT will switch
modes as needed.  This program uses the IBM Virtual Device Interface,
and will run on all IBM standard graphics cards, but does not take
full advantage of any but the Professional Graphics Adapter.

     Format:     UTILITIES  TERMINAL  SELECT  VDITERM

     The emulator must be configured as follows:



                              Page 160

          DEVICE:                             Display
          TERMINAL:                           Graphics or Alpha
          PROTOCOL:    Echo:                  Remote
                       CR Implies             <CR>
                       LF Implies             <LF>
                       DEL Effect:            Low Y
          SWITCH:      Character type:        Hardware
                       GIN terminator:        <CR>
                       Character spacing:     Native
                       Pagefull ....          None ON

Other setting may be adjusted as desired.




10.17.4.22   VERSAMAC
---------------------

     This terminal type is designed for use with the MacIntosh
VersaTerm terminal program.

     Format:     UTILITIES  TERMINAL  SELECT  VERSAMAC

     The following options in the VersaTerm program must be set:

     EMULATION:   First click TEK4014, then VT100.
     SETTINGS:    Map BS -> DEL.
     EXTRAS...:   Auto "TEK4014" Entry ON.
                  Show Edit Cursor OFF.
                  DEC VT52 Mode OFF.
                  New Line Mode OFF.




10.17.4.23   VS100
------------------

     This terminal is made by Visual Systems, Inc., and is totally
compatibile with the VT100 type, as far as QPLOT's commands are
concerned.

     Format:     UTILITIES  TERMINAL  SELECT  VS100




10.17.4.24   VT_EMUL
--------------------



                              Page 161

     This terminal type is exactly like the VT100/ANSI364 terminal
type except that doublehigh/doublewide letters are not generated.
Thus this type should be used with VT100 emulators which do not
support these capabilities.

     Format:     UTILITIES  TERMINAL  SELECT  VT_EMUL




10.17.4.25   VT100
------------------

     This terminal is made by Digital Equipment Corporation, and is
the prototype of the ANSI 3.64 standard.  There are many clones of the
VT100, and many terminals or microcomputer programs claim to be
VT100-compatible.  Testing the features described below will determine
if the terminal is fully compatible.  A number of compatible terminals
are used at NASA-Goddard and have been given separate names for
documentation purposes.  These are listed below.

     Format:     UTILITIES  TERMINAL  SELECT  VT100

     There are several differences between the way the VT100 graphics
mode and a real graphics terminal works.  The VT100 uses character
cell graphics.  This means it has a maximum practical resolution of 24
rows by 80 (or 132) columns. The VT100 does not have a joystick or
other cursor control device. The cursor is moved using the arrow keys
(The same ones used in EDT). The PF1-PF4 keys are used to make the
VT100 a little bit more usable. Their use is described below.

     PF1 flip-flops the VT100 from 80 column mode to 132 column mode
         and back again. The plot limits are automatically adjusted
         to take use all of the available screen space.

     PF2 flip-flops the plot characters from assorted characters
         (Used to represent the different colors available on a color
         graphics terminal such as the Tek4109) to all periods, and
         back again. This is useful when plotting a single curve.
         Using all periods tends to smooth the curve out.

     PF3 shows the dialog area. It does not return you to text mode,
         it just shows you the last five lines.

     PF4 is not used at the moment.








                              Page 162

10.17.4.26   VT102
------------------

     This terminal is made by Digital Equipment Corporation, and is
totally compatibile with the VT100 type, as far as QPLOT's commands
are concerned.

     Format:     UTILITIES  TERMINAL  SELECT  VT102




10.17.4.27   VT125
------------------

     This terminal is made by Digital Equipment Corporation, and is a
VT100 compatible with graphics.

     Format:     UTILITIES  TERMINAL  SELECT  VT125

     The VT100 does not have a joystick or other cursor control
device.  The cursor is moved using the arrow keys (The same ones used
in EDT).  The PF1-PF4 keys are used to make the VT125 a little bit
more usable.  Their use is described below.

     PF1 centers the graphics cursor.

     PF2 toggles the speed of the graphics cursor.

     PF3 is not used at the moment.

     PF4 is not used at the moment.




10.17.4.28   VT220
------------------

     This terminal is made by Digital Equipment Corporation, and is
totally compatibile with the VT100 type, as far as QPLOT's commands
are concerned.  It does, however, have a different keyboard and gives
a different response when the QUERY_VT type is used.

     Format:     UTILITIES  TERMINAL  SELECT  VT220








                              Page 163

10.17.4.29   VT240
------------------

     This terminal is made by Digital Equipment Corporation, and is a
VT220 compatible with graphics.  The graphics resolution is 800 x 250,
and displays four shades of grey.  The cursor is moved using the
arrow keys (The same ones used in EDT).

     Format:     UTILITIES  TERMINAL  SELECT  VT240




10.17.4.30   VT241
------------------

     This terminal is made by Digital Equipment Corporation, and is a
VT220 compatible with graphics.  The graphics resolution is 800 x 250,
and displays four out of eight colors.  The cursor is moved using the
arrow keys (The same ones used in EDT).

     Format:     UTILITIES  TERMINAL  SELECT  VT241

     The following terminal settings must be in effect:

     LIGHT TEXT, DARK SCREEN
     MONOCHROME DISPLAY
     USER FEATURES UNLOCKED

     When using the VT241, the logical colors TEXTBACK, TEXTCHAR,
and CURSOR_1 must be sufficiently different so as to generate three
different colors (out of the eight displayable).  For example, the
color of TEXTCHAR being WHITE and CURSOR_1 also being WHITE (or LIGHT
GREY) will not work.  The result of this type of error will be random
colors of the text, including the possibility of the text color
equalling the background color.




10.17.5   UNKNOWN
-----------------

     This modifier will cause the computer to prompt the user to type
in his terminal type before the program can proceed.  The type must
match one the available types, or the prompt is repeated until it
does. QPLOT commands are not available at the terminal type prompt.

     Format:     UTILITIES  TERMINAL  UNKNOWN

     If desired, the user can use a VAX defined logical name to find


                              Page 164

the proper terminal type.  This can be useful if the user makes use of
several QPLOT applications during a single session.  Use the VAX
command DEFINE to create an equivalence for the logical name UNKNOWN,
For example, $DEFINE UNKNOWN TEK4014.  The logical name will be
checked whenever QPLOT is confronted with an UNKNOWN terminal type.




10.17.6   VIEW
--------------

     This modifier causes the computer to display the current
port assignment, terminal type, and terminal configuration.

     Format:     UTILITIES  TERMINAL  VIEW




10.18   VIEW
------------

     This command is used to display various items as described below.
There is no input for the VIEW command, since all required information
is given in the command line.  If no modifier is given, the status of
all items except the terminal map are given.

     Format:     UTILITIES  VIEW  [modifier]




10.18.1   COMPOSITE
-------------------

     This modifier will cause all text parameters accessable by the
view command to be displayed.

     Format:     UTILITIES  VIEW  COMPOSITE




10.18.2   MAP_OF_TERMINALS
--------------------------

     When an applications program is begun, QPLOT automatically
determines the device number and compares it to those in a terminal
map file. This file is usually maintained by the system manager and
contains a list a current devices and their assigned terminal types.


                              Page 165

If terminal to be used is not displayed correctly, the system manager
should be asked to correct the file.  Not that an assigned terminal
type can always be over-ridden by using the /terminal-type qualifier
when starting the application.

     Format:     UTILITIES  VIEW  MAP_OF_TERMINALS




10.18.3   SOURCE
----------------

     The value of the source flag may be examined using this
modifier.  When a user logs onto the VAX through a terminal
registered in the QPLOT terminal map, the source flag is set to TERM,
which indicates that the system is set for interactive use.  When data
for an application program is being input, such as by the ATSIGN
command, QPLOT sets the source flag to COMMAND_FILE.  The source flag
is not set by any command specifically for that purpose alone.

     Format:     UTILITIES  VIEW  SOURCE




10.18.4   TIME
--------------

     This modifier will cause the current time and date to be
displayed.

     Format:     UTILITIES  VIEW  TIME




10.18.5   VERSION
-----------------

     This modifier will display the version of QPLOT used in the
compilation of the application program.

     Format:     UTILITIES  VIEW  VERSION




10.19   @-sign
--------------



                              Page 166

     This command transfers control of an applications program to a
file. Subsequent input will be read from the file indicated.  The
presence of this command in such a file will cause control to be
shifted to second file, and control will return to the first file upon
completion of the second file.  Files can be nested to a depth of
five, at which time an error message will be generated.

     Format:     @filename  [parameters]
                 UTILITIES  @  filename  [parameters]
                 This command can be given at any time!




10.19.1   filename
------------------

     The filename is any valid VAX filespec, and thus may include
device names, directories, and subdirectories.  There is a default
extension of .SOU (source).

     Sample commands:

     @INCA
     @DUA1:[HISDIR.TEST]SAMPLE.SOU  TEST   45
     UTILITIES @ LOAD.SOU




10.19.2   parameters
--------------------

     Up to nine parameters may be included following the filename, each
one separated by blanks.  These parameters will be used to substitute
for the strings 'Pn' in lines read from the source file.  All
occurances are substituted, and are done in numerical order.  The
string 'Pn' must be exactly correct, with a capital "P" and where
"n" is one of the digits from 1 to 9.




10.19.3   example
-----------------

;   A file to change the size of the characters on a 4100 series terminal.
;   Note that semicolons indicate comments.
;
OPTIONS SET HEIGHT 'P1'
OPTIONS SET WIDTH  'P2'


                              Page 167

OPTIONS SET LINE_SPACING 416
OPTIONS SET CHAR_SPACING 208
;
;   End of sample file.




10.20   ;-semicolon
-------------------

     This command does nothing.  The prompt is immediately repeated.
This command is most useful in command files to make comments.

     Format:     ; [comment]
                 This command can be given at any time!





































                              Page 168

11   VIEW
---------

     This command is used to display the status of the INCA system.  A
large number of modifiers are available, which fall into these
categories.  There is no input for the VIEW command, since all
required information is given in the command line.  Some of the
displays produced by the VIEW command can be printed by using the AUDIT
command.

     Format:     VIEW  [modifier]




11.1   AUDIT_FILE
-----------------

     While you can use the UTILITIES EDIT command to look at files,
you cannot look at your current audit file to see what you have just
done, since this file is current open.  This modifier gets around
that problem by temporaily closing the audit file, and then prompting
for the name of an editor to use.  The audit file name is
automatically supplied to the editor, and the user can examine the
file as he pleases.  Exit the editor in the normal manner and you will
be returned to INCA.

     While you can use the Vax TYPE command as an editor to just type
the file on the terminal (use control-C or control-O to stop output),
do not use the Vax PRINT command, as the Spooler may grab the file
before INCA, and will lose it's audit file.

     Format:     VIEW  AUDIT_FILE  [editor-name]




11.2   COMPOSITE
----------------

     This modifier will summarize the output of all VIEW modifiers.

     Format:     VIEW  COMPOSITE




11.3   LOGO
-----------

     This modifier will display the INCA logo normally shown at the


                              Page 169

beginning of a session.  The user will then have an opportunity to
make a hardcopy if desired.

     Format:     VIEW  LOGO




11.4   NEWS
-----------

     This modifier will cause the current news page to be displayed.
This information is automatically displayed when you begin an INCA
session.

     Format:     VIEW  NEWS




11.5   USED_CPU_TIME
--------------------

     This modifier will cause the amount of CPU time used by the
current INCA session to be displayed.

     Format:     VIEW  USED_CPU_TIME




11.6   VERSION
--------------

     This modifier will display the current INCA version number.

     Format:     VIEW /VERSION
















                              Page 170

12   XIT
--------

     This command terminates an INCA session.  The audit file may be
printed, deleted, or printed and then deleted depending upon the
modifier.  If no modifier is given, INCA will terminate and save the
audit file.  Note that the INCA 2.0x EXIT command has been eliminated.

     Format:     XIT [modifier]




12.1   PRINT_AUDIT_FILE
-----------------------

     This modifier will cause the audit file to be spooled to the
line printer.  The file is not deleted.

     Format:     XIT  PRINT_AUDIT_FILE




12.2   DELETE_AUDIT_FILE
------------------------

     This modifier will cause the audit file to be deleted.  No
"second chance" prompt is given.  Other audit files from previous INCA
sessions will be unaffected.

     Format:     XIT  DELETE_AUDIT_FILE




12.3   BOTH_PRINT_DELETE
------------------------

     This modifier will cause the audit file to be printed and then
deleted.  No "second chance" prompt is given.  Other audit files from
previous INCA sessions will be unaffected.

     Format:     XIT  BOTH_PRINT_DELETE




12.4   SAVE_AUDIT_FILE
----------------------



                              Page 171

     This modifier will cause the audit file to be saved.  This is
the default modifier.  Other audit files from previous INCA sessions
will be unaffected.

     Format:     XIT  [SAVE_AUDIT_FILE]




12.5   REMOVE_OLD_VERSIONS
--------------------------

     This modifier will cause the audit file to be saved, but older
versions (from previous INCA sessions in the same project) will be
deleted.  INCA issues a VAX/DCL "PURGE" command to accomplish this
action.

     Format:     XIT  REMOVE_OLD_VERSIONS



































                              Page 172

13   Bibliography
-----------------

Bodley, C.S., Devers, A.D., Park, A.C. and Frisch, H.P.,"A
Digital Computer Program for the Dynamic Interaction  Simulation
of Control and Structure  (DISCOS)", NASA Technical paper 1219,
May 1978.

Brockett, R.W., "The Status of Stability Theory for Deterministic
Systems", IEEE Transactions on Automatic Control, July 1966.

Brogan, W.L, Modern Control Theory, Quantum Publishers,
New York, 1974.

Cassell, W.L.,  Linear Electric Circuits, John Wiley and Sons,
New York, 1964.

Chen, C., One-Dimensional Digital Control Processing, Markel
Dekker, Inc., New York, 1979.

Cho, Y. and Narendra, K.S. "An Off-Axis Circle Criterion for the
Stability of Feedback Systems with a Monotonic Nonlinearity",
IEEE Transactions on Automatic Control, August 1966.

D'Azzo, J.J. and Houpis, C.H., Linear Control System Analysis and
Design,  McGraw-Hill, Inc., New York, 1975.

Eveleigh, V.H., Introduction to Control System Design, McGraw-Hill, Inc.,
New York, 1972.

Franklin, G.F. and Powell, J.D., Digital Control of Dynamic Systems,
Addison-Wesley Publishing Co., Reading, Mass., 1980.

Frisch, H.P., "Pitfalls and Guidelines for the Numerical Evaluation of
Moderate-Order System Frequency Response", NASA Technical Paper #1814,
June 1981.

Frisch, H.P. and Bauer, F.H., "Modern Numerical Methods for Classical
Sampled Systems Analysis (SAMSAN Version 2) User's Guide" (Program No.
GSC-12827), COSMIC, University of Georgia, Athens, Ga., 1984.

Graham, D., and Lathrop, R.C., "The Synthesis of Optimum Transient
Response:  Criteria and Standard Forms", AIEE Trans. Part II,
November 1953.

Gupta, S.C. and Hasdorff, L., Fundamentals of Automatic Control, John
Wiley and Sons, Inc., New York, 1970.

Johnson, D.E., Johnson, J.R., and Moore, H.P., A Handbook of Active
Filters, Prentice-Hall, Inc., Englewood Cliffs, New Jersey, 1980.



                              Page 173

Kuo, B.C., Analysis and Synthesis of Sampled-Data Control Systems,
Prentice-Hall, Inc., Englewood Cliffs, New Jersey, 1963.

Kuo, B.C., Automatic Control Systems, Third Edition, Prentice-Hall, Inc.,
Englewood Cliffs, New Jersey, 1975.

MacFarlane, A.G.J., Ed., Frequency Response Methods in Control Systems,
IEEE Press & John Wiley and Sons, Inc.,  New York, 1979.

Monroe, A.J., Digital Processes for Sampled Data Systems, Wiley, N.Y.,
N.Y.,1962.

Ogata, K., Modern Control Engineering, Prentice-Hall, Englewood Cliffs,
N.J., 1970.

Saucedo, R. and Schiring, E.E., Introduction to Continuous and Digital
Control Systems, Macmillan, N.Y., 1968.

Shinners, S.M., Control System Design, Wiley, N.Y., N.Y., 1964.

Takahashi, Y., Rabins, M.J., and Auslander, D.M., Control and Dynamic
Systems, Addison-Wesley Publishing Co., Reading, Mass., 1970.

Tou, J.T., Digital and Sampled Data Control Systems, McGraw-Hill, Inc.,
New York, 1959.

Tretter, S.A, Introduction to Discrete-time Signal Processing, Wiley,
New York, 1976

Welch, Raymond P., NASA GSFC Branch Report No. 254, October 2, 1973.























                              Page 174

