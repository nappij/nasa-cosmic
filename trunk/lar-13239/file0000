      OVERLAY(LWB,0,0)                                                   USSAERO
      PROGRAM W12SC3 (OUTPUT=128,TAPE5=128,TAPE6=OUTPUT,                 USSAERO
     X TAPE7=1024,TAPE8=1024,TAPE9=1024,TAPE10=2048,TAPE11=1024,         USSAERO
     X TAPE12=1024,TAPE13=1024,TAPE14=1024,TAPE20=1024,TAPE21=1024,      USSAERO
     X TAPE22=1024,TAPE23=1024,TAPE24=1024,TAPE25=1024,TAPE26=1024,      USSAERO
     X TAPE27=1024,TAPE28=1024,TAPE29=1024,TAPE30=1024,TAPE31=1024,      SC3PLT 
     1 TAPE15=1024,TAPE16=1024,TAPE17=1024,TAPE32=1024,TAPE33=1024,      NEWSHLC
     2 TAPE34=1024,TAPE35=1024,TAPE36=1024,TAPE37=1024,TAPE38=1024,      NEWSHLC
     3 TAPE39=1024)                                                      NEWSHLC
C                                                                        USSAERO
C     *******************************************VERSION B00************ USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C      THE GRUMMAN W12/SC3 PROGRAM                                       USSAERO
C                                                                        USSAERO
C     CODE DEVELOPED FOR NASA LRC SUPERSONIC MANEUVER WING STUDY         USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C      INCLUDES  1. MIXED ANALYSIS/DESIGN AS DESCRIBED IN                USSAERO
C                   AIAA PAPER 79-0233, BY ALEX CENKO                    USSAERO
C                                                                        USSAERO
C                2. BRUCE ROSEN@S VERSION OF THE CARLSON CORRECTION      USSAERO
C                                                                        USSAERO
C                3. SC3 PANEL OPTION                                     USSAERO
C                                                                        USSAERO
C      THE PROGRAM IS BASED ON THE GRUMMAN W12 PROGRAM                   USSAERO
C      WHICH USES THE NASA USSAERO CODE BY FRANK WOODWARD AS A BASE      USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     PROGRAM USSAERO COMPUTES THE SUBSONIC AND SUPERSONIC POTENTIAL     USSAERO
C     FLOW AERODYNAMIC CHARACTERISTICS OF CANARD-WING-BODY-TAIL          USSAERO
C     CONFIGURATIONS. THE BODY IS REPRESENTED BY SOURCE PANELS AND THE   USSAERO
C     CANARD, WING, AND TAIL ARE REPRESENTED BY LINEARLY VARYING VORTEX  USSAERO
C     PANELS. THE THEORY IS DESCRIBED IN NASA CR-2228 (PART I) AND THE   USSAERO
C     COMPUTER PROGRAM IS DESCRIBED IN NASA CR-2228 (PART II).           USSAERO
C                                                                        USSAERO
C     THIS PROGRAM WAS PREPARED FOR NASA LANGLEY RESEARCH CENTER UNDER   USSAERO
C     CONTRACT NAS1-10408 BY AEROPHYSICS RESEARCH CORPORATION, BELLEVUE, USSAERO
C     WASHINGTON.                                                        USSAERO
C                                                                        USSAERO
C     THE INVESTIGATION WAS CONDUCTED BY MR. FRANK A. WOODWARD OF        USSAERO
C     ANALYTICAL METHODS, INCORPORATED, BELLEVUE, WASHINGTON. AREA CODE  USSAERO
C     206-454-6119 OR AREA CODE 206-454-6115.                            USSAERO
C                                                                        USSAERO
C     ANY ERRORS OR PROBLEMS ENCOUNTERED IN USING THE PROGRAM SHOULD BE  USSAERO
C     DIRECTED TO MR. CHARLES H. FOX, JR. AT NASA LANGLEY. AREA CODE 804 USSAERO
C     -827-3711.PROGRAM USERS ARE REQUESTED TO SUBMIT THEIR NAME AND     USSAERO
C     MAILING ADDRESS TO MR. FOX SO THAT THEY MAY BE NOTIFIED OF PROGRAM USSAERO
C     CORRECTIONS AND IMPROVEMENTS.                                      USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     A CARD DECK AND DOCUMENTATION FOR THE PROGRAM ARE AVAILABLE FROM   USSAERO
C     COSMIC, UNIVERSITY OF GEORGIA, ATHENS, GEORGIA, 30601.             USSAERO
C                                                                        USSAERO
C     THIS PROGRAM IS WRITTEN IN CDC FORTRAN IV, VERSION 2.3, TO RUN ON  USSAERO
C     CDC 6600 SERIES COMPUTERS WITH THE SCOPE 3.0 OPERATING SYSTEM AND  USSAERO
C     LIBRARY TAPE.                                                      USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     ***********************FEBRUARY 1973*******VERSION A00************ USSAERO
C                                                                        USSAERO
C     VERSION A00 IS THE BASE VERSION OF USSAERO DOCUMENTED IN NASA      USSAERO
C     CR-2228.                                                           USSAERO
C                                                                        USSAERO
C     ****************************************************************** USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     ******************SEPTEMBER 1973*****VERSION A01****************** USSAERO
C                                                                        USSAERO
C     VERSION A01 IS THE INITIAL RELEASE OF PROGRAM USSAERO TO COSMIC.   USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     NUMEROUS CORRECTIONS A01 HAVE BEEN MADE TO THE PROGRAM. THESE      USSAERO
C     CORRECTIONS HAVE ESSENTIALLY NO IMPACT ON THE DOCUMENTAION IN      USSAERO
C     NASA CR-2228 WITH THE OBVIOUS EXCEPTION OF THE PROGRAM LISTING     USSAERO
C     OF PART II.                                                        USSAERO
C                                                                        USSAERO
C     .................................................................. USSAERO
C                                                                        USSAERO
C     REVISIONS A01 HAVE BEEN MADE TO THE PROGRAM WHICH ARE NOT          USSAERO
C     DOCUMENTED IN NASA CR-2228.                                        USSAERO
C                                                                        USSAERO
C     ADDITIONAL ARGUMENTS HAVE BEEN ADDED TO THE CALLING SEQUENCES FOR  USSAERO
C     SUBROUTINES VORPAN AND PRESS.                                      USSAERO
C                                                                        USSAERO
C     FOR THE SUBSONIC CASE (PLANAR BOUNDARY CONDITION OPTION ONLY) AND  USSAERO
C     FOR THE SUPERSONIC CASE, THE PRESSURE COEFFICIENT ON THE WING,     USSAERO
C     CANARD (HORIZONTAL TAIL), AND FIN (VERTICAL TAIL) IS COMPUTED ON   USSAERO
C     THE BASIS OF EXACT LINEARIZED THEORY BUT IS NOT PERMITTED TO       USSAERO
C     EXCEED VACUUM PRESSURE COEFFICIENT.                                USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     FOR A WING OR CANARD (HORIZONTAL TAIL), AN ADDITIONAL COLUMN OF    USSAERO
C     VORTEX PANELS HAS BEEN INCLUDED WHICH EXTENDS FROM THE FUSELAGE    USSAERO
C     CENTER LINE TO THE INBOARD EDGE OF THE WING OR CANARD (HORIZONTAL  USSAERO
C     TAIL).                                                             USSAERO
C                                                                        USSAERO
C     A CONVERGENCE CRITERIA TEST HAS BEEN INCORPORATED INTO SUBROUTINE  USSAERO
C     ITRATE TO CONTROL THE ITERATIVE SOLUTION PROCEDURE. THE MAXIMUM    USSAERO
C     NUMBER OF ITERATIONS AND THE CONVERGENCE CRITERIA TEST PARAMETER   USSAERO
C     HAVE BEEN ADDED TO THE PROGRAM INPUT. EXPERIENCE HAS INDICATED     USSAERO
C     THE NEED TO FURTHER MODIFY THE SOLUTION PROCEDURE TO AN            USSAERO
C     ACCELERATED ITERATIVE SOLUTION PROCEDURE, HOWEVER NO DATE HAS BEEN USSAERO
C     ESTABLISHED FOR ACCOMPLISHING THIS IMPROVEMENT.                    USSAERO
C                                                                        USSAERO
C     A CALL TO FTNBIN HAS BEEN ADDED TO USSAERO. FTNBIN IS A SYSTEM     USSAERO
C     ROUTINE WHICH BLOCKS THE I/O OF ALL BINARY FILES. THIS             USSAERO
C     SUBSTANTIALLY IMPROVES THE EFFICIENCY OF USSAERO.                  USSAERO
C                                                                        USSAERO
C     .................................................................. USSAERO
C                                                                        USSAERO
C     VERSION A01 CONTAINS THE FOLLOWING LIMITATIONS OR KNOWN PROBLEMS.  USSAERO
C                                                                        USSAERO
C     THE PROGRAM IS INTENDED TO HANDLE 600 BODY PANELS AND 600 WING     USSAERO
C     PANELS,HOWEVER THE INPUT SPECIFIES CUTTING PLANES RATHER THAN      USSAERO
C     PANELS WHICH MAY LIMIT THE INPUT TO DEFING LESS THAN 600 PANELS.   USSAERO
C                                                                        USSAERO
C     THE PROGRAM WILL NOT HANDLE NACELLES.                              USSAERO
C                                                                        USSAERO
C     FOR THE PLANAR BOUNDARY CONDITION OPTION, THE WING, CANARD         USSAERO
C     (HORIZONTAL TAIL), AND FIN (VERTICAL TAIL) CANNOT CONTAIN DIHEDRAL USSAERO
C     (ROLL OUT) OR INCORRECT PRESSURES MAY BE CALCULATED. AS PART OF    USSAERO
C     THIS PROBLEM, A CENTER LINE FIN (VERTICAL TAIL) MAY HAVE INCORRECT USSAERO
C     PRESSURES CALCULATED ON IT.                                        USSAERO
C                                                                        USSAERO
C     THE TRAILING VORTEX SHEET FROM THE WING LEAVES THE TRAILING EDGE   USSAERO
C     IN A PLANE PARALLEL TO THE X AXIS.                                 USSAERO
C                                                                        USSAERO
C     THE NONPLANAR BOUNDARY CONDITION OPTION IS NOT AVAILABLE IN        USSAERO
C     SUPERSONIC FLOW.                                                   USSAERO
C                                                                        USSAERO
C     WING PANELS WITH SWEPT FORWARD EDGES MAY GIVE INCORRECT RESULTS IN USSAERO
C     SUPERSONIC FLOW.                                                   USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     ****************************************************************** USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     ************************DECEMBER 1974*******VERSION B00*********** USSAERO
C                                                                        USSAERO
C     VERSION B00 IS THE INITIAL PLOT VERSION OF PROGRAM USSAERO.        USSAERO
C                                                                        USSAERO
C     THE PLOTTING MODIFICATIONS TO THE PROGRAM WERE MADE BY OCTAVIO     USSAERO
C     WINTER OF THE COMPUTER SCIENCES CORPORATION LANGLEY OFFICE.        USSAERO
C                                                                        USSAERO
C     REVISIONS B00 HAVE BEEN MADE TO THE PROGRAM WHICH ARE NOT          USSAERO
C     DOCUMENTED IN NASA CR-2228.                                        USSAERO
C                                                                        USSAERO
C     THE PLOTTING PROGRAM OF NASA TMX-2074 HAS BEEN MERGED WITH PROGRAM USSAERO
C     USSAERO AND SEVERAL ADDITIONAL PLOT OPTIONS HAVE BEEN ADDED.       USSAERO
C                                                                        USSAERO
C     ONE CAN OBTAIN GEOMETRY PANELING PLOTS, SINGULARITY PANELING       USSAERO
C     PLOTS, AND PRESSURE DISTRIBUTION PLOTS.                            USSAERO
C                                                                        USSAERO
C     THE CARD INPUT HAS BEEN REVISED TO PERMIT PLOTTING.                USSAERO
C                                                                        USSAERO
C     SUBROUTINE ITRATE HAS BEEN COMPLETELY REVISED. PROFESSOR F. J.     USSAERO
C     MARSHALL OF PURDUE UNIVERSITY EXPANDED THE CAPABILITIES OF ITRATE  USSAERO
C     UNDER A GRANT FORM NASA LANGLEY. VERSION A01 OF ITRATE EMPLOYED A  USSAERO
C     BLOCKED JACOBI ITERATION. VERSION B00 OF ITRATE GIVES THE USER THE USSAERO
C     CHOICE OF EMPLOYING A BLOCKED JACOBI ITERATION, A BLOCKED GAUSS-   USSAERO
C     SEIDEL ITERATION, A BLOCKED SUCCESSIVE OVERRELAXATION ITERATION,   USSAERO
C     OR A BLOCKED CONTROLLED SUCCESSIVE OVERRELAXATION ITERATION. WHILE USSAERO
C     THE LATTER METHOD APPEARS TO YIELD THE MOST EFFICIENT SOLUTION     USSAERO
C     PROCEDURE, THE UNDERLYING MATHEMATICAL THEORY HAS NOT YET BEEN     USSAERO
C     EXPLORED RIGOROUSLY. THEREFORE THE DEFAULT METHOD USED IN THE      USSAERO
C     PROGRAM IS BLOCKED GAUSS-SEIDEL.                                   USSAERO
C                                                                        USSAERO
C     SUBROUTINE ZPARAM HAS BEEN ADDED TO THE PROGRAM. A NUMBER OF CALLS USSAERO
C     TO ZPARAM HAVE ALSO BEEN ADDED THROUGHOUT THE PROGRAM. ZPARAM      USSAERO
C     ACCESSES THE LANGLEY OPERATING SYSTEM TO DETERMINE CPU TIME,       USSAERO
C     OPERATING SYSTEM CALLS BY EACH FILE, AND COST. THESE STATISTICS    USSAERO
C     ARE WRITTEN ON THE OUTPUT FILE FOR SUBSEQUENT ANALYSIS.            USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     NUMEROUS CORRECTIONS B00 HAVE ALSO BEEN MADE TO THE PROGRAM.       USSAERO
C                                                                        USSAERO
C     THE FOLLOWING PROBLEMS IN VERSION A01 HAVE BEEN FIXED IN VERSION   USSAERO
C     B00.                                                               USSAERO
C                                                                        USSAERO
C     CORRECTIONS HAVE BEEN MADE TO PERMIT DIHEDRAL AND ROLL OUT FOR     USSAERO
C     CANARDS AND FINS AND TO CORRECTLY HANDLE A CENTERLINE FIN.         USSAERO
C                                                                        USSAERO
C     CORRECTIONS HAVE BEEN MADE TO HANDLE WINGS WITH SWEPT FORWARD      USSAERO
C     EDGES IN SUPERSONIC FLOW.                                          USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     ****************************************************************** USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP USSAERO
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17         SC3PLT 
      COMMON/BLANK/DUM(30)                                               USSAERO
      COMMON /BLANK2/ DUM2(25)                                           USSAERO
      COMMON /LWB/ LWB                                                   USSAERO
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REF(7)         USSAERO
      COMMON /POINT/ ARRAY(6000)                                         USSAERO
      COMMON /SCRAT/ BLOCK(7500)                                         USSAERO
      COMMON /HEAD/ TITLE(28)                                            USSAERO
      COMMON /ONE/ NAN2                                                  USSAERO
      COMMON /SEG/ XS(261)                                               USSAERO
      COMMON /BTHET/ TB(600)                                             USSAERO
      COMMON /NEWCOM/ K0,K1,K2,K3,K4,K5,K6,K(79)                         NEWSHLC
      COMMON /MATCOM/ MATIN                                              USSAERO
      COMMON/BODCOM/DODCOM(21)                                           USSAERO
      COMMON/VELCOM/N(5),EM,L(54),DUMMY(30)                              USSAERO
      COMMON /COMPS/ OMPS(11)                                            USSAERO
      COMMON /COMPV/ OMPV(10)                                            USSAERO
      COMMON /COEF/ OEF(400)                                             USSAERO
      COMMON /TRAN/ RAN(15)                                              USSAERO
      COMMON /FORM/ ORM(66)                                              USSAERO
      COMMON /ITERAT/ ITMAX,CCTEST,DCTEST,ITMETH,ALF1,ALF2               USSAERO
      COMMON /GRAPH/ PLOT                                                USSAERO
      COMMON /PRESS/ LUG(21)                                             USSAERO
      COMMON /SCALE/ CSC(8)                                              USSAERO
      COMMON /CONPLT/ KONPLT                                             USSAERO
      COMMON /PTYPE/ ORT,VU3,STE,PER                                     USSAERO
      COMMON /PI/ PI,RADEG,DEGRAD                                        USSAERO
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, USSAERO
     X             EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM,EPSSB1,   USSAERO
     X             EPSSB2                                                USSAERO
      COMMON/CLINE/CLUMSY(60)                                            USSAERO
C*                                                                       USSAERO
      COMMON/ TAPES / ITAPES(20)                                         USSAERO
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON / DES / CLBAR, CMBAR                                        USSAERO
      COMMON / ROWS / NWCOL, NWRPC(20)                                   USSAERO
      COMMON/ PSAVE / IFREE(600), CTFREE, CNFREE                         USSAERO
      COMMON/ NEWCAM / CAMMID(600)                                       USSAERO
      COMMON/ DESIGN / CAMBER(600)                                       USSAERO
      COMMON/ CYCLE / NEWAIC, IPREP, NDRAG1, NDRAG2, IDIR                USSAERO
      COMMON/STAR/XSTAR(3600),NSEGW                                      USSAERO
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART,IIDUM            NEWSHLC
C*                                                                       USSAERO
      COMMON /POLAR/NCASE,CDBP(10),CLBP(10),CMBP(10),CDWP(10),CLWP(10),  SC3PLT 
     XCMWP(10),ALPHAP(10),MACHP(10),NSPAN,XSPAN(20)                      SC3PLT 
C                                                                        USSAERO
      DIMENSION CARD(14)                                                 USSAERO
C                                                                        USSAERO
      EQUIVALENCE (BLOCK(1),CARD(1))                                     USSAERO
C                                                                        USSAERO
      REAL MACH                                                          USSAERO
      INTEGER PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9 USSAERO
     1,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17,FFILE     SC3PLT 
C*                                                                       USSAERO
     2,TAPE20,TAPE21,TAPE22,TAPE23,TAPE24,TAPE25                         USSAERO
     3,TAPE26,TAPE27,TAPE28,TAPE29,TAPE30                                USSAERO
      NAMELIST/AEROIN/NOPT,NXSTNS,XSTN,XAPEX,YAPEX,XLAMDA                USSAERO
C*                                                                       USSAERO
C                                                                        USSAERO
C     INITIALIZE CONSTANTS IN COMMON                                     USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     NOTE THAT COMMON/FILES/ CONTAINS THE FORTRAN INPUT/OUTPUT UNIT     USSAERO
C     NUMBERS USED IN THE PROGRAM. TAPE1, TAPE2, TAPE4, AND TAPE15 ARE   USSAERO
C     NOT USED AT PRESENT. THE PROGRAM READS INPUT FROM TAPE5 AND WRITES USSAERO
C     OUTPUT ON TAPE6. THE TEMPORARY DISK FILES ARE TAPE3, TAPE7, TAPE8, USSAERO
C     TAPE9, TAPE10, TAPE11, TAPE12, TAPE13, AND TAPE14.                 USSAERO
C                                                                        USSAERO
C                                                                        USSAERO
C     NOTE THAT COMMON/EPS/ CONTAINS EPSILON TOLERANCES WHICH ARE USED   USSAERO
C     BY VARIOUS ROUTINES THROUGHOUT THE PROGRAM. THESE EPSILONS WERE    USSAERO
C     CHOSEN FOR THE CDC6600.                                            USSAERO
C                                                                        USSAERO
      NCASE=0                                                            SC3PLT 
      KPLOT=0                                                            SC3PLT 
C                                                                        USSAERO
C     INITIALIZE PLOTTING PROCESSOR                                      USSAERO
C                                                                        USSAERO
      CALL PLOTS(IBUF,NLOC,LDEV)                                         USSAERO
C                                                                        USSAERO
      WRITE (TAPE6,110)                                                  USSAERO
      WRITE (TAPE6,140)                                                  USSAERO
      WRITE (TAPE6,120)                                                  USSAERO
C                                                                        USSAERO
C     LIST INPUT CARDS                                                   USSAERO
C                                                                        USSAERO
10    CONTINUE                                                           USSAERO
      READ (TAPE5,150) CARD                                              USSAERO
C                                                                        USSAERO
C     END OF FILE TEST ON TAPE5                                          USSAERO
C                                                                        USSAERO
      IF(EOF(TAPE5)) 30,20                                               USSAERO
20    CONTINUE                                                           USSAERO
      WRITE (TAPE6,160) CARD                                             USSAERO
      GO TO 10                                                           USSAERO
30    CONTINUE                                                           USSAERO
      WRITE (TAPE6,130)                                                  USSAERO
      WRITE (TAPE6,120)                                                  USSAERO
      REWIND TAPE5                                                       USSAERO
40    CONTINUE                                                           USSAERO
      WRITE (TAPE6,90)                                                   USSAERO
      PLOT=0                                                             USSAERO
C                                                                        USSAERO
C     INPUT CONFIGURATION GEOMETRY AND COMPUTE PANELS                    USSAERO
C                                                                        USSAERO
      CALL OVERLAY (LWB,1,0)                                             USSAERO
      NEWAIC = 0                                                         USSAERO
      IF (K2.EQ.0) GO TO 50                                              USSAERO
      READ (TAPE10) ARRAY                                                USSAERO
      WRITE (TAPE7) ARRAY                                                USSAERO
      REWIND TAPE7                                                       USSAERO
      REWIND TAPE10                                                      USSAERO
50    CONTINUE                                                           USSAERO
      REWIND TAPE3                                                       USSAERO
      REWIND TAPE8                                                       USSAERO
      REWIND TAPE13                                                      USSAERO
      PLOT=0                                                             USSAERO
      IPLOT=PLOT                                                         USSAERO
      IF (PLOT) 60,70,60                                                 USSAERO
60    CONTINUE                                                           USSAERO
      KONPLT=1                                                           USSAERO
      CALL OVERLAY (LWB,4,0)                                             USSAERO
C                                                                        USSAERO
C     INPUT MACH NUMBER AND COMPUTE AERODYNAMIC MATRIX                   USSAERO
C                                                                        USSAERO
70    CONTINUE                                                           USSAERO
C*                                                                       USSAERO
C                                                                        USSAERO
C     READ PROGRAM OPTIONS                                               USSAERO
C                                                                        NEWSHLC
C                                                                        NEWSHLC
C     PROGRAM TERMINATES IF                                              NEWSHLC
C                                                                        NEWSHLC
C     NAMELIST NOT ENCOUNTERED ( END OF FILE )                           NEWSHLC
C                                                                        NEWSHLC
C     OR                                                                 NEWSHLC
C                                                                        NEWSHLC
C     NOPT(1) ) 0                                                        NEWSHLC
C                                                                        NEWSHLC
C                                                                        USSAERO
      READ(TAPE5,AEROIN)                                                 USSAERO
      IF(EOF(TAPE5).NE.0) GO TO 85                                       SC3PLT 
      IF(NOPT(1).LT.0) GO TO 85                                          NEWSHLC
      IF(NOPT(4).EQ.2) GO TO 320                                         NEWSHLC
      IF(NOPT(1).EQ.1.AND.NOPT(2).EQ.0.AND.NOPT(6).EQ.0.AND.K6.EQ.0)     NEWSHLC
     1 GO TO 320                                                         NEWSHLC
      NOPT(4)=2                                                          NEWSHLC
      WRITE(TAPE6,300)                                                   NEWSHLC
      WRITE(TAPE6,310)                                                   NEWSHLC
300   FORMAT(1H1,//)                                                     NEWSHLC
310   FORMAT(1X,                                                         NEWSHLC
     1 54HDUE TO CHOICE OF NOPT(1), NOPT(2), NOPT(6), AND/OR K6,,        NEWSHLC
     2 //,1X,26HW12SC3 HAS SET NOPT(4) = 2,                              NEWSHLC
     3 1X,50HAND WILL USE WOODWARD I TYPE VORTEX SINGULARITIES.)         NEWSHLC
320   CONTINUE                                                           NEWSHLC
      WRITE(TAPE6,130)                                                   USSAERO
      WRITE(TAPE6,AEROIN)                                                USSAERO
      WRITE(TAPE6,130)                                                   USSAERO
      XLAMDA=XLAMDA*DEGRAD                                               USSAERO
      NSPAN=0                                                            NEWSHLC
      IF(NOPT(8).NE.0.AND.KPLOT.EQ.0) CALL PLOTS(0,0,0)                  SC3PLT 
      IF(NOPT(8).NE.0) KPLOT=1                                           SC3PLT 
      IF(NXSTNS.EQ.0) GO TO 210                                          SC3PLT 
      NSPAN=NXSTNS                                                       SC3PLT 
      DO 200 I=1,NSPAN                                                   SC3PLT 
200   XSPAN(I)=XSTN(I)                                                   SC3PLT 
210   CONTINUE                                                           SC3PLT 
C**                                                                      USSAERO
C**                                                                      USSAERO
      CALL OVERLAY (LWB,2,0)                                             USSAERO
C                                                                        USSAERO
C     A NEGATIVE MACH NUMBER IS USED TO TERMINATE MACH NUMBER AND ANGLE  USSAERO
C     OF ATTACK CASES FOR A GIVEN GEOMETRY                               USSAERO
C                                                                        USSAERO
      IF (MACH.LT.0.) GO TO 40                                           USSAERO
C*                                                                       USSAERO
      DO 75 I = 1, NWING                                                 USSAERO
   75 IFREE(I) = 1                                                       USSAERO
C                                                                        USSAERO
C     CALCULATE CAMBER FOR MINIMUM DRAG                                  USSAERO
C                                                                        USSAERO
      CALL WINGS(1)                                                      NEWSHLC
      IF(NPTSNS.NE.0) CALL WINGS(3)                                      NEWSHLC
      CALL OVERLAY(LWB,5,0)                                              USSAERO
C*                                                                       USSAERO
      WRITE (TAPE6,100)                                                  USSAERO
C                                                                        USSAERO
C     SOLVE RESULTING MATRIX EQUATIONS AND                               USSAERO
C     COMPUTE PRESSURES, FORCES, AND MOMENTS                             USSAERO
C                                                                        USSAERO
      CALL OVERLAY (LWB,3,0)                                             USSAERO
C*                                                                       SC3PLT 
C*                                                                       SC3PLT 
 86   CONTINUE                                                           SC3PLT 
      IF(NOPT(8).EQ.0) GO TO 76                                          SC3PLT 
      CALL SMPLOT                                                        SC3PLT 
 76   CONTINUE                                                           SC3PLT 
      IF (IPLOT) 80,70,80                                                USSAERO
80    CONTINUE                                                           USSAERO
      KONPLT=1                                                           USSAERO
      CALL OVERLAY (LWB,4,0)                                             USSAERO
      GO TO 70                                                           USSAERO
C                                                                        USSAERO
85    CONTINUE                                                           SC3PLT 
      IF(KPLOT.NE.0) CALL PLOTE                                          SC3PLT 
      STOP                                                               SC3PLT 
C                                                                        USSAERO
90    FORMAT (1H1,20X,25HBEGIN A NEW CONFIGURATION)                      USSAERO
100   FORMAT (1H1,20X,16HBEGIN A NEW CASE)                               USSAERO
  110 FORMAT(1H1,10X,23HGRUMMAN W12/SC3 PROGRAM ,35X,                    USSAERO
     1 9HSEPT 1980   //)                                                 USSAERO
120   FORMAT (10X,80H000000000111111111122222222223333333333444444444455 USSAERO
     155555555666666666677777777778/10X,80H12345678901234567890123456789 USSAERO
     2012345678901234567890123456789012345678901234567890//)             USSAERO
130   FORMAT (//)                                                        USSAERO
140   FORMAT (1H0,25X,19HLIST OF INPUT CARDS//)                          USSAERO
150   FORMAT (13A6,A2)                                                   USSAERO
160   FORMAT (10X,13A6,A2)                                               USSAERO
C*                                                                       USSAERO
  170 FORMAT(10I5)                                                       USSAERO
C*                                                                       USSAERO
      END                                                                USSAERO
       SUBROUTINE SMPLOT                                                 SMPLOT 
C*********************************************************************** SMPLOT 
C*                                                                     * SMPLOT 
C*        THIS ROUTINE IS FOR THE W12SC3 CDC BATCH SYSTEM.             * SMPLOT 
C*        THIS PROGRAM IS CAPABLE OF PLOTTING PRESSURE                 * SMPLOT 
C*        COEFFICIENTS IN THE SPANWISE + CHORDWISE DIRECTION           * SMPLOT 
C*        FOR ISOLATED WINGS AND BODIES AS WELL AS WING/BODY           * SMPLOT 
C*        COMBINATIONS. IT CAN ALSO PLOT FORCE + MOMENT                * SMPLOT 
C*        COEFFICIENTS.                                                * SMPLOT 
C*                                                                     * SMPLOT 
C*        THE OPTIONS ARE DEFINED AS FOLLOWS%                          * SMPLOT 
C*                                                                     * SMPLOT 
C*                WING-CHORD  WING-SPAN  WING-BODY FORCES AND          * SMPLOT 
C*        NOPT(8) BODY-RADIAL BODY-AXIAL SPANWISE   MOMENTS            * SMPLOT 
C*        ******* *********** ********** ********* **********          * SMPLOT 
C*                                                                     * SMPLOT 
C*             0       NO         NO         NO        NO              * SMPLOT 
C*             1      YES         NO         NO        NO              * SMPLOT 
C*            10       NO        YES         NO        NO              * SMPLOT 
C*            11      YES        YES         NO        NO              * SMPLOT 
C*           100       NO         NO        YES        NO              * SMPLOT 
C*           101      YES         NO        YES        NO              * SMPLOT 
C*           110       NO        YES        YES        NO              * SMPLOT 
C*           111      YES        YES        YES        NO              * SMPLOT 
C*          1000       NO         NO         NO       YES              * SMPLOT 
C*          1001      YES         NO         NO       YES              * SMPLOT 
C*          1010       NO        YES         NO       YES              * SMPLOT 
C*          1011      YES        YES         NO       YES              * SMPLOT 
C*          1100       NO         NO        YES       YES              * SMPLOT 
C*          1101      YES         NO        YES       YES              * SMPLOT 
C*          1110       NO        YES        YES       YES              * SMPLOT 
C*          1111      YES        YES        YES       YES              * SMPLOT 
C*                                                                     * SMPLOT 
C*                          CODE WRITTEN BY JOE LAIOSA  10/80          * SMPLOT 
C*                          CODE REVISED BY BRUCE ROSEN  8/81          * SMPLOT 
C*                                                                     * SMPLOT 
C*                                                                     * SMPLOT 
C*********************************************************************** SMPLOT 
C                                                                        SMPLOT 
C                                                                        SMPLOT 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP SMPLOT 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17         SMPLOT 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA,REFB,REFC SMPLOT 
     1,REFD,REFL,REFX,REFZ                                               SMPLOT 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR SMPLOT 
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  SMPLOT 
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EM,PRINT,NWTHK,NWBLOK, SMPLOT 
     1NWROW(20),NBBLOK,NBROW(60)                                         SMPLOT 
      COMMON/NEWCOM/K0,K1,K2,K3,K4,K5,K6,KWAF,KWAFOR,KFUS,KRADX(4),      SMPLOT 
     1              KFORX(4),KF(6),KFINOR(6),KAN(6),KANOR(6),KRAD,MAX,   SMPLOT 
     1              KOL,NCPT,LOCPT(20),XCPT(20)                          SMPLOT 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BT(20),DUM(6 SMPLOT 
     10),BL(20)                                                          SMPLOT 
      COMMON /MATCOM/ MATIN                                              SMPLOT 
      COMMON /OPTION/ NOPT(10)                                           SMPLOT 
      COMMON /POLAR/NCASE,CDBP(10),CLBP(10),CMBP(10),CDWP(10),CLWP(10),  SMPLOT 
     XCMWP(10),ALPHAP(10),MACHP(10),NSPAN,XSPAN(20)                      SMPLOT 
       COMMON /PI/ PI,RADEG,DEGRAD                                       SMPLOT 
      COMMON /HEAD/TITLE1(14),TITLE2(14)                                 SMPLOT 
      COMMON/JSCALE/XSCALE,YSCALE,TSCALE                                 SMPLOT 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NEWSHLC
C                                                                        SMPLOT 
      DIMENSION CP(62),XP(32),YP(62),ZP(32),XQ(32),YQ(32),ZQ(32),CPSP(62 SMPLOT 
     ,),THETA(32),BUFFER(512),R(22),JSP(32),XQA(32),YSP(32),JM(32),A(30) SMPLOT 
     ,,YS(62),CPSAVE(32),IS(32),CL(12),CM(12),CD(12),B(30),ALP(10),      SMPLOT 
     ,ZSP(32),JKAN(6),JKANOR(6)                                          SMPLOT 
      REAL MACH                                                          SMPLOT 
      LOGICAL LBC,SUB,SUPLE,SUPTE,THK                                    SMPLOT 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE SMPLOT 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,FFILE,TAPE16,TAPE17,COMPT    SMPLOT 
C                                                                        SMPLOT 
      REWIND TAPE15                                                      SMPLOT 
      REWIND TAPE16                                                      SMPLOT 
      REWIND TAPE17                                                      SMPLOT 
      CALL WINGS(1)                                                      NEWSHLC
      C=3.5                                                              SMPLOT 
      D=3.5                                                              SMPLOT 
      CPM1=.3                                                            SMPLOT 
      CPM2=-.4                                                           SMPLOT 
      YSCALE=10.                                                         SMPLOT 
      XSCALE=5.                                                          SMPLOT 
      ASCALE=.5                                                          SMPLOT 
      TSCALE=1./36.                                                      SMPLOT 
      TOL=1.E-6                                                          SMPLOT 
      KWP=0                                                              SMPLOT 
      NCP=0                                                              SMPLOT 
      NWD1=0                                                             SMPLOT 
      NWD2=0                                                             SMPLOT 
      NCD1=0                                                             SMPLOT 
      NCD2=0                                                             SMPLOT 
      IF(NWING.EQ.0) GO TO 6                                             SMPLOT 
      IF(J1.EQ.0) GO TO 8                                                SMPLOT 
      NWD1=NWAF-1                                                        SMPLOT 
      NWD2=IABS(NWAFOR)-1                                                SMPLOT 
      IF(KWAF.NE.0) NWD1=KWAF-1                                          SMPLOT 
      IF(KWAFOR.NE.0) NWD2=KWAFOR-1                                      SMPLOT 
      KWP=NWD1*NWD2                                                      SMPLOT 
 8    CONTINUE                                                           SMPLOT 
      IF(J5.EQ.0) GO TO 7                                                SMPLOT 
      NCD1=NCAN                                                          SMPLOT 
      NCD2=IABS(NCANOR)-1                                                SMPLOT 
      IF(K5.EQ.0) GO TO 7                                                SMPLOT 
      NS1=0                                                              SMPLOT 
      NS2=0                                                              SMPLOT 
      DO 9 I=1,NCAN                                                      SMPLOT 
      JKAN(I)=NCD1                                                       SMPLOT 
      JKANOR(I)=NCD2                                                     SMPLOT 
      IF(IABS(KAN(I)).NE.0) JKAN(I)=IABS(KAN(I))-1                       SMPLOT 
      IF(KANOR(I).NE.0) JKANOR(I)=KANOR(I)-1                             SMPLOT 
      NS1=NS1+JKAN(I)                                                    SMPLOT 
      NS2=NS2+JKANOR(I)                                                  SMPLOT 
 9    CONTINUE                                                           SMPLOT 
      NCD1=NS1                                                           SMPLOT 
      NCD2=NS2                                                           SMPLOT 
      NCP=NCD1*NCD2                                                      SMPLOT 
 7    CONTINUE                                                           SMPLOT 
      NWP=NCP+KWP                                                        SMPLOT 
 6    CONTINUE                                                           SMPLOT 
      CALL PLOT(3.,0.,-3)                                                SMPLOT 
      IF((NOPT(8)+1)/2*2.NE.NOPT(8)+1) GO TO 410                         SMPLOT 
      IF(NBODY.EQ.0) GO TO 410                                           SMPLOT 
      READ (TAPE15) NP,NPASS,COMPT                                       SMPLOT 
C*******     BODY PLOTTING SECTION  ***********                          SMPLOT 
      DO 321 IF=1,KFUS                                                   SMPLOT 
      NMAXB=NFORX(IF)-1                                                  SMPLOT 
      IF(KFORX(IF).NE.0) NMAXB=KFORX(IF)-1                               SMPLOT 
      MMAXB=NRADX(IF)-1                                                  SMPLOT 
      IF(IABS(KRADX(IF)).NE.0) MMAXB=IABS(KRADX(IF))-1                   SMPLOT 
      NB=NMAXB*MMAXB                                                     SMPLOT 
      DO 25 J=1,NMAXB                                                    SMPLOT 
      IE=0                                                               SMPLOT 
      DO 26 I=1,MMAXB                                                    SMPLOT 
      READ(TAPE15) XP(I),YP(I),ZP(I),CP(I),XQ(I),YQ(I),ZQ(I)             SMPLOT 
      IF(CP(I).GT.CPM1)CP(I)=CPM1                                        SMPLOT 
      IF(CP(I).LT.CPM2)CP(I)=CPM2                                        SMPLOT 
      IPASS=0                                                            SMPLOT 
      IF(CP(I).EQ.CPM1.OR.CP(I).EQ.CPM2) IPASS=1                         SMPLOT 
      IF(IPASS.EQ.0) GO TO 160                                           SMPLOT 
      IE=IE+1                                                            SMPLOT 
      A(IE)=(PI/2.+ATAN2(ZP(I),YP(I)))*TSCALE*RADEG                      SMPLOT 
      B(IE)=CP(I)*(-YSCALE)                                              SMPLOT 
 160  CONTINUE                                                           SMPLOT 
 26   CONTINUE                                                           SMPLOT 
      CP(MMAXB+1)=0.0                                                    SMPLOT 
      CP(MMAXB+2)=-1./YSCALE                                             SMPLOT 
      THETA(MMAXB+1)=0.0                                                 SMPLOT 
      THETA(MMAXB+2)=1./TSCALE                                           SMPLOT 
      DO 10 K=1,MMAXB                                                    SMPLOT 
      THETA(K)= PI/2.+ATAN2(ZP(K),YP(K))                                 SMPLOT 
 10   THETA(K)=THETA(K)*RADEG                                            SMPLOT 
      CALL AXIS(1.,1.,2HCP,2,7.,90.,0.3,-0.1)                            SMPLOT 
      CALL AXIS(1.5,4.,5HTHETA,-5,5.,0.,0.,36.)                          SMPLOT 
      CALL SYMBOL(1.,8.8,.15,34H BODY RADIAL PRESSURE DISTRIBUTION,0.,   SMPLOT 
     ,34)                                                                SMPLOT 
C     CALL JGRID(0.,0.,0.2,-0.1,5.,7.,6,8)                               SMPLOT 
      CALL W12HED(NMAXB,MMAXB,NB,XP(1),1)                                SMPLOT 
      CALL LORGN(1.5,4.)                                                 SMPLOT 
      CALL LINE (THETA,CP,MMAXB,1,1,3)                                   SMPLOT 
      IF(IE.EQ.0) GO TO 161                                              SMPLOT 
      DO 190 IP=1,IE                                                     SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 190  CONTINUE                                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 161  CONTINUE                                                           SMPLOT 
      CALL LORGN (-1.5,-4.)                                              SMPLOT 
      CALL PLOT(8.5,0.,-3)                                               SMPLOT 
 25   CONTINUE                                                           SMPLOT 
 30   CONTINUE                                                           SMPLOT 
321   CONTINUE                                                           SMPLOT 
      REWIND TAPE15                                                      SMPLOT 
410   CONTINUE                                                           SMPLOT 
      IF((NOPT(8)/10+1)/2*2.NE.NOPT(8)/10+1) GO TO 50                    SMPLOT 
      IF(NBODY.EQ.0) GO TO 50                                            SMPLOT 
C**** BODY AXIAL PLOTS *******                                           SMPLOT 
      DO 322 IZ=1,KFUS                                                   SMPLOT 
      NMAXB=NFORX(IZ)-1                                                  SMPLOT 
      IF(KFORX(IZ).NE.0) NMAXB=KFORX(IZ)-1                               SMPLOT 
      MMAXB=NRADX(IZ)-1                                                  SMPLOT 
      IF(IABS(KRADX(IZ)).NE.0) MMAXB=IABS(KRADX(IZ))-1                   SMPLOT 
      NB=NMAXB*MMAXB                                                     SMPLOT 
      DO 320 I=1,MMAXB                                                   SMPLOT 
      REWIND TAPE15                                                      SMPLOT 
      READ(TAPE15)ND1,ND2,ND3                                            SMPLOT 
      IE=0                                                               SMPLOT 
      DO 305 J=1,NMAXB                                                   SMPLOT 
      DO 310 L=1,MMAXB                                                   SMPLOT 
      READ(TAPE15)XP(L),YP(L),ZP(L),CP(L),XQ(L),YQ(L),ZQ(L)              SMPLOT 
 310  CONTINUE                                                           SMPLOT 
      CPSP(J)=CP(I)                                                      SMPLOT 
      XQA(J)=XQ(I)                                                       SMPLOT 
      IF(CPSP(J).GT.CPM1)CPSP(J)=CPM1                                    SMPLOT 
      IF(CPSP(J).LT.CPM2)CPSP(J)=CPM2                                    SMPLOT 
      IPASS=0                                                            SMPLOT 
      IF(CPSP(J).EQ.CPM1.OR.CPSP(J).EQ.CPM2) IPASS=1                     SMPLOT 
      IF(IPASS.EQ.0) GO TO 163                                           SMPLOT 
      IE=IE+1                                                            SMPLOT 
      A(IE)=XQA(J)*XSCALE                                                SMPLOT 
      B(IE)=CPSP(J)*(-YSCALE)                                            SMPLOT 
 163  CONTINUE                                                           SMPLOT 
      THET=(PI/2. + ATAN2(ZP(I),YP(I)))*RADEG                            SMPLOT 
 305  CONTINUE                                                           SMPLOT 
      CPSP(NMAXB+1)=0.0                                                  SMPLOT 
      CPSP(NMAXB+2)=-1./YSCALE                                           SMPLOT 
      XQA(NMAXB+1)=0.0                                                   SMPLOT 
      XQA(NMAXB+2)=1./XSCALE                                             SMPLOT 
      CALL AXIS(1.,1.,2HCP,2,7.,90.,0.3,-0.1)                            SMPLOT 
      CALL AXIS(1.5,4.,3HX/L,-3,5.,0.,0.,0.2)                            SMPLOT 
      CALL SYMBOL(1.,8.8,.15,33H BODY AXIAL PRESSURE DISTRIBUTION,0.,    SMPLOT 
     ,33)                                                                SMPLOT 
C     CALL JGRID(0.,0.,0.2,-0.1,5.,7.,6,8)                               SMPLOT 
      CALL W12HED(NMAXB,MMAXB,NB,THET,3)                                 SMPLOT 
      CALL LORGN (1.5,4.)                                                SMPLOT 
      CALL LINE (XQA,CPSP,NMAXB,1,1,3)                                   SMPLOT 
      IF(IE.EQ.0) GO TO 164                                              SMPLOT 
      DO 191 IP=1,IE                                                     SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 191  CONTINUE                                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 164  CONTINUE                                                           SMPLOT 
      CALL LORGN (-1.5,-4.)                                              SMPLOT 
      CALL PLOT(8.5,0.,-3)                                               SMPLOT 
 320  CONTINUE                                                           SMPLOT 
 322  CONTINUE                                                           SMPLOT 
 50   CONTINUE                                                           SMPLOT 
      REWIND TAPE15                                                      SMPLOT 
      IF((NOPT(8)+1)/2*2.NE.NOPT(8)+1) GO TO 102                         SMPLOT 
      IF(NWING.EQ.0) GO TO 102                                           SMPLOT 
C***********    WING PLOTTING SECTION   ************                     SMPLOT 
C************    WING CHORDWISE PLOTS    **********                      SMPLOT 
      READ(TAPE16) ND1,ND2,ND3                                           SMPLOT 
      READ(TAPE17) ND1,ND2,ND3                                           SMPLOT 
      IPT=0                                                              SMPLOT 
      ICAN=1                                                             SMPLOT 
      NPLUS=NWD1                                                         SMPLOT 
      DO 101 IN=1,NSEG                                                   SMPLOT 
      NMAXW=NCOL(IN)                                                     SMPLOT 
      MMAXW=NROW(IN)                                                     SMPLOT 
      IF(LOCPT(IN).NE.0) MMAXW=MMAXW+1                                   SMPLOT 
      DO 100 J=1,NMAXW                                                   SMPLOT 
      IPT=IPT+1                                                          SMPLOT 
      CALL AXIS(1.5,4.,3HX/C,-3,5.,0.,0.,0.2)                            SMPLOT 
      CALL AXIS(1.,1.,2HCP,2,7.,90.,0.3,-0.1)                            SMPLOT 
      CALL SYMBOL(1.,8.8,.15,37H WING CHORDWISE PRESSURE DISTRIBUTION,   SMPLOT 
     ,0.,37)                                                             SMPLOT 
C     CALL JGRID(0.,0.,.2,-0.1,5.,7.,6,8)                                SMPLOT 
      CALL LORGN(1.5,4.)                                                 SMPLOT 
      IE=0                                                               SMPLOT 
      DO 27 I=1,MMAXW                                                    SMPLOT 
      READ(TAPE16)  XP(I),YP(I),XQ(I),CP(I),ZP(I)                        SMPLOT 
      IF(CP(I).GT.CPM1) CP(I)=CPM1                                       SMPLOT 
      IF(CP(I).LT.CPM2) CP(I)=CPM2                                       SMPLOT 
      IPASS=0                                                            SMPLOT 
      IF(CP(I).EQ.CPM1.OR.CP(I).EQ.CPM2) IPASS=1                         SMPLOT 
      IF(IPASS.EQ.0) GO TO 165                                           SMPLOT 
      IE=IE+1                                                            SMPLOT 
      A(IE)=XQ(I)*XSCALE                                                 SMPLOT 
      B(IE)=CP(I)*(-YSCALE)                                              SMPLOT 
 165  CONTINUE                                                           SMPLOT 
 27   CONTINUE                                                           SMPLOT 
      CP(MMAXW+1)=0.0                                                    SMPLOT 
      CP(MMAXW+2)=-1./YSCALE                                             SMPLOT 
      XQ(MMAXW+1)=0.0                                                    SMPLOT 
      XQ(MMAXW+2)=1./XSCALE                                              SMPLOT 
 60   CALL LINE(XQ,CP,MMAXW,1,1,3)                                       SMPLOT 
      IDONE=0                                                            SMPLOT 
      IF(IE.EQ.0) GO TO 162                                              SMPLOT 
      DO 192 IP=1,IE                                                     SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 192  CONTINUE                                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
      IDONE=1                                                            SMPLOT 
 162  CONTINUE                                                           SMPLOT 
      IE=0                                                               SMPLOT 
      DO 28 I=1,MMAXW                                                    SMPLOT 
      READ(TAPE17)  XP(I),YP(I),XQ(I),CP(I),ZP(I)                        SMPLOT 
      IF(CP(I).GT.CPM1) CP(I)=CPM1                                       SMPLOT 
      IF(CP(I).LT.CPM2) CP(I)=CPM2                                       SMPLOT 
      IPASS=0                                                            SMPLOT 
      IF(CP(I).EQ.CPM1.OR.CP(I).EQ.CPM2) IPASS=1                         SMPLOT 
      IF(IPASS.EQ.0) GO TO 202                                           SMPLOT 
      IE=IE+1                                                            SMPLOT 
      A(IE)=XQ(I)*XSCALE                                                 SMPLOT 
      B(IE)=CP(I)*(-YSCALE)                                              SMPLOT 
 202  CONTINUE                                                           SMPLOT 
 28   CONTINUE                                                           SMPLOT 
      CP(MMAXW+1)=0.0                                                    SMPLOT 
      CP(MMAXW+2)=-1./YSCALE                                             SMPLOT 
      XQ(MMAXW+1)=0.0                                                    SMPLOT 
      XQ(MMAXW+2)=1./XSCALE                                              SMPLOT 
 70   CALL LINE (XQ,CP,MMAXW,1,1,4)                                      SMPLOT 
      IF(IE.EQ.0) GO TO 203                                              SMPLOT 
      DO 199 IP=1,IE                                                     SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 199  CONTINUE                                                           SMPLOT 
      IF(IDONE.EQ.1) GO TO 203                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 203  CONTINUE                                                           SMPLOT 
      CALL LORGN(-1.5,-4.)                                               SMPLOT 
      NPP=NWD1                                                           SMPLOT 
      MPP=NWD2                                                           SMPLOT 
      NWT=KWP                                                            SMPLOT 
      IF(IPT.LE.NWD1) CALL SYMBOL(3.25,8.15,.1,4HWING,0.,4)              SMPLOT 
      IF(NCAN.EQ.0) GO TO 106                                            SMPLOT 
      IF(IPT.LE.NWD1) GO TO 106                                          SMPLOT 
      IF((IPT-NPLUS).LE.JKAN(ICAN)) GO TO 108                            SMPLOT 
      NPLUS=NPLUS+JKAN(ICAN)                                             SMPLOT 
      ICAN=ICAN+1                                                        SMPLOT 
108   CONTINUE                                                           SMPLOT 
      TN=ICAN                                                            SMPLOT 
      MPP=JKANOR(ICAN)                                                   SMPLOT 
      NPP=JKAN(ICAN)                                                     SMPLOT 
      NWT=MPP*NPP                                                        SMPLOT 
      CALL SYMBOL(3.0,8.15,.1,10HCANARD NO.,0.,10)                       SMPLOT 
      CALL NUMBER(4.1,8.15,.1,TN,0.,-1)                                  SMPLOT 
 106  CONTINUE                                                           SMPLOT 
      CALL W12HED(NPP,MPP,NWT,YP(1),2)                                   SMPLOT 
      CALL PLOT(8.5,0.,-3)                                               SMPLOT 
 100  CONTINUE                                                           SMPLOT 
 101  CONTINUE                                                           SMPLOT 
 102  CONTINUE                                                           SMPLOT 
      REWIND TAPE16                                                      SMPLOT 
      REWIND TAPE17                                                      SMPLOT 
      IF((NOPT(8)/10+1)/2*2.NE.NOPT(8)/10+1) GO TO 200                   SMPLOT 
      IF(NWING.EQ.0) GO TO 200                                           SMPLOT 
      IF(NSPAN.EQ.0) GO TO 200                                           NEWSHLC
C***** WING SPANWISE PLOTS/CROSS PLOT *****                              SMPLOT 
      DO 355 L=1,NSPAN                                                   SMPLOT 
      JJ=0                                                               SMPLOT 
      JPLACE=0                                                           SMPLOT 
      REWIND TAPE16                                                      SMPLOT 
      REWIND TAPE17                                                      SMPLOT 
      READ(TAPE16) ND1,ND2,ND3                                           SMPLOT 
      READ(TAPE17) ND1,ND2,ND3                                           SMPLOT 
      IPT=0                                                              SMPLOT 
      DO 340 IN=1,NSEG                                                   SMPLOT 
      JS=0                                                               SMPLOT 
      NMAXW=NCOL(IN)                                                     SMPLOT 
      MMAXW=NROW(IN)                                                     SMPLOT 
      IF(LOCPT(IN).NE.0) MMAXW=MMAXW+1                                   SMPLOT 
      DO 340 I=1,NMAXW                                                   SMPLOT 
      IF(IN.GT.NSEGWT) GO TO 340                                         NEWSHLC
      JS=0                                                               SMPLOT 
      DO 331 II=1,MMAXW                                                  SMPLOT 
      READ(TAPE16) XP(II),YP(II),XQ(II),CP(II),ZP(II)                    SMPLOT 
 331  CONTINUE                                                           SMPLOT 
      ID=MMAXW/2                                                         SMPLOT 
      DIFF=ABS(XP(ID)-XP(ID-1))*2.0                                      SMPLOT 
      DO 335 J=1,MMAXW                                                   SMPLOT 
      IPT=IPT+1                                                          SMPLOT 
      DELN=ABS(XP(J)-XSPAN(L))                                           SMPLOT 
      IF(J.EQ.1)DELO=DELN                                                SMPLOT 
      IF(J.EQ.1) GO TO 330                                               SMPLOT 
      IF(DELN.GT.DELO) GO TO 330                                         SMPLOT 
      DELO=DELN                                                          SMPLOT 
      JS=J                                                               SMPLOT 
 330  CONTINUE                                                           SMPLOT 
 335  CONTINUE                                                           SMPLOT 
      IF(JS.EQ.0) JS=1                                                   SMPLOT 
      IF(DELO.GT.DIFF) GO TO 44                                          SMPLOT 
      JJ=JJ+1                                                            SMPLOT 
      JSP(JJ)=JS                                                         SMPLOT 
      IS(JJ)=I                                                           SMPLOT 
      CPSP(JJ)=CP(JS)                                                    SMPLOT 
      YSP(JJ)=YP(JS)                                                     SMPLOT 
 44   CONTINUE                                                           SMPLOT 
 340  CONTINUE                                                           SMPLOT 
      IF(JJ.EQ.0)GO TO 355                                               SMPLOT 
      CALL AXIS(1.,1.,2HCP,2,7.,90.,0.3,-0.1)                            SMPLOT 
      CALL AXIS(1.5,4.,4H2Y/B,-4,5.,0.,0.,.2)                            SMPLOT 
      CALL SYMBOL(1.,8.8,.15,36H WING SPANWISE PRESSURE DISTRIBUTION,    SMPLOT 
     ,0.,36)                                                             SMPLOT 
      MW=NWD2+NCD2                                                       SMPLOT 
      NWW=NWD1+NCD1                                                      SMPLOT 
      NWT=KWP                                                            SMPLOT 
C     CALL JGRID(0.,0.,0.2,-0.1,5.,7.,6,8)                               SMPLOT 
      CALL W12HED(NWW,MW,NWT,XSPAN(L),1)                                 SMPLOT 
      CALL LORGN (1.5,4.)                                                SMPLOT 
      IE=0                                                               SMPLOT 
      DO 550 J=1,JJ                                                      SMPLOT 
      YS(J)=YSP(J)                                                       SMPLOT 
      YSP(J)=YSP(J)/REFB                                                 SMPLOT 
      IF(CPSP(J).GT.CPM1) CPSP(J)=CPM1                                   SMPLOT 
      IF(CPSP(J).LT.CPM2) CPSP(J)=CPM2                                   SMPLOT 
      IPASS=0                                                            SMPLOT 
      IF(CPSP(J).EQ.CPM1.OR.CPSP(J).EQ.CPM2) IPASS=1                     SMPLOT 
      IF(IPASS.EQ.0) GO TO 166                                           SMPLOT 
      IE=IE+1                                                            SMPLOT 
      A(IE)=YSP(J)*XSCALE                                                SMPLOT 
      B(IE)=CPSP(J)*(-YSCALE)                                            SMPLOT 
 166  CONTINUE                                                           SMPLOT 
 500  FORMAT(1H1)                                                        SMPLOT 
 501  FORMAT(5X,23HWING SPANWISE PRESSURES,2X,23HAT AXIAL POSITION OF X= SMPLOT 
     ,,F10.5,//)                                                         SMPLOT 
 502  FORMAT(5X,13HUPPER SURFACE,/)                                      SMPLOT 
 503  FORMAT(26X,1HY,18X,4H2Y/B,17X,2HCP,/)                              SMPLOT 
 504  FORMAT(10X,3F20.5)                                                 SMPLOT 
 550  CONTINUE                                                           SMPLOT 
      CPSP(JJ+1)=0.0                                                     SMPLOT 
      CPSP(JJ+2)=-1./YSCALE                                              SMPLOT 
      YSP(JJ+1)=0.0                                                      SMPLOT 
      YSP(JJ+2)=1./XSCALE                                                SMPLOT 
      CALL LINE (YSP,CPSP,JJ,1,1,3)                                      SMPLOT 
      IDONE=0                                                            SMPLOT 
      IF(IE.EQ.0) GO TO 141                                              SMPLOT 
      DO 140 IP=1,IE                                                     SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 140  CONTINUE                                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 141  CONTINUE                                                           SMPLOT 
      IB=1                                                               SMPLOT 
      DO 62 IN=1,NSEG                                                    SMPLOT 
      NMAXW=NCOL(IN)                                                     SMPLOT 
      MMAXW=NROW(IN)                                                     SMPLOT 
      IF(LOCPT(IN).NE.0) MMAXW=MMAXW+1                                   SMPLOT 
      DO 62 JK=1,NMAXW                                                   SMPLOT 
      IF(IN.GT.NSEGWT) GO TO 62                                          NEWSHLC
      DO 63 JB=1,MMAXW                                                   SMPLOT 
      READ(TAPE17) XP(JBB),YP(JB),XQ(JB),CP(JB),ZP(H)                    SMPLOT 
 63   CONTINUE                                                           SMPLOT 
      IF(IB.GT.JJ) GO TO 47                                              SMPLOT 
      IF(JK.NE.IS(IB)) GO TO 47                                          SMPLOT 
      CPSP(IB)=CP(JSP(IB))                                               SMPLOT 
      IB=IB+1                                                            SMPLOT 
 47   CONTINUE                                                           SMPLOT 
 62   CONTINUE                                                           SMPLOT 
      IE=0                                                               SMPLOT 
      DO 551 J=1,JJ                                                      SMPLOT 
      IF(CPSP(J).GT.CPM1) CPSP(J)=CPM1                                   SMPLOT 
      IF(CPSP(J).LT.CPM2) CPSP(J)=CPM2                                   SMPLOT 
      IPASS=0                                                            SMPLOT 
      IF(CPSP(J).EQ.CPM1.OR.CPSP(J).EQ.CPM2) IPASS=1                     SMPLOT 
      IF(IPASS.EQ.0) GO TO 167                                           SMPLOT 
      IE=IE+1                                                            SMPLOT 
      A(IE)=YSP(J)*XSCALE                                                SMPLOT 
      B(IE)=CPSP(J)*(-YSCALE)                                            SMPLOT 
 167  CONTINUE                                                           SMPLOT 
 505  FORMAT(5X,13HLOWER SURFACE,/)                                      SMPLOT 
 551  CONTINUE                                                           SMPLOT 
      CPSP(JJ+1)=0.0                                                     SMPLOT 
      CPSP(JJ+2)=-1./YSCALE                                              SMPLOT 
      CALL LINE(YSP,CPSP,JJ,1,1,4)                                       SMPLOT 
      IF(IE.EQ.0) GO TO 168                                              SMPLOT 
      DO 193 IP=1,IE                                                     SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 193  CONTINUE                                                           SMPLOT 
      IF(IDONE.EQ.1) GO TO 168                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 168  CONTINUE                                                           SMPLOT 
      CALL LORGN(-1.5,-4.)                                               SMPLOT 
      CALL PLOT(8.5,0.,-3)                                               SMPLOT 
 355  CONTINUE                                                           SMPLOT 
 200  CONTINUE                                                           SMPLOT 
      REWIND TAPE16                                                      SMPLOT 
      REWIND TAPE17                                                      SMPLOT 
      IF((NOPT(8)/100+1)/2*2.NE.NOPT(8)/100+1) GO TO 201                 SMPLOT 
      IF(NBODY.EQ.0.OR.NWING.EQ.0) GO TO 201                             SMPLOT 
      IF(NSPAN.EQ.0) GO TO 201                                           NEWSHLC
C***** WING/BODY SPANWISE PLOTS/CROSS PLOT *****                         SMPLOT 
      DO 611 L=1,NSPAN                                                   SMPLOT 
      JJ=0                                                               SMPLOT 
      REWIND TAPE15                                                      SMPLOT 
      REWIND TAPE16                                                      SMPLOT 
      REWIND TAPE17                                                      SMPLOT 
      READ(TAPE15) ND1,ND2,ND3                                           SMPLOT 
      READ(TAPE16) ND1,ND2,ND3                                           SMPLOT 
      READ(TAPE17) ND1,ND2,ND3                                           SMPLOT 
      DO 701 IF=1,KFUS                                                   SMPLOT 
      NMAXB=NFORX(IF)-1                                                  SMPLOT 
      IF(KFORX(IF).NE.0) NMAXB=KFORX(IF)-1                               SMPLOT 
      MMAXB=NRADX(IF)-1                                                  SMPLOT 
      IF(IABS(KRADX(IF)).NE.0) MMAXB=IABS(KRADX(IF))-1                   SMPLOT 
      DO 701 IB=1,NMAXB                                                  SMPLOT 
      DO 600 JB=1,MMAXB                                                  SMPLOT 
      READ(TAPE15) XP(JB),YP(JB),ZP(JB),CP(JB),XQ(JB),YQ(JB),ZQ(JB)      SMPLOT 
 600  CONTINUE                                                           SMPLOT 
      DELN=ABS(XP(1)-XSPAN(L))                                           SMPLOT 
      IF(IB.EQ.1) DELO=DELN                                              SMPLOT 
      IF(IB.EQ.1) GO TO 620                                              SMPLOT 
      IF(DELO.LT.DELN) GO TO 620                                         SMPLOT 
      MB=MMAXB                                                           SMPLOT 
      DELO=DELN                                                          SMPLOT 
      DO 700 K=1,MMAXB                                                   SMPLOT 
      CPSP(K)=CP(K)                                                      SMPLOT 
      YSP(K)=YP(K)                                                       SMPLOT 
      ZSP(K)=ZP(K)                                                       SMPLOT 
 700  CONTINUE                                                           SMPLOT 
 620  CONTINUE                                                           SMPLOT 
 701  CONTINUE                                                           SMPLOT 
      DO 606 IN=1,NSEG                                                   SMPLOT 
      NMAXW=NCOL(IN)                                                     SMPLOT 
      MMAXW=NROW(IN)                                                     SMPLOT 
      IF(LOCPT(IN).NE.0) MMAXW=MMAXW+1                                   SMPLOT 
      DO 606 IK=1,NMAXW                                                  SMPLOT 
      IF(IN.GT.NSEGWT) GO TO 606                                         NEWSHLC
      JS=0                                                               SMPLOT 
      DO 602 II=1,MMAXW                                                  SMPLOT 
      READ(TAPE17) XP(II),YP(II),XQ(II),CP(II),ZP(II)                    SMPLOT 
 602  CONTINUE                                                           SMPLOT 
      ID=MMAXW/2                                                         SMPLOT 
      DIFF=ABS(XP(ID)-XP(ID-1))*2.0                                      SMPLOT 
      DO 604 J=1,MMAXW                                                   SMPLOT 
      DELN=ABS(XP(J)-XSPAN(L))                                           SMPLOT 
      IF(J.EQ.1)DELO=DELN                                                SMPLOT 
      IF(J.EQ.1) GO TO 603                                               SMPLOT 
      IF(DELN.GT.DELO) GO TO 603                                         SMPLOT 
      MW=MMAXW                                                           SMPLOT 
      NWW=NMAXW                                                          SMPLOT 
      DELO=DELN                                                          SMPLOT 
      JS=J                                                               SMPLOT 
 603  CONTINUE                                                           SMPLOT 
 604  CONTINUE                                                           SMPLOT 
      IF(JS.EQ.0) JS=1                                                   SMPLOT 
      IF(DELO.GT.DIFF) GO TO 605                                         SMPLOT 
      JJ=JJ+1                                                            SMPLOT 
      JSP(JJ)=JS                                                         SMPLOT 
      IS(JJ)=IK                                                          SMPLOT 
      CPSAVE(JJ)=CP(JS)                                                  SMPLOT 
      YS(JJ)=YP(JS)                                                      SMPLOT 
      IF(IK.EQ.1.AND.IN.EQ.1) ZROOT=ZP(1)                                SMPLOT 
 605  CONTINUE                                                           SMPLOT 
 606  CONTINUE                                                           SMPLOT 
      IF(JJ.EQ.0) GO TO 611                                              SMPLOT 
      JSAVE=0                                                            SMPLOT 
      DO 650 I=1,MB                                                      SMPLOT 
      IF(ZSP(I).LT.ZROOT) GO TO 651                                      SMPLOT 
      JSAVE=JSAVE+1                                                      SMPLOT 
      CP(JSAVE)=CPSP(I)                                                  SMPLOT 
      YP(JSAVE)=YSP(I)                                                   SMPLOT 
  651 CONTINUE                                                           SMPLOT 
  650 CONTINUE                                                           SMPLOT 
      CALL AXIS(1.,1.,2HCP,2,7.,90.,0.3,-0.1)                            SMPLOT 
      CALL AXIS(1.5,4.,4H2Y/B,-4,5.,0.,0.,.2)                            SMPLOT 
      CALL SYMBOL(1.,8.8,.15,28H WING/BODY SPANWISE PRESSURE,0.,28)      SMPLOT 
C     CALL JGRID(0.,0.,0.2,-0.1,5.,7.,6,8)                               SMPLOT 
      NPT=NBODY+NWP                                                      SMPLOT 
      CALL W12HED(NBODY,NWP,NPT,XSPAN(L),-1)                             SMPLOT 
      CALL LORGN (1.5,4.)                                                SMPLOT 
      JME=MB-JSAVE                                                       SMPLOT 
      N=JJ+JME                                                           SMPLOT 
      IE=0                                                               SMPLOT 
      ISE=0                                                              SMPLOT 
      DO 613 K=1,N                                                       SMPLOT 
      IF(K.LE.JME) GO TO 614                                             SMPLOT 
      ISE=ISE+1                                                          SMPLOT 
      YSP(K)=YS(ISE)                                                     SMPLOT 
      CPSP(K)=CPSAVE(ISE)                                                SMPLOT 
  614 CONTINUE                                                           SMPLOT 
      YQ(K)=YSP(K)                                                       SMPLOT 
      YSP(K)=YSP(K)/REFB                                                 SMPLOT 
      IF(CPSP(K).GT.CPM1) CPSP(K)=CPM1                                   SMPLOT 
      IF(CPSP(K).LT.CPM2) CPSP(K)=CPM2                                   SMPLOT 
      IPASS=0                                                            SMPLOT 
      IF(CPSP(K).EQ.CPM1.OR.CPSP(K).EQ.CPM2) IPASS=1                     SMPLOT 
      IF(IPASS.EQ.0) GO TO 169                                           SMPLOT 
      IE=IE+1                                                            SMPLOT 
      A(IE)=YSP(K)*XSCALE                                                SMPLOT 
      B(IE)=CPSP(K)*(-YSCALE)                                            SMPLOT 
 169  CONTINUE                                                           SMPLOT 
 506  FORMAT(5X,28HWING/BODY SPANWISE PRESSURES,1X,24HAT AXIAL POSITION  SMPLOT 
     1OF X=,F10.5,/)                                                     SMPLOT 
 613  CONTINUE                                                           SMPLOT 
      IDONE=0                                                            SMPLOT 
      IF(IE.EQ.0) GO TO 170                                              SMPLOT 
      DO 194 IP=1,IE                                                     SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 194  CONTINUE                                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 170  CONTINUE                                                           SMPLOT 
      CPSP(N+1)=0.0                                                      SMPLOT 
      CPSP(N+2)=-1./YSCALE                                               SMPLOT 
      YSP(N+1)=0.0                                                       SMPLOT 
      YSP(N+2)=1./XSCALE                                                 SMPLOT 
      CALL LINE (YSP,CPSP,N,1,1,4)                                       SMPLOT 
      DO 615 J=1,JSAVE                                                   SMPLOT 
      K=JSAVE-J+1                                                        SMPLOT 
      CPSP(J)=CP(K)                                                      SMPLOT 
      YSP(J)=YP(K)                                                       SMPLOT 
 615  CONTINUE                                                           SMPLOT 
      IB=1                                                               SMPLOT 
      DO 609 IN=1,NSEG                                                   SMPLOT 
      NMAXW=NCOL(IN)                                                     SMPLOT 
      MMAXW=NROW(IN)                                                     SMPLOT 
      IF(LOCPT(IN).NE.0) MMAXW=MMAXW+1                                   SMPLOT 
      DO 609 JK=1,NMAXW                                                  SMPLOT 
      IF(IN.GT.NSEGWT) GO TO 609                                         NEWSHLC
      DO 619 JB=1,MMAXW                                                  SMPLOT 
      READ(TAPE16) XP(JB),YP(JB),XQ(JB),CP(JB),ZP(JB)                    SMPLOT 
619   CONTINUE                                                           SMPLOT 
      IF(IB.GT.JJ) GO TO 608                                             SMPLOT 
      IF(JK.NE.IS(IB)) GO TO 608                                         SMPLOT 
      CPSAVE(IB)=CP(JSP(IB))                                             SMPLOT 
      YS(IB)=YP(JSP(IB))                                                 SMPLOT 
      IB=IB+1                                                            SMPLOT 
 608  CONTINUE                                                           SMPLOT 
 609  CONTINUE                                                           SMPLOT 
      NN=MB-JSAVE                                                        SMPLOT 
      M=JSAVE+JJ                                                         SMPLOT 
      DO 801 I=1,JJ                                                      SMPLOT 
      CPSP(JSAVE+I)=CPSAVE(I)                                            SMPLOT 
      YSP(JSAVE+I)=YS(I)                                                 SMPLOT 
 801  CONTINUE                                                           SMPLOT 
      IE=0                                                               SMPLOT 
      DO 640 J=1,M                                                       SMPLOT 
      YS(J)=YSP(J)                                                       SMPLOT 
      YSP(J)=YSP(J)/REFB                                                 SMPLOT 
      IF(CPSP(J).GT.CPM1) CPSP(J)=CPM1                                   SMPLOT 
      IF(CPSP(J).LT.CPM2) CPSP(J)=CPM2                                   SMPLOT 
      IPASS=0                                                            SMPLOT 
      IF(CPSP(J).EQ.CPM1.OR.CPSP(J).EQ.CPM2) IPASS=1                     SMPLOT 
      IF(IPASS.EQ.0) GO TO 171                                           SMPLOT 
      IE=IE+1                                                            SMPLOT 
      A(IE)=YSP(J)*XSCALE                                                SMPLOT 
      B(IE)=CPSP(J)*(-YSCALE)                                            SMPLOT 
 171  CONTINUE                                                           SMPLOT 
 640  CONTINUE                                                           SMPLOT 
      CPSP(M+1)=0.0                                                      SMPLOT 
      CPSP(M+2)=-1./YSCALE                                               SMPLOT 
      YSP(M+1)=0.0                                                       SMPLOT 
      YSP(M+2)=1./XSCALE                                                 SMPLOT 
      CALL LINE(YSP,CPSP,M,1,1,3)                                        SMPLOT 
      IF(IE.EQ.0) GO TO 172                                              SMPLOT 
      DO 195 IP=1,IE                                                     SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 195  CONTINUE                                                           SMPLOT 
      IF(IDONE.EQ.1) GO TO 172                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 172  CONTINUE                                                           SMPLOT 
      CALL LORGN(-1.5,-4.)                                               SMPLOT 
      CALL PLOT(8.5,0.,-3)                                               SMPLOT 
 611  CONTINUE                                                           SMPLOT 
 201  CONTINUE                                                           SMPLOT 
      REWIND TAPE15                                                      SMPLOT 
      REWIND TAPE16                                                      SMPLOT 
      REWIND TAPE17                                                      SMPLOT 
      IF((NOPT(8)/1000+1)/2*2.NE.NOPT(8)/1000+1) GO TO 300               SMPLOT 
C*********   FORCE + MOMENT PLOTS *******                                SMPLOT 
      ICL=0                                                              SMPLOT 
      ICM=0                                                              SMPLOT 
      ICD=0                                                              SMPLOT 
      BEG1=-0.1                                                          SMPLOT 
      BEG3=0.1                                                           SMPLOT 
      BEG2=.0                                                            SMPLOT 
      DEL1=.1                                                            SMPLOT 
      DEL2=.01                                                           SMPLOT 
      DEL3=-.1                                                           SMPLOT 
      JSIGN=4                                                            SMPLOT 
      IF(NBODY.EQ.0) GO TO 78                                            SMPLOT 
      NMAXB=0                                                            SMPLOT 
      MMAXB=0                                                            SMPLOT 
      DO 79 I=1,NFUS                                                     SMPLOT 
      NT2=NFORX(I)-1                                                     SMPLOT 
      IF(KFORX(I).NE.0) NT2=KFORX(I)-1                                   SMPLOT 
      NT1=NRADX(I)-1                                                     SMPLOT 
      IF(IABS(KRADX(I)).NE.0) NT1=IABS(KRADX(I))-1                       SMPLOT 
      MMAXB=MMAXB+NT1                                                    SMPLOT 
      NMAXB=NMAXB+NT2                                                    SMPLOT 
79    CONTINUE                                                           SMPLOT 
      IF(NWING.EQ.0) NPT=NBODY                                           SMPLOT 
 78   CONTINUE                                                           SMPLOT 
      DO 77 I=1,NCASE                                                    SMPLOT 
      ALP(I)=ALPHAP(I)                                                   SMPLOT 
 77   CONTINUE                                                           SMPLOT 
      ALP(NCASE+1)=0.0                                                   SMPLOT 
      ALP(NCASE+2)=1./ASCALE                                             SMPLOT 
      IF (NWING.NE.0.AND.NBODY.NE.0) JSIGN=-4                            SMPLOT 
      IF (NWING.NE.0.AND.NBODY.NE.0) GO TO 401                           SMPLOT 
      IF(NWING.NE.0) GO TO 401                                           SMPLOT 
      DEL1=.002                                                          SMPLOT 
      DEL2=.002                                                          SMPLOT 
      BEG1=-0.002                                                        SMPLOT 
      BEG2=.0                                                            SMPLOT 
      BEG3=.01                                                           SMPLOT 
      DEL3=-.01                                                          SMPLOT 
      DO 402 I=1,NCASE                                                   SMPLOT 
      CD(I)=CDBP(I)                                                      SMPLOT 
      CL(I)=CLBP(I)                                                      SMPLOT 
      CM(I)=CMBP(I)                                                      SMPLOT 
      IF(CL(I).GT..01.OR.CL(I).LT.-.002) ICL=1                           SMPLOT 
      IF(CD(I).GT..012.OR.CD(I).LT.TOL) ICD=1                            SMPLOT 
      IF(CM(I).GT..02.OR.CM(I).LT.-.02) ICM=1                            SMPLOT 
      IF(CD(I).GT..012) CD(I)=.012                                       SMPLOT 
      IF(CL(I).GT..01) CL(I)=.01                                         SMPLOT 
      IF(CM(I).GT..02) CM(I)=.02                                         SMPLOT 
      IF(CD(I).LT.TOL) CD(I)=.0                                          SMPLOT 
      IF(CL(I).LT.-.002) CL(I)=-.002                                     SMPLOT 
      IF(CM(I).LT.-.02) CM(I)=-.02                                       SMPLOT 
 402  CONTINUE                                                           SMPLOT 
      NMAXX=NMAXB                                                        SMPLOT 
      MMAX=MMAXB                                                         SMPLOT 
      GO TO 405                                                          SMPLOT 
 401  CONTINUE                                                           SMPLOT 
      DO 403 I=1,NCASE                                                   SMPLOT 
      CL(I)=CLWP(I)                                                      SMPLOT 
      CM(I)=CMWP(I)                                                      SMPLOT 
      CD(I)=CDWP(I)                                                      SMPLOT 
      IF(CL(I).GT..5.OR.CL(I).LT.-.1) ICL=1                              SMPLOT 
      IF(CD(I).GT..06.OR.CD(I).LT.TOL) ICD=1                             SMPLOT 
      IF(CM(I).GT..2.OR.CM(I).LT.-.2) ICM=1                              SMPLOT 
      IF(CD(I).GT..06) CD(I)=.06                                         SMPLOT 
      IF(CL(I).GT..5) CL(I)=.5                                           SMPLOT 
      IF(CM(I).GT..2) CM(I)=.2                                           SMPLOT 
      IF(CD(I).LT.TOL) CD(I)=.0                                          SMPLOT 
      IF(CL(I).LT.-.1) CL(I)=-.1                                         SMPLOT 
      IF(CM(I).LT.-.2) CM(I)=-.2                                         SMPLOT 
 403  CONTINUE                                                           SMPLOT 
 405  CONTINUE                                                           SMPLOT 
      CL(NCASE+1)=0.0                                                    SMPLOT 
      CM(NCASE+1)=0.0                                                    SMPLOT 
      CD(NCASE+1)=0.0                                                    SMPLOT 
      CL(NCASE+2)=DEL1                                                   SMPLOT 
      CD(NCASE+2)=DEL2                                                   SMPLOT 
      CM(NCASE+2)=DEL3                                                   SMPLOT 
      IF(NWING.EQ.0) GO TO 250                                           SMPLOT 
      IF(NBODY.EQ.0) GO TO 230                                           SMPLOT 
      NMAXX=NBODY                                                        SMPLOT 
      MMAX=NWP                                                           SMPLOT 
      NPT=MMAX + NMAXX                                                   SMPLOT 
      GO TO 250                                                          SMPLOT 
 230  CONTINUE                                                           SMPLOT 
      IF(NCAN.EQ.0) GO TO 231                                            SMPLOT 
      NMAXX=NCD2+NCD1                                                    SMPLOT 
      MMAX=NWD2+NWD1                                                     SMPLOT 
      JSIGN=-4                                                           SMPLOT 
      GO TO 232                                                          SMPLOT 
 231  CONTINUE                                                           SMPLOT 
      NMAXX=NWD1                                                         SMPLOT 
      MMAX=NWD2                                                          SMPLOT 
 232  CONTINUE                                                           SMPLOT 
      NPT=NWP                                                            SMPLOT 
 250  CONTINUE                                                           SMPLOT 
      CLM1=BEG1                                                          SMPLOT 
      CLM2=DEL1*5.                                                       SMPLOT 
      CMM1=BEG3*2.                                                       SMPLOT 
      CMM2=DEL3*2.                                                       SMPLOT 
      CDM1=BEG2                                                          SMPLOT 
      CDM2=DEL2*5.                                                       SMPLOT 
      CALL AXIS(1.,2.,2HCD,-2,6.,0.,BEG2,DEL2)                           SMPLOT 
      CALL AXIS(1.,1.,2HCL,2,6.,90.,BEG1,DEL1)                           SMPLOT 
      CALL SYMBOL(1.,8.8,.15,11H DRAG POLAR,0.,11)                       SMPLOT 
C     CALL JGRID(0.,0.,0.2,-0.1,5.,7.,6,8)                               SMPLOT 
      CALL W12HED(NMAXX,MMAX,NPT,0.0,JSIGN)                              SMPLOT 
      CALL LORGN (1.,2.)                                                 SMPLOT 
      CALL LINE (CD,CL,NCASE,1,-1,4)                                     SMPLOT 
      J=0                                                                SMPLOT 
      IF(ICL.EQ.0.AND.ICD.EQ.0) GO TO 173                                SMPLOT 
      DO 174 JC=1,NCASE                                                  SMPLOT 
      IF(CD(JC).NE.CDM2.AND.CD(JC).NE..0.AND.CL(JC).NE.CLM2.AND.CL(JC)   SMPLOT 
     1 .NE.CLM1) GO TO 174                                               SMPLOT 
 180  J=J+1                                                              SMPLOT 
      A(J)=CD(JC)/DEL2                                                   SMPLOT 
      B(J)=CL(JC)/DEL1                                                   SMPLOT 
 174  CONTINUE                                                           SMPLOT 
      IF(J.EQ.0) GO TO 173                                               SMPLOT 
      DO 196 IP=1,J                                                      SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 196  CONTINUE                                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 173  CONTINUE                                                           SMPLOT 
      CALL LORGN (-1.,-2.)                                               SMPLOT 
      CALL PLOT(8.5,0.,-3)                                               SMPLOT 
      CALL AXIS(2.,1.,2HCL,2,6.,90.,BEG1,DEL1)                           SMPLOT 
      CALL AXIS(1.,2.,3HALP,-3,6.,0.,-2.,2.)                             SMPLOT 
      CALL SYMBOL(1.,8.8,.15,17H LIFT CURVE SLOPE,0.,17)                 SMPLOT 
C     CALL JGRID(0.,0.,0.2,-0.1,5.,7.,6,8)                               SMPLOT 
      CALL W12HED(NMAXX,MMAX,NPT,0.0,JSIGN)                              SMPLOT 
      CALL LORGN (2.,2.)                                                 SMPLOT 
      CALL LINE (ALP,CL,NCASE,1,-1,4)                                    SMPLOT 
      J=0                                                                SMPLOT 
      IF(ICL.EQ.0) GO TO 175                                             SMPLOT 
      DO 176 JC=1,NCASE                                                  SMPLOT 
      IF(CL(JC).NE.CLM2.AND.CL(JC).NE.CLM1) GO TO 176                    SMPLOT 
 181  J=J+1                                                              SMPLOT 
      A(J)=ALPHAP(JC)*ASCALE                                             SMPLOT 
      B(J)=CL(JC)/DEL1                                                   SMPLOT 
 176  CONTINUE                                                           SMPLOT 
      IF(J.EQ.0) GO TO 175                                               SMPLOT 
      DO 197 IP=1,J                                                      SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 197  CONTINUE                                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 175  CONTINUE                                                           SMPLOT 
      CALL LORGN (-2.,-2.)                                               SMPLOT 
      CALL PLOT(8.5,0.,-3)                                               SMPLOT 
      CALL AXIS(4.,1.,2HCL,2,6.,90.,BEG1,DEL1)                           SMPLOT 
      CALL AXIS(3.,2.,2HCM,-2,2.,0.,BEG3,DEL3)                           SMPLOT 
      CALL SYMBOL(1.,8.8,.15,16H PITCHING MOMENT,0.,16)                  SMPLOT 
C     CALL JGRID(0.,0.,0.2,-0.1,5.,7.,6,8)                               SMPLOT 
      CALL W12HED(NMAXX,MMAX,NPT,0.0,JSIGN)                              SMPLOT 
      CALL LORGN (4.,2.)                                                 SMPLOT 
      CALL LINE (CM,CL,NCASE,1,-1,4)                                     SMPLOT 
      J=0                                                                SMPLOT 
      IF(ICL.EQ.0.AND.ICM.EQ.0) GO TO 177                                SMPLOT 
      DO 178 JC=1,NCASE                                                  SMPLOT 
      IF(CM(JC).NE.CMM1.AND.CM(JC).NE.CMM2.AND.CL(JC).NE.CLM2.AND.CL(JC) SMPLOT 
     1 .NE.CLM1) GO TO 178                                               SMPLOT 
 185  J=J+1                                                              SMPLOT 
      A(J)=CM(JC)/DEL3                                                   SMPLOT 
      B(J)=CL(JC)/DEL1                                                   SMPLOT 
 178  CONTINUE                                                           SMPLOT 
      IF(J.EQ.0) GO TO 177                                               SMPLOT 
      DO 198 IP=1,J                                                      SMPLOT 
      XX=A(IP)                                                           SMPLOT 
      YY=B(IP)                                                           SMPLOT 
      CALL SYMBOL(XX,YY,.1,0,0.,-1)                                      SMPLOT 
 198  CONTINUE                                                           SMPLOT 
      CALL SYMBOL(C,D,.1,0,0.,-1)                                        SMPLOT 
      CALL SYMBOL(3.75,3.45,.1,9HOFF SCALE,0.,9)                         SMPLOT 
 177  CONTINUE                                                           SMPLOT 
      CALL LORGN (-4.,-2.)                                               SMPLOT 
      CALL PLOT(12.0,0.,-3)                                              SMPLOT 
 300  CONTINUE                                                           SMPLOT 
      RETURN                                                             SMPLOT 
      END                                                                SMPLOT 
      SUBROUTINE W12HED(NMAX,MMAX,NP,SPOT,NPRNT)                         W12HED 
      COMMON/HEAD/TITLE1(14),TITLE2(14)                                  W12HED 
      COMMON/NEWCOM/K0,K1,K2,K3,K4,K5,K6,KWAF,KWAFOR,KFUS,KRADX(4),      W12HED 
     1              KFORX(4),KF(6),KFINOR(6),KAN(6),KANOR(6),KRAD,MAX,   W12HED 
     1              KOL,NCPT                                             W12HED 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BT(20),DUM(6 W12HED 
     10),BL(20)                                                          W12HED 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           W12HED 
      COMMON/ OPTION / NOPT(10)                                          W12HED 
      DIMENSION R(20),TITLEN(8)                                          W12HED 
C     INTEGER TITLE1,TITLE2                                              W12HED 
      TNMAX=NMAX                                                         W12HED 
      TMMAX=MMAX                                                         W12HED 
      TNP=NP                                                             W12HED 
      ENCODE(80,10,TITLEN) TITLE1                                        W12HED 
 10   FORMAT(13A6,A2)                                                    W12HED 
      CALL JOBNAME(JOB)                                                  W12HED 
      CALL SYMBOL(1.5,0.7,.10,JOB,0.,7)                                  W12HED 
      CALL SYMBOL(1.,9.4,.15,34H GRUMMAN@S W12SC3 AERODYNAMIC CODE,0.,   W12HED 
     1 34)                                                               W12HED 
      CALL SYMBOL(1.15,9.1,.15,TITLEN,0.,40)                             W12HED 
      CALL SYMBOL(4.5,.7,.10,10HPANEL NO.=,0.,10)                        W12HED 
      CALL SYMBOL(6.6,.7,.10,1H=,0.,1)                                   W12HED 
      CALL NUMBER(5.65,.7,.1,TNMAX,0.,-1)                                W12HED 
      CALL NUMBER(6.25,.7,.1,TMMAX,0.,-1)                                W12HED 
      CALL NUMBER(7.,.7,.1,TNP,0.,-1)                                    W12HED 
      IF(NOPT(4).EQ.0) CALL SYMBOL(1.5,8.15,.1,10HWII OPTION,0.,10)      W12HED 
      IF(NOPT(4).EQ.2) CALL SYMBOL(1.5,8.15,.1,9HWI OPTION,0.,9)         W12HED 
      IF(NPRNT.LT.0)  CALL SYMBOL(6.0,.75,.1,3,0.,-1)                    W12HED 
      IF(NPRNT.GT.0)  CALL SYMBOL(6.0,.75,.1,4,0.,-1)                    W12HED 
      IF(IABS(NPRNT).EQ.4)  CALL SYMBOL(3.5,8.5,.15,2HM=,0.,2)           W12HED 
      IF(IABS(NPRNT).EQ.4)  CALL NUMBER(3.9,8.5,.15,MACH,0.,2)           W12HED 
      IF(IABS(NPRNT).EQ.4) GO TO 200                                     W12HED 
      IF(IABS(NPRNT).EQ.3)CALL SYMBOL(4.,8.5,.15,6HTHETA=,0.,6)          W12HED 
      IF(IABS(NPRNT).EQ.2) CALL SYMBOL(4.5,8.5,.15,2HY=,0.,2)            W12HED 
      IF(IABS(NPRNT).EQ.1)CALL SYMBOL(4.5,8.5,.15,2HX=,0.,2)             W12HED 
      CALL SYMBOL(1.2,8.5,.15,2HM=,0.,2)                                 W12HED 
      CALL SYMBOL(2.5,8.5,.15,4HALP=,0.,4)                               W12HED 
      CALL NUMBER(1.75,8.5,.15,MACH,0.,2)                                W12HED 
      CALL NUMBER(3.2,8.5,.15,ALPHA,0.,2)                                W12HED 
      CALL NUMBER(5.0,8.5,.15,SPOT,0.,2)                                 W12HED 
      IF(NBODY.EQ.NP) GO TO 200                                          W12HED 
      CALL SYMBOL(5.0,8.3,.1,3,0.,-1)                                    W12HED 
      CALL SYMBOL(5.0,8.1,.1,4,0.,-1)                                    W12HED 
      CALL SYMBOL(5.3,8.25,.1,13HUPPER SURFACE,0.,13)                    W12HED 
      CALL SYMBOL(5.3,8.05,.1,13HLOWER SURFACE,0.,13)                    W12HED 
 200  CONTINUE                                                           W12HED 
      RETURN                                                             W12HED 
      END                                                                W12HED 
      SUBROUTINE PLOTE                                                   PLOTE
      CALL PLOT(0,0,999)                                                 PLOTE
      RETURN                                                             PLOTE
      END                                                                PLOTE
      SUBROUTINE JOBNAME(JOB)                                            DUMPLT 
      RETURN                                                             DUMPLT 
                 END                                                     JOBNAME
      BLOCK DATA                                                         BLKDAT 
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON/PTYPE/ORT,VU3,STE,PER                                       BLKDAT 
      COMMON/PI/PI,RADEG,DEGRAD                                          BLKDAT 
      COMMON/LWB/LWB                                                     BLKDAT 
      COMMON/EPS/EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,         BLKDAT 
     1 EPSLV,EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM,EPSSB1,         BLKDAT 
     2 EPSSB2                                                            BLKDAT 
      COMMON/DESIGN/CAMBER(600)                                          BLKDAT 
      COMMON/TAPES/ITAPES(20)                                            BLKDAT 
      COMMON/VELCOM/N(5),EM,L(54),DUMMY(20)                              BLKDAT 
      COMMON/ONE/NAN2                                                    BLKDAT 
      COMMON/FILES/TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,      BLKDAT 
     1 TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17     SC3PLT 
C                                                                        BLKDAT 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,           BLKDAT 
     1 TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17     SC3PLT 
C                                                                        BLKDAT 
      DATA PI/3.1415926535898/,RADEG/57.29577951/,DEGRAD/.0174532925/    BLKDAT 
      DATA ORT/3HORT/,VU3/3HVU3/,STE/3HSTE/,PER/3HPER/                   BLKDAT 
      DATA LWB/3HLWB/,EM/-1.0/,NAN2/24/                                  BLKDAT 
      DATA CAMBER/600*0.0/                                               BLKDAT 
      DATA ITAPES/20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,       BLKDAT 
     1            36,37,38,39/                                           BLKDAT 
      DATA NOPT/1,9*0/,NXSTNS/0/,XSTN/20*0.0/,XAPEX/0.0/,YAPEX/0.0/,     BLKDAT 
     1 XLAMDA/57.0/                                                      BLKDAT 
      DATA EPSPAN/1.E-6/,EPSWP1/1.E-6/,EPSWP2/1.E-3/,EPSTP/1.E-6/,       BLKDAT 
     1 EPSVC/1.E-3/,EPSSP1/1.E-5/,EPSSP2/1.E-10/,EPSLV/1.E-6/,           BLKDAT 
     2 EPSSV/1.E-6/,EPSVV/1.E-6/,EPSWV/1.E-6/,EPSVP/1.E-6/,              BLKDAT 
     3 EPSIT1/1.E-3/,EPSIT2/1.E3/,EPSFM/1.E-6/,EPSSB1/1.E-5/,            BLKDAT 
     4 EPSSB2/1.E5/                                                      BLKDAT 
      DATA TAPE1/0/,TAPE2/0/,TAPE3/8/,TAPE4/0/,TAPE5/5/,TAPE6/6/,        BLKDAT 
     1 TAPE7/7/,TAPE8/8/,TAPE9/9/,TAPE10/10/,TAPE11/11/,TAPE12/12/,      BLKDAT 
     2 TAPE13/13/,TAPE14/14/,TAPE15/15/,TAPE16/16/,TAPE17/17/            SC3PLT 
C                                                                        BLKDAT 
      END                                                                BLKDAT 
      SUBROUTINE PLOT(X,Y,IPEN)                                          PLOT 
      RETURN                                                             PLOT 
      END                                                                PLOT 
      SUBROUTINE PLOTS(IBUF,NLOC,LDEV)                                   PLOTS
      RETURN                                                             PLOTS
      END                                                                PLOTS
      SUBROUTINE SYMBOL(X,Y,H,IBCD,ANG,NCHAR)                            SYMBOL 
      RETURN                                                             SYMBOL 
      END                                                                SYMBOL 
      SUBROUTINE AXIS(X,Y,IBCD,NCHAR,XL,ANG,FIRST,DELTAV)                AXIS 
      RETURN                                                             AXIS 
      END                                                                AXIS 
      SUBROUTINE NUMBER(X,Y,H,DUM,ANG,NCHAR)                             NUMBER 
      RETURN                                                             NUMBER 
      END                                                                NUMBER 
      SUBROUTINE LORGN(X,Y)                                              LORGN
      RETURN                                                             LORGN
      END                                                                LORGN
      SUBROUTINE CALPLT(X,Y,IPEN)                                        CALPLT 
      CALL PLOT(X,Y,IPEN)                                                CALPLT 
      RETURN                                                             CALPLT 
      END                                                                CALPLT 
      SUBROUTINE NOTATE(XPAGE,YPAGE,HEIGHT,IBCD,ANGLE,NCHAR)             NOTATE 
      DIMENSION IBCD(1)                                                  NOTATE 
      CALL SYMBOL(XPAGE,YPAGE,HEIGHT,IBCD,ANGLE,NCHAR)                   NOTATE 
      RETURN                                                             NOTATE 
      END                                                                NOTATE 
      SUBROUTINE PSEUDO (N)                                              PSEUDO 
      RETURN                                                             PSEUDO 
      END                                                                PSEUDO 
      SUBROUTINE NFRAME                                                  NFRAME 
      CALL PLOT(0.,0.,-3)                                                NFRAME 
      RETURN                                                             NFRAME 
      END                                                                NFRAME 
      SUBROUTINE LINE (A,B,I,J,K,L,M)                                    LINE 
      RETURN                                                             LINE 
      END                                                                LINE 
      SUBROUTINE XFER( INPUT, IOUT, IROWS, ICOLS, DUMMY )                XFER 
      DIMENSION DUMMY(ICOLS)                                             XFER 
      REWIND IOUT                                                        XFER 
      DO 10 I = 1, IROWS                                                 XFER 
      CALL RNRW( - INPUT, DUMMY, ICOLS)                                  XFER 
      CALL RNRW(   IOUT, DUMMY, ICOLS)                                   XFER 
   10 CONTINUE                                                           XFER 
      REWIND IOUT                                                        XFER 
      RETURN                                                             XFER 
      END                                                                XFER 
      SUBROUTINE TRPOSE(INPUT,BUFFER,STORE,NCOLS,NROWS,OUTPUT,SCRTCH,    TRPOSE 
     1ISIZE)                                                             TRPOSE 
      INTEGER OUTPUT,SCRTCH                                              TRPOSE 
      DIMENSION BUFFER(1),STORE(1)                                       TRPOSE 
C                                                                        TRPOSE 
C  ******************************************************************    TRPOSE 
C  *                                                                *    TRPOSE 
C  *  FORMS THE TRANSPOSE OF A MATRIX, USING OUT-OF-CORE            *    TRPOSE 
C  *  STORAGE WHERE NECESSARY                                       *    TRPOSE 
C  *                                                                *    TRPOSE 
C  ******************************************************************    TRPOSE 
C                                                                        TRPOSE 
C***** INPUT  = INPUT UNIT CONTAINING ORIGINAL MATRIX                    TRPOSE 
C***** BUFFER = BUFFER TO HOLD PART OF MATRIX (SIZE=ISIZE)               TRPOSE 
C***** STORE  = BUFFER TO HOLD ROW OF TRANSPOSE (SIZE=NROWS)             TRPOSE 
C***** NCOLS  = NUMBER OF COLUMNS IN ORIGINAL MATRIX                     TRPOSE 
C***** NROWS  = NUMBER OF ROWS IN ORIGINAL MATRIX                        TRPOSE 
C***** OUTPUT = OUTPUT UNIT CONTAINING TRANSPOSED MATRIX                 TRPOSE 
C***** SCRTCH = SCRATCH UNIT                                             TRPOSE 
C***** ISIZE  = SIZE OF BUFFER                                           TRPOSE 
C                                                                        TRPOSE 
      REWIND INPUT                                                       TRPOSE 
      NSIZE = NROWS * NCOLS                                              TRPOSE 
      IF( NSIZE .GT. ISIZE ) GO TO 30                                    TRPOSE 
C                                                                        TRPOSE 
C     TRANSPOSE OF ORIGINAL MATRIX IS FORMED IN CORE.                    TRPOSE 
C                                                                        TRPOSE 
      DO 10 I = 1,NROWS                                                  TRPOSE 
      I1 = I                                                             TRPOSE 
      I2 = I1 + ( NCOLS - 1 ) * NROWS                                    TRPOSE 
      READ(INPUT) ( BUFFER(J) , J = I1,I2,NROWS )                        TRPOSE 
   10 CONTINUE                                                           TRPOSE 
      REWIND OUTPUT                                                      TRPOSE 
      J2 = 0                                                             TRPOSE 
      DO 20 I = 1,NCOLS                                                  TRPOSE 
      J1 = J2 + 1                                                        TRPOSE 
      J2 = I * NROWS                                                     TRPOSE 
      WRITE(OUTPUT) ( BUFFER(J) , J = J1,J2 )                            TRPOSE 
   20 CONTINUE                                                           TRPOSE 
      REWIND OUTPUT                                                      TRPOSE 
      RETURN                                                             TRPOSE 
   30 CONTINUE                                                           TRPOSE 
C                                                                        TRPOSE 
C     TRANSPOSE OF ORIGINAL MATRIX IS FORMED USING OUT OF CORE STORAGE.  TRPOSE 
C                                                                        TRPOSE 
      REWIND OUTPUT                                                      TRPOSE 
      REWIND SCRTCH                                                      TRPOSE 
C                                                                        TRPOSE 
C     DETERMINE MAXIMUM NUMBER OF ROWS,(MAXROW), WHICH WILL FIT WITHIN   TRPOSE 
C     CORE STORAGE,(ISIZE).(ICYCLE) GIVES TOTAL NUMBER OF ROW PARTITIONS TRPOSE 
C     THAT ARE REQUIRED.  THERE ARE (NUM) PARTITIONS CONTAINING (MAXROW) TRPOSE 
C     ROWS AND ONE PARTITION CONTAINING (LAST) ROWS.                     TRPOSE 
C                                                                        TRPOSE 
      MAXROW = ISIZE / NCOLS                                             TRPOSE 
      NUM = NROWS / MAXROW                                               TRPOSE 
      LAST = NROWS - NUM * MAXROW                                        TRPOSE 
      ICYCLE = NUM                                                       TRPOSE 
      IF( LAST .NE. 0 ) ICYCLE = NUM + 1                                 TRPOSE 
C                                                                        TRPOSE 
C     OUT OF CORE STORAGE FOR EACH OF THE (ICYCLE) PARTITIONS SWITCHES   TRPOSE 
C     BETWEEN UNITS (OUTPUT) AND (SCRTCH). IF (ICYCLE) IS AN ODD NUMBER, TRPOSE 
C     START WITH (OUTPUT). IF (ICYCLE) IS AN EVEN NUMBER, START WITH     TRPOSE 
C     (SCRTCH). THIS WILL INSURE THAT THE COMPLETE TRANSPOSE IS WRITTEN  TRPOSE 
C     ONTO UNIT (OUTPUT) DURING THE LAST PARTITION.                      TRPOSE 
C                                                                        TRPOSE 
      ICT = ICYCLE / 2                                                   TRPOSE 
      ITEST = ICYCLE - 2 * ICT                                           TRPOSE 
      INEW = OUTPUT                                                      TRPOSE 
      IOLD = SCRTCH                                                      TRPOSE 
      IF( ITEST .NE. 0 ) GO TO 40                                        TRPOSE 
      INEW = SCRTCH                                                      TRPOSE 
      IOLD = OUTPUT                                                      TRPOSE 
   40 CONTINUE                                                           TRPOSE 
C                                                                        TRPOSE 
C     THE COUNTER (ISUMBF) GIVES THE TOTAL NUMBER OF PARTITION ROWS      TRPOSE 
C     CURRENTLY IN THE BUFFER.  (ISUMTP) GIVES THE TOTAL NUMBER OF ROWS  TRPOSE 
C     WHICH HAVE BEEN WRITTEN TO OUT OF CORE STORAGE.                    TRPOSE 
C                                                                        TRPOSE 
      ISUMBF = 0                                                         TRPOSE 
      ISUMTP = 0                                                         TRPOSE 
      IROWS = MAXROW                                                     TRPOSE 
      DO 100 I = 1,ICYCLE                                                TRPOSE 
      IF( I .EQ. ICYCLE .AND. LAST .NE. 0 ) IROWS = LAST                 TRPOSE 
      ISUMBF = IROWS                                                     TRPOSE 
C                                                                        TRPOSE 
C     FORM TRANSPOSE OF NEXT PARTITION AND STORE IN (BUFFER) BY ROWS.    TRPOSE 
C                                                                        TRPOSE 
      DO 50 J = 1,IROWS                                                  TRPOSE 
      I1 = J                                                             TRPOSE 
      I2 = I1 + ( NCOLS - 1 ) * IROWS                                    TRPOSE 
      READ(INPUT) ( BUFFER(K) , K = I1,I2,IROWS )                        TRPOSE 
   50 CONTINUE                                                           TRPOSE 
C                                                                        TRPOSE 
C     READ FROM UNIT (IOLD) THE INTERMEDIATE TRANSPOSED MATRIX           TRPOSE 
C     BY ROWS, CONTAINING (ISUMTP) ELEMENTS, AND STORE IN                TRPOSE 
C     ARRAY (STORE). ADD NEW ELEMENTS FOR THE CURRENT PARTITION FROM     TRPOSE 
C     ARRAY (BUFFER), AND WRITE THIS NEW ROW WITH (IWRITE) ELEMENTS      TRPOSE 
C     ONTO NEW UNIT, (INEW).                                             TRPOSE 
      IWRITE = ISUMTP + ISUMBF                                           TRPOSE 
   99 CONTINUE                                                           TRPOSE 
      K1 = 0                                                             TRPOSE 
      K2 = 0                                                             TRPOSE 
      DO 90 J = 1,NCOLS                                                  TRPOSE 
      IF( I.EQ. 1 ) GO TO 70                                             TRPOSE 
      READ(IOLD) ( STORE(K), K=1,ISUMTP)                                 TRPOSE 
   70 K1 = K2 + 1                                                        TRPOSE 
      K2 = K2 + ISUMBF                                                   TRPOSE 
      J1 = ISUMTP                                                        TRPOSE 
      DO 80 K = K1,K2                                                    TRPOSE 
      J1 = J1 + 1                                                        TRPOSE 
      STORE(J1) = BUFFER(K)                                              TRPOSE 
   80 CONTINUE                                                           TRPOSE 
      WRITE(INEW) ( STORE(K) , K=1,IWRITE )                              TRPOSE 
   90 CONTINUE                                                           TRPOSE 
C                                                                        TRPOSE 
C     UPDATE ROW COUNTER, (ISUMTP) , FOR OUT OF CORE STORAGE.            TRPOSE 
C     SWITCH UNITS FOR NEXT PARTITION.                                   TRPOSE 
C                                                                        TRPOSE 
      ISUMTP = IWRITE                                                    TRPOSE 
      ISAVE = IOLD                                                       TRPOSE 
      IOLD = INEW                                                        TRPOSE 
      INEW = ISAVE                                                       TRPOSE 
      REWIND INEW                                                        TRPOSE 
      REWIND IOLD                                                        TRPOSE 
  100 CONTINUE                                                           TRPOSE 
      REWIND OUTPUT                                                      TRPOSE 
      RETURN                                                             TRPOSE 
      END                                                                TRPOSE 
      SUBROUTINE TRIXY(INA,INB,IOC,NROW,MM,NCOL,A,B,C,LENGTH,IRET)       TRIXY
C                                                                        TRIXY
C                                                                        TRIXY
C  ******************************************************************    TRIXY
C  *                                                                *    TRIXY
C  *  COLUMN-SORT MATRIX MULTIPLIER...... MULTIPLIES RECTANGULAR    *    TRIXY
C  *  MATRIX A (STORED IN COLUMN SORT ON INA) BY MATRIX B           *    TRIXY
C  *  (STORED IN COLUMN SORT ON INB) AND PUTS RESULTING MATRIX      *    TRIXY
C  *  C ONTO IOC IN COLUMN SORT.  OPERATIONS ARE DONE BY STORING    *    TRIXY
C  *  P COLUMNS OF A AND B IN CORE AT SAME TIME.  REQUIRES ONLY     *    TRIXY
C  *  P REWINDS OF INA.  (A IS NROW BY MM, B IS MM BY NCOL).        *    TRIXY
C  *                                                                *    TRIXY
C  ******************************************************************    TRIXY
C                                                                        TRIXY
C***** INA    = INPUT UNIT CONTAINING MATRIX A                           TRIXY
C***** INB    = INPUT UNIT CONTAINING MATRIX B                           TRIXY
C***** IOC    = OUTPUT UNIT CONTAINING MATRIX C                          TRIXY
C***** NROW   = NUMBER OF ROWS IN A AND C                                TRIXY
C***** MM     = NUMBER OF COLUMNS IN A = NUMBER OF ROWS IN B             TRIXY
C***** NCOL   = NUMBER OF COLUMNS IN B AND C                             TRIXY
C***** A      = BUFFER TO HOLD A PART OF A                               TRIXY
C***** B      = BUFFER TO HOLD A PART OF B                               TRIXY
C***** C      = BUFFER TO HOLD A PART OF C                               TRIXY
C***** LENGTH = SIZE OF EACH BUFFER                                      TRIXY
C***** IRET   = 0 OUT-OF-CORE STORAGE NEEDED                             TRIXY
C*****        = 1 ALL MATRICES CAN BE FIT IN CORE                        TRIXY
C                                                                        TRIXY
      DIMENSION A(LENGTH), B(LENGTH), C(LENGTH)                          TRIXY
      REWIND INA                                                         TRIXY
   99 IRET=0                                                             TRIXY
C                                                                        TRIXY
C COMPUTE P AS THE LARGEST NO. OF WHOLE                                  TRIXY
C COLUMNS THAT CAN FIT IN CORE STORAGE. IF ALL                           TRIXY
C COLUMNS OF A CAN FIT DO MULTIPLICATION DIRECTLY.                       TRIXY
C                                                                        TRIXY
      IP1= LENGTH/NROW                                                   TRIXY
      IP2= LENGTH/MM                                                     TRIXY
      IP = MIN0(IP1,IP2)                                                 TRIXY
      IF(IP1.LT.MM) GO TO 10                                             TRIXY
C                                                                        TRIXY
C READ IN ALL OF A                                                       TRIXY
C                                                                        TRIXY
      DO 1 I= 1,MM                                                       TRIXY
      II= (I-1)*NROW + 1                                                 TRIXY
      CALL RNRW(-INA,A(II),NROW)                                         TRIXY
    1 CONTINUE                                                           TRIXY
C                                                                        TRIXY
C READ A COLUMN OF B AND DOT                                             TRIXY
C WITH ROW OF A TO FORM ENTRY                                            TRIXY
C IN COL OF C.  WRITE OUT C                                              TRIXY
C WHEN COL IS FILLED.                                                    TRIXY
C                                                                        TRIXY
      DO 2 J= 1,NCOL                                                     TRIXY
      CALL RNRW(-INB,B(1),MM)                                            TRIXY
      DO 3 I= 1,NROW                                                     TRIXY
      SUM = 0.0                                                          TRIXY
    3 C(I)= SOSCAP(A,B,SUM,MM,NROW,1,I,1)                                TRIXY
    2 CALL RNRW(IOC,C(1),NROW)                                           TRIXY
      IRET= 1                                                            TRIXY
      REWIND INA                                                         TRIXY
      RETURN                                                             TRIXY
C                                                                        TRIXY
C IF NO COLUMNS WILL FIT, FLAG  ERROR                                    TRIXY
C                                                                        TRIXY
   10 IF(IP1.GE.1 .AND. IP2.GE.1) GO TO 20                               TRIXY
      IRET=-1                                                            TRIXY
      RETURN                                                             TRIXY
C                                                                        TRIXY
C ONLY P COLUMNS WILL FIT AT A TIME                                      TRIXY
C                                                                        TRIXY
   20 CONTINUE                                                           TRIXY
      NROFA = 0                                                          TRIXY
      NROFB = 0                                                          TRIXY
C                                                                        TRIXY
C DO IP2 COLUMNS OF B REMAIN &                                           TRIXY
C IF SO, READ THEM INTO CORE.                                            TRIXY
C OTHERWISE, READ WHAT IS LEFT.                                          TRIXY
C                                                                        TRIXY
   21 CONTINUE                                                           TRIXY
      ILEFT= NCOL - NROFB                                                TRIXY
      IB = MIN0(IP,ILEFT)                                                TRIXY
      DO 22 I= 1,IB                                                      TRIXY
      II= (I-1)*MM + 1                                                   TRIXY
   22 CALL RNRW(-INB,B(II),MM)                                           TRIXY
C                                                                        TRIXY
C ZERO OUT C TO HOLD                                                     TRIXY
C NEXT PORTION OF A*B                                                    TRIXY
C                                                                        TRIXY
      NRIB= NROW*IB                                                      TRIXY
      DO 23 I= 1,NRIB                                                    TRIXY
   23 C(I)= 0.                                                           TRIXY
C                                                                        TRIXY
C DO IP1 COLUMNS OF A REMAIN&                                            TRIXY
C IF SO, READ THEM INTO CORE.                                            TRIXY
C OTHERWISE, READ WHAT IS LEFT.                                          TRIXY
C                                                                        TRIXY
   31 CONTINUE                                                           TRIXY
      ILEFT= MM - NROFA                                                  TRIXY
      IA = MIN0(IP,ILEFT)                                                TRIXY
      DO 32 I= 1,IA                                                      TRIXY
      II= (I-1)*NROW + 1                                                 TRIXY
   32 CALL RNRW(-INA,A(II),NROW)                                         TRIXY
C                                                                        TRIXY
C ACCUMULATE A(I,K)*B(K,J)                                               TRIXY
C INTO C FOR I= ALL ROWS,                                                TRIXY
C J= IB COLUMNS, AND K= IA                                               TRIXY
C                                                                        TRIXY
      DO 41 J= 1,IB                                                      TRIXY
      DO 41 I= 1,NROW                                                    TRIXY
      IJ= I + (J-1)*NROW                                                 TRIXY
      DO 42 K= 1,IA                                                      TRIXY
      KJ= (J-1)*MM + NROFA + K                                           TRIXY
      IK= I + (K-1)*NROW                                                 TRIXY
   42 C(IJ)= A(IK)*B(KJ) + C(IJ)                                         TRIXY
   41 CONTINUE                                                           TRIXY
      NROFA= NROFA + IA                                                  TRIXY
C                                                                        TRIXY
C IF ANY COLUMNS OF A ARE LEFT,                                          TRIXY
C GO TO BACK AND GET THEM.                                               TRIXY
C OTHERWISE REWIND INA, WRITE C,                                         TRIXY
C AND GO BACK FOR NEXT COLUMNS                                           TRIXY
C OF B, IF ANY.                                                          TRIXY
C                                                                        TRIXY
      IF(NROFA.LT.MM) GO TO 31                                           TRIXY
      REWIND INA                                                         TRIXY
      NROFA= 0                                                           TRIXY
      DO 24 I= 1,IB                                                      TRIXY
      II= (I-1)*NROW + 1                                                 TRIXY
   24 CALL RNRW(IOC,C(II),NROW)                                          TRIXY
      NROFB= NROFB + IB                                                  TRIXY
      IF(NROFB.LT.NCOL) GO TO 21                                         TRIXY
      RETURN                                                             TRIXY
      END                                                                TRIXY
      FUNCTION SOSCAP(X,Y,S,N,IX,IY,ISX,ISY)                             SOSCAP 
      DIMENSION X(1),Y(1)                                                SOSCAP 
      IF( N ) 120 , 120 , 100                                            SOSCAP 
  100 JX = ISX                                                           SOSCAP 
      JY = ISY                                                           SOSCAP 
      DO 110 J = 1,N                                                     SOSCAP 
      S = S + DBLE( X (JX) ) * DBLE( Y (JY) )                            SOSCAP 
      JX = JX + IX                                                       SOSCAP 
  110 JY = JY + IY                                                       SOSCAP 
  120 SOSCAP = S                                                         SOSCAP 
      RETURN                                                             SOSCAP 
      END                                                                SOSCAP 
      SUBROUTINE RNRW(IU,A,MID)                                          RNRW 
      DIMENSION A(MID)                                                   RNRW 
C                                                                        RNRW 
C     READ AND WRITE FROM/TO DISK STORAGE                                RNRW 
C                                                                        RNRW 
C     IF IU .GT. 0 , WRITE OPTION                                        RNRW 
C     IF IU .LT. 0 , READ OPTION                                         RNRW 
C                                                                        RNRW 
      IF( IU .LT. 0 ) GO TO 10                                           RNRW 
      WRITE(IU) A                                                        RNRW 
      RETURN                                                             RNRW 
   10 IB = IABS( IU )                                                    RNRW 
      READ(IB) A                                                         RNRW 
      RETURN                                                             RNRW 
      END                                                                RNRW 
      SUBROUTINE FUTSOL (ND,MD,KD,NI,MM,NO,NAT,NW,LTAPE,RHSTAP)          FUTSOL 
C                                                                        FUTSOL 
C   ***   THIS IS THE REAL VERSION OF FUTSOL                             FUTSOL 
C                                                                        FUTSOL 
C                                                                        FUTSOL 
C                                                                        FUTSOL 
C           ****    ***/  *******  *****  *       ***/          *        FUTSOL 
C           *   *  *  /*     *     *      *      *  /*        ******     FUTSOL 
C     ****  ****   * / *     *     ***    *      * / *  ****     *  *    FUTSOL 
C           *      */  *     *     *      *      */  *           ***     FUTSOL 
C           *      /***      *     *      *****  /***            *  *    FUTSOL 
C                                                                        FUTSOL 
C             D I R E C T   M A T R I X   S O L U T I O N                FUTSOL 
C                                                                        FUTSOL 
C     WRITTEN BY J. L. HESS * PROGRAMMED BY C. D. SCHOOR                 FUTSOL 
C*** ***LTAPE IS THE TAPE THE L(I,J) MATRIX WILL BE PUT ON               FUTSOL 
C*** ***RHSTAP IS THE TAPE THAT THE RIGHT HAND SIDES ARE INPUT ON        FUTSOL 
      INTEGER RHSTAP                                                     FUTSOL 
C                                                                        FUTSOL 
      DIMENSION  A(3700)                                                 FUTSOL 
C                                                                        FUTSOL 
      LOGICAL JPASS1                                                     FUTSOL 
      LOGICAL  LASTRS                                                    FUTSOL 
      LOGICAL  LAST                                                      FUTSOL 
C                                                                        FUTSOL 
    1 CONTINUE                                                           FUTSOL 
      NATAPE = NAT                                                       FUTSOL 
      REWIND NATAPE                                                      FUTSOL 
      REWIND NW                                                          FUTSOL 
      N = ND                                                             FUTSOL 
      KORE = KD                                                          FUTSOL 
C*** *  RHSTAP = 0 IF THERE ARE NO RHS TO BE PROCESSED THIS RUN          FUTSOL 
      IF(RHSTAP .NE. 0 )GO TO 5                                          FUTSOL 
      MRHS = 0                                                           FUTSOL 
      GO TO 6                                                            FUTSOL 
    5 REWIND RHSTAP                                                      FUTSOL 
      READ(RHSTAP)MRHS                                                   FUTSOL 
    6 M = KORE/N -1                                                      FUTSOL 
      MMAX = MIN0(MRHS,M)                                                FUTSOL 
      NPM = N + MMAX                                                     FUTSOL 
      IF (MAX0(3 * NPM, M * N) .GT. KORE) RETURN                         FUTSOL 
      M = 0                                                              FUTSOL 
      NPM = N                                                            FUTSOL 
      MT = MM                                                            FUTSOL 
      REWIND MT                                                          FUTSOL 
      NIN = NI                                                           FUTSOL 
      REWIND NIN                                                         FUTSOL 
      NOUT = NO                                                          FUTSOL 
      REWIND NOUT                                                        FUTSOL 
      NN = N                                                             FUTSOL 
      NEL = NPM                                                          FUTSOL 
C                                                                        FUTSOL 
C - - CALCULATE THE MAXIMUM NO. OF ROWS, @K@                             FUTSOL 
C                                                                        FUTSOL 
C*** ***CALCULATE THE NUMBER OF COLUMNS TO BRING OFF OF THE RHS TAPE     FUTSOL 
      MTOTAL = 0                                                         FUTSOL 
      M = MMAX                                                           FUTSOL 
      IF(M .EQ. 0)GO TO 295                                              FUTSOL 
C*** ***MTOTALIS THE TOTAL NUMBER OF RHS COLUMNS ALREADY BROUGHT IN      FUTSOL 
  109 MTOTAL = MTOTAL + M                                                FUTSOL 
      LASTRS = MTOTAL.GE. MRHS                                           FUTSOL 
      MTOTAL = MTOTAL - M                                                FUTSOL 
      IF (LASTRS)M = MRHS - MTOTAL                                       FUTSOL 
      MP1 = M + 1                                                        FUTSOL 
      MM1 = M - 1                                                        FUTSOL 
      MTOTAL = MTOTAL + M                                                FUTSOL 
C*** ***BRING IN M COLUMNS OF RHS                                        FUTSOL 
      KINIT = KORE - (M*N)                                               FUTSOL 
      IINIT = KINIT                                                      FUTSOL 
      NBEG = KINIT + 1                                                   FUTSOL 
      NEND = KINIT+ N                                                    FUTSOL 
      DO 110 J =1,M                                                      FUTSOL 
      READ (RHSTAP)( A(I),I=NBEG,NEND)                                   FUTSOL 
      NBEG = NEND + 1                                                    FUTSOL 
  110 NEND = NEND + N                                                    FUTSOL 
C*** ***BRING IN L(I,J) MATRIX AND APPLY IT TO RHS                       FUTSOL 
      NBEG = 1 + KINIT                                                   FUTSOL 
      NEND = 1 + (M-1) * N + KINIT                                       FUTSOL 
      KSUM = 0                                                           FUTSOL 
      NLCNT = 0                                                          FUTSOL 
C*** ***DO TRIANGULAR SECTION OF LMATRIX                                 FUTSOL 
  111 READ (LTAPE)K                                                      FUTSOL 
      NLCNT = NLCNT + 1                                                  FUTSOL 
C*** ***KSUM IS THE TOTAL NUMBER OF L ROWS THAT WILL                     FUTSOL 
C*** ***BE READ AFTER THIS TRIANGULAR SECTION IS FINISHED                FUTSOL 
      KSUM = KSUM + K                                                    FUTSOL 
      KM1 = K - 1                                                        FUTSOL 
C***   ***NOTE THAT KM1 CAN@T BE 0 SINCE K CAN@T BE 1 AND STILL HAVE SOM FUTSOL 
C***   ***ON THE LTAPE                                                   FUTSOL 
      DO 114  I = 1,KM1                                                  FUTSOL 
      NBEG = NBEG + 1                                                    FUTSOL 
      NEND = NEND + 1                                                    FUTSOL 
C*** ***READ 1 ROW OF L(I,J) FROM LTAPE---K-1 TIMES---EACH TIME          FUTSOL 
C*** ***STARTING WITH L(1)                                               FUTSOL 
      READ (LTAPE) ( A(NN),NN=1,I)                                       FUTSOL 
      JCNT = -1                                                          FUTSOL 
C*** ***REDUCE THE RHS BY GOING ACROSS A SOLUTION ROW (WHICH             FUTSOL 
C*** ***ARE NOT IN CONSECUTIVE ORDER, BUT A(1), A(N+1), A(2N+1) ETC.)    FUTSOL 
      DO 113 NPP = NBEG,NEND,N                                           FUTSOL 
      JCNT = JCNT + 1                                                    FUTSOL 
      SUM = 0.0                                                          FUTSOL 
      NROW = KINIT + ( JCNT * N )                                        FUTSOL 
      DO 112 NN=1,I                                                      FUTSOL 
      NROW = NROW + 1                                                    FUTSOL 
  112 SUM = SUM + ( A(NN)*A(NROW))                                       FUTSOL 
  113 A(NPP) = A(NPP) - SUM                                              FUTSOL 
  114 CONTINUE                                                           FUTSOL 
      IF (KSUM .EQ. N)GO TO 116                                          FUTSOL 
C*** ***KSUM = N IF YOU HAVE READ ENTIRE LMATRIX AND                     FUTSOL 
C*** ***THERE IS NO CONSTANT SECTION LEFT                                FUTSOL 
      NTBEG = NBEG                                                       FUTSOL 
      NTEND = NEND                                                       FUTSOL 
      KSUMP1 = KSUM + 1                                                  FUTSOL 
C*** ***READ REST OF LROWS 1 ROW AT A TIME FOR CONSTANT SECTION          FUTSOL 
      DO 115 I=KSUMP1,N                                                  FUTSOL 
      NTBEG = NTBEG + 1                                                  FUTSOL 
      NTEND = NTEND + 1                                                  FUTSOL 
      READ (LTAPE)( A(NN),NN=1,K)                                        FUTSOL 
      JCNT = -1                                                          FUTSOL 
C*** ***PARTIALLY  REDUCE A RHS ACROSS A RHS ROW BY APPLYING K NUMBER    FUTSOL 
C*** ***OF L(I,J) S                                                      FUTSOL 
      DO 124 NPP = NTBEG,NTEND,N                                         FUTSOL 
      JCNT = JCNT + 1                                                    FUTSOL 
      SUM = 0.0                                                          FUTSOL 
      NROW = KINIT + ( JCNT * N )                                        FUTSOL 
      DO 123 NN = 1,K                                                    FUTSOL 
      NROW = NROW + 1                                                    FUTSOL 
  123 SUM = SUM + ( A(NN) * A(NROW) )                                    FUTSOL 
  124 A(NPP) = A(NPP) - SUM                                              FUTSOL 
  115 CONTINUE                                                           FUTSOL 
      NBEG = NBEG + 1                                                    FUTSOL 
      NEND = NEND + 1                                                    FUTSOL 
C*** ***KINIT IS HOW FAR DOWN A COLUMN OF RHS TO START MULTIPLYING BY    FUTSOL 
C*** ***L(I,J) AT EACH PASS THROUGH                                      FUTSOL 
      KINIT = KINIT + K                                                  FUTSOL 
C*** ***IF KSUMP1 = N THERE ARE NO MORE L(I,J)@S LEFT                    FUTSOL 
      IF(KSUMP1 .LT. N)GO TO 111                                         FUTSOL 
C*** ***WRITE OUT ALL BUT LAST K ROWS OF RHS IN ROW ORDER ON NATAPE      FUTSOL 
  116 B = 4*M + 3                                                        FUTSOL 
      C = -2 * KORE                                                      FUTSOL 
      K = (  -B  +  SQRT( B**2  -4.0*C )  )/2.0                          FUTSOL 
      IF(K .GT. ND) K = ND                                               FUTSOL 
      KF = K                                                             FUTSOL 
      KM1 = K - 1                                                        FUTSOL 
      KLEFT = N - KF + IINIT                                             FUTSOL 
      INITP1 = IINIT + 1                                                 FUTSOL 
      NEND = (M-1)*N + IINIT                                             FUTSOL 
      DO 117 NPP = INITP1,KLEFT                                          FUTSOL 
      NEND = NEND + 1                                                    FUTSOL 
  117 WRITE(NATAPE) ( A(J),J=NPP,NEND,N)                                 FUTSOL 
      REWIND NATAPE                                                      FUTSOL 
C*** ***JPASS1 IS TRUE ON 1ST PASS THRU BACK SOLUTION                    FUTSOL 
      JPASS1 = .TRUE.                                                    FUTSOL 
C                                                                        FUTSOL 
C***   ***PUT REMAINING RHS IN CONTIGUOUS LOCATIONS BY COLUMNS           FUTSOL 
C***  FROM KORE - (M * KF) + 1  TO  KORE                                 FUTSOL 
C                                                                        FUTSOL 
      NNEW = KORE - KF + 1                                               FUTSOL 
C                                                                        FUTSOL 
C***   ***IF M = 1, THE ELTS OF THE 1 RHS COLUMN ARE ALREADY IN CONTIGUO FUTSOL 
C***   ***LOCATIONS                                                      FUTSOL 
C                                                                        FUTSOL 
      IF (M.EQ.1)  GO TO 1118                                            FUTSOL 
      DO 118 I = 1,MM1                                                   FUTSOL 
      NOLD = KORE - (I*N) + 1                                            FUTSOL 
      DO 118 J = 1,KF                                                    FUTSOL 
      NNEW = NNEW - 1                                                    FUTSOL 
      NOLD = NOLD - 1                                                    FUTSOL 
      A(NNEW) = A(NOLD)                                                  FUTSOL 
  118 CONTINUE                                                           FUTSOL 
 1118 CONTINUE                                                           FUTSOL 
C                                                                        FUTSOL 
C***   ***NOW NNEW = KORE - (M*KF) + 1                                   FUTSOL 
C***   ***NOW NOLD = KORE - (M - 1) * N + 1 - KF                         FUTSOL 
C  **   SKIP 1ST PART OF TRAPEZOIDAL MATRIX ON LTAPE                     FUTSOL 
C  **   READ IN LAST K ROWS OF TRAPEZOIDAL MATRIX AND                    FUTSOL 
C*** ***ATTATCH RHS TO IT SO THAT EVERYTHING IS IN CONSECUTIVE ORDER     FUTSOL 
      NREMAN = ND - K                                                    FUTSOL 
      IF( NREMAN .EQ. 0 )GO TO 126                                       FUTSOL 
      DO 122 I=1,NREMAN                                                  FUTSOL 
  122 READ(LTAPE) IDUMMY                                                 FUTSOL 
  126 NEND = 0                                                           FUTSOL 
      KCNT = K                                                           FUTSOL 
      NNEW = NNEW - 1                                                    FUTSOL 
C***   ***NOTE THAT K = KF WHICH IS ALREADY KNOWN IN CORE                FUTSOL 
      DO 121 JCNT = 1,K                                                  FUTSOL 
      NBEG = NEND + 1                                                    FUTSOL 
      KCNT = KCNT - 1                                                    FUTSOL 
      NEND = NBEG + KCNT                                                 FUTSOL 
      READ(LTAPE)IDUMMY,(A(J),J=NBEG,NEND)                               FUTSOL 
      NNEW = NNEW + 1                                                    FUTSOL 
      KEND = (MM1 * KF) + NNEW                                           FUTSOL 
      DO 121 NPP=NNEW,KEND,KF                                            FUTSOL 
      NEND = NEND + 1                                                    FUTSOL 
  121 A(NEND) = A(NPP)                                                   FUTSOL 
      REWIND LTAPE                                                       FUTSOL 
C                                                                        FUTSOL 
C  **  SKIP OVER L MATRIX ON LTAPE TO GET TO TRAPEZOIDAL MATRIX          FUTSOL 
C                                                                        FUTSOL 
      KRED = 0                                                           FUTSOL 
      DO 128 I=1,NLCNT                                                   FUTSOL 
      READ(LTAPE)KREAD                                                   FUTSOL 
      KRED = KRED + KREAD                                                FUTSOL 
      KREAD = KREAD + ( N - KRED - 1)                                    FUTSOL 
      DO 128 LREAD = 1,KREAD                                             FUTSOL 
  128 READ(LTAPE)                                                        FUTSOL 
C                                                                        FUTSOL 
C - - THERE, NOW WE CAN START THE BACK-SOLUTION                          FUTSOL 
C * * NOTE..THE FIRST AVAILABLE LOCATION FOR THE SOLUTIONS IS A(N1)      FUTSOL 
C                                                                        FUTSOL 
C                                                                        FUTSOL 
C***   ***NL IS THE LAST SUBSCRIPT + 1 OF THE TRAPEZOIDAL A MATRIX THAT  FUTSOL 
C***   ***CORE                                                           FUTSOL 
C                                                                        FUTSOL 
      NL = NEND + 1                                                      FUTSOL 
      NREM = N                                                           FUTSOL 
      NPM = N + M                                                        FUTSOL 
      NEL = NPM                                                          FUTSOL 
      MP1 = M + 1                                                        FUTSOL 
      LAST = K .EQ. N                                                    FUTSOL 
      NPASS = 0                                                          FUTSOL 
C                                                                        FUTSOL 
C - - SOLVE FOR THE ANSWERS CORRESPONDING TO @K@ ROWS                    FUTSOL 
C                                                                        FUTSOL 
  119 KM1 = K - 1                                                        FUTSOL 
      KP1 = K + 1                                                        FUTSOL 
      NS = NL - MP1                                                      FUTSOL 
      NPASS = NPASS + 1                                                  FUTSOL 
      DO 130 MN = 1, M                                                   FUTSOL 
      NF = NS + MN                                                       FUTSOL 
      A(NF) = A(NF) / A(NS)                                              FUTSOL 
      NT = NS                                                            FUTSOL 
      IF (KM1 .EQ. 0) GO  TO 130                                         FUTSOL 
      DO 125 IB = 1, KM1                                                 FUTSOL 
      NF = NF - IB - M                                                   FUTSOL 
      NT = NT - MP1 - IB                                                 FUTSOL 
      SUM = 0.0                                                          FUTSOL 
      NP = NF                                                            FUTSOL 
      N2 = MP1 + IB                                                      FUTSOL 
      DO 120 IO = 1, IB                                                  FUTSOL 
      NN = NT + IO                                                       FUTSOL 
      NP = NP + N2 - IO                                                  FUTSOL 
  120 SUM = SUM + A(NN) * A(NP)                                          FUTSOL 
  125 A(NF) = (A(NF) - SUM) / A(NT)                                      FUTSOL 
  130 CONTINUE                                                           FUTSOL 
C                                                                        FUTSOL 
C - - MOVE THE SOLUTIONS TO CONTIGUOUS LOCATIONS STARTING AT A(N1)       FUTSOL 
C                                                                        FUTSOL 
      N1 = KORE + 1                                                      FUTSOL 
      DO 140 NN = 1, K                                                   FUTSOL 
      DO 135 MN = 1, M                                                   FUTSOL 
      NL = NL - 1                                                        FUTSOL 
      N1 = N1 - 1                                                        FUTSOL 
  135 A(N1) = A(NL)                                                      FUTSOL 
  140 NL = NL - NN                                                       FUTSOL 
C                                                                        FUTSOL 
C - - WRITE THE SOLUTIONS ON TAPE                                        FUTSOL 
C                                                                        FUTSOL 
      WRITE (NIN) K                                                      FUTSOL 
      NS = N1 - 1                                                        FUTSOL 
      DO 145 MN = 1, M                                                   FUTSOL 
      NT = NS + MN                                                       FUTSOL 
  145 WRITE ( NIN ) (A(IO), IO = NT, KORE, M)                            FUTSOL 
C                                                                        FUTSOL 
C - - TEST IF THIS IS THE LAST PASS                                      FUTSOL 
C                                                                        FUTSOL 
      IF (LAST) GO TO 200                                                FUTSOL 
C                                                                        FUTSOL 
C - - WE MUST NOW MODIFY THE TRIANGULAR MATRIX TO REFLECT THE EFFECT OF  FUTSOL 
C     THE SOLUTIONS OBTAINED SO FAR  (EQ 21)                             FUTSOL 
C * * NOTE..LOCATIONS A(1) TO A(N1-1) ARE NOW FREE TO USE                FUTSOL 
C                                                                        FUTSOL 
C - - CALCULATE THE NEXT VALUES OF @NEL@ AND @NREM@                      FUTSOL 
C                                                                        FUTSOL 
      NELOLD = NEL                                                       FUTSOL 
      KOLD = K                                                           FUTSOL 
      NEL = NEL - K                                                      FUTSOL 
      NREM = NREM - K                                                    FUTSOL 
C                                                                        FUTSOL 
      NROW = NREM - K + 1                                                FUTSOL 
      IF (K .LT. NREM) GO TO 150                                         FUTSOL 
      LAST = .TRUE.                                                      FUTSOL 
      NROW = 1                                                           FUTSOL 
      K = NREM                                                           FUTSOL 
  150 NS = 1                                                             FUTSOL 
      NT = NELOLD + 1                                                    FUTSOL 
C                                                                        FUTSOL 
C - - READ IN THE ROWS TO BE MODIFIED                                    FUTSOL 
C                                                                        FUTSOL 
      DO 190 IB = 1, NREM                                                FUTSOL 
      NT = NT - 1                                                        FUTSOL 
      IF (IB .LE. NROW) GO TO 160                                        FUTSOL 
      NS = NS + NN                                                       FUTSOL 
      NT = NT + NN                                                       FUTSOL 
  160 IF (.NOT. JPASS1)GO TO 161                                         FUTSOL 
      NBEG = NT - M + 1                                                  FUTSOL 
C*** ***READ RHS FROM NATAPE                                             FUTSOL 
      READ (NATAPE) ( A(IO),IO = NBEG,NT)                                FUTSOL 
      NT = NT - M                                                        FUTSOL 
      READ(LTAPE)NN,(A(IO),IO=NS,NT)                                     FUTSOL 
      NT = NT + M                                                        FUTSOL 
      NN = NN + M                                                        FUTSOL 
      GO TO 163                                                          FUTSOL 
  161 READ(MT)NN,(A(IO),IO=NS,NT)                                        FUTSOL 
  163 NP = N1 - 1                                                        FUTSOL 
      NF = NT - M - KM1                                                  FUTSOL 
      NN = NN - KOLD                                                     FUTSOL 
      DO 170 MN = 1, M                                                   FUTSOL 
      N2 = NF                                                            FUTSOL 
      NA = NP + MN                                                       FUTSOL 
      NB = NA                                                            FUTSOL 
      SUM = 0.0                                                          FUTSOL 
      DO 165 IO = 1, KOLD                                                FUTSOL 
      SUM = SUM + A(N2) * A(NA)                                          FUTSOL 
      N2 = N2 + 1                                                        FUTSOL 
  165 NA = NA + M                                                        FUTSOL 
      N2 = N2 + MN - 1                                                   FUTSOL 
  170 A(N2) = A(N2) - SUM                                                FUTSOL 
C                                                                        FUTSOL 
C - - WRITE THE MODIFIED ROW ON TAPE OR CONDENSE THE ROW                 FUTSOL 
C                                                                        FUTSOL 
      NL = NT - M + 1                                                    FUTSOL 
      IF (IB .GE. NROW) GO TO 175                                        FUTSOL 
      NF = NL - KP1                                                      FUTSOL 
      WRITE (NOUT) NN, (A(IO), IO = NS, NF), (A(IO), IO = NL, NT)        FUTSOL 
      GO TO 190                                                          FUTSOL 
  175 NF = NL - KOLD                                                     FUTSOL 
      DO 180 MN = NL, NT                                                 FUTSOL 
      A(NF) = A(MN)                                                      FUTSOL 
  180 NF = NF + 1                                                        FUTSOL 
  190 CONTINUE                                                           FUTSOL 
      IF( .NOT. JPASS1 ) GO TO 195                                       FUTSOL 
      JPASS1= .FALSE.                                                    FUTSOL 
      REWIND NATAPE                                                      FUTSOL 
  195 REWIND MT                                                          FUTSOL 
      REWIND NOUT                                                        FUTSOL 
C                                                                        FUTSOL 
C - - SWITCH THE TAPES                                                   FUTSOL 
C                                                                        FUTSOL 
      NT = MT                                                            FUTSOL 
      MT = NOUT                                                          FUTSOL 
      NOUT = NT                                                          FUTSOL 
C                                                                        FUTSOL 
C - - LOOP BACK THRU THE SOLUTION                                        FUTSOL 
C                                                                        FUTSOL 
      NL = NF                                                            FUTSOL 
      GO TO 119                                                          FUTSOL 
C                                                                        FUTSOL 
C - - START TO WRAP IT UP                                                FUTSOL 
C                                                                        FUTSOL 
  200 REWIND NIN                                                         FUTSOL 
      N2 = N                                                             FUTSOL 
C                                                                        FUTSOL 
C * * NOTE.. AT THIS POINT ALL LOCATIONS A(1) THRU A(KORE) ARE FREE      FUTSOL 
C                                                                        FUTSOL 
      DO 220 IB = 1, NPASS                                               FUTSOL 
      READ (NIN) K                                                       FUTSOL 
      N1 = N2 - K + 1                                                    FUTSOL 
      NS = N1                                                            FUTSOL 
      NT = N2                                                            FUTSOL 
C                                                                        FUTSOL 
C - - READ IN THE SOLUTIONS                                              FUTSOL 
C                                                                        FUTSOL 
      DO 210 IO = 1, M                                                   FUTSOL 
      READ (NIN) (A(NN), NN = NS, NT)                                    FUTSOL 
      NT = NT + N                                                        FUTSOL 
  210 NS = NS + N                                                        FUTSOL 
  220 N2 = N1 - 1                                                        FUTSOL 
C                                                                        FUTSOL 
C  ---  REWIND ALL INPUT TAPES                                           FUTSOL 
      REWIND NIN                                                         FUTSOL 
      REWIND MT                                                          FUTSOL 
      REWIND NOUT                                                        FUTSOL 
C - - WRITE THE SOLUTIONS ON TAPE                                        FUTSOL 
C                                                                        FUTSOL 
      NT = 0                                                             FUTSOL 
      DO 230 IO = 1, M                                                   FUTSOL 
      NS = NT + 1                                                        FUTSOL 
      NT = NT + N                                                        FUTSOL 
  230 WRITE (NW) (A(NN), NN = NS, NT)                                    FUTSOL 
C                                                                        FUTSOL 
      IF(LASTRS) GO TO 295                                               FUTSOL 
C*** ***IF THERE ARE MORE RHS TO BE GOTTEN FROM RHS TAPE, SWITCH TAPES   FUTSOL 
C*** ***BACK SO THAT  MT WILL CONAIN THE TRAPEZOIDAL MATRIX              FUTSOL 
C*** ***NATAPE WILL HAVE NOTHING USEFUL ON IT.                           FUTSOL 
      NTEMP = NATAPE                                                     FUTSOL 
      NATAPE = MT                                                        FUTSOL 
      MT = NTEMP                                                         FUTSOL 
      REWIND NATAPE                                                      FUTSOL 
      REWIND LTAPE                                                       FUTSOL 
      GO TO 109                                                          FUTSOL 
  295 CONTINUE                                                           FUTSOL 
C                                                                        FUTSOL 
C   ***   REWIND ALL FILES EXCEPT THE OUTPUT FILE   NW                   FUTSOL 
C                                                                        FUTSOL 
      REWIND NI                                                          FUTSOL 
      REWIND MM                                                          FUTSOL 
      REWIND NO                                                          FUTSOL 
      REWIND NAT                                                         FUTSOL 
      REWIND RHSTAP                                                      FUTSOL 
      MD = MTOTAL                                                        FUTSOL 
 9999 CONTINUE                                                           FUTSOL 
      RETURN                                                             FUTSOL 
      END                                                                FUTSOL 
      SUBROUTINE QUAS (ND,MD,KD,NI,MM,NO,NAT,NW,LTAPE,RHSTAP)            QUAS 
C   ***   REAL   SOLVIT     QUASI INVERSE                                QUAS 
C                                                                        QUAS 
C           ****    ***/  *******  *****  *       ***/          *        QUAS 
C           *   *  *  /*     *     *      *      *  /*        ******     QUAS 
C     ****  ****   * / *     *     ***    *      * / *  ****     *  *    QUAS 
C           *      */  *     *     *      *      */  *           ***     QUAS 
C           *      /***      *     *      *****  /***            *  *    QUAS 
C                                                                        QUAS 
C             D I R E C T   M A T R I X   S O L U T I O N                QUAS 
C                                                                        QUAS 
C*** ***LTAPE IS THE TAPE THE L(I,J) MATRIX WILL BE PUT ON               QUAS 
C*** ***RHSTAP IS THE TAPE THAT THE RIGHT HAND SIDES ARE INPUT ON        QUAS 
      DIMENSION  A(3700)                                                 QUAS 
      INTEGER RHSTAP                                                     QUAS 
C                                                                        QUAS 
C                                                                        QUAS 
      LOGICAL JPASS1                                                     QUAS 
      LOGICAL  LASTRS                                                    QUAS 
      LOGICAL  LAST                                                      QUAS 
C                                                                        QUAS 
    1 CONTINUE                                                           QUAS 
      NATAPE = NAT                                                       QUAS 
      REWIND NATAPE                                                      QUAS 
      REWIND NW                                                          QUAS 
      N = ND                                                             QUAS 
      KORE = KD                                                          QUAS 
C*** *  RHSTAP = 0 IF THERE ARE NO RHS TO BE PROCESSED THIS RUN          QUAS 
      IF(RHSTAP .NE. 0 )GO TO 5                                          QUAS 
      MRHS = 0                                                           QUAS 
      GO TO 6                                                            QUAS 
    5 REWIND RHSTAP                                                      QUAS 
      READ(RHSTAP)MRHS                                                   QUAS 
    6 M = KORE / N  -  1                                                 QUAS 
      MMAX = MIN0(MRHS,M)                                                QUAS 
      NPM = N + MMAX                                                     QUAS 
      IF (MAX0(3 * NPM, M * N) .GT. KORE) RETURN                         QUAS 
      M = 0                                                              QUAS 
      NPM = N                                                            QUAS 
      MT = MM                                                            QUAS 
      REWIND MT                                                          QUAS 
      NIN = NI                                                           QUAS 
      REWIND NIN                                                         QUAS 
      NOUT = NO                                                          QUAS 
      REWIND NOUT                                                        QUAS 
      MP1 = M + 1                                                        QUAS 
      NN = N                                                             QUAS 
      NEL = NPM                                                          QUAS 
C                                                                        QUAS 
C - - CALCULATE THE MAXIMUM NO. OF ROWS, @K@                             QUAS 
C                                                                        QUAS 
   10 K = (KORE - NEL) / NEL                                             QUAS 
C                                                                        QUAS 
C - - TEST TO SEE IF THE REST OF THE MATRIX WILL FIT IN CORE             QUAS 
C                                                                        QUAS 
      LAST = K .GE. NN                                                   QUAS 
      IF( .NOT. LAST ) GO TO 30                                          QUAS 
      K = NN                                                             QUAS 
      B = 3 + MMAX*2                                                     QUAS 
      C = 2 * (1 + MMAX - KORE )                                         QUAS 
      KTEMP = ( -B + SQRT(B**2  - 4.0* C )  )  / 2.0                     QUAS 
      IF(KTEMP .GE. K)GO TO 30                                           QUAS 
C                                                                        QUAS 
C***   *  WE MUST REDUCE THE FINAL K                                     QUAS 
C                                                                        QUAS 
      K = KTEMP                                                          QUAS 
      LAST = .FALSE.                                                     QUAS 
C                                                                        QUAS 
C - - READ @K@ ROWS OF THE AUGMENTED @A@ MATRIX                          QUAS 
C                                                                        QUAS 
   30 NT = 0                                                             QUAS 
      DO 40 IB = 1, K                                                    QUAS 
      NS = NT + 1                                                        QUAS 
      NT = NT + NEL                                                      QUAS 
   40 READ (NIN) (A(IO), IO = NS, NT)                                    QUAS 
C                                                                        QUAS 
C - - CHECK TO SEE IF WE WERE UNLUCKY ENOUGH TO END UP WITH ONLY ONE ROW QUAS 
C                                                                        QUAS 
      IF (K .EQ. 1) GO TO 90                                             QUAS 
C                                                                        QUAS 
C - - @K@ IS GREATER THAN @1@ SO WE CAN START THE TRIANGULARIZATION      QUAS 
C                                                                        QUAS 
      NELP1 = NEL + 1                                                    QUAS 
      NS = - NEL                                                         QUAS 
      NELP2 = NELP1 + 1                                                  QUAS 
C                                                                        QUAS 
C - - FORM THE @TRAPEZOIDAL@ ARRAY  (8)                                  QUAS 
C                                                                        QUAS 
      DO 50 IB = 2, K                                                    QUAS 
      NP = NELP2 - IB                                                    QUAS 
      NS = NS + NELP1                                                    QUAS 
      NT = NS                                                            QUAS 
      DO 50 IO = IB, K                                                   QUAS 
      NT = NT + NEL                                                      QUAS 
      MN = NT                                                            QUAS 
      NB = NS                                                            QUAS 
      A(NT) = A(NT) / A(NS)                                              QUAS 
      DO 50 NF = 2, NP                                                   QUAS 
      MN = MN + 1                                                        QUAS 
      NB = NB + 1                                                        QUAS 
   50 A(MN) = A(MN) - A(NT) * A(NB)                                      QUAS 
C*** ***WRITE PART OF THE LMATRIX ON LTAPE   (TRIANGULAR PART)           QUAS 
      WRITE (LTAPE)K                                                     QUAS 
      LBEG =NELP1                                                        QUAS 
      KM1 = K - 1                                                        QUAS 
      DO 55 IB = 1,KM1                                                   QUAS 
      LEND = LBEG + IB- 1                                                QUAS 
      WRITE (LTAPE) ( A(L),L=LBEG,LEND)                                  QUAS 
   55 LBEG = LBEG + NN                                                   QUAS 
C                                                                        QUAS 
C - - WRITE THE @TRAPEZOIDAL@ MATRIX ON TAPE                             QUAS 
C                                                                        QUAS 
      NT = 0                                                             QUAS 
      NP = NEL                                                           QUAS 
      NS = - NEL                                                         QUAS 
      DO 60 IO = 1, K                                                    QUAS 
      NS = NS + NELP1                                                    QUAS 
      NT = NT + NEL                                                      QUAS 
      WRITE (MT) NP, (A(IB), IB = NS, NT)                                QUAS 
   60 NP = NP - 1                                                        QUAS 
      IF (LAST) GO TO 90                                                 QUAS 
      NP = NP - M                                                        QUAS 
      NS = KORE - NEL + 1                                                QUAS 
C                                                                        QUAS 
C - - READ ANOTHER ROW                                                   QUAS 
C                                                                        QUAS 
      DO 80 IO = 1, NP                                                   QUAS 
      READ (NIN) (A(IB), IB = NS, KORE)                                  QUAS 
C                                                                        QUAS 
C - - MODIFY THIS ROW BY THE @TRAPEZOIDAL@ ARRAY                         QUAS 
C                                                                        QUAS 
      NT = 1                                                             QUAS 
      MN = NS                                                            QUAS 
      DO 70 IB = 1, K                                                    QUAS 
      NB = NT                                                            QUAS 
      NF = MN + 1                                                        QUAS 
      A(MN) = A(MN) / A(NT)                                              QUAS 
      DO 65 NN = NF, KORE                                                QUAS 
      NB = NB + 1                                                        QUAS 
   65 A(NN) = A(NN) - A(MN) * A(NB)                                      QUAS 
      MN = NF                                                            QUAS 
   70 NT = NT + NELP1                                                    QUAS 
C                                                                        QUAS 
C - - WRITE THE MODIFIED ROW ON TAPE                                     QUAS 
C                                                                        QUAS 
C*** ***WRITE REST OF LMATRIX ON LTAPE                                   QUAS 
      MNM1 = MN - 1                                                      QUAS 
      WRITE(LTAPE)(A(J),J=NS,MNM1)                                       QUAS 
   80 WRITE (NOUT)     (A(NT), NT = MN, KORE)                            QUAS 
      REWIND NOUT                                                        QUAS 
      REWIND NIN                                                         QUAS 
C                                                                        QUAS 
C - - SWITCH THE TAPES                                                   QUAS 
C                                                                        QUAS 
      NT = NIN                                                           QUAS 
      NIN = NOUT                                                         QUAS 
      NOUT = NT                                                          QUAS 
C                                                                        QUAS 
C - - RE-CALCULATE ROW LENGTH AND LOOP BACK                              QUAS 
C                                                                        QUAS 
      NEL = NEL - K                                                      QUAS 
      NN = NEL - M                                                       QUAS 
      GO TO 10                                                           QUAS 
C                                                                        QUAS 
C - - REWIND ALL TAPES                                                   QUAS 
C                                                                        QUAS 
   90 REWIND NIN                                                         QUAS 
      REWIND NOUT                                                        QUAS 
C                                                                        QUAS 
  105 N1 = KORE - K * M + 1                                              QUAS 
      REWIND LTAPE                                                       QUAS 
      REWIND MT                                                          QUAS 
C*** ***CALCULATE THE NUMBER OF COLUMNS TO BRING OFF OF THE RHS TAPE     QUAS 
      MTOTAL = 0                                                         QUAS 
      M = MMAX                                                           QUAS 
      IF(M .EQ. 0)GO TO 295                                              QUAS 
C*** ***MTOTALIS THE TOTAL NUMBER OF RHS COLUMNS ALREADY BROUGHT IN      QUAS 
  109 MTOTAL = MTOTAL + M                                                QUAS 
      LASTRS = MTOTAL.GE. MRHS                                           QUAS 
      MTOTAL = MTOTAL - M                                                QUAS 
      IF (LASTRS)M = MRHS - MTOTAL                                       QUAS 
      MTOTAL = MTOTAL + M                                                QUAS 
C*** ***BRING IN M COLUMNS OF RHS                                        QUAS 
      KINIT = KORE - (M*N)                                               QUAS 
      IINIT = KINIT                                                      QUAS 
      NBEG = KINIT + 1                                                   QUAS 
      NEND = KINIT+ N                                                    QUAS 
      DO 110 J =1,M                                                      QUAS 
      READ (RHSTAP)( A(I),I=NBEG,NEND)                                   QUAS 
      NBEG = NEND + 1                                                    QUAS 
  110 NEND = NEND + N                                                    QUAS 
C*** ***BRING IN L(I,J) MATRIX AND APPLY IT TO RHS                       QUAS 
      NBEG = 1 + KINIT                                                   QUAS 
      NEND = 1 + (M-1) * N + KINIT                                       QUAS 
      KSUM = 0                                                           QUAS 
C*** ***DO TRIANGULAR SECTION OF LMATRIX                                 QUAS 
      NLCNT = 0                                                          QUAS 
  111 READ (LTAPE)K                                                      QUAS 
      NLCNT = NLCNT + 1                                                  QUAS 
C*** ***KSUM IS THE TOTAL NUMBER OF L ROWS THAT WILL                     QUAS 
C*** ***BE READ AFTER THIS TRIANGULAR SECTION IS FINISHED                QUAS 
      KSUM = KSUM + K                                                    QUAS 
      KM1 = K - 1                                                        QUAS 
C***   ***NOTE THAT KM1 CAN@T BE 0 SINCE K CAN@T BE 1 AND STILL HAVE SOM QUAS 
C***   ***ON THE LTAPE                                                   QUAS 
      DO 114  I = 1,KM1                                                  QUAS 
      NBEG = NBEG + 1                                                    QUAS 
      NEND = NEND + 1                                                    QUAS 
C*** ***READ 1 ROW OF L(I,J) FROM LTAPE---K-1 TIMES---EACH TIME          QUAS 
C*** ***STARTING WITH L(1)                                               QUAS 
 1114 CONTINUE                                                           QUAS 
      READ (LTAPE) ( A(NN),NN=1,I)                                       QUAS 
      JCNT = -1                                                          QUAS 
C*** ***REDUCE THE RHS BY GOING ACROSS A SOLUTION ROW (WHICH             QUAS 
C*** ***ARE NOT IN CONSECUTIVE ORDER, BUT A(1), A(N+1), A(2N+1) ETC.)    QUAS 
      DO 113 NPP = NBEG,NEND,N                                           QUAS 
      JCNT = JCNT + 1                                                    QUAS 
      SUM = 0.0                                                          QUAS 
      NROW = KINIT + ( JCNT * N )                                        QUAS 
      DO 112 NN=1,I                                                      QUAS 
      NROW = NROW + 1                                                    QUAS 
  112 SUM = SUM + ( A(NN)*A(NROW))                                       QUAS 
  113 A(NPP) = A(NPP) - SUM                                              QUAS 
  114 CONTINUE                                                           QUAS 
      IF (KSUM .EQ. N)GO TO 116                                          QUAS 
C*** ***KSUM = N IF YOU HAVE READ ENTIRE LMATRIX AND                     QUAS 
C*** ***THERE IS NO CONSTANT SECTION LEFT                                QUAS 
      NTBEG = NBEG                                                       QUAS 
      NTEND = NEND                                                       QUAS 
      KSUMP1 = KSUM + 1                                                  QUAS 
C*** ***READ REST OF LROWS 1 ROW AT A TIME FOR CONSTANT SECTION          QUAS 
      DO 115 I=KSUMP1,N                                                  QUAS 
      NTBEG = NTBEG + 1                                                  QUAS 
      NTEND = NTEND + 1                                                  QUAS 
 1115 CONTINUE                                                           QUAS 
      READ (LTAPE)( A(NN),NN=1,K)                                        QUAS 
      JCNT = -1                                                          QUAS 
C*** ***PARTIALLY  REDUCE A RHS ACROSS A RHS ROW BY APPLYING K NUMBER    QUAS 
C*** ***OF L(I,J) S                                                      QUAS 
      DO 124 NPP = NTBEG,NTEND,N                                         QUAS 
      JCNT = JCNT + 1                                                    QUAS 
      SUM = 0.0                                                          QUAS 
      NROW = KINIT + ( JCNT * N )                                        QUAS 
      DO 123 NN = 1,K                                                    QUAS 
      NROW = NROW + 1                                                    QUAS 
  123 SUM = SUM + ( A(NN) * A(NROW) )                                    QUAS 
  124 A(NPP) = A(NPP) - SUM                                              QUAS 
  115 CONTINUE                                                           QUAS 
      NBEG = NBEG + 1                                                    QUAS 
      NEND = NEND + 1                                                    QUAS 
C*** ***KINIT IS HOW FAR DOWN A COLUMN OF RHS TO START MULTIPLYING BY    QUAS 
C*** ***L(I,J) AT EACH PASS THROUGH                                      QUAS 
      KINIT = KINIT + K                                                  QUAS 
C*** ***IF KSUMP1 = N THERE ARE NO MORE L(I,J)@S LEFT                    QUAS 
      IF(KSUMP1 .LT. N)GO TO 111                                         QUAS 
C*** ***WRITE OUT ALL BUT LAST K ROWS OF RHS IN ROW ORDER ON NATAPE      QUAS 
  116 B = 4*M + 3                                                        QUAS 
      C = -2 * KORE                                                      QUAS 
      K = (  -B  +  SQRT( B**2  -4.0*C )  )/2.0                          QUAS 
      IF(K .GT. ND) K = ND                                               QUAS 
      KF = K                                                             QUAS 
      KM1 = K - 1                                                        QUAS 
      KLEFT = N - KF + IINIT                                             QUAS 
      INITP1 = IINIT + 1                                                 QUAS 
      NEND = (M-1)*N + IINIT                                             QUAS 
      DO 117 NPP = INITP1,KLEFT                                          QUAS 
      NEND = NEND + 1                                                    QUAS 
  117 WRITE(NATAPE) ( A(J),J=NPP,NEND,N)                                 QUAS 
      REWIND NATAPE                                                      QUAS 
C*** ***JPASS1 IS TRUE ON 1ST PASS THRU BACK SOLUTION                    QUAS 
      JPASS1 = .TRUE.                                                    QUAS 
C                                                                        QUAS 
C***   ***PUT REMAINING RHS IN CONTIGUOUS LOCATIONS BY COLUMNS           QUAS 
C***  FROM KORE - (M * KF) + 1  TO  KORE                                 QUAS 
C                                                                        QUAS 
      NNEW = KORE - KF + 1                                               QUAS 
      MM1 = M - 1                                                        QUAS 
C                                                                        QUAS 
C***   ***IF M = 1, THE ELTS OF THE 1 RHS COLUMN ARE ALREADY IN CONTIGUO QUAS 
C***   ***LOCATIONS                                                      QUAS 
C                                                                        QUAS 
      IF (M.EQ.1)  GO TO 1118                                            QUAS 
      DO 118 I = 1,MM1                                                   QUAS 
      NOLD = KORE - (I*N) + 1                                            QUAS 
      DO 118 J = 1,KF                                                    QUAS 
      NNEW = NNEW - 1                                                    QUAS 
      NOLD = NOLD - 1                                                    QUAS 
      A(NNEW) = A(NOLD)                                                  QUAS 
  118 CONTINUE                                                           QUAS 
 1118 CONTINUE                                                           QUAS 
C                                                                        QUAS 
C***   ***NOW NNEW = KORE - (M*KF) + 1                                   QUAS 
C***   ***NOW NOLD = KORE - (M - 1) * N + 1 - KF                         QUAS 
C   ***   SKIP 1ST PART OF TRAPEZOIDAL MATRIX + READ LAST K ROWS         QUAS 
C*** ***ATTATCH RHS TO IT SO THAT EVERYTHING IS IN CONSECUTIVE ORDER     QUAS 
      NREMAN = ND - K                                                    QUAS 
      IF(NREMAN .EQ. 0)GO TO 126                                         QUAS 
      DO 122 I = 1,NREMAN                                                QUAS 
  122 READ(MT) IDUMMY                                                    QUAS 
  126 NEND = 0                                                           QUAS 
      KCNT = K                                                           QUAS 
      NNEW = NNEW - 1                                                    QUAS 
C***   ***NOTE THAT K = KF WHICH IS ALREADY KNOWN IN CORE                QUAS 
      DO 121 JCNT = 1,K                                                  QUAS 
      NBEG = NEND + 1                                                    QUAS 
      KCNT = KCNT - 1                                                    QUAS 
      NEND = NBEG + KCNT                                                 QUAS 
      READ(MT)IDUMMY,(A(J),J=NBEG,NEND)                                  QUAS 
      NNEW = NNEW + 1                                                    QUAS 
      KEND = (MM1 * KF) + NNEW                                           QUAS 
      DO 121 NPP=NNEW,KEND,KF                                            QUAS 
      NEND = NEND + 1                                                    QUAS 
  121 A(NEND) = A(NPP)                                                   QUAS 
      REWIND LTAPE                                                       QUAS 
      REWIND MT                                                          QUAS 
C                                                                        QUAS 
C - - THERE, NOW WE CAN START THE BACK-SOLUTION                          QUAS 
C * * NOTE..THE FIRST AVAILABLE LOCATION FOR THE SOLUTIONS IS A(N1)      QUAS 
C                                                                        QUAS 
C                                                                        QUAS 
C***   ***NL IS THE LAST SUBSCRIPT + 1 OF THE TRAPEZOIDAL A MATRIX THAT  QUAS 
C***   ***CORE                                                           QUAS 
C                                                                        QUAS 
      NL = NEND + 1                                                      QUAS 
      NREM = N                                                           QUAS 
      NPM = N + M                                                        QUAS 
      NEL = NPM                                                          QUAS 
      MP1 = M + 1                                                        QUAS 
      LAST = K .EQ. N                                                    QUAS 
      NPASS = 0                                                          QUAS 
C                                                                        QUAS 
C - - SOLVE FOR THE ANSWERS CORRESPONDING TO @K@ ROWS                    QUAS 
C                                                                        QUAS 
  119 KM1 = K - 1                                                        QUAS 
      KP1 = K + 1                                                        QUAS 
      NS = NL - MP1                                                      QUAS 
      NPASS = NPASS + 1                                                  QUAS 
      DO 130 MN = 1, M                                                   QUAS 
      NF = NS + MN                                                       QUAS 
      A(NF) = A(NF) / A(NS)                                              QUAS 
      NT = NS                                                            QUAS 
      IF (KM1 .EQ. 0) GO  TO 130                                         QUAS 
      DO 125 IB = 1, KM1                                                 QUAS 
      NF = NF - IB - M                                                   QUAS 
      NT = NT - MP1 - IB                                                 QUAS 
      SUM = 0.0                                                          QUAS 
      NP = NF                                                            QUAS 
      N2 = MP1 + IB                                                      QUAS 
      DO 120 IO = 1, IB                                                  QUAS 
      NN = NT + IO                                                       QUAS 
      NP = NP + N2 - IO                                                  QUAS 
  120 SUM = SUM + A(NN) * A(NP)                                          QUAS 
  125 A(NF) = (A(NF) - SUM) / A(NT)                                      QUAS 
  130 CONTINUE                                                           QUAS 
C                                                                        QUAS 
C - - MOVE THE SOLUTIONS TO CONTIGUOUS LOCATIONS STARTING AT A(N1)       QUAS 
C                                                                        QUAS 
      N1 = KORE + 1                                                      QUAS 
      DO 140 NN = 1, K                                                   QUAS 
      DO 135 MN = 1, M                                                   QUAS 
      NL = NL - 1                                                        QUAS 
      N1 = N1 - 1                                                        QUAS 
  135 A(N1) = A(NL)                                                      QUAS 
  140 NL = NL - NN                                                       QUAS 
C                                                                        QUAS 
C - - WRITE THE SOLUTIONS ON TAPE                                        QUAS 
C                                                                        QUAS 
      WRITE (NIN) K                                                      QUAS 
      NS = N1 - 1                                                        QUAS 
      DO 145 MN = 1, M                                                   QUAS 
      NT = NS + MN                                                       QUAS 
  145 WRITE ( NIN ) (A(IO), IO = NT, KORE, M)                            QUAS 
C                                                                        QUAS 
C - - TEST IF THIS IS THE LAST PASS                                      QUAS 
C                                                                        QUAS 
      IF (LAST) GO TO 200                                                QUAS 
C                                                                        QUAS 
C - - WE MUST NOW MODIFY THE TRIANGULAR MATRIX TO REFLECT THE EFFECT OF  QUAS 
C     THE SOLUTIONS OBTAINED SO FAR  (EQ 21)                             QUAS 
C * * NOTE..LOCATIONS A(1) TO A(N1-1) ARE NOW FREE TO USE                QUAS 
C                                                                        QUAS 
C - - CALCULATE THE NEXT VALUES OF @NEL@ AND @NREM@                      QUAS 
C                                                                        QUAS 
      NELOLD = NEL                                                       QUAS 
      KOLD = K                                                           QUAS 
      NEL = NEL - K                                                      QUAS 
      NREM = NREM - K                                                    QUAS 
C                                                                        QUAS 
      NROW = NREM - K + 1                                                QUAS 
      IF (K .LT. NREM) GO TO 150                                         QUAS 
      LAST = .TRUE.                                                      QUAS 
      NROW = 1                                                           QUAS 
      K = NREM                                                           QUAS 
  150 NS = 1                                                             QUAS 
      NT = NELOLD + 1                                                    QUAS 
C                                                                        QUAS 
C - - READ IN THE ROWS TO BE MODIFIED                                    QUAS 
C                                                                        QUAS 
      DO 190 IB = 1, NREM                                                QUAS 
      NT = NT - 1                                                        QUAS 
      IF (IB .LE. NROW) GO TO 160                                        QUAS 
      NS = NS + NN                                                       QUAS 
      NT = NT + NN                                                       QUAS 
  160 IF (.NOT. JPASS1)GO TO 161                                         QUAS 
      NBEG = NT - M + 1                                                  QUAS 
C*** ***READ RHS FROM NATAPE                                             QUAS 
      READ (NATAPE) ( A(IO),IO = NBEG,NT)                                QUAS 
      NT = NT - M                                                        QUAS 
  161 READ(MT)NN,(A(IO),IO=NS,NT)                                        QUAS 
      IF( .NOT. JPASS1 ) GO TO 163                                       QUAS 
      NT = NT + M                                                        QUAS 
      NN = NN + M                                                        QUAS 
  163 NP = N1 - 1                                                        QUAS 
      NF = NT - M - KM1                                                  QUAS 
      NN = NN - KOLD                                                     QUAS 
      DO 170 MN = 1, M                                                   QUAS 
      N2 = NF                                                            QUAS 
      NA = NP + MN                                                       QUAS 
      NB = NA                                                            QUAS 
      SUM = 0.0                                                          QUAS 
      DO 165 IO = 1, KOLD                                                QUAS 
      SUM = SUM + A(N2) * A(NA)                                          QUAS 
      N2 = N2 + 1                                                        QUAS 
  165 NA = NA + M                                                        QUAS 
      N2 = N2 + MN - 1                                                   QUAS 
  170 A(N2) = A(N2) - SUM                                                QUAS 
C                                                                        QUAS 
C - - WRITE THE MODIFIED ROW ON TAPE OR CONDENSE THE ROW                 QUAS 
C                                                                        QUAS 
      NL = NT - M + 1                                                    QUAS 
      IF (IB .GE. NROW) GO TO 175                                        QUAS 
      NF = NL - KP1                                                      QUAS 
      WRITE (NOUT) NN, (A(IO), IO = NS, NF), (A(IO), IO = NL, NT)        QUAS 
      GO TO 190                                                          QUAS 
  175 NF = NL - KOLD                                                     QUAS 
      DO 180 MN = NL, NT                                                 QUAS 
      A(NF) = A(MN)                                                      QUAS 
  180 NF = NF + 1                                                        QUAS 
  190 CONTINUE                                                           QUAS 
C*** ***IF 1ST TIME THRU BACK SOLN,SWITCH TAPES SO THAT MT WHICH HAS THE QUAS 
C*** ***ORIGINAL TRAPEZOIDAL MATRIX ON IT BECOME NATAPE AND IS NOT TO    QUAS 
C*** ***TAPE PART IN ALTERNATING SHRINKING MATRICES.  NATAPE BECOMES MT  QUAS 
C*** ***AND THIS NOW DOES THE ALTERNATING WITH NOUT.                     QUAS 
      IF( .NOT. JPASS1 ) GO TO 195                                       QUAS 
      NTEMP = MT                                                         QUAS 
      MT = NATAPE                                                        QUAS 
      NATAPE = NTEMP                                                     QUAS 
      JPASS1= .FALSE.                                                    QUAS 
      REWIND NATAPE                                                      QUAS 
  195 REWIND MT                                                          QUAS 
      REWIND NOUT                                                        QUAS 
C                                                                        QUAS 
C - - SWITCH THE TAPES                                                   QUAS 
C                                                                        QUAS 
      NT = MT                                                            QUAS 
      MT = NOUT                                                          QUAS 
      NOUT = NT                                                          QUAS 
C                                                                        QUAS 
C - - LOOP BACK THRU THE SOLUTION                                        QUAS 
C                                                                        QUAS 
      NL = NF                                                            QUAS 
      GO TO 119                                                          QUAS 
C                                                                        QUAS 
C - - START TO WRAP IT UP                                                QUAS 
C                                                                        QUAS 
  200 REWIND NIN                                                         QUAS 
      N2 = N                                                             QUAS 
C                                                                        QUAS 
C * * NOTE.. AT THIS POINT ALL LOCATIONS A(1) THRU A(KORE) ARE FREE      QUAS 
C                                                                        QUAS 
      DO 220 IB = 1, NPASS                                               QUAS 
      READ (NIN) K                                                       QUAS 
      N1 = N2 - K + 1                                                    QUAS 
      NS = N1                                                            QUAS 
      NT = N2                                                            QUAS 
C                                                                        QUAS 
C - - READ IN THE SOLUTIONS                                              QUAS 
C                                                                        QUAS 
      DO 210 IO = 1, M                                                   QUAS 
      READ (NIN) (A(NN), NN = NS, NT)                                    QUAS 
      NT = NT + N                                                        QUAS 
  210 NS = NS + N                                                        QUAS 
  220 N2 = N1 - 1                                                        QUAS 
C                                                                        QUAS 
C  ---  REWIND ALL INPUT TAPES                                           QUAS 
      REWIND NIN                                                         QUAS 
      REWIND MT                                                          QUAS 
      REWIND NOUT                                                        QUAS 
C - - WRITE THE SOLUTIONS ON TAPE                                        QUAS 
C                                                                        QUAS 
      NT = 0                                                             QUAS 
      DO 230 IO = 1, M                                                   QUAS 
      NS = NT + 1                                                        QUAS 
      NT = NT + N                                                        QUAS 
  230 WRITE (NW) (A(NN), NN = NS, NT)                                    QUAS 
C   ***   IF TAPE WAS NEVER SWITCHED IT WOULD BE FOOLISH TO SWITCH BACK  QUAS 
      IF(JPASS1)GO TO 290                                                QUAS 
C                                                                        QUAS 
C***   ***SWITCH TAPES                                                   QUAS 
C*** ***BACK SO THAT  MT WILL CONAIN THE TRAPEZOIDAL MATRIX              QUAS 
C*** ***NATAPE WILL HAVE NOTHING USEFUL ON IT.                           QUAS 
      NTEMP = NATAPE                                                     QUAS 
      NATAPE = MT                                                        QUAS 
      MT = NTEMP                                                         QUAS 
      REWIND NATAPE                                                      QUAS 
  290 IF( .NOT. LASTRS)GO TO 109                                         QUAS 
  295 REWIND LTAPE                                                       QUAS 
      REWIND MT                                                          QUAS 
      KRED = 0                                                           QUAS 
      DO 297 I=1,NLCNT                                                   QUAS 
      READ(LTAPE)KREAD                                                   QUAS 
  304 CONTINUE                                                           QUAS 
      KRED = KRED + KREAD                                                QUAS 
      KREAD = KREAD + ( N - KRED - 1)                                    QUAS 
      DO 297 LREAD=1,KREAD                                               QUAS 
  297 READ(LTAPE)                                                        QUAS 
      DO 299 NROW = 1,ND                                                 QUAS 
      READ(MT) ICNT,(A(I),I=1,ICNT)                                      QUAS 
  299 WRITE(LTAPE)ICNT,(A(I),I=1,ICNT)                                   QUAS 
C                                                                        QUAS 
C   ***   REWIND ALL FILES EXCEPT THE OUTPUT FILE   NW                   QUAS 
C                                                                        QUAS 
      REWIND NI                                                          QUAS 
      REWIND MM                                                          QUAS 
      REWIND NO                                                          QUAS 
      REWIND NAT                                                         QUAS 
      IF( RHSTAP .NE. 0 ) REWIND RHSTAP                                  QUAS 
      MD = MTOTAL                                                        QUAS 
 9999 CONTINUE                                                           QUAS 
      RETURN                                                             QUAS 
      END                                                                QUAS 
      SUBROUTINE INV(NBOX,INPUT,LTAPE,NTP3,NTP4,NTP8,NTP9,NTP1,NTP2,     INV
     AISIZE,VEC,BUF,KEY)                                                 INV
      DIMENSION VEC(1), BUF(1)                                           INV
C                                                                        INV
C     INPUT = UNIT CONTAINING MATRIX TO BE INVERTED, POSITIONED          INV
C             TO FIRST RECORD                                            INV
C     NTP1 = UNIT CONTAINING MATRIX TO BE INVERTED( ROW SORT)            INV
C     NTP3 = UNIT CONTAINING INVERTED MATRIX ( COLUMN SORT )             INV
C     LTAPE = UNIT CONTAINING INVERTED MATRIX ( ROW SORT )               INV
C     NBOX = ORDER OF MATRIX TO BE INVERTED ( MAX = 1200 )               INV
C                                                                        INV
      KD = 3700                                                          INV
      ND = NBOX                                                          INV
      M  =  0                                                            INV
      REWIND NTP1                                                        INV
      DO 5 I = 1, NBOX                                                   INV
      READ(INPUT) ( VEC(K) , K = 1, NBOX )                               INV
      WRITE( NTP1 ) ( VEC(K), K = 1, NBOX )                              INV
    5 CONTINUE                                                           INV
      REWIND NTP1                                                        INV
      REWIND NTP2                                                        INV
      REWIND NTP3                                                        INV
      REWIND NTP4                                                        INV
      REWIND NTP8                                                        INV
      REWIND NTP9                                                        INV
      REWIND LTAPE                                                       INV
      WRITE(NTP4) NBOX, NBOX                                             INV
      DO 20 I = 1, NBOX                                                  INV
      DO 10 J = 1, NBOX                                                  INV
      VEC(J) = 0.0                                                       INV
      IF( J .EQ. I ) VEC(J) = 1.0                                        INV
   10 CONTINUE                                                           INV
      WRITE(NTP4) ( VEC(K), K = 1, NBOX )                                INV
   20 CONTINUE                                                           INV
      REWIND NTP4                                                        INV
      IWHICH = 1                                                         INV
      CALL QUAS (ND,M,KD,NTP1,NTP8,NTP9,NTP2,NTP3,LTAPE,NTP4)            INV
      IF (M .EQ. 0) GO TO 100                                            INV
      IF (M .EQ.  NBOX) IWHICH=2                                         INV
   90 CONTINUE                                                           INV
      REWIND NTP3                                                        INV
      GO TO (100,105), IWHICH                                            INV
  100 CONTINUE                                                           INV
      CALL FUTSOL (ND,M,KD,NTP1,NTP8,NTP9,NTP2,NTP3,LTAPE,NTP4)          INV
      IF (M .EQ.  NBOX) IWHICH = 2                                       INV
      GO TO 90                                                           INV
  105 CONTINUE                                                           INV
      REWIND NTP3                                                        INV
      IF( KEY .EQ. 0 ) RETURN                                            INV
      REWIND LTAPE                                                       INV
      REWIND NTP8                                                        INV
      CALL TRPOSE(NTP3,BUF,VEC,NBOX,NBOX,LTAPE,NTP8,ISIZE)               INV
      REWIND LTAPE                                                       INV
      REWIND NTP3                                                        INV
      RETURN                                                             INV
      END                                                                INV
      SUBROUTINE OUTW (NTAPEO,Z)                                         OUTW 
C     WING OUPUT FORMAT                                                  OUTW 
      DIMENSION Z(1),OUT(30,20)                                          OUTW 
      COMMON/ ROWS / NWCOL, NWRPC(20)                                    OUTW 
      COMMON /SEG/ NSEG, NROW(20),NCOL(20),COSS(20),SINS(20),BTE(20)     OUTW 
     1,NWT(20),SPNW(20),XLEW(20),BLE(20),ZLEW(20)                        OUTW 
      DO 30 I=1,30                                                       OUTW 
      DO 30 J=1,20                                                       OUTW 
   30 OUT(I,J) = 1.0E+30                                                 OUTW 
      NCT=NWCOL                                                          OUTW 
      KOUNT=0                                                            OUTW 
      DO 20 KJ=1,NWCOL                                                   OUTW 
      KI=NWRPC(KJ)                                                       OUTW 
      DO 20 I=1,KI                                                       OUTW 
      KOUNT=KOUNT+1                                                      OUTW 
   20 OUT( I,KJ) = Z(KOUNT)                                              OUTW 
      LL2=1                                                              OUTW 
      NEND = NCT/10 + 1                                                  OUTW 
      DO 105 LJ=1,NEND                                                   OUTW 
      IF(((1+10*(LJ-1))-NCT)*(NCT-10*LJ).GE.0) GO TO 106                 OUTW 
  105 CONTINUE                                                           OUTW 
      L7=0                                                               OUTW 
  106 DO 103 II=1,LJ                                                     OUTW 
      NRMAX=0                                                            OUTW 
      NC = MIN0(10*II,NCT)                                               OUTW 
      L7=1+10*(II-1)                                                     OUTW 
      LL=LL2                                                             OUTW 
      NCS=0                                                              OUTW 
      DO 102 JJ=LL,NWCOL                                                 OUTW 
      NCS=NCS+1                                                          OUTW 
      IF(NRMAX.LT.NWRPC(JJ)) NRMAX=NWRPC(JJ)                             OUTW 
      IF(NCS-NC)102,6,6                                                  OUTW 
    6 LL2=JJ+1                                                           OUTW 
      GO TO 4                                                            OUTW 
  102 CONTINUE                                                           OUTW 
    4 WRITE(NTAPEO,6005) (MM,MM=L7,NC)                                   OUTW 
      WRITE(NTAPEO,6010)                                                 OUTW 
      IGO = NC-L7+1                                                      OUTW 
      IF(IGO.EQ.0) RETURN                                                OUTW 
      GO TO (51,52,53,54,55,56,57,58,59,60), IGO                         OUTW 
   51 WRITE(6,510) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  510 FORMAT(1H ,I10,9X,  F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   52 WRITE(6,520) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  520 FORMAT(1H ,I10,9X, 2F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   53 WRITE(6,530) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  530 FORMAT(1H ,I10,9X, 3F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   54 WRITE(6,540) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  540 FORMAT(1H ,I10,9X, 4F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   55 WRITE(6,550) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  550 FORMAT(1H ,I10,9X, 5F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   56 WRITE(6,560) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  560 FORMAT(1H ,I10,9X, 6F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   57 WRITE(6,570) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  570 FORMAT(1H ,I10,9X, 7F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   58 WRITE(6,580) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  580 FORMAT(1H ,I10,9X, 8F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   59 WRITE(6,590) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  590 FORMAT(1H ,I10,9X, 9F10.5)                                         OUTW 
      GO TO 103                                                          OUTW 
   60 WRITE(6,600) (I,(OUT(I,J),J=L7,NC),I=1,NRMAX)                      OUTW 
  600 FORMAT(1H ,I10,9X,10F10.5)                                         OUTW 
  103 CONTINUE                                                           OUTW 
 6005 FORMAT(1H0,2X,16HSPANWISE STATION,I8,9I10/(18X,I8,9I10))           OUTW 
 6010 FORMAT(1H ,2X,17HCHORDWISE STATION)                                OUTW 
      RETURN                                                             OUTW 
      END                                                                OUTW 
      SUBROUTINE WINGS(IWING)                                            WINGS
C                                                                        WINGS
C          KEEPS TRACK OF WING/TAIL AND NACELLE/SHELL PARAMETERS         WINGS
C                                                                        WINGS
C          IWING = +/-1 REFERS TO WING/TAIL                              WINGS
C                                                                        WINGS
C                = +/-2 REFERS TO NACELLE/SHELL                          WINGS
C                                                                        WINGS
C                =   +3 REFERS TO NACELLE/SHELL,                         WINGS
C                       READ IN AS BODY                                  WINGS
C                                                                        WINGS
C          IWING ) 0 WRITES DATA ON TAPE                                 WINGS
C                                                                        WINGS
C                # 0 READS DATA FROM TAPE                                WINGS
C                                                                        WINGS
      DIMENSION ADUM(20),NADUM(20)                                       WINGS
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REF(7)         WINGS
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BTE(20),     WINGS
     1 NWT(20),SPNW(20),XLEW(20),BLE(20),ZLEW(20)                        WINGS
      COMMON /NEWCOM/ KDUM(44),KOL,NCPT,LOCPT(20),XCPT(20)               WINGS
      COMMON /TAPES/ ITAPES(20)                                          WINGS
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EM,PRINT,              WINGS
     1 NWTHK,NWBLOK,NWROW(20),NBBLOK,NBROW(60)                           WINGS
      INTEGER PRINT                                                      WINGS
      REAL MACH                                                          WINGS
      LOGICAL LBC,THK,LDUM                                               WINGS
C                                                                        WINGS
      IUNIT=0                                                            WINGS
      IF(IABS(IWING).EQ.1) IUNIT=ITAPES(13)                              WINGS
      IF(IABS(IWING).EQ.2) IUNIT=ITAPES(14)                              WINGS
      IF(IWING.EQ.3) IUNIT=ITAPES(14)                                    WINGS
      IF(IUNIT.EQ.0) GO TO 999                                           WINGS
      IF(IWING.LT.0) GO TO 10                                            WINGS
      IF(IWING.GT.0) GO TO 20                                            WINGS
      GO TO 999                                                          WINGS
10    REWIND IUNIT                                                       WINGS
      WRITE(IUNIT) NBODY,NWING,NTAIL,LBC,THK                             WINGS
      WRITE(IUNIT) NSEG,NROW,NCOL,COSS,SINS,BTE,NWT,SPNW,XLEW,           WINGS
     1             BLE,ZLEW                                              WINGS
      WRITE(IUNIT) KOL,NCPT,LOCPT,XCPT                                   WINGS
      WRITE(IUNIT) NWTHK,NWBLOK,NWROW,NBBLOK,NBROW                       WINGS
      RETURN                                                             WINGS
20    REWIND IUNIT                                                       WINGS
      IF(IWING.EQ.3) GO TO 30                                            WINGS
      READ(IUNIT) NBODY,NWING,NTAIL,LBC,THK                              WINGS
      READ(IUNIT) NSEG,NROW,NCOL,COSS,SINS,BTE,NWT,SPNW,XLEW,            WINGS
     1             BLE,ZLEW                                              WINGS
      READ(IUNIT) KOL,NCPT,LOCPT,XCPT                                    WINGS
      READ(IUNIT) NWTHK,NWBLOK,NWROW,NBBLOK,NBROW                        WINGS
      RETURN                                                             WINGS
30    READ(IUNIT) NDUM,NBODY,NDUM,LDUM,LDUM                              WINGS
      READ(IUNIT) NDUM,NADUM,NADUM,ADUM,ADUM,ADUM,NADUM,ADUM,ADUM,       WINGS
     1 ADUM,ADUM                                                         WINGS
      READ(IUNIT) NDUM,NDUM,NADUM,ADUM                                   WINGS
      READ(IUNIT) NDUM,NBBLOK,(NBROW(N),N=1,20)                          WINGS
      RETURN                                                             WINGS
999   WRITE(6,600) IWING                                                 WINGS
600   FORMAT(1H1,26HERROR IN WINGS,     IWING=,I3)                       WINGS
      RETURN                                                             WINGS
      END                                                                WINGS
      OVERLAY(LWB,1,0)                                                   GEOM 
C     OVERLAY(LWB,1,0)                                                   GEOM 
      PROGRAM GEOM                                                       GEOM 
C                                                                        GEOM 
C     *******************************************VERSION B00************ GEOM 
C                                                                        GEOM 
C                                                                        GEOM 
C     INPUT CONFIGURATION GEOMETRY AND COMPUTE PANELS                    GEOM 
C                                                                        GEOM 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP GEOM 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       GEOM 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR GEOM 
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  GEOM 
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P GEOM 
     1LOTSZ,TYPE,KODE,XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,XMID,YMID,ZMID,BIGD, GEOM 
     2ISP                                                                GEOM 
      COMMON /LWB/ LWB                                                   GEOM 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA,REFB,REFC GEOM 
     1,REFD,REFL,REFX,REFZ                                               GEOM 
      COMMON /HEAD/ TITLE1(14),TITLE2(14)                                GEOM 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BT(20)       GEOM 
      COMMON /SCRAT/ BLOCK(7500)                                         GEOM 
      COMMON/NEWCOM/K0,K1,K2,K3,K4,K5,K6,KWAF,KWAFOR,KFUS,KRADX(4),      GEOM 
     X              KFORX(4),KF(6),KFINOR(6),KAN(6),KANOR(6),KRAD,MAX,   GEOM 
     X              KOL,NCPT                                             GEOM 
      COMMON /VELCOM/ DUM1(5),EM,PRINT                                   GEOM 
      COMMON /ITERAT/ ITMAX,CCTEST,DCTEST,ITMETH,ALF1,ALF2               GEOM 
      COMMON /GRAPH/ PLOT                                                GEOM 
      COMMON /PRESS/ IKRAD(4),INRAD(4),IKFORX(4),INFORX(4),IKWAF,INWAF,I GEOM 
     1KWAFR,INWAFR,IKFUS                                                 GEOM 
      COMMON /PTYPE/ ORT,VU3,STE,PER                                     GEOM 
      COMMON/STAR/XSTAR(3600),NSEGW                                      GEOM 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NEWSHLC
C                                                                        GEOM 
      LOGICAL LBC,THK,TAIL                                               GEOM 
C                                                                        GEOM 
      INTEGER THICK,PRINT,PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7 GEOM 
     1,TAPE8,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,FFILE       GEOM 
C                                                                        GEOM 
      LBC=.FALSE.                                                        GEOM 
      THK=.FALSE.                                                        GEOM 
      EM=-1.                                                             GEOM 
      PRINT=0                                                            GEOM 
      NCPT=0                                                             GEOM 
      NBODY=0                                                            GEOM 
      NWING=0                                                            GEOM 
      NTAIL=0                                                            GEOM 
      NSEG=0                                                             GEOM 
      KOL=0                                                              GEOM 
      REFB=1.0                                                           GEOM 
      REFC=1.0                                                           GEOM 
      REFD=1.0                                                           GEOM 
      REFL=1.0                                                           GEOM 
      REFX=0.                                                            GEOM 
      REFZ=0.                                                            GEOM 
      ITMAX=0                                                            GEOM 
      CCTEST=0.0                                                         GEOM 
      DCTEST=0.0                                                         GEOM 
      ITMETH=0                                                           GEOM 
      REWIND TAPE3                                                       GEOM 
      REWIND TAPE7                                                       GEOM 
      REWIND TAPE8                                                       GEOM 
      REWIND TAPE9                                                       GEOM 
      REWIND TAPE10                                                      GEOM 
      REWIND TAPE12                                                      GEOM 
      REWIND TAPE13                                                      GEOM 
C                                                                        GEOM 
C     INPUT CONFIGURATION PARAMETERS                                     GEOM 
C                                                                        GEOM 
      READ (TAPE5,190) TITLE1                                            GEOM 
C                                                                        GEOM 
C     END OF FILE TEST ON TAPE5                                          GEOM 
C                                                                        GEOM 
      IF(EOF(TAPE5)) 30,10                                               GEOM 
10    CONTINUE                                                           GEOM 
      WRITE (TAPE6,210) TITLE1                                           GEOM 
      READ (TAPE5,220) J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,(NRADX(I),N GEOM 
     1FORX(I),I=1,4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,PLOT                GEOM 
      DO 20 I=1,4                                                        GEOM 
      INRAD(I)=NRADX(I)                                                  GEOM 
      INFORX(I)=NFORX(I)                                                 GEOM 
20    CONTINUE                                                           GEOM 
      INWAF=NWAF                                                         GEOM 
      INWAFR=NWAFOR                                                      GEOM 
      IKFUS=NFUS                                                         GEOM 
      REWIND TAPE11                                                      GEOM 
      WRITE (TAPE11) J0,J1,J2,J3,J4,J5,J6                                GEOM 
      GO TO 40                                                           GEOM 
30    CONTINUE                                                           GEOM 
      CALL CALPLT (0.,0.,999)                                            GEOM 
      CALL EXIT                                                          GEOM 
C                                                                        GEOM 
C     INPUT DESCRIPTION AND INITIALIZATION                               GEOM 
C                                                                        GEOM 
40    CALL OVERLAY (LWB,1,1)                                             GEOM 
C                                                                        GEOM 
C     INPUT GEOMETRY PANEL PLOT CONTROL CARDS                            GEOM 
C                                                                        GEOM 
      IF (PLOT.GE.0) GO TO 60                                            GEOM 
50    READ (TAPE5,240) HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG, GEOM 
     1PLOTSZ,TYPE,KODE                                                   GEOM 
      IF (TYPE.EQ.ORT.OR.TYPE.EQ.VU3.OR.TYPE.EQ.STE.OR.TYPE.EQ.PER) WRIT GEOM 
     1E (TAPE13,240) HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,PL GEOM 
     2OTSZ,TYPE,KODE                                                     GEOM 
      IF (KODE.EQ.0) GO TO 50                                            GEOM 
60    CONTINUE                                                           GEOM 
C                                                                        GEOM 
C     SET BOUNDARY CONDITION AND WING THICKNESS OPTIONS                  GEOM 
C                                                                        GEOM 
      READ (TAPE5,190) TITLE2                                            GEOM 
      READ (TAPE5,180) LINBC,THICK,PRINT,LCPA,LCPB,ITMETH,ITMAX,CCTEST,D GEOM 
     1CTEST,ALF1,ALF2                                                    GEOM 
      IF (LINBC.GT.0) LBC=.TRUE.                                         GEOM 
      IF (LBC.AND.THICK.GT.0) THK=.TRUE.                                 GEOM 
C                                                                        GEOM 
C     INPUT REVISED CONFIGURATION PANELING DESCRIPTION CONTROL INTEGERS  GEOM 
C                                                                        GEOM 
      READ (TAPE5,220) K0,K1,K2,K3,K4,K5,K6,KWAF,KWAFOR,KFUS,(KRADX(I),K GEOM 
     1FORX(I),I=1,4)                                                     GEOM 
      DO 70 I=1,4                                                        GEOM 
      IKRAD(I)=KRADX(I)                                                  GEOM 
      IKFORX(I)=KFORX(I)                                                 GEOM 
70    CONTINUE                                                           GEOM 
      IKWAF=KWAF                                                         GEOM 
      IKWAFR=KWAFOR                                                      GEOM 
      WRITE (TAPE11) K0,K1,K2,K3,K4,K5,K6                                GEOM 
      REWIND TAPE11                                                      GEOM 
      TAIL=.FALSE.                                                       GEOM 
      IF (K4.GT.0.OR.K5.GT.0) TAIL=.TRUE.                                GEOM 
      IF (.NOT.TAIL) GO TO 80                                            GEOM 
      READ (TAPE5,220) (KF(I),KFINOR(I),I=1,6),(KAN(I),KANOR(I),I=1,6)   GEOM 
80    CONTINUE                                                           GEOM 
      READ (TAPE9) REFA                                                  GEOM 
      IF (K0.EQ.0) GO TO 90                                              GEOM 
      READ (TAPE5,200) REFAR,REFB,REFC,REFD,REFL,REFX,REFZ               GEOM 
      IF (REFAR.NE.0.) REFA=REFAR                                        GEOM 
      IF (REFB.EQ.0.) REFB=1.0                                           GEOM 
      IF (REFC.EQ.0.) REFC=1.0                                           GEOM 
      IF (REFD.EQ.0.) REFD=1.0                                           GEOM 
      IF (REFL.EQ.0.) REFL=1.0                                           GEOM 
90    CONTINUE                                                           GEOM 
      READ (TAPE9) BLOCK                                                 GEOM 
      IF (K1.EQ.0) GO TO 100                                             GEOM 
C                                                                        GEOM 
C     REVISE CHORDWISE PANEL SPACING ON WING AND COMPUTE NEW AIRFOIL     GEOM 
C     ORDINATES                                                          GEOM 
C                                                                        GEOM 
      CALL OVERLAY (LWB,1,2)                                             GEOM 
C                                                                        GEOM 
C     REVISE SPANWISE PANEL SPACING ON WING AND COMPUTE NEW PANEL        GEOM 
C     GEOMETRY                                                           GEOM 
C                                                                        GEOM 
      CALL OVERLAY (LWB,1,3)                                             GEOM 
C                                                                        GEOM 
100   CONTINUE                                                           GEOM 
      READ (TAPE9) BLOCK                                                 GEOM 
      IF (K2.EQ.0) GO TO 120                                             GEOM 
      IF (KRADX(1).LE.21) GO TO 110                                      GEOM 
      WRITE (TAPE6,170)                                                  GEOM 
      WRITE (TAPE6,230)                                                  GEOM 
      CALL EXIT                                                          GEOM 
110   CONTINUE                                                           GEOM 
C                                                                        GEOM 
C     REVISE BODY (FUSELAGE) MERIDIAN LINE SPACING                       GEOM 
C                                                                        GEOM 
      CALL OVERLAY (LWB,1,4)                                             GEOM 
C                                                                        GEOM 
C     REVISE AXIAL PANEL SPACING ON BODY (FUSELAGE) AND COMPUTE NEW      GEOM 
C     PANEL GEOMETRY                                                     GEOM 
C                                                                        GEOM 
      CALL OVERLAY (LWB,1,5)                                             GEOM 
C                                                                        GEOM 
120   CONTINUE                                                           GEOM 
      READ (TAPE9) BLOCK                                                 GEOM 
      IF (K4.EQ.0) GO TO 130                                             GEOM 
C                                                                        GEOM 
C     REVISE CHORDWISE PANEL SPACING ON FIN (VERTICAL TAIL) AND COMPUTE  GEOM 
C     NEW AIRFOIL ORDINATES                                              GEOM 
C                                                                        GEOM 
      CALL OVERLAY (LWB,1,6)                                             GEOM 
C                                                                        GEOM 
C     REVISE SPANWISE PANEL SPACING ON FIN (VERTICAL TAIL) AND COMPUTE   GEOM 
C     NEW PANEL GEOMETRY                                                 GEOM 
C                                                                        GEOM 
      CALL OVERLAY (LWB,1,7)                                             GEOM 
C                                                                        GEOM 
130   CONTINUE                                                           GEOM 
      READ (TAPE9) BLOCK                                                 GEOM 
      IF (K5.EQ.0) GO TO 140                                             GEOM 
C                                                                        GEOM 
C     REVISE CHORDWISE PANEL SPACING ON CANARD (HORIZONTAL TAIL) AND     GEOM 
C     COMPUTE NEW AIRFOIL ORDINATES                                      GEOM 
C                                                                        GEOM 
      CALL OVERLAY (LWB,1,6)                                             GEOM 
C                                                                        GEOM 
C     REVISE SPANWISE PANEL SPACING ON CANARD (HORIZONTAL TAIL) AND      GEOM 
C     COMPUTE NEW PANEL GEOMETRY                                         GEOM 
C                                                                        GEOM 
      CALL OVERLAY (LWB,1,7)                                             GEOM 
C                                                                        GEOM 
140   CONTINUE                                                           GEOM 
      NSEGWT=NSEG                                                        NEWSHLC
      CALL WINGS(-1)                                                     NEWSHLC
C                                                                        NEWSHLC
C          INPUT NACELLE AND/OR/SHELL GEOMETRY                           NEWSHLC
C                                                                        NEWSHLC
      THK=.FALSE.                                                        NEWSHLC
      LBC=.TRUE.                                                         NEWSHLC
      NCPT=0                                                             NEWSHLC
      NWING=0                                                            NEWSHLC
      NTAIL=0                                                            NEWSHLC
      NWTHK=0                                                            NEWSHLC
      NSEG=0                                                             NEWSHLC
      KOL=0                                                              NEWSHLC
      NNAC=0                                                             NEWSHLC
      NSHELL=0                                                           NEWSHLC
      IF(K6.EQ.0) GO TO 145                                              NEWSHLC
      READ(TAPE5,220) NNAC,NSHELL                                        NEWSHLC
145   NQ=NNAC+NSHELL                                                     NEWSHLC
C                                                                        NEWSHLC
C          NACELLE                                                       NEWSHLC
C                                                                        NEWSHLC
      KDUM=K6                                                            NEWSHLC
      K6=0                                                               NEWSHLC
      CALL OVERLAY(LWB,1,8)                                              NEWSHLC
      NSEGN=NSEG                                                         NEWSHLC
C                                                                        NEWSHLC
C          SHELL                                                         NEWSHLC
C                                                                        NEWSHLC
      K6=1                                                               NEWSHLC
      CALL OVERLAY(LWB,1,8)                                              NEWSHLC
      NSEGNS=NSEG                                                        NEWSHLC
      NSEGS=NSEGNS-NSEGN                                                 NEWSHLC
      K6=KDUM                                                            NEWSHLC
      CALL WINGS(-2)                                                     NEWSHLC
C                                                                        GEOM 
C     INPUT SINGULARITY PANEL PLOT CONTROL CARDS                         GEOM 
C                                                                        GEOM 
      IF (PLOT.EQ.0) GO TO 160                                           GEOM 
150   CONTINUE                                                           GEOM 
      READ (TAPE5,240) HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG, GEOM 
     1PLOTSZ,TYPE,KODE                                                   GEOM 
      IF (TYPE.EQ.ORT.OR.TYPE.EQ.VU3.OR.TYPE.EQ.STE.OR.TYPE.EQ.PER) WRIT GEOM 
     1E (TAPE13,240) HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,PL GEOM 
     2OTSZ,TYPE,KODE                                                     GEOM 
      IF (KODE.EQ.0) GO TO 150                                           GEOM 
160   CONTINUE                                                           GEOM 
      REWIND TAPE9                                                       GEOM 
C                                                                        GEOM 
C                                                                        GEOM 
C                                                                        GEOM 
170   FORMAT (1H0,24H ERROR MESSAGE FROM GEOM)                           GEOM 
180   FORMAT (7I3,4F7.0)                                                 GEOM 
190   FORMAT (13A6,A2)                                                   GEOM 
200   FORMAT (10F7.0)                                                    GEOM 
210   FORMAT (1H1,10X,13A6,A2)                                           GEOM 
220   FORMAT (25I3)                                                      GEOM 
230   FORMAT (1H0,46HERROR- BODY HAS MORE THAN 20 COLUMNS OF PANELS)     GEOM 
240   FORMAT (2(A1,1X),A3,9F5.0,A3,16X,I1)                               GEOM 
      END                                                                GEOM 
      SUBROUTINE PANEL (IP,IQ,J,K,L,NP,AP)                               PANEL
C                                                                        PANEL
C     *******************************************VERSION B00************ PANEL
C                                                                        PANEL
C                                                                        PANEL
C     CALCULATE PANEL GEOMETRY (BASED ON THE HYPERSONIC ARBITRARY BODY   PANEL
C     PROGRAM OF A. E. GENTRY)                                           PANEL
C                                                                        PANEL
      COMMON /POINT/ ARRAY(6000)                                         PANEL
      COMMON /SCRAT/ BLOCK(7500)                                         PANEL
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, PANEL
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        PANEL
C                                                                        PANEL
      DIMENSION XPT(600), YPT(600), ZPT(600), THET(600), DELTA(600), XC( PANEL
     130,20), YC(30,20), ZC(30,20), ZU(30,20), XIN(4), YIN(4), ZIN(4), X PANEL
     2I(4), ETA(4)                                                       PANEL
C                                                                        PANEL
      EQUIVALENCE (ARRAY(1),XPT(1)), (ARRAY(601),YPT(1)), (ARRAY(1201),Z PANEL
     1PT(1)), (ARRAY(1801),THET(1)), (ARRAY(2401),DELTA(1)), (ARRAY(3001 PANEL
     2),XC(1)), (ARRAY(3601),YC(1)), (ARRAY(4201),ZC(1)), (BLOCK(6901),Z PANEL
     3U(1))                                                              PANEL
C                                                                        PANEL
      REAL NX,NY,NZ                                                      PANEL
C                                                                        PANEL
C     REORDER THE PANEL CORNER POINTS TO CORRESPOND TO GENTRY CONVENTION PANEL
C                                                                        PANEL
      J1=J-1                                                             PANEL
      K1=K-1                                                             PANEL
      XIN(1)=XC(J1,K1)                                                   PANEL
      XIN(2)=XC(J,K1)                                                    PANEL
      XIN(3)=XC(J,K)                                                     PANEL
      XIN(4)=XC(J1,K)                                                    PANEL
      YIN(1)=YC(J1,K1)                                                   PANEL
      YIN(2)=YC(J,K1)                                                    PANEL
      YIN(3)=YC(J,K)                                                     PANEL
      YIN(4)=YC(J1,K)                                                    PANEL
      IF (L.EQ.1) GO TO 10                                               PANEL
      ZIN(1)=ZC(J1,K1)                                                   PANEL
      ZIN(2)=ZC(J,K1)                                                    PANEL
      ZIN(3)=ZC(J,K)                                                     PANEL
      ZIN(4)=ZC(J1,K)                                                    PANEL
      GO TO 20                                                           PANEL
10    ZIN(1)=ZU(J1,K1)                                                   PANEL
      ZIN(2)=ZU(J,K1)                                                    PANEL
      ZIN(3)=ZU(J,K)                                                     PANEL
      ZIN(4)=ZU(J1,K)                                                    PANEL
20    CONTINUE                                                           PANEL
C                                                                        PANEL
C     FORM DIAGONAL VECTORS                                              PANEL
C                                                                        PANEL
      T1X=XIN(3)-XIN(1)                                                  PANEL
      T2X=XIN(4)-XIN(2)                                                  PANEL
      IF (IP.EQ.1) T2X=-T2X                                              PANEL
      T1Y=YIN(3)-YIN(1)                                                  PANEL
      T2Y=YIN(4)-YIN(2)                                                  PANEL
      IF (IP.EQ.1) T2Y=-T2Y                                              PANEL
      T1Z=ZIN(3)-ZIN(1)                                                  PANEL
      T2Z=ZIN(4)-ZIN(2)                                                  PANEL
      IF (IP.EQ.1) T2Z=-T2Z                                              PANEL
C                                                                        PANEL
C     FORM VECTOR CROSS PRODUCT, N = T2 X T1                             PANEL
C                                                                        PANEL
      NX=T2Y*T1Z-T1Y*T2Z                                                 PANEL
      NY=T1X*T2Z-T2X*T1Z                                                 PANEL
      NZ=T2X*T1Y-T1X*T2Y                                                 PANEL
      IF (ABS(NX).LE.EPSPAN) NX=0.                                       PANEL
      IF (ABS(NY).LE.EPSPAN) NY=0.                                       PANEL
      IF (ABS(NZ).LE.EPSPAN) NZ=0.                                       PANEL
      VN=SQRT(NX*NX+NY*NY+NZ*NZ)                                         PANEL
      IF (VN.EQ.0.) GO TO 30                                             PANEL
C                                                                        PANEL
C     FORM UNIT NORMAL VECTOR                                            PANEL
C                                                                        PANEL
      VND=1./VN                                                          PANEL
      NX=NX*VND                                                          PANEL
      NY=NY*VND                                                          PANEL
      NZ=NZ*VND                                                          PANEL
C                                                                        PANEL
C     COMPUTE AVERAGE POINT                                              PANEL
C                                                                        PANEL
30    AVX=0.25*(XIN(1)+XIN(2)+XIN(3)+XIN(4))                             PANEL
      AVY=0.25*(YIN(1)+YIN(2)+YIN(3)+YIN(4))                             PANEL
      AVZ=0.25*(ZIN(1)+ZIN(2)+ZIN(3)+ZIN(4))                             PANEL
C                                                                        PANEL
C     COMPUTE PROJECTION DISTANCE                                        PANEL
C                                                                        PANEL
      D=NX*(AVX-XIN(1))+NY*(AVY-YIN(1))+NZ*(AVZ-ZIN(1))                  PANEL
      T=SQRT(T1X*T1X+T1Y*T1Y+T1Z*T1Z)                                    PANEL
      IF (T.EQ.0.0) GO TO 40                                             PANEL
      TD=1./T                                                            PANEL
      T1X=T1X*TD                                                         PANEL
      T1Y=T1Y*TD                                                         PANEL
      T1Z=T1Z*TD                                                         PANEL
40    T2X=NY*T1Z-NZ*T1Y                                                  PANEL
      T2Y=NZ*T1X-NX*T1Z                                                  PANEL
      T2Z=NX*T1Y-NY*T1X                                                  PANEL
C                                                                        PANEL
C     COMPUTE COORDINATES OF CORNER POINTS IN REFERENCE COORDINATE       PANEL
C     SYSTEM                                                             PANEL
C                                                                        PANEL
      DO 50 N=1,4                                                        PANEL
      XPA=XIN(N)+NX*D                                                    PANEL
      YPA=YIN(N)+NY*D                                                    PANEL
      ZPA=ZIN(N)+NZ*D                                                    PANEL
      D=-D                                                               PANEL
      XDIF=XPA-AVX                                                       PANEL
      YDIF=YPA-AVY                                                       PANEL
      ZDIF=ZPA-AVZ                                                       PANEL
C                                                                        PANEL
C     TRANSFORM CORNER POINT TO ELEMENT COORDINATE SYSTEM (XI,ETA)       PANEL
C     WITH AVERAGE POINT AS ORIGIN                                       PANEL
C                                                                        PANEL
      XI(N)=T1X*XDIF+T1Y*YDIF+T1Z*ZDIF                                   PANEL
50    ETA(N)=T2X*XDIF+T2Y*YDIF+T2Z*ZDIF                                  PANEL
C                                                                        PANEL
C     COMPUTE CENTROID                                                   PANEL
C                                                                        PANEL
      ETACK=ETA(2)-ETA(4)                                                PANEL
      IF (ETACK.NE.0.0) GO TO 60                                         PANEL
      XI0=0.0                                                            PANEL
      GO TO 70                                                           PANEL
60    XI0=(XI(4)*(ETA(1)-ETA(2))+XI(2)*(ETA(4)-ETA(1)))/(3.*ETACK)       PANEL
70    ETA0=-ETA(1)/3.                                                    PANEL
C                                                                        PANEL
C     OBTAIN CORNER POINTS IN SYSTEM WITH CENTROID AS ORIGIN             PANEL
C                                                                        PANEL
      XI(1)=XI(1)-XI0                                                    PANEL
      XI(2)=XI(2)-XI0                                                    PANEL
      XI(3)=XI(3)-XI0                                                    PANEL
      XI(4)=XI(4)-XI0                                                    PANEL
      ETA(1)=ETA(1)-ETA0                                                 PANEL
      ETA(2)=ETA(2)-ETA0                                                 PANEL
      ETA(3)=ETA(3)-ETA0                                                 PANEL
      ETA(4)=ETA(4)-ETA0                                                 PANEL
C                                                                        PANEL
C     TRANSFORM CENTROID TO REFERENCE COORDINATE SYSTEM                  PANEL
C                                                                        PANEL
      XPT(NP)=AVX+T1X*XI0+T2X*ETA0                                       PANEL
      YPT(NP)=AVY+T1Y*XI0+T2Y*ETA0                                       PANEL
      ZPT(NP)=AVZ+T1Z*XI0+T2Z*ETA0                                       PANEL
C                                                                        PANEL
C     COMPUTE PANEL INCIDENCE AND INCLINATION ANGLE                      PANEL
C                                                                        PANEL
      DELTA(NP)=0.                                                       PANEL
      THET(NP)=0.                                                        PANEL
      RN=SQRT(NY*NY+NZ*NZ)                                               PANEL
      IF (L.EQ.0) GO TO 90                                               PANEL
      SL=-1.0                                                            PANEL
      IF (L.EQ.2) SL=1.0                                                 PANEL
      IF (IQ.EQ.1.AND.YIN(4).LT.YIN(1)) SL=-SL                           PANEL
      IF (NX.NE.0.) DELTA(NP)=ATAN2(SL*NX,RN)                            PANEL
      SP=FLOAT(1-2*IP)                                                   PANEL
      IF (IQ.EQ.1) GO TO 80                                              PANEL
      IF (NY.NE.0.) THET(NP)=ATAN2(SP*NY,-SP*NZ)                         PANEL
      GO TO 100                                                          PANEL
80    IF (NZ.NE.0.) THET(NP)=-ATAN2(SP*NZ,-SP*NY)                        PANEL
      GO TO 100                                                          PANEL
90    IF (NX.NE.0.) DELTA(NP)=ATAN2(-NX,RN)                              PANEL
      IF (NY.EQ.0..AND.NZ.EQ.0.) GO TO 100                               PANEL
      THET(NP)=ATAN2(-NY,NZ)                                             PANEL
100   CONTINUE                                                           PANEL
C                                                                        PANEL
C     COMPUTE PANEL AREA                                                 PANEL
C                                                                        PANEL
      AP=0.5*(XI(3)-XI(1))*ETACK                                         PANEL
      IF (IP.EQ.1) AP=-AP                                                PANEL
      RETURN                                                             PANEL
      END                                                                PANEL
      SUBROUTINE SCAMP4 (X,Y,N,NDA,NDB,DA,DB,C,S,M)                      SCAMP4 
C                                                                        SCAMP4 
C     ********************************************VERSION B00*********** SCAMP4 
C                                                                        SCAMP4 
C                                                                        SCAMP4 
C     GIVEN A SET OF N POINTS WHOSE ABSCISSAE FORM A STRICTLY MONOTONIC  SCAMP4 
C     SEQUENCE, AND GIVEN A FIRST OR SECOND DERIVATIVE AT X(1) AND A     SCAMP4 
C     FIRST OR SECOND DERIVATIVE AT X(N), TO FIND THE SMOOTHEST POSSIBLE SCAMP4 
C     CURVE PASSING RIGOROUSLY THROUGH THE GIVEN POINTS, SATISFYING THE  SCAMP4 
C     SPECIFIED BOUNDARY CONDITIONS, AND POSSESSING CONTINUOUS FIRST AND SCAMP4 
C     SECOND DERIVATIVES. THE CRITERION OF SMOOTHNESS IS THE             SCAMP4 
C     MINIMIZATION OF THE INTEGRAL OF THE SQUARE OF THE SECOND           SCAMP4 
C     DERIVATIVE, AND THE CUBIC FOUND IS ACCORDINGLY A CHAIN OF CUBICS,  SCAMP4 
C     I. E., A SEPARATE CUBIC ON EACH INTERVAL (X(I),X(I+1))             SCAMP4 
C                                                                        SCAMP4 
      DIMENSION C(4,1), S(1), X(1), Y(1), Z(4)                           SCAMP4 
C                                                                        SCAMP4 
      L=1                                                                SCAMP4 
      KK=1                                                               SCAMP4 
      D1=DA                                                              SCAMP4 
      D2=DB                                                              SCAMP4 
      IF (M-12) 20,10,20                                                 SCAMP4 
10    KK=2                                                               SCAMP4 
20    IF (NDA+1) 30,40,50                                                SCAMP4 
30    D1=DERIV2(X,Y,X)                                                   SCAMP4 
      GO TO 50                                                           SCAMP4 
40    D1=DERIV1(X,Y,1)                                                   SCAMP4 
50    NA=IABS(NDA)                                                       SCAMP4 
      IF (NDB+1) 60,70,80                                                SCAMP4 
60    D2=DERIV2(X(N-3),Y(N-3),X(N))                                      SCAMP4 
      GO TO 80                                                           SCAMP4 
70    D2=DERIV1(X(N-2),Y(N-2),3)                                         SCAMP4 
80    NB=IABS(NDB)                                                       SCAMP4 
      CALL COMCU (D1,D2,S,X,Y,L,M,N,NA,NB)                               SCAMP4 
      IF (M) 160,90,160                                                  SCAMP4 
90    K=N-1                                                              SCAMP4 
      DO 150 J=1,K                                                       SCAMP4 
      CALL CUBIC2 (X(J),Y(J),S(J),Z,M)                                   SCAMP4 
      IF (M-1) 100,110,100                                               SCAMP4 
100   M=100*J+M                                                          SCAMP4 
      GO TO 160                                                          SCAMP4 
110   IF(KK.EQ.2) GO TO 140                                              SCAMP4 
120   DO 130 I=1,4                                                       SCAMP4 
130   C(I,J)=Z(I)                                                        SCAMP4 
      GO TO 150                                                          SCAMP4 
140   L=7*J                                                              SCAMP4 
      C(L-6,1)=X(J)                                                      SCAMP4 
      C(L-5,1)=X(J+1)                                                    SCAMP4 
      C(L-4,1)=3.0                                                       SCAMP4 
      C(L-3,1)=Z(1)                                                      SCAMP4 
      C(L-2,1)=Z(2)                                                      SCAMP4 
      C(L-1,1)=Z(3)                                                      SCAMP4 
      C(L,1)=Z(4)                                                        SCAMP4 
150   CONTINUE                                                           SCAMP4 
      M=0                                                                SCAMP4 
160   RETURN                                                             SCAMP4 
      END                                                                SCAMP4 
      SUBROUTINE DERIV (X,Y,N,NDA,DA,FD)                                 DERIV
C                                                                        DERIV
C     *******************************************VERSION A00************ DERIV
C                                                                        DERIV
C                                                                        DERIV
C     COMPANION TO SUBROUTINE SCAMP4                                     DERIV
C                                                                        DERIV
C                                                                        DERIV
C     FIT A CHAIN OF CUBIC CURVES THROUGH A SET OF N POINTS HAVING       DERIV
C     CONTINUOUS FIRST AND SECOND DERIVATIVES AT THE INTERMEDIATE POINTS DERIV
C     AND SPECIFIED FIRST OR SECOND DERIVATIVE AT THE END POINTS         DERIV
C                                                                        DERIV
      COMMON /COEF/ C(4,50),CC(4,50)                                     DERIV
C                                                                        DERIV
      DIMENSION X(1), Y(1), FD(1)                                        DERIV
C                                                                        DERIV
C     FIT CUBIC CHAIN AND GET FIRST DERIVATIVES                          DERIV
C                                                                        DERIV
      CALL SCAMP4 (X,Y,N,NDA,-1,DA,0.,C,FD,0)                            DERIV
      RETURN                                                             DERIV
      END                                                                DERIV
      FUNCTION DERIV1 (X1,Y1,N)                                          DERIV1 
C                                                                        DERIV1 
C     *******************************************VERSION A00************ DERIV1 
C                                                                        DERIV1 
C                                                                        DERIV1 
C     COMPANION TO SUBROUTINE SCAMP4                                     DERIV1 
C                                                                        DERIV1 
C                                                                        DERIV1 
C     FIND THE FIRST DERIVATIVE OF THE QUADRATIC THROUGH THREE GIVEN     DERIV1 
C     POINTS AT A SPECIFIED ONE OF THESE POINTS. THIS PROVIDES A GOOD    DERIV1 
C     APPROXIMATION TO THE SLOPE OF A FUNCTION AT A POINT, PARTICULARLY  DERIV1 
C     IF THE OTHER TWO POINTS USED ARE NEARBY.                           DERIV1 
C                                                                        DERIV1 
      DIMENSION X(3), Y(3), X1(3), Y1(3)                                 DERIV1 
C                                                                        DERIV1 
      EQUIVALENCE (S,K)                                                  DERIV1 
C                                                                        DERIV1 
      DO 10 I=1,3                                                        DERIV1 
      X(I)=X1(I)                                                         DERIV1 
10    Y(I)=Y1(I)                                                         DERIV1 
      K=N                                                                DERIV1 
C                                                                        DERIV1 
C     FIND COEFFICIENTS OF THE X-SQUARED TERM AND THE X TERM. NO NEED TO DERIV1 
C     FIND CONSTANT TERM, AS IT DISAPPEARS UNDER DIFFERENTIATION.        DERIV1 
C                                                                        DERIV1 
      E=Y(1)-Y(2)                                                        DERIV1 
      H=Y(1)-Y(3)                                                        DERIV1 
      A=X(1)-X(2)                                                        DERIV1 
      B=X(1)-X(3)                                                        DERIV1 
      C=A*(X(1)+X(2))                                                    DERIV1 
      DT=B*(X(1)+X(3))                                                   DERIV1 
      C3=(B*E-A*H)/(B*C-A*DT)                                            DERIV1 
      C2=(E-C3*C)/A                                                      DERIV1 
C                                                                        DERIV1 
C     TEST TO SEE WHETHER DERIVATIVE IS WANTED AT ONE OF THE INPUT       DERIV1 
C     POINTS OR ELSEWHERE                                                DERIV1 
C                                                                        DERIV1 
      K1=IABS(K)                                                         DERIV1 
      DO 20 I=1,3                                                        DERIV1 
      IF (K1-I) 20,30,20                                                 DERIV1 
20    CONTINUE                                                           DERIV1 
      GO TO 40                                                           DERIV1 
30    S=X(K1)                                                            DERIV1 
40    DERIV1=C2+2.0*C3*S                                                 DERIV1 
      RETURN                                                             DERIV1 
      END                                                                DERIV1 
      FUNCTION DERIV2 (X,Y,XX)                                           DERIV2 
C                                                                        DERIV2 
C     *******************************************VERSION A00************ DERIV2 
C                                                                        DERIV2 
C                                                                        DERIV2 
C     COMPANION TO SUBROUTINE SCAMP4                                     DERIV2 
C                                                                        DERIV2 
C                                                                        DERIV2 
C     FIND THE SECOND DERIVATIVE OF THE CUBIC THROUGH FOUR GIVEN POINTS  DERIV2 
C     AT AN ARBITRARY POINT WHOSE X COORDINATE IS SPECIFIED              DERIV2 
C                                                                        DERIV2 
      DIMENSION X(4), Y(4)                                               DERIV2 
C                                                                        DERIV2 
      DERIV2=0.0                                                         DERIV2 
      IF (X(4)-X(3)) 10,70,10                                            DERIV2 
10    IF (X(4)-X(2)) 20,70,20                                            DERIV2 
20    IF (X(4)-X(1)) 30,70,30                                            DERIV2 
30    IF (X(3)-X(2)) 40,70,40                                            DERIV2 
40    IF (X(3)-X(1)) 50,70,50                                            DERIV2 
50    IF (X(2)-X(1)) 60,70,60                                            DERIV2 
60    Q41=(Y(4)-Y(1))/(X(4)-X(1))                                        DERIV2 
      Q31=(Y(3)-Y(1))/(X(3)-X(1))                                        DERIV2 
      Q21=(Y(2)-Y(1))/(X(2)-X(1))                                        DERIV2 
      E=(Q31-Q21)/(X(3)-X(2))                                            DERIV2 
      D=((Q41-Q21)/(X(4)-X(2))-E)/(X(4)-X(3))                            DERIV2 
      C=E-D*(X(3)+X(2)+X(1))                                             DERIV2 
      DERIV2=2.0*(C+3.0*D*XX)                                            DERIV2 
70    RETURN                                                             DERIV2 
      END                                                                DERIV2 
      SUBROUTINE CUBIC2 (X,Y,D,C,J)                                      CUBIC2 
C                                                                        CUBIC2 
C     ********************************************VERSION B00*********** CUBIC2 
C                                                                        CUBIC2 
C                                                                        CUBIC2 
C     COMPANION TO SUBROUTINE SCAMP4                                     CUBIC2 
C                                                                        CUBIC2 
C                                                                        CUBIC2 
C     FIT A CUBIC TO TWO POINTS GIVEN THE SLOPE AT EACH POINT            CUBIC2 
C                                                                        CUBIC2 
C     THIS ROUTINE CALLS THE SYSTEM ROUTINE OVERFL WITH ARGUMENT J.      CUBIC2 
C     IF A FLOATING POINT OVERFLOW CONDITION EXISTS, OVERFL SETS J=1.    CUBIC2 
C     IF NO OVERFLOW EXISTS, OVERFL SETS J=0.                            CUBIC2 
C     IN EITHER CASE, OVERFL SETS THE COMPUTER TO A NO OVERFLOW          CUBIC2 
C     CONDITION.                                                         CUBIC2 
C                                                                        CUBIC2 
      DIMENSION X(1), Y(1), D(1), C(1)                                   CUBIC2 
C                                                                        CUBIC2 
      X2=X(2)                                                            CUBIC2 
      B=X(1)-X2                                                          CUBIC2 
      IF (B) 20,10,20                                                    CUBIC2 
10    J=3                                                                CUBIC2 
      GO TO 30                                                           CUBIC2 
   20 CONTINUE                                                           CUBIC2 
      A=(Y(1)-Y(2))/B                                                    CUBIC2 
      E=X(1)+X2                                                          CUBIC2 
      C(4) = (D(1) + D(2) - 2.*A)/(B*B)                                  CUBIC2 
      C(3)=(A-D(2))/B-C(4)*(E+X2)                                        CUBIC2 
      C(2)=A-E*C(3)-C(4)*(E*X2+X(1)**2)                                  CUBIC2 
      C(1)=Y(2)-X2*(C(2)+X2*(C(3)+X2*C(4)))                              CUBIC2 
      J = LEGVAR(C) + 1                                                  CUBIC2 
30    RETURN                                                             CUBIC2 
      END                                                                CUBIC2 
      SUBROUTINE COMCU (DA,DB,S,X,Y,L,M,N,NDA,NDB)                       COMCU
C                                                                        COMCU
C     ********************************************VERSION B00*********** COMCU
C                                                                        COMCU
C                                                                        COMCU
C     COMPANION TO SUBROUTINE SCAMP4                                     COMCU
C                                                                        COMCU
C                                                                        COMCU
C     FIT A COMPOSITE CUBIC THROUGH N POINTS, I. E., A SEPARATE CUBIC    COMCU
C     BETWEEN EACH PAIR OF ADJACENT POINTS, SUCH THAT N-1 CUBICS ARE SO  COMCU
C     DETERMINED THAT EACH MATCHES ITS NEIGHBORS IN FUNCTION VALUE AND   COMCU
C     IN THE FIRST AND SECOND DERIVATIVES.                               COMCU
C                                                                        COMCU
      COMMON /COEF/ C(50),D(50),E(50)                                    COMCU
C                                                                        COMCU
      DIMENSION S(1), X(1), Y(1)                                         COMCU
C                                                                        COMCU
      K=N-1                                                              COMCU
      KUE=0                                                              COMCU
      IF (N-2) 10,20,60                                                  COMCU
10    M=-1                                                               COMCU
      GO TO 180                                                          COMCU
20    IF (NDA-1) 50,30,50                                                COMCU
30    IF (NDB-1) 50,40,50                                                COMCU
40    S(1)=DA                                                            COMCU
      S(2)=DB                                                            COMCU
      M=0                                                                COMCU
      GO TO 180                                                          COMCU
50    KUE=1                                                              COMCU
60    M=0                                                                COMCU
      E(1)=0.0                                                           COMCU
      C(N)=0.0                                                           COMCU
      IF (NDA-1) 70,70,80                                                COMCU
70    D(1)=1.0                                                           COMCU
      C(1)=0.0                                                           COMCU
      S(1)=DA                                                            COMCU
      GO TO 90                                                           COMCU
80    D(1)=4.0                                                           COMCU
      C(1)=2.0                                                           COMCU
      S(1)=6.0*(Y(2)-Y(1))/(X(2)-X(1))-DA*(X(2)-X(1))                    COMCU
90    IF (KUE) 120,100,120                                               COMCU
100   DO 110 I=2,K                                                       COMCU
      U=X(I)-X(I-1)                                                      COMCU
      V=X(I+1)-X(I)                                                      COMCU
      C(I)=U                                                             COMCU
      D(I)=2.0*(U+V)                                                     COMCU
      E(I)=V                                                             COMCU
110   S(I)=3.0/(U*V)*(U*U*(Y(I+1)-Y(I))+V*V*(Y(I)-Y(I-1)))               COMCU
120   IF (NDB-1) 130,130,140                                             COMCU
130   E(N)=0.0                                                           COMCU
      D(N)=1.0                                                           COMCU
      S(N)=DB                                                            COMCU
      GO TO 150                                                          COMCU
140   E(N)=2.0                                                           COMCU
      D(N)=4.0                                                           COMCU
      S(N)=6.0*(Y(N)-Y(N-1))/(X(N)-X(N-1))+DB*(X(N)-X(N-1))              COMCU
150   C(1)=C(1)/D(1)                                                     COMCU
      S(1)=S(1)/D(1)                                                     COMCU
      DO 160 I=2,N                                                       COMCU
      F=D(I)-C(I-1)*E(I)                                                 COMCU
      C(I)=C(I)/F                                                        COMCU
160   S(I)=(S(I)-S(I-1)*E(I))/F                                          COMCU
      DO 170 J=1,K                                                       COMCU
      I=N-J                                                              COMCU
170   S(I)=S(I)-S(I+1)*C(I)                                              COMCU
180   RETURN                                                             COMCU
      END                                                                COMCU
      OVERLAY(LWB,1,1)                                                   CONFIG 
C     OVERLAY(LWB,1,1)                                                   CONFIG 
      PROGRAM CONFIG                                                     CONFIG 
C                                                                        CONFIG 
C     *******************************************VERSION B00************ CONFIG 
C                                                                        CONFIG 
C                                                                        CONFIG 
C     INPUT AND INITIALIZE CONFIGURATION DESCRIPTION (BASED ON PROGRAM   CONFIG 
C     START OF NASA TMX-2074)                                            CONFIG 
C                                                                        CONFIG 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP CONFIG 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       CONFIG 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR CONFIG 
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  CONFIG 
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P CONFIG 
     1LOTSZ,TYPE,KODE,XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,XMID,YMID,ZMID,BIGD, CONFIG 
     2ISP                                                                CONFIG 
      COMMON /SCRAT/ BLOCK(7500)                                         CONFIG 
      COMMON /GRAPH/ PLOT                                                CONFIG 
      COMMON /ONE/ NAN2                                                  CONFIG 
      COMMON /PI/ PI,RADEG,DEGRAD                                        CONFIG 
C                                                                        CONFIG 
      DIMENSION XAF(30), WAFORG(20,4), WAFORD(20,3,30), TZORD(20,30), WA CONFIG 
     1FOR(20,30), XFUS(30,4), ZFUS(30,4), FUSARD(30,4), FUSRAD(30,4), SF CONFIG 
     2US(30,30,8), PODORG(9,3), XPOD(9,30), PODORD(9,30), XPOD1(9,30), F CONFIG 
     3INORG(6,2,4), XFIN(6,10), FINORD(6,2,10), FINX2(6,2,10), FINX3(6,2 CONFIG 
     4,10), FINOR(6,10), FINCR(6,10), CANORG(6,2,4), XCAN(6,10), CANORD( CONFIG 
     56,2,10), CANOR1(6,2,10), CANORX(6,2,10), CANOR(6,10), CANCR(6,10)  CONFIG 
C                                                                        CONFIG 
      EQUIVALENCE (BLOCK(1),XAF(1)), (BLOCK(31),WAFORG(1)), (BLOCK(111), CONFIG 
     1WAFORD(1)), (BLOCK(1911),TZORD(1)), (BLOCK(2511),WAFOR(1)), (BLOCK CONFIG 
     2(1),XFUS(1)), (BLOCK(121),ZFUS(1)), (BLOCK(241),FUSARD(1)), (BLOCK CONFIG 
     3(361),FUSRAD(1)), (BLOCK(241),SFUS(1)), (BLOCK(1),PODORG(1)), (BLO CONFIG 
     4CK(28),XPOD(1)), (BLOCK(298),PODORD(1)), (BLOCK(568),XPOD1(1)), (B CONFIG 
     5LOCK(1),FINORG(1)), (BLOCK(49),XFIN(1)), (BLOCK(109),FINORD(1)), ( CONFIG 
     6BLOCK(229),FINX2(1)), (BLOCK(349),FINX3(1)), (BLOCK(469),FINOR(1)) CONFIG 
     7, (BLOCK(529),FINCR(1)), (BLOCK(1),CANORG(1)), (BLOCK(49),XCAN(1)) CONFIG 
     8, (BLOCK(109),CANORD(1)), (BLOCK(229),CANOR1(1)), (BLOCK(349),CANO CONFIG 
     9RX(1)), (BLOCK(469),CANOR(1)), (BLOCK(529),CANCR(1))               CONFIG 
C                                                                        CONFIG 
      INTEGER PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9 CONFIG 
     1,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                         CONFIG 
C                                                                        CONFIG 
      REWIND TAPE9                                                       CONFIG 
      REWIND TAPE12                                                      CONFIG 
C                                                                        CONFIG 
C     REFERENCE AREA                                                     CONFIG 
C                                                                        CONFIG 
      REFA=1.0                                                           CONFIG 
      IF (J0.EQ.0) GO TO 10                                              CONFIG 
      READ (TAPE5,470) REFA                                              CONFIG 
10    CONTINUE                                                           CONFIG 
      WRITE (TAPE9) REFA                                                 CONFIG 
C                                                                        CONFIG 
C     WING                                                               CONFIG 
C                                                                        CONFIG 
      IF (J1.EQ.0) GO TO 160                                             CONFIG 
      N=IABS(NWAFOR)                                                     CONFIG 
      NREC=(N+9)/10                                                      CONFIG 
      I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 20 NN=1,NREC                                                    CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+10                                                           CONFIG 
      READ (TAPE5,470) (XAF(I),I=I1,I2)                                  CONFIG 
20    CONTINUE                                                           CONFIG 
      DO 30 I=1,NWAF                                                     CONFIG 
      READ (TAPE5,470) (WAFORG(I,J),J=1,4)                               CONFIG 
30    CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     J1 = -1 INDICATES UNCAMBERED WING DATA                             CONFIG 
C                                                                        CONFIG 
      IF (J1.LT.0) GO TO 60                                              CONFIG 
      DO 50 NN=1,NWAF                                                    CONFIG 
      I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 40 N1=1,NREC                                                    CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+10                                                           CONFIG 
      READ (TAPE5,470) (TZORD(NN,I),I=I1,I2)                             CONFIG 
      DO 40 I=I1,I2                                                      CONFIG 
      IF (WAFORG(NN,4).EQ.0.) GO TO 40                                   CONFIG 
      TZORD(NN,I)=TZORD(NN,I)*100./WAFORG(NN,4)                          CONFIG 
40    CONTINUE                                                           CONFIG 
50    CONTINUE                                                           CONFIG 
      GO TO 80                                                           CONFIG 
60    DO 70 I=1,NWAF                                                     CONFIG 
      DO 70 K=1,N                                                        CONFIG 
70    TZORD(I,K)=0.                                                      CONFIG 
80    L=1                                                                CONFIG 
C                                                                        CONFIG 
C     NWAFOR POSITIVE INDICATES SYMMETRICAL ORDINATES                    CONFIG 
C     NWAFOR NEGATIVE INDICATES UPPER AND LOWER ORDINATES ARE GIVEN      CONFIG 
C                                                                        CONFIG 
      IF (NWAFOR.LT.0) L=2                                               CONFIG 
      DO 100 NN=1,NWAF                                                   CONFIG 
      DO 100 K=1,L                                                       CONFIG 
      I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 90 N1=1,NREC                                                    CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+10                                                           CONFIG 
      READ (TAPE5,470) (WAFORD(NN,K,I),I=I1,I2)                          CONFIG 
90    CONTINUE                                                           CONFIG 
100   CONTINUE                                                           CONFIG 
      DO 110 NN=1,NWAF                                                   CONFIG 
      DO 110 K=1,N                                                       CONFIG 
      WAFOR(NN,K)=WAFORD(NN,1,K)                                         CONFIG 
      IF (L.EQ.1) GO TO 110                                              CONFIG 
      WAFOR(NN,K)=(WAFORD(NN,1,K)+WAFORD(NN,2,K))/2.                     CONFIG 
      TZORD(NN,K)=(WAFORD(NN,1,K)-WAFORD(NN,2,K))/2.+TZORD(NN,K)         CONFIG 
110   CONTINUE                                                           CONFIG 
      IF (NWAFOR.LT.0) GO TO 130                                         CONFIG 
      DO 120 NN=1,NWAF                                                   CONFIG 
      DO 120 K=1,N                                                       CONFIG 
120   WAFORD(NN,2,K)=WAFORD(NN,1,K)                                      CONFIG 
130   CONTINUE                                                           CONFIG 
      IF(NWAFOR.LT.0) J1=IABS(J1)                                        CONFIG 
      NWAFOR=IABS(NWAFOR)                                                CONFIG 
      NW=NWAFOR                                                          CONFIG 
C                                                                        CONFIG 
C     CHANGE WING TO ACTUAL UNITS                                        CONFIG 
C                                                                        CONFIG 
      DO 150 I=1,NWAF                                                    CONFIG 
      E=.01*WAFORG(I,4)                                                  CONFIG 
      E3=WAFORG(I,3)                                                     CONFIG 
      DO 140 J=1,NWAFOR                                                  CONFIG 
      WAFORD(I,1,J)=E*WAFORD(I,1,J)+E3+TZORD(I,J)*E                      CONFIG 
      WAFORD(I,2,J)=-E*WAFORD(I,2,J)+E3+TZORD(I,J)*E                     CONFIG 
140   WAFORD(I,3,J)=WAFORG(I,1)+E*XAF(J)                                 CONFIG 
150   CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     IF PLOTTING INPUT GEOMETRY, SET UP WING PLOT VECTORS               CONFIG 
C                                                                        CONFIG 
      IF (PLOT.LT.0) WRITE (TAPE3) BLOCK                                 CONFIG 
C                                                                        CONFIG 
160   WRITE (TAPE9) BLOCK                                                CONFIG 
      N=IABS(NWAFOR)                                                     CONFIG 
C                                                                        CONFIG 
C     FUSELAGE (BODY)                                                    CONFIG 
C                                                                        CONFIG 
      IF (J2.EQ.0) GO TO 290                                             CONFIG 
      J2TEST=3                                                           CONFIG 
C                                                                        CONFIG 
C     J2 = -1 AND J6 = -1 INDICATE CIRCULAR FUSELAGE SYMMETRICAL WITH    CONFIG 
C     THE XY-PLANE                                                       CONFIG 
C                                                                        CONFIG 
      IF (J2.EQ.-1.AND.J6.EQ.-1) J2TEST=1                                CONFIG 
C                                                                        CONFIG 
C     J2 = -1 AND J6 = 0 INDICATE CIRCULAR CAMBERED FUSELAGE             CONFIG 
C                                                                        CONFIG 
      IF (J2.EQ.-1.AND.J6.EQ.0) J2TEST=2                                 CONFIG 
C                                                                        CONFIG 
C     J6 = 1 INDICATES COMPLETE CONFIGURATION SYMMETRICAL WITH THE       CONFIG 
C     XY-PLANE                                                           CONFIG 
C                                                                        CONFIG 
      IF (J6.EQ.1) J2TEST=1                                              CONFIG 
      J2=1                                                               CONFIG 
      DO 280 NFU=1,NFUS                                                  CONFIG 
      NRAD=NRADX(NFU)                                                    CONFIG 
      NFUSOR=NFORX(NFU)                                                  CONFIG 
      N=NFUSOR                                                           CONFIG 
      NREC=(N+9)/10                                                      CONFIG 
      I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 170 N1=1,NREC                                                   CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+10                                                           CONFIG 
      READ (TAPE5,470) (XFUS(I,NFU),I=I1,I2)                             CONFIG 
170   CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     J2TEST = 2 INDICATES CIRCULAR CAMBERED FUSELAGE                    CONFIG 
C                                                                        CONFIG 
      IF (J2TEST.NE.2) GO TO 190                                         CONFIG 
      I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 180 N1=1,NREC                                                   CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+10                                                           CONFIG 
      READ (TAPE5,470) (ZFUS(I,NFU),I=I1,I2)                             CONFIG 
180   CONTINUE                                                           CONFIG 
      GO TO 210                                                          CONFIG 
190   DO 200 I=1,N                                                       CONFIG 
200   ZFUS(I,NFU)=0.                                                     CONFIG 
C                                                                        CONFIG 
C     J2TEST = 3 INDICATES ARBITRARY FUSELAGE                            CONFIG 
C                                                                        CONFIG 
210   IF (J2TEST.NE.3) GO TO 250                                         CONFIG 
      NCARD=(NRAD+9)/10                                                  CONFIG 
      DO 240 LN=1,N                                                      CONFIG 
      DO 230 K=1,2                                                       CONFIG 
      KK=K+(NFU-1)*2                                                     CONFIG 
      II=10                                                              CONFIG 
      I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 220 NN=1,NCARD                                                  CONFIG 
      IF (NN.EQ.NCARD) II=MOD(NRAD,10)                                   CONFIG 
      IF (II.EQ.0) II=10                                                 CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+II                                                           CONFIG 
      READ (TAPE5,470) (SFUS(I,LN,KK),I=I1,I2)                           CONFIG 
220   CONTINUE                                                           CONFIG 
230   CONTINUE                                                           CONFIG 
240   CONTINUE                                                           CONFIG 
      GO TO 280                                                          CONFIG 
250   I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 260 N1=1,NREC                                                   CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+10                                                           CONFIG 
      READ (TAPE5,470) (FUSARD(I,NFU),I=I1,I2)                           CONFIG 
260   CONTINUE                                                           CONFIG 
      DO 270 I=1,N                                                       CONFIG 
270   FUSRAD(I,NFU)=SQRT(FUSARD(I,NFU)/PI)                               CONFIG 
280   CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     IF PLOTTING INPUT GEOMETRY, SET UP FUSELAGE PLOT VECTORS           CONFIG 
C                                                                        CONFIG 
      IF (PLOT.LT.0) WRITE (TAPE3) BLOCK                                 CONFIG 
C                                                                        CONFIG 
290   WRITE (TAPE9) BLOCK                                                CONFIG 
C                                                                        CONFIG 
C     POD GEOMETRY DUMMY READ STATEMENTS                                 CONFIG 
C                                                                        CONFIG 
      IF (J3.EQ.0) GO TO 330                                             CONFIG 
      N=NPODOR                                                           CONFIG 
      NREC=(N+9)/10                                                      CONFIG 
      DO 320 NN=1,NP                                                     CONFIG 
      READ (TAPE5,470) (PODORG(NN,I),I=1,3)                              CONFIG 
      I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 300 N1=1,NREC                                                   CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+10                                                           CONFIG 
      READ (TAPE5,470) (XPOD(NN,I),I=I1,I2)                              CONFIG 
300   CONTINUE                                                           CONFIG 
      I1=-9                                                              CONFIG 
      I2=0                                                               CONFIG 
      DO 310 N1=1,NREC                                                   CONFIG 
      I1=I1+10                                                           CONFIG 
      I2=I2+10                                                           CONFIG 
      READ (TAPE5,470) (PODORD(NN,I),I=I1,I2)                            CONFIG 
310   CONTINUE                                                           CONFIG 
320   CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     IF PLOTTING INPUT GEOMETRY, SET UP POD PLOT VECTORS                CONFIG 
C                                                                        CONFIG 
      IF (PLOT.LT.0) WRITE (TAPE3) BLOCK                                 CONFIG 
C                                                                        CONFIG 
330   CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     FINS (VERTICAL TAILS)                                              CONFIG 
C                                                                        CONFIG 
      IF (J4.EQ.0) GO TO 380                                             CONFIG 
      N=NFINOR                                                           CONFIG 
      DO 350 NN=1,NF                                                     CONFIG 
      READ (TAPE5,470) ((FINORG(NN,I,J),J=1,4),I=1,2)                    CONFIG 
      READ (TAPE5,470) (XFIN(NN,I),I=1,N)                                CONFIG 
      READ (TAPE5,470) (FINORD(NN,1,J),J=1,N)                            CONFIG 
      DO 340 J=1,N                                                       CONFIG 
      FINCR(NN,J)=0.                                                     CONFIG 
340   FINOR(NN,J)=FINORD(NN,1,J)                                         CONFIG 
350   CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     CHANGE FINS TO ACTUAL UNITS                                        CONFIG 
C                                                                        CONFIG 
      DO 370 LQ=1,NF                                                     CONFIG 
      DO 370 I=1,2                                                       CONFIG 
      J=3-I                                                              CONFIG 
      E=.01*FINORG(LQ,J,4)                                               CONFIG 
      E2=FINORG(LQ,J,2)                                                  CONFIG 
      DO 360 K=1,NFINOR                                                  CONFIG 
      EE=FINORD(LQ,1,K)*E                                                CONFIG 
      FINORD(LQ,J,K)=E2+EE                                               CONFIG 
      FINX2(LQ,J,K)=E2-EE                                                CONFIG 
360   FINX3(LQ,J,K)=FINORG(LQ,J,1)+E*XFIN(LQ,K)                          CONFIG 
370   CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     IF PLOTTING INPUT GEOMETRY, SET UP FIN PLOT VECTORS                CONFIG 
C                                                                        CONFIG 
      IF (PLOT.LT.0) WRITE (TAPE3) BLOCK                                 CONFIG 
C                                                                        CONFIG 
380   WRITE (TAPE9) BLOCK                                                CONFIG 
C                                                                        CONFIG 
C     CANARDS (HORIZONTAL TAILS)                                         CONFIG 
C                                                                        CONFIG 
      IF (J5.EQ.0) GO TO 460                                             CONFIG 
      N=IABS(NCANOR)                                                     CONFIG 
      DO 420 NN=1,NCAN                                                   CONFIG 
      READ (TAPE5,470) ((CANORG(NN,I,J),J=1,4),I=1,2)                    CONFIG 
      READ (TAPE5,470) (XCAN(NN,I),I=1,N)                                CONFIG 
      READ (TAPE5,470) (CANORD(NN,1,J),J=1,N)                            CONFIG 
C                                                                        CONFIG 
C     NCANOR POSITIVE INDICATES SYMMETRICAL ORDINATES                    CONFIG 
C     NCANOR NEGATIVE INDICATES UPPER AND LOWER ORDINATES ARE GIVEN      CONFIG 
C                                                                        CONFIG 
      IF (NCANOR.LT.0) GO TO 400                                         CONFIG 
      DO 390 J=1,N                                                       CONFIG 
      CANCR(NN,J)=0.                                                     CONFIG 
      CANOR(NN,J)=CANORD(NN,1,J)                                         CONFIG 
390   CANOR1(NN,1,J)=CANORD(NN,1,J)                                      CONFIG 
      GO TO 420                                                          CONFIG 
400   READ (TAPE5,470) (CANOR1(NN,1,J),J=1,N)                            CONFIG 
      DO 410 J=1,N                                                       CONFIG 
      CANOR(NN,J)=(CANORD(NN,1,J)+CANOR1(NN,1,J))/2.                     CONFIG 
410   CANCR(NN,J)=(CANORD(NN,1,J)-CANOR1(NN,1,J))/2.                     CONFIG 
420   CONTINUE                                                           CONFIG 
      NC=IABS(NCANOR)                                                    CONFIG 
C                                                                        CONFIG 
C     CHANGE CANARD TO ACTUAL UNITS                                      CONFIG 
C                                                                        CONFIG 
      DO 450 NN=1,NCAN                                                   CONFIG 
      DO 440 K=1,2                                                       CONFIG 
      I=3-K                                                              CONFIG 
      E=.01*CANORG(NN,I,4)                                               CONFIG 
      E3=CANORG(NN,I,3)                                                  CONFIG 
      DO 430 J=1,N                                                       CONFIG 
      CANORD(NN,I,J)=E*CANORD(NN,1,J)+E3                                 CONFIG 
      CANOR1(NN,I,J)=-E*CANOR1(NN,1,J)+E3                                CONFIG 
430   CANORX(NN,I,J)=CANORG(NN,I,1)+E*XCAN(NN,J)                         CONFIG 
440   CONTINUE                                                           CONFIG 
450   CONTINUE                                                           CONFIG 
C                                                                        CONFIG 
C     IF PLOTTING INPUT GEOMETRY, SET UP CANARD PLOT VECTORS             CONFIG 
C                                                                        CONFIG 
      IF (PLOT.LT.0) WRITE (TAPE3) BLOCK                                 CONFIG 
C                                                                        CONFIG 
460   WRITE (TAPE9) BLOCK                                                CONFIG 
      REWIND TAPE9                                                       CONFIG 
C                                                                        CONFIG 
C                                                                        CONFIG 
C                                                                        CONFIG 
470   FORMAT (10F7.0)                                                    CONFIG 
      END                                                                CONFIG 
      OVERLAY(LWB,1,2)                                                   NEWORD 
C     OVERLAY(LWB,1,2)                                                   NEWORD 
      PROGRAM NEWORD                                                     NEWORD 
C                                                                        NEWORD 
C     ********************************************VERSION B00*********** NEWORD 
C                                                                        NEWORD 
C                                                                        NEWORD 
C     REVISE CHORDWISE PANEL SPACING ON WING AND COMPUTE NEW AIRFOIL     NEWORD 
C     ORDINATES                                                          NEWORD 
C                                                                        NEWORD 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP NEWORD 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       NEWORD 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR                    NEWORD 
      COMMON/NEWCOM/K0,K1,KDUM(6),KWAFOR                                 NEWORD 
      COMMON /COEF/ C(4,50),CC(4,50)                                     NEWORD 
      COMMON /SCRAT/ BLOCK(7500)                                         NEWORD 
C                                                                        NEWORD 
      DIMENSION XAF(30), WAFORG(20,4), WAFORD(20,3,30), TZORD(20,30), TZ NEWORD 
     1ORK(20,30), WAFORK(20,30), DZCDX(20,30), DZTDX(20,30), DZCDXK(20,3 NEWORD 
     20), WAFOR(20,30), DZTDXK(20,30), TORD(30), ZORD(30), DZC(30), DZT( NEWORD 
     330), RHO(20), A(20), B(20), R(20), XAT(30), XAFK(30)               NEWORD 
C                                                                        NEWORD 
      EQUIVALENCE (BLOCK(1),XAF(1)), (BLOCK(31),WAFORG(1)), (BLOCK(111), NEWORD 
     1WAFORD(1)), (BLOCK(1911),TZORD(1)), (BLOCK(2511),WAFOR(1)), (BLOCK NEWORD 
     2(3111),TZORK(1)), (BLOCK(3711),WAFORK(1)), (BLOCK(4311),DZCDX(1)), NEWORD 
     3 (BLOCK(4911),DZCDXK(1)), (BLOCK(5511),DZTDXK(1)), (BLOCK(6111),XA NEWORD 
     4FK(1)), (BLOCK(6141),RHO(1)), (BLOCK(6161),A(1)), (BLOCK(6181),B(1 NEWORD 
     5)), (BLOCK(6201),R(1)), (BLOCK(6221),TORD(1)), (BLOCK(6251),ZORD(1 NEWORD 
     6)), (BLOCK(6281),DZC(1)), (BLOCK(6311),DZT(1)), (BLOCK(6341),XAT(1 NEWORD 
     7)), (BLOCK(6901),DZTDX(1))                                         NEWORD 
C                                                                        NEWORD 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE NEWORD 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              NEWORD 
C                                                                        NEWORD 
C     IN LINE FUNCTION DEFINITION                                        NEWORD 
C                                                                        NEWORD 
      SLOP1(I,XI,C)=C(2,I)+XI*(2.*C(3,I)+3.*XI*C(4,I))                   NEWORD 
      SLOP2(I,XI,CC)=CC(2,I)+XI*(2.*CC(3,I)+3.*XI*CC(4,I))               NEWORD 
      VALU1(I,XI,C)=C(1,I)+XI*(C(2,I)+XI*(C(3,I)+XI*C(4,I)))             NEWORD 
      VALU2(I,XI,CC)=CC(1,I)+XI*(CC(2,I)+XI*(CC(3,I)+XI*CC(4,I)))        NEWORD 
C                                                                        NEWORD 
      IF (K1.EQ.3) READ (TAPE5,220) (RHO(N),N=1,NWAF)                    NEWORD 
      IF (KWAFOR.EQ.0) GO TO 10                                          NEWORD 
      READ (TAPE5,220) (XAFK(K),K=1,KWAFOR)                              NEWORD 
      GO TO 30                                                           NEWORD 
10    KWAFOR=NWAFOR                                                      NEWORD 
      DO 20 K=1,NWAFOR                                                   NEWORD 
20    XAFK(K)=XAF(K)                                                     NEWORD 
30    CONTINUE                                                           NEWORD 
      NWAR=NWAFOR-1                                                      NEWORD 
C                                                                        NEWORD 
C     CALCULATE CAMBER AND THICKNESS SLOPES                              NEWORD 
C                                                                        NEWORD 
      DO 210 N=1,NWAF                                                    NEWORD 
      NDA=-1                                                             NEWORD 
      DA=0.                                                              NEWORD 
      DO 40 L=1,NWAFOR                                                   NEWORD 
      ZORD(L)=TZORD(N,L)                                                 NEWORD 
40    TORD(L)=WAFOR(N,L)                                                 NEWORD 
C                                                                        NEWORD 
C     J1 = -1 INDICATES UNCAMBERED WING                                  NEWORD 
C                                                                        NEWORD 
      IF (J1.LT.0) GO TO 60                                              NEWORD 
      CALL DERIV (XAF,ZORD,NWAFOR,NDA,DA,DZC)                            NEWORD 
      DO 50 L=1,NWAR                                                     NEWORD 
      DO 50 M=1,4                                                        NEWORD 
50    CC(M,L)=C(M,L)                                                     NEWORD 
      GO TO 80                                                           NEWORD 
60    DO 70 L=1,NWAR                                                     NEWORD 
      DZC(L)=0.                                                          NEWORD 
      DO 70 M=1,4                                                        NEWORD 
70    CC(M,L)=0.                                                         NEWORD 
80    NWA=NWAFOR                                                         NEWORD 
      IF (K1.LT.3) GO TO 100                                             NEWORD 
C                                                                        NEWORD 
C     CALCULATE INITIAL SLOPE FOR ROUND LEADING EDGE                     NEWORD 
C                                                                        NEWORD 
      NWA=NWAR                                                           NEWORD 
      NDA=0                                                              NEWORD 
      R(N)=SQRT(2.*RHO(N))                                               NEWORD 
      SAF2=SQRT(XAF(2))                                                  NEWORD 
      SAF3=SQRT(XAF(3))                                                  NEWORD 
      CON2=TORD(2)/XAF(2)-R(N)/SAF2                                      NEWORD 
      CON3=TORD(3)/XAF(3)-R(N)/SAF3                                      NEWORD 
      DX=XAF(3)-XAF(2)                                                   NEWORD 
      A(N)=(CON2*XAF(3)-CON3*XAF(2))/DX                                  NEWORD 
      B(N)=(CON3-CON2)/DX                                                NEWORD 
      DA=R(N)/(2.*SAF2)+A(N)+2.*B(N)*XAF(2)                              NEWORD 
      DO 90 L=1,NWAR                                                     NEWORD 
      XAT(L)=XAF(L+1)                                                    NEWORD 
90    TORD(L)=TORD(L+1)                                                  NEWORD 
      GO TO 120                                                          NEWORD 
100   DO 110 L=1,NWA                                                     NEWORD 
110   XAT(L)=XAF(L)                                                      NEWORD 
120   CALL DERIV (XAT,TORD,NWA,NDA,DA,DZT)                               NEWORD 
      DO 130 L=1,NWAFOR                                                  NEWORD 
      DZCDX(N,L)=DZC(L)                                                  NEWORD 
130   DZTDX(N,L)=DZT(L)                                                  NEWORD 
      IF (K1.LT.3) GO TO 150                                             NEWORD 
      DZTDX(N,1)=900.                                                    NEWORD 
      DO 140 L=2,NWAFOR                                                  NEWORD 
140   DZTDX(N,L)=DZT(L-1)                                                NEWORD 
150   CONTINUE                                                           NEWORD 
      IF (KWAFOR.EQ.0) GO TO 210                                         NEWORD 
C                                                                        NEWORD 
C     INTERPOLATE FOR REVISED CAMBER AND THICKNESS ORDINATES AND SLOPES  NEWORD 
C                                                                        NEWORD 
      TZORK(N,1)=TZORD(N,1)                                              NEWORD 
      DZCDXK(N,1)=DZCDX(N,1)                                             NEWORD 
      WAFORK(N,1)=WAFOR(N,1)                                             NEWORD 
      DZTDXK(N,1)=DZTDX(N,1)                                             NEWORD 
      KI=2                                                               NEWORD 
      DO 200 J=1,NWAR                                                    NEWORD 
      DO 180 K=KI,KWAFOR                                                 NEWORD 
      IF (XAFK(K).GT.XAF(J+1)) GO TO 190                                 NEWORD 
      XJ=XAFK(K)                                                         NEWORD 
      TZORK(N,K) = CC(1,J) + XJ*(CC(2,J) + XJ*(CC(3,J) + XJ*CC(4,J)))    NEWORD 
      DZCDXK(N,K) = CC(2,J) + XJ*(2.*CC(3,J) + 3.*XJ*CC(4,J))            NEWORD 
      L=J                                                                NEWORD 
      XL=XJ                                                              NEWORD 
      IF (K1.LT.3) GO TO 170                                             NEWORD 
      IF (J.GT.1) GO TO 160                                              NEWORD 
      SXJ=SQRT(XJ)                                                       NEWORD 
      DZTDXK(N,K)=R(N)/(2.*SXJ)+A(N)+2.*B(N)*XJ                          NEWORD 
      WAFORK(N,K)=R(N)*SXJ+XJ*(A(N)+B(N)*XJ)                             NEWORD 
      GO TO 180                                                          NEWORD 
160   XL=XJ-XAF(1)                                                       NEWORD 
      L=J-1                                                              NEWORD 
  170 WAFORK(N,K) = C(1,L) + XL*(C(2,L) + XL*(C(3,L) + XL*C(4,L)))       NEWORD 
      DZTDXK(N,K) = C(2,L) + XL*(2.*C(3,L) + 3.*XL*C(4,L))               NEWORD 
180   CONTINUE                                                           NEWORD 
190   KI=K                                                               NEWORD 
200   CONTINUE                                                           NEWORD 
210   CONTINUE                                                           NEWORD 
C                                                                        NEWORD 
C                                                                        NEWORD 
C                                                                        NEWORD 
220   FORMAT (10F7.0)                                                    NEWORD 
      END                                                                NEWORD 
      OVERLAY(LWB,1,3)                                                   WNGPAN 
C     OVERLAY(LWB,1,3)                                                   WNGPAN 
      PROGRAM WNGPAN                                                     WNGPAN 
C                                                                        WNGPAN 
C     *******************************************VERSION B00************ WNGPAN 
C                                                                        WNGPAN 
C                                                                        WNGPAN 
C     REVISE SPANWISE PANEL SPACING ON WING AND COMPUTE NEW PANEL        WNGPAN 
C     GEOMETRY                                                           WNGPAN 
C                                                                        WNGPAN 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP WNGPAN 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       WNGPAN 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR                    WNGPAN 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           WNGPAN 
      COMMON/NEWCOM/KDD,KL,KDUM(5),KWAF,KWAFOR,KDUMO(35),KOL,NCPT        WNGPAN 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BTE(20),NWT( WNGPAN 
     120),SPNW(20),XLEW(20),BLE(20),ZLEW(20),XS(20),YS(20),ZS(20)        WNGPAN 
      COMMON /SCRAT/ BLOCK(7500)                                         WNGPAN 
      COMMON /POINT/ ARRAY(6000)                                         WNGPAN 
      COMMON /VELCOM/ DUM1(6),PRINT                                      WNGPAN 
      COMMON /GRAPH/ PLOT                                                WNGPAN 
      COMMON /PI/ PI,RADEG,DEGRAD                                        WNGPAN 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, WNGPAN 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        WNGPAN 
C                                                                        WNGPAN 
      DIMENSION XPT(600), YPT(600), ZPT(600), THET(600), DELTA(600), XC( WNGPAN 
     130,20), YC(30,20), ZC(30,20), ZU(30,20), AREA(600), XE(600), XAF(3 WNGPAN 
     20), WAFORG(20,4), WAFORD(20,3,30), TZORK(20,30), WAFORK(20,30), DZ WNGPAN 
     3CDX(20,30), DZTDX(20,30), DZCDXK(20,30), DZTDXK(20,30), SLOPE(600) WNGPAN 
     4, XAFK(30), XK(20), YK(20), ZK(20), CK(20), BL(20), TH(20), BT(20) WNGPAN 
     5, CHORD(600)                                                       WNGPAN 
C                                                                        WNGPAN 
      EQUIVALENCE (BLOCK(1),XAF(1)), (BLOCK(31),WAFORG(1)), (BLOCK(111), WNGPAN 
     1WAFORD(1)), (BLOCK(2511),DZTDX(1)), (BLOCK(3111),TZORK(1)), (BLOCK WNGPAN 
     2(3711),WAFORK(1)), (BLOCK(4311),DZCDX(1)), (BLOCK(4911),DZCDXK(1)) WNGPAN 
     3, (BLOCK(5511),DZTDXK(1)), (BLOCK(6111),XAFK(1)), (BLOCK(6141),XK( WNGPAN 
     41)), (BLOCK(6161),YK(1)), (BLOCK(6181),ZK(1)), (BLOCK(6201),CK(1)) WNGPAN 
     5, (BLOCK(6221),BL(1)), (BLOCK(6261),TH(1)), (BLOCK(6281),BT(1)), ( WNGPAN 
     6BLOCK(6301),CHORD(1)), (BLOCK(6901),SLOPE(1)), (BLOCK(6901),ZU(1)) WNGPAN 
     7, (ARRAY(1),XPT(1)), (ARRAY(601),YPT(1)), (ARRAY(1201),ZPT(1)), (A WNGPAN 
     8RRAY(1801),THET(1)), (ARRAY(2401),DELTA(1)), (ARRAY(3001),XC(1)),  WNGPAN 
     9(ARRAY(3601),YC(1)), (ARRAY(4201),ZC(1)), (ARRAY(4801),AREA(1)), ( WNGPAN 
     $ARRAY(5401),XE(1))                                                 WNGPAN 
C                                                                        WNGPAN 
      COMMON/STAR/XSTAR(3600),NSEGW                                      WNGPAN 
C                                                                        WNGPAN 
      LOGICAL LBC,THK                                                    WNGPAN 
      INTEGER PRINT,PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8 WNGPAN 
     1,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                   WNGPAN 
C                                                                        WNGPAN 
C     IN LINE FUNCTION DEFINITION                                        WNGPAN 
C                                                                        WNGPAN 
      XIN(X1,Y1,X2,Y2,Y)=X1+(X2-X1)*(Y-Y1)/(Y2-Y1)                       WNGPAN 
C                                                                        WNGPAN 
      IF (KWAF.EQ.0) GO TO 10                                            WNGPAN 
C                                                                        WNGPAN 
C     READ INTERMEDIATE SPAN STATIONS                                    WNGPAN 
C                                                                        WNGPAN 
      READ (TAPE5,350) (YK(K),K=1,KWAF)                                  WNGPAN 
      GO TO 30                                                           WNGPAN 
10    KWAF=NWAF                                                          WNGPAN 
      DO 20 K=1,KWAF                                                     WNGPAN 
20    YK(K)=WAFORG(K,2)                                                  WNGPAN 
30    CONTINUE                                                           WNGPAN 
      IF(KWAF.GT.20) GO TO 315                                           WNGPAN 
      KO=2                                                               WNGPAN 
      KOL=KWAF                                                           WNGPAN 
      KI=1                                                               WNGPAN 
      NI=1                                                               WNGPAN 
      NW1=NWAF-1                                                         WNGPAN 
      NSEG=0                                                             WNGPAN 
      NC=0                                                               WNGPAN 
      NJ=0                                                               WNGPAN 
      NP=0                                                               WNGPAN 
      IF (PRINT.GE.0) GO TO 40                                           WNGPAN 
      WRITE (TAPE6,360)                                                  WNGPAN 
      WRITE (TAPE6,370)                                                  WNGPAN 
40    DO 260 N=1,NW1                                                     WNGPAN 
C                                                                        WNGPAN 
C     CALCULATE WING SEGMENTS                                            WNGPAN 
C                                                                        WNGPAN 
      M=NI+1                                                             WNGPAN 
      DELY=WAFORG(M,2)-WAFORG(NI,2)                                      WNGPAN 
      IF (DELY.EQ.0.) GO TO 250                                          WNGPAN 
      DO 50 K=KO,KWAF                                                    WNGPAN 
      IF (YK(K).GE.WAFORG(M,2)) GO TO 60                                 WNGPAN 
50    CONTINUE                                                           WNGPAN 
60    KO=K                                                               WNGPAN 
      IF (KO.EQ.KI) GO TO 260                                            WNGPAN 
      K=KI                                                               WNGPAN 
70    IF (YK(K).LE.WAFORG(M,2)) GO TO 90                                 WNGPAN 
80    NI=M                                                               WNGPAN 
      M=M+1                                                              WNGPAN 
      IF (YK(K).GT.WAFORG(M,2)) GO TO 80                                 WNGPAN 
90    CONTINUE                                                           WNGPAN 
      XK(K)=XIN(WAFORG(NI,1),WAFORG(NI,2),WAFORG(M,1),WAFORG(M,2),YK(K)) WNGPAN 
      ZK(K)=XIN(WAFORG(NI,3),WAFORG(NI,2),WAFORG(M,3),WAFORG(M,2),YK(K)) WNGPAN 
      CK(K)=XIN(WAFORG(NI,4),WAFORG(NI,2),WAFORG(M,4),WAFORG(M,2),YK(K)) WNGPAN 
      IF (K.EQ.KO) GO TO 100                                             WNGPAN 
      K=KO                                                               WNGPAN 
      GO TO 70                                                           WNGPAN 
100   CONTINUE                                                           WNGPAN 
      DELX=XK(KO)-XK(KI)                                                 WNGPAN 
      DELY=YK(KO)-YK(KI)                                                 WNGPAN 
      DELZ=ZK(KO)-ZK(KI)                                                 WNGPAN 
      DELC=CK(KO)-CK(KI)                                                 WNGPAN 
      DELYD=1./DELY                                                      WNGPAN 
      DELYZD=1.0/SQRT(DELY*DELY+DELZ*DELZ)                               NEWSHLC
      BL(N)=DELX/DELYZD                                                  NEWSHLC
      BT(N)=(DELX+DELC)/DELYZD                                           NEWSHLC
      TH(N)=ATAN2(DELZ,DELY)                                             WNGPAN 
      IF (N.EQ.1) GO TO 110                                              WNGPAN 
      IF (YK(K).GT.WAFORG(M,2)) GO TO 110                                WNGPAN 
      IF (ABS(BL(N)-BL(N-1)).GT.EPSWP2) GO TO 110                        WNGPAN 
      IF (ABS(BT(N)-BT(N-1)).GT.EPSWP2) GO TO 110                        WNGPAN 
      IF (ABS(TH(N)-TH(N-1)).GT.EPSWP2) GO TO 110                        WNGPAN 
      GO TO 120                                                          WNGPAN 
110   NSEG=NSEG+1                                                        WNGPAN 
      NCOL(NSEG)=0                                                       WNGPAN 
      SINS(NSEG)=SIN(TH(N))                                              WNGPAN 
      COSS(NSEG)=COS(TH(N))                                              WNGPAN 
      BLE(NSEG)=BL(N)                                                    WNGPAN 
      BTE(NSEG)=BT(N)                                                    WNGPAN 
      NWT(NSEG)=0                                                        WNGPAN 
C                                                                        WNGPAN 
C     COMPUTE NUMBER OF COLUMNS IN EACH WING SEGMENT                     WNGPAN 
C                                                                        WNGPAN 
120   NCOL(NSEG)=NCOL(NSEG)+KO-KI                                        WNGPAN 
C                                                                        WNGPAN 
C     CALCULATE ORIGINS OF INTERMEDIATE CHORDS                           WNGPAN 
C                                                                        WNGPAN 
      DO 240 K=KI,KO                                                     WNGPAN 
      IF (K.EQ.KI.OR.K.EQ.KO) GO TO 130                                  WNGPAN 
      XK(K)=XIN(WAFORG(NI,1),WAFORG(NI,2),WAFORG(M,1),WAFORG(M,2),YK(K)) WNGPAN 
      ZK(K)=XIN(WAFORG(NI,3),WAFORG(NI,2),WAFORG(M,3),WAFORG(M,2),YK(K)) WNGPAN 
      CK(K)=XIN(WAFORG(NI,4),WAFORG(NI,2),WAFORG(M,4),WAFORG(M,2),YK(K)) WNGPAN 
130   CONTINUE                                                           WNGPAN 
      CL=CK(K)/100.                                                      WNGPAN 
      L=1                                                                WNGPAN 
      SJ=1.0                                                             WNGPAN 
140   CONTINUE                                                           WNGPAN 
C                                                                        WNGPAN 
C     CALCULATE COORDINATES OF PANEL CORNERS                             WNGPAN 
C                                                                        WNGPAN 
      DO 190 J=1,KWAFOR                                                  WNGPAN 
      XC(J,K)=XK(K)+CL*XAFK(J)                                           WNGPAN 
      YC(J,K)=YK(K)                                                      WNGPAN 
      ZC(J,K)=ZK(K)                                                      WNGPAN 
      IF (LBC) GO TO 150                                                 WNGPAN 
      ZCAM=XIN(TZORK(NI,J),WAFORG(NI,2),TZORK(M,J),WAFORG(M,2),YK(K))    WNGPAN 
      ZTHK=XIN(WAFORK(NI,J),WAFORG(NI,2),WAFORK(M,J),WAFORG(M,2),YK(K))  WNGPAN 
      ZC(J,K)=ZK(K)+CL*(ZCAM+SJ*ZTHK)                                    WNGPAN 
      IF (L.EQ.1) ZU(J,K)=ZC(J,K)                                        WNGPAN 
150   IF (K.EQ.KI) GO TO 190                                             WNGPAN 
      K1=K-1                                                             WNGPAN 
      NJ=NJ+1                                                            WNGPAN 
      IF (J.EQ.1) GO TO 190                                              WNGPAN 
      JJ=J-1                                                             WNGPAN 
      NC=NC+1                                                            WNGPAN 
      NP=NP+1                                                            WNGPAN 
      IP=1                                                               WNGPAN 
      IF (SJ.LT.0.) IP=0                                                 WNGPAN 
      IQ=0                                                               WNGPAN 
C                                                                        WNGPAN 
C     CALCULATE PANEL INCLINATIONS AND CENTROIDS ON WING SURFACE         WNGPAN 
C                                                                        WNGPAN 
      IF (.NOT.LBC) CALL PANEL (IP,IQ,J,K,L,NP,AP)                       WNGPAN 
      AREA(NP)=AP                                                        WNGPAN 
      CHORD(NP)=0.                                                       WNGPAN 
      IF (PRINT.GE.0) GO TO 170                                          WNGPAN 
      IF (.NOT.LBC.AND.L.EQ.1) GO TO 160                                 WNGPAN 
      WRITE (TAPE6,380) NP,XC(JJ,K1),YK(K1),ZC(JJ,K1),XC(J,K1),YK(K1),ZC WNGPAN 
     1(J,K1),XC(JJ,K),YK(K),ZC(JJ,K),XC(J,K),YK(K),ZC(J,K)               WNGPAN 
      GO TO 170                                                          WNGPAN 
160   WRITE (TAPE6,380) NP,XC(JJ,K1),YK(K1),ZU(JJ,K1),XC(J,K1),YK(K1),ZU WNGPAN 
     1(J,K1),XC(JJ,K),YK(K),ZU(JJ,K),XC(J,K),YK(K),ZU(J,K)               WNGPAN 
170   CONTINUE                                                           WNGPAN 
C                                                                        WNGPAN 
C     CALCULATE PANEL CONTROL POINTS IN PLANE OF WING                    WNGPAN 
C                                                                        WNGPAN 
      CR=XC(J,K1)-XC(JJ,K1)                                              WNGPAN 
      CT=XC(J,K)-XC(JJ,K)                                                WNGPAN 
      RI=(1.+CT/(CR+CT))/3.                                              WNGPAN 
      RO=1.-RI                                                           WNGPAN 
      XLE=RI*XC(JJ,K)+RO*XC(JJ,K1)                                       WNGPAN 
      XTE=RI*XC(J,K)+RO*XC(J,K1)                                         WNGPAN 
      CHORD(NP)=XTE-XLE                                                  WNGPAN 
      SPN=SQRT((YK(K)-YK(K1))*(YK(K)-YK(K1))+(ZK(K)-ZK(K1))*(ZK(K)-ZK(K1 WNGPAN 
     1)))                                                                WNGPAN 
      SPNW(K1)=SPN                                                       WNGPAN 
      IF (J.EQ.2) XLEW(K1)=XLE                                           WNGPAN 
      YLE=RI*YK(K)+RO*YK(K1)                                             WNGPAN 
      ZLE=RI*ZK(K)+RO*ZK(K1)                                             WNGPAN 
      IF (J.EQ.2) ZLEW(K1)=ZLE                                           WNGPAN 
      IF (LBC) GO TO 180                                                 WNGPAN 
      GO TO 190                                                          WNGPAN 
180   CONTINUE                                                           WNGPAN 
      XPT(NC)=XLE                                                        WNGPAN 
      XE(NC)=XPT(NC)                                                     WNGPAN 
      YPT(NC)=YLE                                                        WNGPAN 
      ZPT(NC)=ZLE                                                        WNGPAN 
C                                                                        WNGPAN 
C     CALCULATE PANEL AREAS, CHORDS, AND INCLINATION ANGLES              WNGPAN 
C                                                                        WNGPAN 
      AREA(NP)=.5*SPN*(CR+CT)                                            WNGPAN 
      THET(NC)=TH(N)                                                     WNGPAN 
C                                                                        WNGPAN 
C     INTERPOLATE FOR WING CAMBER AND THICKNESS AT PANEL TRAILING EDGES  WNGPAN 
C                                                                        WNGPAN 
C                                                                        WNGPAN 
C         REVISED BY B. ROSEN 081881                                     WNGPAN 
C                                                                        WNGPAN 
      MI=NI                                                              WNGPAN 
182   IF(YPT(NC).GE.WAFORG(MI,2)) GO TO 184                              WNGPAN 
      MI=MI-1                                                            WNGPAN 
      GO TO 182                                                          WNGPAN 
184   MO=MI+1                                                            WNGPAN 
      DZCDX(K1,J)=XIN(DZCDXK(MI,J),WAFORG(MI,2),DZCDXK(MO,J),            WNGPAN 
     1 WAFORG(MO,2),YPT(NC))                                             WNGPAN 
      IF (J.EQ.2) DZCDX(K1,1)=XIN(DZCDXK(MI,1),WAFORG(MI,2),             WNGPAN 
     1 DZCDXK(MO,1),WAFORG(MO,2),YPT(NC))                                WNGPAN 
      DZTDX(K1,J)=XIN(DZTDXK(MI,J),WAFORG(MI,2),DZTDXK(MO,J),            WNGPAN 
     1 WAFORG(MO,2),YPT(NC))                                             WNGPAN 
      SLOPE(NJ)=DZTDX(K1,J)                                              WNGPAN 
      DELTA(NC)=DZCDX(K1,JJ)                                             WNGPAN 
      IF (J.NE.KWAFOR) GO TO 190                                         WNGPAN 
      NC=NC+1                                                            WNGPAN 
      XPT(NC)=XTE-EPSWP1                                                 WNGPAN 
      XE(NC)=XPT(NC)                                                     WNGPAN 
      YPT(NC)=YPT(NC-1)                                                  WNGPAN 
      ZPT(NC)=ZPT(NC-1)                                                  WNGPAN 
      CD = 0.01*(XTE - XLEW(K1))                                         WNGPAN 
      ZTE = CD*XIN(WAFORK(MI,J),WAFORG(MI,2),WAFORK(MO,J),               WNGPAN 
     1 WAFORG(MO,2),YPT(NC))                                             WNGPAN 
      DELTA(NC)=DZCDX(K1,J)                                              WNGPAN 
      THET(NC)=TH(N)                                                     WNGPAN 
190   CONTINUE                                                           WNGPAN 
      IF (LBC) GO TO 200                                                 WNGPAN 
      IF (SJ.LT.0.) GO TO 200                                            WNGPAN 
      SJ=-1.0                                                            WNGPAN 
      L=2                                                                WNGPAN 
      GO TO 140                                                          WNGPAN 
200   CONTINUE                                                           WNGPAN 
      IF (K.EQ.KI) GO TO 240                                             WNGPAN 
      IF (.NOT.LBC) GO TO 240                                            WNGPAN 
      IF (KL.EQ.3) GO TO 210                                             WNGPAN 
C                                                                        WNGPAN 
C     CALCULATE INITIAL SLOPE FOR SHARP LEADING EDGE AIRFOILS            WNGPAN 
C                                                                        WNGPAN 
      DZTDX(K1,1)=XIN(DZTDXK(MI,1),WAFORG(MI,2),DZTDXK(MO,1),            WNGPAN 
     1 WAFORG(MO,2),YPT(NC))                                             WNGPAN 
      GO TO 230                                                          WNGPAN 
C                                                                        WNGPAN 
C     CALCULATE INITIAL SLOPE FOR ROUND LEADING EDGE AIRFOILS            WNGPAN 
C                                                                        WNGPAN 
210   NPJ=NP-JJ                                                          WNGPAN 
      SLE = 2.*ZTE/CHORD(NPJ + 1) - DZTDX(K1,2)                          WNGPAN 
      DO 220 I=2,JJ                                                      WNGPAN 
220   SLE=SLE-(DZTDX(K1,I)+DZTDX(K1,I+1))*CHORD(NPJ+I)/CHORD(NPJ+1)      WNGPAN 
      DZTDX(K1,1)=SLE                                                    WNGPAN 
230   NJJ=NJ-JJ                                                          WNGPAN 
      SLOPE(NJJ)=DZTDX(K1,1)                                             WNGPAN 
240   CONTINUE                                                           WNGPAN 
C                                                                        WNGPAN 
C     COMPUTE NUMBER OF ROWS IN EACH WING SEGMENT                        WNGPAN 
C                                                                        WNGPAN 
      NROW(NSEG)=JJ                                                      WNGPAN 
      NCPT=NC                                                            WNGPAN 
      IF (NCPT.GT.600) GO TO 320                                         WNGPAN 
      NWING=NP                                                           WNGPAN 
      NI=N+1                                                             WNGPAN 
      KI=KO                                                              WNGPAN 
      IF (KO.LT.KWAF) KO=KO+1                                            WNGPAN 
      GO TO 260                                                          WNGPAN 
250   KO=KO+1                                                            WNGPAN 
      NI=NI+1                                                            WNGPAN 
      BL(N)=0.                                                           WNGPAN 
      BT(N)=0.                                                           WNGPAN 
      TH(N)=0.                                                           WNGPAN 
260   CONTINUE                                                           WNGPAN 
      IF (PLOT.EQ.0) GO TO 280                                           WNGPAN 
      IF (LBC) GO TO 270                                                 WNGPAN 
      WRITE (TAPE3) ((XC(J,K),YC(J,K),ZU(J,K),J=1,KWAFOR),K=1,KWAF)      WNGPAN 
      WRITE (TAPE3) ((XC(J,K),YC(J,K),ZC(J,K),J=1,KWAFOR),K=1,KWAF)      WNGPAN 
      GO TO 280                                                          WNGPAN 
270   WRITE (TAPE3) ((XC(J,K),YC(J,K),ZC(J,K),J=1,KWAFOR),K=1,KWAF)      WNGPAN 
      WRITE (TAPE3) ((XC(J,K),YC(J,K),ZC(J,K),J=1,KWAFOR),K=1,KWAF)      WNGPAN 
280   CONTINUE                                                           WNGPAN 
      IF (PRINT.GE.0) GO TO 310                                          WNGPAN 
      IF (LBC) WRITE (TAPE6,450)                                         WNGPAN 
      IF (.NOT.LBC) WRITE (TAPE6,390)                                    WNGPAN 
      IF (LBC) WRITE (TAPE6,460)                                         WNGPAN 
      IF (.NOT.LBC) WRITE (TAPE6,470)                                    WNGPAN 
      DO 290 NP=1,NCPT                                                   WNGPAN 
      TDEG=THET(NP)*RADEG                                                WNGPAN 
      DDEG=DELTA(NP)*RADEG                                               WNGPAN 
      IF (LBC) WRITE (TAPE6,400) NP,XPT(NP),YPT(NP),ZPT(NP),THET(NP),DEL WNGPAN 
     1TA(NP),SLOPE(NP),TDEG                                              WNGPAN 
      IF (.NOT.LBC) WRITE (TAPE6,400) NP,XPT(NP),YPT(NP),ZPT(NP),THET(NP WNGPAN 
     1),DELTA(NP),TDEG,DDEG                                              WNGPAN 
290   CONTINUE                                                           WNGPAN 
      WRITE (TAPE6,430)                                                  WNGPAN 
      WRITE (TAPE6,410)                                                  WNGPAN 
      DO 300 NP=1,NWING                                                  WNGPAN 
300   WRITE (TAPE6,420) NP,AREA(NP),CHORD(NP)                            WNGPAN 
310   CONTINUE                                                           WNGPAN 
C                                                                        WNGPAN 
C     STORE WING GEOMETRY ON TAPE 7                                      WNGPAN 
C                                                                        WNGPAN 
      WRITE (TAPE7) ARRAY,CHORD,SLOPE                                    WNGPAN 
      GO TO 330                                                          WNGPAN 
320   CONTINUE                                                           WNGPAN 
      WRITE (TAPE6,340)                                                  WNGPAN 
      WRITE (TAPE6,440)                                                  WNGPAN 
      NSEGW=NSEG                                                         WNGPAN 
      CALL EXIT                                                          WNGPAN 
  315 WRITE(TAPE6,340)                                                   WNGPAN 
      WRITE(TAPE6,445)                                                   WNGPAN 
      NSEGW=NSEG                                                         WNGPAN 
      CALL EXIT                                                          WNGPAN 
  330 CONTINUE                                                           WNGPAN 
      NSEGW=NSEG                                                         WNGPAN 
C                                                                        WNGPAN 
C                                                                        WNGPAN 
C                                                                        WNGPAN 
340   FORMAT (1H0,26H ERROR MESSAGE FROM WNGPAN/1H0)                     WNGPAN 
350   FORMAT (10F7.0)                                                    WNGPAN 
360   FORMAT (1H1,9X,35HWING PANEL CORNER POINT COORDINATES/10X,86H1 AND WNGPAN 
     1 3 INDICATE WING PANEL LEADING-EDGE POINTS, 2 AND 4 INDICATE TRAIL WNGPAN 
     2ING-EDGE POINTS)                                                   WNGPAN 
370   FORMAT (1H0,5X,5HPANEL,4(8X,1HX,8X,1HY,8X,1HZ)/20X,3(1H1,8X),3(1H2 WNGPAN 
     1,8X),3(1H3,8X),3(1H4,8X)//)                                        WNGPAN 
380   FORMAT (1H ,4X,I3,4X,12F9.5)                                       WNGPAN 
390   FORMAT (1H1,1X,49HWING PANEL CENTROID POINTS AND INCLINATION ANGLE WNGPAN 
     1S)                                                                 WNGPAN 
400   FORMAT (1H ,1X,I3,4X,8F11.5)                                       WNGPAN 
410   FORMAT (1H0,5HPANEL,6X,4HAREA,8X,5HCHORD)                          WNGPAN 
420   FORMAT (1H ,1X,I3,4X,2F11.5)                                       WNGPAN 
430   FORMAT (1H1,9X,27HWING PANEL AREAS AND CHORDS)                     WNGPAN 
440   FORMAT (51H  ERROR - NUMBER OF WING CONTROL POINTS EXCEEDS 600)    WNGPAN 
  445 FORMAT(1X,48HINPUT ERROR - NUMBER OF SPAN STATIONS EXCEEDS 20)     WNGPAN 
450   FORMAT (1H1,1X,80HWING PANEL EDGE POINTS ON CHORD PASSING THROUGH  WNGPAN 
     1CENTROID, AND INCLINATION ANGLES)                                  WNGPAN 
460   FORMAT (1H0,5HPOINT,8X,1HX,10X,1HY,10X,1HZ,10X,5HTHETA,6X,6HCAMBER WNGPAN 
     1,4X,9HTHICKNESS,2X,5HTHETA/15X,3(2HCP,9X),3HRAD,8X,5HSLOPE,5X,5HSL WNGPAN 
     2OPE,6X,3HDEG//)                                                    WNGPAN 
470   FORMAT (1H0,5HPOINT,8X,1HX,10X,1HY,10X,1HZ,10X,5HTHETA,6X,5HDELTA, WNGPAN 
     16X,5HTHETA,6X,5HDELTA/15X,3(2HCP,9X),3HRAD,8X,3HRAD,8X,3HDEG,8X,3H WNGPAN 
     2DEG//)                                                             WNGPAN 
      END                                                                WNGPAN 
      OVERLAY(LWB,1,4)                                                   NEWRAD 
C     OVERLAY(LWB,1,4)                                                   NEWRAD 
      PROGRAM NEWRAD                                                     NEWRAD 
C                                                                        NEWRAD 
C     *******************************************VERSION B00************ NEWRAD 
C                                                                        NEWRAD 
C                                                                        NEWRAD 
C     REVISE BODY (FUSELAGE) MERIDIAN LINE SPACING                       NEWRAD 
C                                                                        NEWRAD 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP NEWRAD 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       NEWRAD 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR NEWRAD 
     1X(4),DUM(6),J2TEST                                                 NEWRAD 
      COMMON/NEWCOM/KDUM(9),KFUS,KRADX(4),KFORX(4),KDUMY(25),MAX         NEWRAD 
      COMMON /SCRAT/ BLOCK(7500)                                         NEWRAD 
      COMMON /POINT/ ARRAY(4800)                                         NEWRAD 
      COMMON /PI/ PI,RADEG,DEGRAD                                        NEWRAD 
C                                                                        NEWRAD 
      DIMENSION XFUS(30,4), ZFUS(30,4), FUSARD(30,4), FUSRAD(30,4), SFUS NEWRAD 
     1(30,30,8), ANSIN(30), ANCOS(30), PHIN(30), PHIK(30), XB(30), YB(30 NEWRAD 
     2,30), ZB(30,30), YF(30), ZF(30)                                    NEWRAD 
C                                                                        NEWRAD 
      EQUIVALENCE (BLOCK(1),XFUS(1)), (BLOCK(121),ZFUS(1)), (BLOCK(241), NEWRAD 
     1FUSARD(1)), (BLOCK(361),FUSRAD(1)), (BLOCK(241),SFUS(1)), (ARRAY(1 NEWRAD 
     2),YB(1)), (ARRAY(1801),ZB(1)), (ARRAY(3601),XB(1)), (ARRAY(3661),A NEWRAD 
     3NSIN(1)), (ARRAY(3691),ANCOS(1)), (ARRAY(3721),PHIN(1)), (ARRAY(37 NEWRAD 
     451),PHIK(1))                                                       NEWRAD 
C                                                                        NEWRAD 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE NEWRAD 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              NEWRAD 
      LOGICAL NEWPHI                                                     NEWRAD 
C                                                                        NEWRAD 
C     IN LINE FUNCTION DEFINITION                                        NEWRAD 
C                                                                        NEWRAD 
      XIN(X1,Y1,X2,Y2,Y)=X1+(X2-X1)*(Y-Y1)/(Y2-Y1)                       NEWRAD 
C                                                                        NEWRAD 
      RADD=DEGRAD                                                        NEWRAD 
      PITWO=2.*PI                                                        NEWRAD 
      PI3HAF=PI*(3./2.)                                                  NEWRAD 
      NEWPHI=.FALSE.                                                     NEWRAD 
      M=1                                                                NEWRAD 
      KFUS=NFUS                                                          NEWRAD 
      KTEST=0                                                            NEWRAD 
      REWIND TAPE10                                                      NEWRAD 
      DO 110 NFU=1,NFUS                                                  NEWRAD 
      NRAD=NRADX(NFU)                                                    NEWRAD 
      KRAD=KRADX(NFU)                                                    NEWRAD 
C                                                                        NEWRAD 
C     J2TEST IS SET IN PROGRAM CONFIG                                    NEWRAD 
C                                                                        NEWRAD 
C     J2TEST = 3 AND KRAD = 0 INDICATE AN ARBITRARY FUSELAGE WITH        NEWRAD 
C     MERIDIAN LINES DEFINED BY NRAD IN THE GEOMETRY INPUT               NEWRAD 
C                                                                        NEWRAD 
      IF (J2TEST.EQ.3.AND.KRAD.EQ.0) KTEST=1                             NEWRAD 
      IF (KRAD.EQ.0) KRAD=NRAD                                           NEWRAD 
      IF (KRAD.GT.20) GO TO 130                                          NEWRAD 
      IF (KRAD.LT.0) NEWPHI=.TRUE.                                       NEWRAD 
      KRAD=IABS(KRAD)                                                    NEWRAD 
      KRADX(NFU)=KRAD                                                    NEWRAD 
      NFUSOR=NFORX(NFU)                                                  NEWRAD 
      FANG=FLOAT(2*(KRAD-1))                                             NEWRAD 
      DELE=PITWO/FANG                                                    NEWRAD 
C                                                                        NEWRAD 
C     READ NEW MERIDIAN ANGLES                                           NEWRAD 
C                                                                        NEWRAD 
      IF (NEWPHI) READ (TAPE5,170) (PHIK(K),K=1,KRAD)                    NEWRAD 
      DO 30 K=1,KRAD                                                     NEWRAD 
      E=FLOAT(K-1)                                                       NEWRAD 
      IF (NEWPHI) GO TO 10                                               NEWRAD 
      PHIR=E*DELE                                                        NEWRAD 
      GO TO 20                                                           NEWRAD 
10    PHIR=PHIK(K)*RADD                                                  NEWRAD 
20    PHIK(K)=PHIR                                                       NEWRAD 
C                                                                        NEWRAD 
C     J2TEST = 3 INDICATES ARBITRARY FUSELAGE                            NEWRAD 
C                                                                        NEWRAD 
      IF (J2TEST.EQ.3) GO TO 30                                          NEWRAD 
      PHIR4=PHIR+PI3HAF                                                  NEWRAD 
      ANSIN(K)=SIN(PHIR4)                                                NEWRAD 
      ANCOS(K)=COS(PHIR4)                                                NEWRAD 
30    CONTINUE                                                           NEWRAD 
      KK=1+(NFU-1)*2                                                     NEWRAD 
      NF=NFU                                                             NEWRAD 
      K2=KK+1                                                            NEWRAD 
      DO 100 N=1,NFUSOR                                                  NEWRAD 
      IF (N.GT.1) M=M+1                                                  NEWRAD 
      IF(M.GT.30) GO TO 120                                              NEWRAD 
      XB(N)=XFUS(N,NF)                                                   NEWRAD 
C                                                                        NEWRAD 
C     J2TEST = 3 INDICATES ARBITRARY FUSELAGE                            NEWRAD 
C                                                                        NEWRAD 
      IF (J2TEST.EQ.3) GO TO 50                                          NEWRAD 
      RAD=FUSRAD(N,NF)                                                   NEWRAD 
      CAM=ZFUS(N,NF)                                                     NEWRAD 
C                                                                        NEWRAD 
C     COMPUTE SECTION Y AND Z COORDINATES FOR CIRCULAR BODY (FUSELAGE)   NEWRAD 
C                                                                        NEWRAD 
      DO 40 K=1,KRAD                                                     NEWRAD 
      YB(N,K)=RAD*ANCOS(K)                                               NEWRAD 
40    ZB(N,K)=RAD*ANSIN(K)+CAM                                           NEWRAD 
      GO TO 100                                                          NEWRAD 
50    CONTINUE                                                           NEWRAD 
C                                                                        NEWRAD 
C     COMPUTE SECTION Y AND Z ORDINATES FOR NONCIRCULAR BODY (FUSELAGE)  NEWRAD 
C     BY LINEAR INTERPOLATION                                            NEWRAD 
C                                                                        NEWRAD 
      KI=2                                                               NEWRAD 
      PHIN(1)=0.                                                         NEWRAD 
      YB(N,1)=SFUS(1,N,KK)                                               NEWRAD 
      ZB(N,1)=SFUS(1,N,K2)                                               NEWRAD 
      YF(1)=YB(N,1)                                                      NEWRAD 
      ZF(1)=ZB(N,1)                                                      NEWRAD 
      ZC=(SFUS(1,N,K2)+SFUS(NRAD,N,K2))/2.                               NEWRAD 
      DO 90 NN=2,NRAD                                                    NEWRAD 
      IF (KTEST.EQ.1) GO TO 80                                           NEWRAD 
      YF(NN)=SFUS(NN,N,KK)                                               NEWRAD 
      ZF(NN)=SFUS(NN,N,K2)-ZC                                            NEWRAD 
      N1=NN-1                                                            NEWRAD 
      IF (YF(NN).EQ.0..AND.ZF(NN).EQ.0.) GO TO 80                        NEWRAD 
      PHIN(NN)=ATAN2(YF(NN),-ZF(NN))                                     NEWRAD 
      DO 60 K=KI,KRAD                                                    NEWRAD 
      IF (PHIK(K).GT.PHIN(NN)) GO TO 70                                  NEWRAD 
      YB(N,K)=XIN(YF(N1),PHIN(N1),YF(NN),PHIN(NN),PHIK(K))               NEWRAD 
      ZB(N,K)=XIN(ZF(N1),PHIN(N1),ZF(NN),PHIN(NN),PHIK(K))+ZC            NEWRAD 
60    CONTINUE                                                           NEWRAD 
70    KI=K                                                               NEWRAD 
      GO TO 90                                                           NEWRAD 
80    YB(N,NN)=SFUS(NN,N,KK)                                             NEWRAD 
      ZB(N,NN)=SFUS(NN,N,K2)                                             NEWRAD 
90    CONTINUE                                                           NEWRAD 
100   CONTINUE                                                           NEWRAD 
      MAX=M                                                              NEWRAD 
      WRITE (TAPE10) XB,YB,ZB                                            NEWRAD 
110   CONTINUE                                                           NEWRAD 
      GO TO 150                                                          NEWRAD 
120   CONTINUE                                                           NEWRAD 
      WRITE (TAPE6,160)                                                  NEWRAD 
      WRITE (TAPE6,190)                                                  NEWRAD 
      GO TO 140                                                          NEWRAD 
130   CONTINUE                                                           NEWRAD 
      WRITE (TAPE6,160)                                                  NEWRAD 
      WRITE (TAPE6,180)                                                  NEWRAD 
140   CALL EXIT                                                          NEWRAD 
150   CONTINUE                                                           NEWRAD 
C                                                                        NEWRAD 
C                                                                        NEWRAD 
C                                                                        NEWRAD 
160   FORMAT (1H0,26H ERROR MESSAGE FROM NEWRAD/1H0)                     NEWRAD 
170   FORMAT (10F7.0)                                                    NEWRAD 
180   FORMAT (1H ,39HERROR - BODY HAS MORE THAN 20 MERIDIANS)            NEWRAD 
190   FORMAT (1H ,44HERROR - BODY HAS MORE THAN 60 AXIAL STATIONS)       NEWRAD 
      END                                                                NEWRAD 
      OVERLAY(LWB,1,5)                                                   BODPAN 
C     OVERLAY(LWB,1,5)                                                   BODPAN 
      PROGRAM BODPAN                                                     BODPAN 
C                                                                        BODPAN 
C     *******************************************VERSION B00************ BODPAN 
C                                                                        BODPAN 
C                                                                        BODPAN 
C     REVISE AXIAL SPACING ON BODY (FUSELAGE) AND COMPUTE NEW PANEL      BODPAN 
C     GEOMETRY                                                           BODPAN 
C                                                                        BODPAN 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP BODPAN 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       BODPAN 
      COMMON /BLANK/ DUM(9),NFUS,NRADX(4),NFORX(4)                       BODPAN 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           BODPAN 
      COMMON/NEWCOM/KDUM(9),KFUS,KRADX(4),KFORX(4)                       BODPAN 
      COMMON /SCRAT/ BLOCK(7500)                                         BODPAN 
      COMMON /POINT/ ARRAY(6000)                                         BODPAN 
      COMMON /BTHET/ THETA(600)                                          BODPAN 
      COMMON /VELCOM/ DUM1(6),PRINT                                      BODPAN 
      COMMON /GRAPH/ PLOT                                                BODPAN 
      COMMON /PI/ PI,RADEG,DEGRAD                                        BODPAN 
      COMMON/CLINE/CCL(30),XX(30)                                        BODPAN 
C                                                                        BODPAN 
      DIMENSION XB(30), YB(30,30), ZB(30,30), XJ(60), AREA(600), XPT(600 BODPAN 
     1), YPT(600), ZPT(600), THET(600), DELTA(600), XC(30,20), YC(30,20) BODPAN 
     2,ZC(30,20),XFUS(30,4)                                              BODPAN 
C                                                                        BODPAN 
      EQUIVALENCE (BLOCK(1),XFUS(1)), (BLOCK(121),YB(1)), (BLOCK(1921),Z BODPAN 
     1B(1)), (BLOCK(3721),XB(1)), (ARRAY(1),XPT(1)), (ARRAY(601),YPT(1)) BODPAN 
     2, (ARRAY(1201),ZPT(1)), (ARRAY(1801),THET(1)), (ARRAY(2401),DELTA( BODPAN 
     31)), (ARRAY(3001),XC(1)), (ARRAY(3601),YC(1)), (ARRAY(4201),ZC(1)) BODPAN 
     4, (ARRAY(4801),AREA(1))                                            BODPAN 
C                                                                        BODPAN 
      INTEGER PRINT,PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8 BODPAN 
     1,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                   BODPAN 
C                                                                        BODPAN 
C     IN LINE FUNCTION DEFINITION                                        BODPAN 
C                                                                        BODPAN 
      XIN(X1,Y1,X2,Y2,Y)=X1+(X2-X1)*(Y-Y1)/(Y2-Y1)                       BODPAN 
C                                                                        BODPAN 
      REWIND TAPE10                                                      BODPAN 
      IF (PRINT.GE.0) GO TO 10                                           BODPAN 
      WRITE (TAPE6,240)                                                  BODPAN 
      WRITE (TAPE6,250)                                                  BODPAN 
10    CONTINUE                                                           BODPAN 
C                                                                        BODPAN 
C     CALCULATE COORDINATES OF PANEL CORNERS                             BODPAN 
C                                                                        BODPAN 
      IL = 0                                                             BODPAN 
      IP=0                                                               BODPAN 
      IQ=0                                                               BODPAN 
      J=1                                                                BODPAN 
      JI=1                                                               BODPAN 
      NP=0                                                               BODPAN 
      JM=0                                                               BODPAN 
      L=0                                                                BODPAN 
      DO 150 NFU=1,NFUS                                                  BODPAN 
      JMAX=KFORX(NFU)                                                    BODPAN 
      NFUSOR=NFORX(NFU)                                                  BODPAN 
      KRAD=KRADX(NFU)                                                    BODPAN 
      KRAD=IABS(KRAD)                                                    BODPAN 
      IF (KRAD.EQ.0) KRAD=NRADX(NFU)                                     BODPAN 
      READ (TAPE10) XB,YB,ZB                                             BODPAN 
      IF (JMAX.EQ.0) GO TO 40                                            BODPAN 
C                                                                        BODPAN 
C     READ IN NEW AXIAL STATIONS FOR BODY (FUSELAGE)                     BODPAN 
C                                                                        BODPAN 
      READ (TAPE5,230) (XJ(K),K=1,JMAX)                                  BODPAN 
      GO TO 70                                                           BODPAN 
40    JMAX=NFORX(NFU)                                                    BODPAN 
      IF (JMAX.LE.30) GO TO 50                                           BODPAN 
      WRITE (TAPE6,220)                                                  BODPAN 
      WRITE (TAPE6,330) NFU                                              BODPAN 
      CALL EXIT                                                          BODPAN 
50    CONTINUE                                                           BODPAN 
      KFORX(NFU)=JMAX                                                    BODPAN 
      DO 60 K=1,JMAX                                                     BODPAN 
60    XJ(K)=XFUS(K,NFU)                                                  BODPAN 
70    CONTINUE                                                           BODPAN 
      JM=JM+JMAX                                                         BODPAN 
      IF (JM.LE.30) GO TO 80                                             BODPAN 
      WRITE (TAPE6,220)                                                  BODPAN 
      WRITE (TAPE6,340)                                                  BODPAN 
      CALL EXIT                                                          BODPAN 
80    CONTINUE                                                           BODPAN 
      DO 90 K=1,KRAD                                                     BODPAN 
      XC(J,K)=XB(1)                                                      BODPAN 
      YC(J,K)=YB(1,K)                                                    BODPAN 
90    ZC(J,K)=ZB(1,K)                                                    BODPAN 
      IF(NFU.NE.1) GO TO 95                                              BODPAN 
      IL = IL + 1                                                        BODPAN 
      CCL(IL) = (ZC(J,1) + ZC(J,KRAD))/2.                                BODPAN 
      XX(IL) = XB(1)                                                     BODPAN 
   95 CONTINUE                                                           BODPAN 
      DO 130 JJ=2,JMAX                                                   BODPAN 
      J1=J                                                               BODPAN 
      J=J+1                                                              BODPAN 
      DO 120 M=2,NFUSOR                                                  BODPAN 
      M1=M-1                                                             BODPAN 
      IF (XB(M).LT.XJ(JJ)) GO TO 120                                     BODPAN 
      DO 110 K=1,KRAD                                                    BODPAN 
      XC(J,K)=XJ(JJ)                                                     BODPAN 
      YC(J,K)=XIN(YB(M1,K),XB(M1),YB(M,K),XB(M),XJ(JJ))                  BODPAN 
      ZC(J,K)=XIN(ZB(M1,K),XB(M1),ZB(M,K),XB(M),XJ(JJ))                  BODPAN 
      IF (K.EQ.1) GO TO 110                                              BODPAN 
      K1=K-1                                                             BODPAN 
      NP=NP+1                                                            BODPAN 
C                                                                        BODPAN 
C     CALCULATE PANEL INCLINATION AND CENTROID                           BODPAN 
C                                                                        BODPAN 
      CALL PANEL (IP,IQ,J,K,L,NP,AP)                                     BODPAN 
C                                                                        BODPAN 
      IF (PRINT.GE.0) GO TO 100                                          BODPAN 
      WRITE (TAPE6,260) NP,XC(J1,K1),YC(J1,K1),ZC(J1,K1),XC(J,K1),YC(J,K BODPAN 
     11),ZC(J,K1),XC(J1,K),YC(J1,K),ZC(J1,K),XC(J,K),YC(J,K),ZC(J,K)     BODPAN 
100   AREA(NP)=AP                                                        BODPAN 
110   CONTINUE                                                           BODPAN 
      IL = IL + 1                                                        BODPAN 
      CCL(IL) = (ZC(J,1) + ZC(J,KRAD))/2.                                BODPAN 
      XX(IL) = XJ(JJ)                                                    BODPAN 
      GO TO 130                                                          BODPAN 
120   CONTINUE                                                           BODPAN 
130   CONTINUE                                                           BODPAN 
      J=J+1                                                              BODPAN 
      IF (PLOT.EQ.0) GO TO 140                                           BODPAN 
      JF=JMAX+JI-1                                                       BODPAN 
      WRITE (TAPE3) ((XC(JJ,K),YC(JJ,K),ZC(JJ,K),JJ=JI,JF),K=1,KRAD)     BODPAN 
      JI=J                                                               BODPAN 
140   CONTINUE                                                           BODPAN 
150   CONTINUE                                                           BODPAN 
      NBODY=NP                                                           BODPAN 
      IF (NBODY.GT.600) GO TO 200                                        BODPAN 
      IF (PRINT.GE.0) GO TO 180                                          BODPAN 
      WRITE (TAPE6,270)                                                  BODPAN 
      WRITE (TAPE6,280)                                                  BODPAN 
      DO 160 NP=1,NBODY                                                  BODPAN 
      WRITE (TAPE6,290) NP,XPT(NP),YPT(NP),ZPT(NP)                       BODPAN 
160   CONTINUE                                                           BODPAN 
      WRITE (TAPE6,300)                                                  BODPAN 
      WRITE (TAPE6,310)                                                  BODPAN 
      DO 170 NP=1,NBODY                                                  BODPAN 
      DDEG=DELTA(NP)*RADEG                                               BODPAN 
      TDEG=THET(NP)*RADEG                                                BODPAN 
170   WRITE (TAPE6,290) NP,AREA(NP),DELTA(NP),THET(NP),DDEG,TDEG         BODPAN 
180   CONTINUE                                                           BODPAN 
      DO 190 NP=1,NBODY                                                  BODPAN 
190   THETA(NP)=THET(NP)                                                 BODPAN 
      REWIND TAPE10                                                      BODPAN 
      WRITE (TAPE10) ARRAY                                               BODPAN 
      REWIND TAPE10                                                      BODPAN 
      GO TO 210                                                          BODPAN 
200   CONTINUE                                                           BODPAN 
      WRITE (TAPE6,220)                                                  BODPAN 
      WRITE (TAPE6,320)                                                  BODPAN 
      CALL EXIT                                                          BODPAN 
210   CONTINUE                                                           BODPAN 
C                                                                        BODPAN 
C                                                                        BODPAN 
C                                                                        BODPAN 
220   FORMAT (1H0,26H ERROR MESSAGE FROM BODPAN/1H0)                     BODPAN 
230   FORMAT (10F7.0)                                                    BODPAN 
240   FORMAT (1H1,9X,35HBODY PANEL CORNER POINT COORDINATES/10X,86H1 AND BODPAN 
     1 3 INDICATE BODY PANEL LEADING-EDGE POINTS, 2 AND 4 INDICATE TRAIL BODPAN 
     2ING-EDGE POINTS)                                                   BODPAN 
250   FORMAT (1H0,5X,5HPANEL,4(8X,1HX,8X,1HY,8X,1HZ)/20X,3(1H1,8X),3(1H2 BODPAN 
     1,8X),3(1H3,8X),3(1H4,8X)//)                                        BODPAN 
260   FORMAT (1H ,4X,I3,4X,12F9.5)                                       BODPAN 
270   FORMAT (1H1,1X,37HBODY PANEL CENTROID POINT COORDINATES)           BODPAN 
280   FORMAT (1H0,5HPOINT,6X,1HX,10X,1HY,10X,1HZ/15X,3(2HCP,9X)//)       BODPAN 
290   FORMAT (1H ,1X,I3,4X,5F11.5)                                       BODPAN 
300   FORMAT (1H1,4X,39HBODY PANEL AREAS AND INCLINATION ANGLES)         BODPAN 
310   FORMAT (1H0,5HPANEL,6X,4HAREA,7X,5HDELTA,6X,5HTHETA,6X,5HDELTA,6X, BODPAN 
     15HTHETA/24X,3HRAD,8X,3HRAD,8X,3HDEG,8X,3HDEG//)                    BODPAN 
320   FORMAT (43H  ERROR - NUMBER OF BODY PANELS EXCEEDS 600)            BODPAN 
  330 FORMAT(1X,33HINPUT ERROR - THE VALUE OF KFORX(,I2,12H) EXCEEDS 30) BODPAN 
  340 FORMAT(1X,61HINPUT ERROR - THE SUM OF VALUES OF THE KFORX ARRAY EX BODPAN 
     *CEEDS 30)                                                          BODPAN 
      END                                                                BODPAN 
      OVERLAY(LWB,1,6)                                                   NUTORD 
C     OVERLAY(LWB,1,6)                                                   NUTORD 
      PROGRAM NUTORD                                                     NUTORD 
C                                                                        NUTORD 
C     ********************************************VERSION B00*********** NUTORD 
C                                                                        NUTORD 
C                                                                        NUTORD 
C     REVISE CHORDWISE PANEL SPACING ON FIN (VERTICAL TAIL) OR CANARD    NUTORD 
C     (HORIZONTAL TAIL) AND COMPUTE NEW AIRFOIL ORDINATES                NUTORD 
C                                                                        NUTORD 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP NUTORD 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       NUTORD 
      COMMON/BLANK/DUM(20),NF,NFINOR,NC,NCANOR,DUMMW(3),NWFR,KWF,KWFR    NUTORD 
      COMMON/NEWCOM/KDUM(4),K4,K5,KDUMO(12),KF(6),KFINOR(6),KAN(6),      NUTORD 
     X              KANOR(6)                                             NUTORD 
      COMMON /COEF/ C(4,50),CC(4,50)                                     NUTORD 
      COMMON /SCRAT/ BLOCK(7500)                                         NUTORD 
C                                                                        NUTORD 
      DIMENSION TALORG(6,2,4), XT(6,10), TALORD(6,2,10), TALCR(6,10), TA NUTORD 
     1LOR(6,10), TORD(30), ZORD(30), DZC(30), DZT(30), XAF(30), TZORK(20 NUTORD 
     2,30), WAFORK(20,30), DZCDX(20,30), DZTDX(20,30), DZCDXK(20,30), WA NUTORD 
     3FOR(20,30), DZTDXK(20,30), RHO(20), A(20), B(20), R(20), XAT(30),  NUTORD 
     4XAFK(6,30)                                                         NUTORD 
C                                                                        NUTORD 
      EQUIVALENCE (BLOCK(1),TALORG(1)), (BLOCK(49),XT(1)), (BLOCK(109),T NUTORD 
     1ALORD(1)), (BLOCK(469),TALOR(1)), (BLOCK(529),TALCR(1)), (BLOCK(58 NUTORD 
     29),WAFOR(1)), (BLOCK(3111),TZORK(1)), (BLOCK(3711),WAFORK(1)), (BL NUTORD 
     3OCK(4311),DZCDX(1)), (BLOCK(4911),DZCDXK(1)), (BLOCK(5511),DZTDXK( NUTORD 
     41)), (BLOCK(6111),XAFK(1)), (BLOCK(1189),DZC(1)), (BLOCK(1219),DZT NUTORD 
     5(1)), (BLOCK(1249),XAT(1)), (BLOCK(1279),RHO(1)), (BLOCK(1299),R(1 NUTORD 
     6)), (BLOCK(1309),A(1)), (BLOCK(1329),B(1)), (BLOCK(1349),TORD(1)), NUTORD 
     7 (BLOCK(1379),ZORD(1)), (BLOCK(2511),DZTDX(1))                     NUTORD 
C                                                                        NUTORD 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE NUTORD 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              NUTORD 
      LOGICAL FIN                                                        NUTORD 
C                                                                        NUTORD 
      PRINT 5                                                            NUTORD 
    5 FORMAT(10X,*  NUTORD   - COMMON/NEWCOM/  *,//)                     NUTORD 
      CALL PDUMP(KDUM(1),KANOR(6),2)                                     NUTORD 
C                                                                        NUTORD 
C                                                                        NUTORD 
      FIN=.FALSE.                                                        NUTORD 
      IF (K4.LE.0) GO TO 10                                              NUTORD 
      FIN=.TRUE.                                                         NUTORD 
      NT=NF                                                              NUTORD 
      NWFR = NFINOR                                                      NUTORD 
      I1 = -1                                                            NUTORD 
      KL=K4                                                              NUTORD 
      GO TO 20                                                           NUTORD 
10    IF (K5.LE.0) GO TO 240                                             NUTORD 
      NT=NC                                                              NUTORD 
      NWFR = IABS(NCANOR)                                                NUTORD 
      I1 = -1                                                            NUTORD 
C                                                                        NUTORD 
C     NCANOR NEGATIVE INDICATES UPPER AND LOWER ORDINATES GIVEN          NUTORD 
C                                                                        NUTORD 
      IF(NCANOR.LT.0)I1 = 1                                              NUTORD 
      KL=K5                                                              NUTORD 
20    CONTINUE                                                           NUTORD 
      IF(KL.EQ.3) GO TO 26                                               NUTORD 
      DO 25 I=1,NT                                                       NUTORD 
      RHO(I)=0.0                                                         NUTORD 
   25 CONTINUE                                                           NUTORD 
      GO TO 27                                                           NUTORD 
   26 READ(TAPE5,250) (RHO(I),I=1,NT)                                    NUTORD 
   27 CONTINUE                                                           NUTORD 
C                                                                        NUTORD 
C     CALCULATE REVISED ORDINATES FOR EACH TAIL SEGMENT                  NUTORD 
C                                                                        NUTORD 
      DO 230 N=1,NT                                                      NUTORD 
      KWFR = 0                                                           NUTORD 
      IF(FIN.AND.KFINOR(N).GT.0) KWFR = KFINOR(N)                        NUTORD 
      IF(.NOT.FIN.AND.KANOR(N).GT.0) KWFR = KANOR(N)                     NUTORD 
      IF(KWFR.EQ.0) GO TO 30                                             NUTORD 
      READ(TAPE5,250)(XAFK(N,K),K=1,KWFR)                                NUTORD 
      GO TO 50                                                           NUTORD 
   30 KWFR = NWFR                                                        NUTORD 
      DO 40 K=1,NWFR                                                     NUTORD 
40    XAFK(N,K)=XT(N,K)                                                  NUTORD 
50    CONTINUE                                                           NUTORD 
      NWAR = NWFR - 1                                                    NUTORD 
C                                                                        NUTORD 
C     CALCULATE CAMBER AND THICKNESS SLOPES                              NUTORD 
C                                                                        NUTORD 
      NDA=-1                                                             NUTORD 
      DA=0.                                                              NUTORD 
      DO 60 L=1,NWFR                                                     NUTORD 
      XAF(L)=XT(N,L)                                                     NUTORD 
      ZORD(L)=TALCR(N,L)                                                 NUTORD 
60    TORD(L)=TALOR(N,L)                                                 NUTORD 
      IF(I1.LT.0) GO TO 80                                               NUTORD 
      CALL DERIV(XAF,ZORD,NWFR,NDA,DA,DZC)                               NUTORD 
      DO 70 L=1,NWAR                                                     NUTORD 
      DO 70 M=1,4                                                        NUTORD 
70    CC(M,L)=C(M,L)                                                     NUTORD 
      GO TO 100                                                          NUTORD 
80    DO 90 L=1,NWAR                                                     NUTORD 
      DZC(L)=0.                                                          NUTORD 
      DO 90 M=1,4                                                        NUTORD 
90    CC(M,L)=0.                                                         NUTORD 
      DZC(NWFR) = 0.                                                     NUTORD 
  100 NWA = NWFR                                                         NUTORD 
      IF (KL.LT.3.OR.RHO(N).EQ.0.) GO TO 120                             NUTORD 
C                                                                        NUTORD 
C     CALCULATE INITIAL SLOPE FOR ROUND LEADING EDGE                     NUTORD 
C                                                                        NUTORD 
      NWA=NWAR                                                           NUTORD 
      NDA=0                                                              NUTORD 
      R(N)=SQRT(2.*RHO(N))                                               NUTORD 
      SAF2=SQRT(XAF(2))                                                  NUTORD 
      SAF3=SQRT(XAF(3))                                                  NUTORD 
      CON2=TORD(2)/XAF(2)-R(N)/SAF2                                      NUTORD 
      CON3=TORD(3)/XAF(3)-R(N)/SAF3                                      NUTORD 
      DX=XAF(3)-XAF(2)                                                   NUTORD 
      A(N)=(CON2*XAF(3)-CON3*XAF(2))/DX                                  NUTORD 
      B(N)=(CON3-CON2)/DX                                                NUTORD 
      DA=R(N)/(2.*SAF2)+A(N)+2.*B(N)*XAF(2)                              NUTORD 
      DO 110 L=1,NWAR                                                    NUTORD 
      XAT(L)=XAF(L+1)                                                    NUTORD 
110   TORD(L)=TORD(L+1)                                                  NUTORD 
      GO TO 140                                                          NUTORD 
120   DO 130 L=1,NWA                                                     NUTORD 
130   XAT(L)=XAF(L)                                                      NUTORD 
140   CALL DERIV (XAT,TORD,NWA,NDA,DA,DZT)                               NUTORD 
      DO 150 L=1,NWFR                                                    NUTORD 
      DZCDX(N,L)=DZC(L)                                                  NUTORD 
150   DZTDX(N,L)=DZT(L)                                                  NUTORD 
      IF (KL.LT.3.OR.RHO(N).EQ.0.) GO TO 170                             NUTORD 
      DZTDX(N,1)=900.                                                    NUTORD 
      DO 160 L=2,NWFR                                                    NUTORD 
160   DZTDX(N,L)=DZT(L-1)                                                NUTORD 
170   CONTINUE                                                           NUTORD 
      IF(KWFR.EQ.0)GO TO 230                                             NUTORD 
C                                                                        NUTORD 
C     INTERPOLATE FOR REVISED CAMBER AND THICKNESS ORDINATES AND SLOPES  NUTORD 
C                                                                        NUTORD 
      TZORK(N,1)=TALCR(N,1)                                              NUTORD 
      DZCDXK(N,1)=DZCDX(N,1)                                             NUTORD 
      WAFORK(N,1)=TALOR(N,1)                                             NUTORD 
      DZTDXK(N,1)=DZTDX(N,1)                                             NUTORD 
      KI=2                                                               NUTORD 
      DO 220 J=1,NWAR                                                    NUTORD 
      DO 200 K=KI,KWFR                                                   NUTORD 
      IF (XAFK(N,K).GT.XAF(J+1)) GO TO 210                               NUTORD 
      XJ=XAFK(N,K)                                                       NUTORD 
      TZORK(N,K) = CC(1,J) + XJ*(CC(2,J) + XJ*(CC(3,J) + XJ*CC(4,J)))    NUTORD 
      DZCDXK(N,K) = CC(2,J) + XJ*(2.*CC(3,J) + 3.*XJ*CC(4,J))            NUTORD 
      L=J                                                                NUTORD 
      XL=XJ                                                              NUTORD 
      IF (KL.LT.3.OR.RHO(N).EQ.0.) GO TO 190                             NUTORD 
      IF (J.GT.1) GO TO 180                                              NUTORD 
      SXJ=SQRT(XJ)                                                       NUTORD 
      DZTDXK(N,K)=R(N)/(2.*SXJ)+A(N)+2.*B(N)*XJ                          NUTORD 
      WAFORK(N,K)=R(N)*SXJ+XJ*(A(N)+B(N)*XJ)                             NUTORD 
      GO TO 200                                                          NUTORD 
180   XL=XJ-XAF(1)                                                       NUTORD 
      L=J-1                                                              NUTORD 
  190 WAFORK(N,K) = C(1,L) + XL*(C(2,L) + XL*(C(3,L)+ XL*C(4,L)))        NUTORD 
      DZTDXK(N,K) = C(2,L) + XL*(2.*C(3,L) + 3.*XL*C(4,L))               NUTORD 
200   CONTINUE                                                           NUTORD 
210   KI=K                                                               NUTORD 
220   CONTINUE                                                           NUTORD 
230   CONTINUE                                                           NUTORD 
240   CONTINUE                                                           NUTORD 
C                                                                        NUTORD 
C                                                                        NUTORD 
C                                                                        NUTORD 
250   FORMAT (10F7.0)                                                    NUTORD 
      END                                                                NUTORD 
      OVERLAY(LWB,1,7)                                                   TALPAN 
C     OVERLAY(LWB,1,7)                                                   TALPAN 
      PROGRAM TALPAN                                                     TALPAN 
C                                                                        TALPAN 
C     *******************************************VERSION B00************ TALPAN 
C                                                                        TALPAN 
C                                                                        TALPAN 
C     REVISE SPANWISE PANEL SPACING ON FIN (VERTICAL TAIL) OR CANARD     TALPAN 
C     (HORIZONTAL TAIL) AND COMPUTE NEW PANEL GEOMETRY                   TALPAN 
C                                                                        TALPAN 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP TALPAN 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       TALPAN 
      COMMON/BLANK/DUM(20),NF,NFINOR,NK,NCANOR,DUMW(3),NWFR,KWF,KWFR     TALPAN 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           TALPAN 
      COMMON/NEWCOM/KDUM(4),K4,K5,KDUMO(12),KF(6),KFINOR(6),KAN(6),      TALPAN 
     X              KANOR(6),LDUMO(2),KOL,NCPT                           TALPAN 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BTE(20),NWT( TALPAN 
     120),SPNW(20),XLEW(20),BLE(20),ZLEW(20),XS(20),YS(20),ZS(20)        TALPAN 
      COMMON /SCRAT/ BLOCK(7500)                                         TALPAN 
      COMMON /POINT/ ARRAY(6000)                                         TALPAN 
      COMMON /VELCOM/ DUM1(6),PRINT                                      TALPAN 
      COMMON /GRAPH/ PLOT                                                TALPAN 
      COMMON /PI/ PI,RADEG,DEGRAD                                        TALPAN 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, TALPAN 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        TALPAN 
C                                                                        TALPAN 
      DIMENSION XPT(600), YPT(600), ZPT(600), THET(600), DELTA(600), XC( TALPAN 
     130,20), YC(30,20), ZC(30,20), ZU(30,20), AREA(600), XE(600), TALOR TALPAN 
     2G(6,2,4), XT(6,10), TALORD(6,2,10), TALCR(6,10), TALOR(6,10), WAFO TALPAN 
     3RG(2,4), TZORK(20,30), WAFORK(20,30), DZCDX(20,30), DZTDX(20,30),  TALPAN 
     4DZCDXK(20,30), DZTDXK(20,30), SLOPE(600), XAFK(6,30), XK(20), YK(2 TALPAN 
     50), ZK(20), CK(20), CD(20), ZY(20), BL(20), TH(20), BT(20), CHORD( TALPAN 
     6600)                                                               TALPAN 
C                                                                        TALPAN 
      EQUIVALENCE (BLOCK(1),TALORG(1)), (BLOCK(49),XT(1)), (BLOCK(109),T TALPAN 
     1ALORD(1)), (BLOCK(469),TALOR(1)), (BLOCK(529),TALCR(1)), (BLOCK(58 TALPAN 
     29),ZY(1)), (BLOCK(609),XK(1)), (BLOCK(629),YK(1)), (BLOCK(649),ZK( TALPAN 
     31)), (BLOCK(669),CK(1)), (BLOCK(689),BL(1)), (BLOCK(709),BT(1)), ( TALPAN 
     4BLOCK(729),TH(1)), (BLOCK(2511),DZTDX(1)), (BLOCK(3111),TZORK(1)), TALPAN 
     5 (BLOCK(3711),WAFORK(1)), (BLOCK(4311),DZCDX(1)), (BLOCK(4911),DZC TALPAN 
     6DXK(1)), (BLOCK(5511),DZTDXK(1)), (BLOCK(6111),XAFK(1)), (BLOCK(63 TALPAN 
     701),CHORD(1)), (BLOCK(6901),SLOPE(1)), (BLOCK(6901),ZU(1)), (ARRAY TALPAN 
     8(1),XPT(1)), (ARRAY(601),YPT(1)), (ARRAY(1201),ZPT(1)), (ARRAY(180 TALPAN 
     91),THET(1)), (ARRAY(2401),DELTA(1)), (ARRAY(3001),XC(1)), (ARRAY(3 TALPAN 
     $601),YC(1)), (ARRAY(4201),ZC(1)), (ARRAY(4801),AREA(1)), (ARRAY(54 TALPAN 
     $01),XE(1))                                                         TALPAN 
C                                                                        TALPAN 
      LOGICAL LBC,THK,FIN                                                TALPAN 
      INTEGER PRINT,PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8 TALPAN 
     1,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                   TALPAN 
C                                                                        TALPAN 
C     IN LINE FUNCTION DEFINITION                                        TALPAN 
C                                                                        TALPAN 
      XIN(X1,Y1,X2,Y2,Y)=X1+(X2-X1)*(Y-Y1)/(Y2-Y1)                       TALPAN 
C                                                                        TALPAN 
C                                                                        TALPAN 
C                                                                        TALPAN 
      PRINT 5                                                            TALPAN 
    5 FORMAT(10X,*  TALPAN   - COMMON/NEWCOM/  *,//)                     TALPAN 
      CALL PDUMP(KDUM(1),NCPT,2)                                         TALPAN 
      FIN=.FALSE.                                                        TALPAN 
      IF (K4.LE.0) GO TO 10                                              TALPAN 
      FIN=.TRUE.                                                         TALPAN 
      IF (PRINT.LT.0) WRITE (TAPE6,440)                                  TALPAN 
      NTAL=NF                                                            TALPAN 
      KK=K4                                                              TALPAN 
      KL=K4                                                              TALPAN 
      K4=0                                                               TALPAN 
      GO TO 20                                                           TALPAN 
10    IF (K5.LE.0) GO TO 360                                             TALPAN 
      KK=0                                                               TALPAN 
      KL=K5                                                              TALPAN 
      NTAL=NK                                                            TALPAN 
      IF (PRINT.LT.0) WRITE (TAPE6,450)                                  TALPAN 
20    CONTINUE                                                           TALPAN 
      IF (PRINT.LT.0) WRITE (TAPE6,460)                                  TALPAN 
      REWIND TAPE7                                                       TALPAN 
C                                                                        TALPAN 
C     READ WING GEOMETRY FROM TAPE 7                                     TALPAN 
C                                                                        TALPAN 
      READ (TAPE7) ARRAY,CHORD,SLOPE                                     TALPAN 
      REWIND TAPE7                                                       TALPAN 
      KI=1                                                               TALPAN 
      NI=1                                                               TALPAN 
      NC=NCPT                                                            TALPAN 
      NJ=NCPT                                                            TALPAN 
      NINIT=NWING                                                        TALPAN 
      NP=NWING                                                           TALPAN 
      NC1=NC+1                                                           TALPAN 
      NP1=NP+1                                                           TALPAN 
      NKOL=0                                                             TALPAN 
      NKIL=0                                                             TALPAN 
      IF (NSEG.EQ.0) GO TO 40                                            TALPAN 
      DO 30 N=1,NSEG                                                     TALPAN 
30    NKOL=NKOL+NCOL(N)                                                  TALPAN 
      NKIL=NKOL                                                          TALPAN 
40    CONTINUE                                                           TALPAN 
C                                                                        TALPAN 
C     CALCULATE PANEL GEOMETRY FOR EACH TAIL SEGMENT                     TALPAN 
C                                                                        TALPAN 
      DO 290 NT=1,NTAL                                                   TALPAN 
      IF(FIN)KWF=KF(NT)                                                  TALPAN 
      IF(.NOT.FIN) KWF=KAN(NT)                                           TALPAN 
      KWF = IABS(KWF)                                                    TALPAN 
      IF(KWF.EQ.0) GO TO 50                                              TALPAN 
C                                                                        TALPAN 
C     READ INTERMEDIATE SPAN STATIONS                                    TALPAN 
C                                                                        TALPAN 
      READ(TAPE5,430)(YK(K),K=1,KWF)                                     TALPAN 
   50 KWFR = NWFR                                                        TALPAN 
      IF(FIN.AND.KFINOR(NT).GT.0) KWFR=KFINOR(NT)                        TALPAN 
      IF(.NOT.FIN.AND.KANOR(NT).GT.0) KWFR=KANOR(NT)                     TALPAN 
      DO 70 N=1,2                                                        TALPAN 
      WAFORG(N,1)=TALORG(NT,N,1)                                         TALPAN 
      IF (KK.GT.0) GO TO 60                                              TALPAN 
      WAFORG(N,2)=TALORG(NT,N,2)                                         TALPAN 
      WAFORG(N,3)=TALORG(NT,N,3)                                         TALPAN 
      GO TO 70                                                           TALPAN 
60    WAFORG(N,2)=TALORG(NT,N,3)                                         TALPAN 
      WAFORG(N,3)=TALORG(NT,N,2)                                         TALPAN 
70    WAFORG(N,4)=TALORG(NT,N,4)                                         TALPAN 
      IF(KWF.NE.0) GO TO 90                                              TALPAN 
      KWF = 2                                                            TALPAN 
      DO 80 K=1,2                                                        TALPAN 
   80 YK(K) = WAFORG(K,2)                                                TALPAN 
   90 LLI = KOL + KI                                                     TALPAN 
      LLF = KOL + KWF                                                    TALPAN 
      N=1                                                                TALPAN 
      M=2                                                                TALPAN 
      DELY=WAFORG(N+1,2)-WAFORG(N,2)                                     TALPAN 
      IF (DELY.EQ.0.) GO TO 290                                          TALPAN 
      DELX=WAFORG(N+1,1)-WAFORG(N,1)                                     TALPAN 
      DELZ=WAFORG(N+1,3)-WAFORG(N,3)                                     TALPAN 
      DELC=WAFORG(N+1,4)-WAFORG(N,4)                                     TALPAN 
      DELYZD=1.0/SQRT(DELY*DELY+DELZ*DELZ)                               NEWSHLC
      BL(N)=DELX/DELYZD                                                  NEWSHLC
      BT(N)=(DELX+DELC)/DELYZD                                           NEWSHLC
      CD(N)=WAFORG(N,4)                                                  TALPAN 
      IF (FIN) TH(N)=ATAN2(DELY,DELZ)                                    TALPAN 
      IF (.NOT.FIN) TH(N)=ATAN2(DELZ,DELY)                               TALPAN 
      NSEG=NSEG+1                                                        TALPAN 
      SINS(NSEG)=SIN(TH(N))                                              TALPAN 
      COSS(NSEG)=COS(TH(N))                                              TALPAN 
      BLE(NSEG)=BL(N)                                                    TALPAN 
      BTE(NSEG)=BT(N)                                                    TALPAN 
      NWT(NSEG)=1                                                        TALPAN 
      IF (FIN) NWT(NSEG)=-1                                              TALPAN 
      IF (.NOT.FIN.AND.KAN(NT).LT.0) NWT(NSEG)=-1                        TALPAN 
C                                                                        TALPAN 
C     CALCULATE ORIGINS OF INTERMEDIATE CHORDS                           TALPAN 
C                                                                        TALPAN 
      DO 240 K = KI,KWF                                                  TALPAN 
      K1=K-1                                                             TALPAN 
      NKOL=NKIL+K1                                                       TALPAN 
      L=K+KOL                                                            TALPAN 
      L1=L-1                                                             TALPAN 
      XK(K)=XIN(WAFORG(NI,1),WAFORG(NI,2),WAFORG(M,1),WAFORG(M,2),YK(K)) TALPAN 
      ZK(K)=XIN(WAFORG(NI,3),WAFORG(NI,2),WAFORG(M,3),WAFORG(M,2),YK(K)) TALPAN 
      CK(K)=XIN(WAFORG(NI,4),WAFORG(NI,2),WAFORG(M,4),WAFORG(M,2),YK(K)) TALPAN 
      CL=CK(K)/100.                                                      TALPAN 
      LP=1                                                               TALPAN 
      SJ=1.0                                                             TALPAN 
      ZY(K)=ZK(K)                                                        TALPAN 
      IF (FIN) ZK(K)=YK(K)                                               TALPAN 
100   CONTINUE                                                           TALPAN 
C                                                                        TALPAN 
C     CALCULATE COORDINATES OF PANEL CORNERS                             TALPAN 
C                                                                        TALPAN 
      DO 190 J=1,KWFR                                                    TALPAN 
      XC(J,L)=XK(K)+CL*XAFK(NT,J)                                        TALPAN 
      ZC(J,L)=ZK(K)                                                      TALPAN 
      IF (LBC) GO TO 110                                                 TALPAN 
      ZCAM=TZORK(NT,J)                                                   TALPAN 
      ZTHK=WAFORK(NT,J)                                                  TALPAN 
      ZC(J,L)=ZY(K)+CL*(ZCAM+SJ*ZTHK)                                    TALPAN 
      IF (LP.EQ.1) ZU(J,L)=ZC(J,L)                                       TALPAN 
      IF (FIN) YK(K)=ZK(K)                                               TALPAN 
      GO TO 120                                                          TALPAN 
110   IF (FIN) YK(K)=ZY(K)                                               TALPAN 
120   YC(J,L)=YK(K)                                                      TALPAN 
      IF (K.EQ.KI) GO TO 190                                             TALPAN 
      NJ=NJ+1                                                            TALPAN 
      IF (J.EQ.1) GO TO 190                                              TALPAN 
      JJ=J-1                                                             TALPAN 
      NC=NC+1                                                            TALPAN 
      NP=NP+1                                                            TALPAN 
      IP=1                                                               TALPAN 
      IF (SJ.LT.0.) IP=0                                                 TALPAN 
      IQ=0                                                               TALPAN 
      IF (FIN) IQ=1                                                      TALPAN 
C                                                                        TALPAN 
C     CALCULATE PANEL INCLINATIONS AND CENTROIDS ON TAIL SURFACE         TALPAN 
C                                                                        TALPAN 
      IF (.NOT.LBC) CALL PANEL (IP,IQ,J,L,LP,NP,AP)                      TALPAN 
      AREA(NP)=AP                                                        TALPAN 
      CHORD(NP)=0.                                                       TALPAN 
      IF (PRINT.GE.0) GO TO 160                                          TALPAN 
      IF (.NOT.LBC.AND.FIN) GO TO 140                                    TALPAN 
      IF (.NOT.LBC.AND.LP.EQ.1) GO TO 130                                TALPAN 
      WRITE (TAPE6,470) NP,XC(JJ,L1),YK(K1),ZC(JJ,L1),XC(J,L1),YK(K1),ZC TALPAN 
     1(J,L1),XC(JJ,L),YK(K),ZC(JJ,L),XC(J,L),YK(K),ZC(J,L)               TALPAN 
      GO TO 160                                                          TALPAN 
130   WRITE (TAPE6,470) NP,XC(JJ,L1),YK(K1),ZU(JJ,L1),XC(J,L1),YK(K1),ZU TALPAN 
     1(J,L1),XC(JJ,L),YK(K),ZU(JJ,L),XC(J,L),YK(K),ZU(J,L)               TALPAN 
      GO TO 160                                                          TALPAN 
140   IF (LP.EQ.1) GO TO 150                                             TALPAN 
      WRITE (TAPE6,470) NP,XC(JJ,L1),ZC(JJ,L1),YK(K1),XC(J,L1),ZC(J,L1), TALPAN 
     1YK(K1),XC(JJ,L),ZC(JJ,L),YK(K),XC(J,L),ZC(J,L),YK(K)               TALPAN 
      GO TO 160                                                          TALPAN 
150   WRITE (TAPE6,470) NP,XC(JJ,L1),ZU(JJ,L1),YK(K1),XC(J,L1),ZU(J,L1), TALPAN 
     1YK(K1),XC(JJ,L),ZU(JJ,L),YK(K),XC(J,L),ZC(J,L),YK(K)               TALPAN 
C                                                                        TALPAN 
C     CALCULATE PANEL CONTROL POINTS IN PLANE OF TAIL                    TALPAN 
C                                                                        TALPAN 
160   CONTINUE                                                           TALPAN 
      CR=XC(J,L1)-XC(JJ,L1)                                              TALPAN 
      CT=XC(J,L)-XC(JJ,L)                                                TALPAN 
      RI=(1.+CT/(CR+CT))/3.                                              TALPAN 
      RO=1.-RI                                                           TALPAN 
      XLE=RI*XC(JJ,L)+RO*XC(JJ,L1)                                       TALPAN 
      XTE=RI*XC(J,L)+RO*XC(J,L1)                                         TALPAN 
      CHORD(NP)=XTE-XLE                                                  TALPAN 
      SPN=SQRT((YK(K)-YK(K1))*(YK(K)-YK(K1))+(ZK(K)-ZK(K1))*(ZK(K)-ZK(K1 TALPAN 
     1)))                                                                TALPAN 
      SPNW(NKOL)=SPN                                                     TALPAN 
      IF (J.EQ.2) XLEW(NKOL)=XLE                                         TALPAN 
      YLE=RI*YK(K)+RO*YK(K1)                                             TALPAN 
      ZLE=RI*ZK(K)+RO*ZK(K1)                                             TALPAN 
      IF (J.EQ.2) ZLEW(NKOL)=ZLE                                         TALPAN 
      IF (LBC) GO TO 170                                                 TALPAN 
      GO TO 190                                                          TALPAN 
170   CONTINUE                                                           TALPAN 
      XPT(NC)=XLE                                                        TALPAN 
      XE(NC)=XPT(NC)                                                     TALPAN 
      YPT(NC)=YLE                                                        TALPAN 
      ZPT(NC)=ZLE                                                        TALPAN 
C                                                                        TALPAN 
C     CALCULATE PANEL AREAS, CHORDS, AND INCLINATION ANGLES              TALPAN 
C                                                                        TALPAN 
      AREA(NP)=.5*SPN*(CR+CT)                                            TALPAN 
      THET(NC)=TH(N)                                                     TALPAN 
C                                                                        TALPAN 
C     CALCULATE CAMBER AND THICKNESS SLOPES                              TALPAN 
C                                                                        TALPAN 
      KJ=KI+1                                                            TALPAN 
      IF (K.GT.KJ) GO TO 180                                             TALPAN 
      DZCDX(NT,J)=DZCDXK(NT,J)                                           TALPAN 
      IF (J.EQ.2) DZCDX(NT,1)=DZCDXK(NT,1)                               TALPAN 
      DZTDX(NT,J)=DZTDXK(NT,J)                                           TALPAN 
  180 DELTA(NC) = DZCDX(NT,JJ)                                           TALPAN 
      SLOPE(NJ)=DZTDX(NT,J)                                              TALPAN 
      IF(J.NE.KWFR)GO TO 190                                             TALPAN 
      NC=NC+1                                                            TALPAN 
      XPT(NC)=XTE-EPSTP                                                  TALPAN 
      XE(NC)=XPT(NC)                                                     TALPAN 
      YPT(NC)=YPT(NC-1)                                                  TALPAN 
      ZPT(NC)=ZPT(NC-1)                                                  TALPAN 
      DELTA(NC)=DZCDXK(NT,J)                                             TALPAN 
      THET(NC)=TH(N)                                                     TALPAN 
      CDC = 0.01*(XTE - XLEW(NKOL))                                      TALPAN 
190   CONTINUE                                                           TALPAN 
      IF (LBC) GO TO 200                                                 TALPAN 
      IF (SJ.LT.0.) GO TO 200                                            TALPAN 
      SJ=-1.0                                                            TALPAN 
      LP=2                                                               TALPAN 
      GO TO 100                                                          TALPAN 
200   CONTINUE                                                           TALPAN 
      IF (K.EQ.KI) GO TO 240                                             TALPAN 
      IF (K.GT.KJ) GO TO 230                                             TALPAN 
      IF (.NOT.LBC) GO TO 240                                            TALPAN 
      IF (KL.EQ.3) GO TO 210                                             TALPAN 
C                                                                        TALPAN 
C     CALCULATE INITIAL SLOPE FOR SHARP LEADING EDGE AIRFOILS            TALPAN 
C                                                                        TALPAN 
      DZTDX(NT,1)=DZTDXK(NT,1)                                           TALPAN 
      GO TO 230                                                          TALPAN 
C                                                                        TALPAN 
C     CALCULATE INITIAL SLOPE FOR ROUND LEADING EDGE AIRFOIL             TALPAN 
C                                                                        TALPAN 
210   NPJ=NP-JJ                                                          TALPAN 
      ZTE = CDC*WAFORK(NT,KWFR)/CHORD(NPJ + 1)                           TALPAN 
      SLE=2.*ZTE-DZTDX(NT,2)                                             TALPAN 
      DO 220 I=2,JJ                                                      TALPAN 
220   SLE=SLE-(DZTDX(NT,I)+DZTDX(NT,I+1))*CHORD(NPJ+I)/CHORD(NPJ+1)      TALPAN 
      DZTDX(NT,1)=SLE                                                    TALPAN 
230   NJJ=NJ-JJ                                                          TALPAN 
      SLOPE(NJJ)=DZTDX(NT,1)                                             TALPAN 
240   CONTINUE                                                           TALPAN 
      IF (PLOT.EQ.0) GO TO 280                                           TALPAN 
      IF (.NOT.LBC.AND.FIN) GO TO 260                                    TALPAN 
      IF (.NOT.LBC) GO TO 250                                            TALPAN 
      GO TO 270                                                          TALPAN 
  250 WRITE(TAPE3)((XC(J,L),YC(J,L),ZU(J,L),J=1,KWFR),L=LLI,LLF)         TALPAN 
      WRITE(TAPE3)((XC(J,L),YC(J,L),ZC(J,L),J=1,KWFR),L=LLI,LLF)         TALPAN 
      GO TO 280                                                          TALPAN 
  260 WRITE(TAPE3)((XC(J,L),ZU(J,L),YC(J,L),J=1,KWFR),L=LLI,LLF)         TALPAN 
      WRITE(TAPE3)((XC(J,L),ZC(J,L),YC(J,L),J=1,KWFR),L=LLI,LLF)         TALPAN 
      GO TO 280                                                          TALPAN 
  270 WRITE(TAPE3)((XC(J,L),YC(J,L),ZC(J,L),J=1,KWFR),L=LLI,LLF)         TALPAN 
      WRITE(TAPE3)((XC(J,L),YC(J,L),ZC(J,L),J=1,KWFR),L=LLI,LLF)         TALPAN 
      WRITE(TAPE6,400)((XC(J,L),YC(J,L),ZC(J,L),J=1,KWFR),L=LLI,LLF)     TALPAN 
280   CONTINUE                                                           TALPAN 
C                                                                        TALPAN 
C     COMPUTE NUMBER OF ROWS AND COLUMNS IN EACH TAIL SEGMENT            TALPAN 
C                                                                        TALPAN 
      NROW(NSEG)=JJ                                                      TALPAN 
      NCOL(NSEG) = KWF - KI                                              TALPAN 
      NCPT=NC                                                            TALPAN 
      NKIL=NKOL                                                          TALPAN 
      IF (NCPT.GT.600) GO TO 340                                         TALPAN 
      NWING=NP                                                           TALPAN 
      NTAIL=NWING-NINIT                                                  TALPAN 
      KOL = KOL + KWF                                                    TALPAN 
290   CONTINUE                                                           TALPAN 
      IF (PRINT.GE.0) GO TO 330                                          TALPAN 
      IF (FIN.AND.LBC) WRITE (TAPE6,410)                                 TALPAN 
      IF (FIN.AND..NOT.LBC) WRITE (TAPE6,480)                            TALPAN 
      IF (.NOT.FIN.AND.LBC) WRITE (TAPE6,420)                            TALPAN 
      IF (.NOT.FIN.AND..NOT.LBC) WRITE (TAPE6,490)                       TALPAN 
      IF (LBC) WRITE (TAPE6,380)                                         TALPAN 
      IF (.NOT.LBC) WRITE (TAPE6,390)                                    TALPAN 
      DO 310 NP=NC1,NCPT                                                 TALPAN 
      TDEG=THET(NP)*RADEG                                                TALPAN 
      DDEG=DELTA(NP)*RADEG                                               TALPAN 
      IF (LBC) WRITE (TAPE6,500) NP,XPT(NP),YPT(NP),ZPT(NP),THET(NP),DEL TALPAN 
     1TA(NP),SLOPE(NP),TDEG                                              TALPAN 
      IF (FIN.AND..NOT.LBC) GO TO 300                                    TALPAN 
      IF (.NOT.LBC) WRITE (TAPE6,500) NP,XPT(NP),YPT(NP),ZPT(NP),THET(NP TALPAN 
     1),DELTA(NP),DDEG,TDEG                                              TALPAN 
      GO TO 310                                                          TALPAN 
300   WRITE (TAPE6,500) NP,XPT(NP),YPT(NP),ZPT(NP),THET(NP),DELTA(NP),DD TALPAN 
     1EG,TDEG                                                            TALPAN 
310   CONTINUE                                                           TALPAN 
      IF (FIN) WRITE (TAPE6,540)                                         TALPAN 
      IF (.NOT.FIN) WRITE (TAPE6,530)                                    TALPAN 
      WRITE (TAPE6,510)                                                  TALPAN 
      DO 320 NP=NP1,NWING                                                TALPAN 
320   WRITE (TAPE6,520) NP,AREA(NP),CHORD(NP)                            TALPAN 
330   CONTINUE                                                           TALPAN 
C                                                                        TALPAN 
C     STORE WING AND TAIL GEOMETRY ON TAPE 7                             TALPAN 
C                                                                        TALPAN 
      WRITE (TAPE7) ARRAY,CHORD,SLOPE                                    TALPAN 
      GO TO 350                                                          TALPAN 
340   CONTINUE                                                           TALPAN 
      WRITE (TAPE6,370)                                                  TALPAN 
      WRITE (TAPE6,550)                                                  TALPAN 
      CALL EXIT                                                          TALPAN 
350   CONTINUE                                                           TALPAN 
360   CONTINUE                                                           TALPAN 
C                                                                        TALPAN 
C                                                                        TALPAN 
C                                                                        TALPAN 
370   FORMAT (1H0,26H ERROR MESSAGE FROM TALPAN/1H0)                     TALPAN 
380   FORMAT (1H0,5HPOINT,8X,1HX,10X,1HY,10X,1HZ,10X,5HTHETA,6X,6HCAMBER TALPAN 
     1,5X,9HTHICKNESS,2X,5HTHETA/15X,3(2HCP,9X),3HRAD,8X,5HSLOPE,6X,5HSL TALPAN 
     2OPE,6X,3HDEG//)                                                    TALPAN 
390   FORMAT (1H0,5HPOINT,8X,1HX,10X,1HY,10X,1HZ,10X,5HTHETA,6X,5HDELTA, TALPAN 
     16X,5HDELTA,6X,5HTHETA/15X,3(2HCP,9X),3HRAD,8X,3HRAD,8X,3HDEG,8X,3H TALPAN 
     2DEG//)                                                             TALPAN 
400   FORMAT (10X,3(E14.7,2X))                                           TALPAN 
410   FORMAT (1H1,1X,79HFIN PANEL EDGE POINTS ON CHORD PASSING THROUGH C TALPAN 
     1ENTROID, AND INCLINATION ANGLES)                                   TALPAN 
420   FORMAT (1H1,1X,80HTAIL PANEL EDGE POINTS ON CHORD PASSING THROUGH  TALPAN 
     1CENTROID, AND INCLINATION ANGLES)                                  TALPAN 
430   FORMAT (10F7.0)                                                    TALPAN 
440   FORMAT (1H1,9X,35H FIN PANEL CORNER POINT COORDINATES/10X,86H 1 AN TALPAN 
     1D 3 INDICATE FIN PANEL LEADING-EDGE POINTS, 2 AND 4 INDICATE TRAIL TALPAN 
     2ING-EDGE POINTS)                                                   TALPAN 
450   FORMAT (1H1,9X,35HTAIL PANEL CORNER POINT COORDINATES/10X,86H1 AND TALPAN 
     1 3 INDICATE TAIL PANEL LEADING-EDGE POINTS, 2 AND 4 INDICATE TRAIL TALPAN 
     2ING-EDGE POINTS)                                                   TALPAN 
460   FORMAT (1H0,5X,5HPANEL,4(8X,1HX,8X,1HY,8X,1HZ)/20X,3(1H1,8X),3(1H2 TALPAN 
     1,8X),3(1H3,8X),3(1H4,8X)//)                                        TALPAN 
470   FORMAT (1H ,4X,I3,4X,12F9.5)                                       TALPAN 
480   FORMAT (1H1,1X,49H FIN PANEL CENTROID POINTS AND INCLINATION ANGLE TALPAN 
     1S)                                                                 TALPAN 
490   FORMAT (1H1,1X,49HTAIL PANEL CENTROID POINTS AND INCLINATION ANGLE TALPAN 
     1S)                                                                 TALPAN 
500   FORMAT (1H ,1X,I3,4X,8F11.5)                                       TALPAN 
510   FORMAT (1H0,5HPANEL,6X,4HAREA,8X,5HCHORD)                          TALPAN 
520   FORMAT (1H ,1X,I3,4X,2F11.5)                                       TALPAN 
530   FORMAT (1H1,9X,27HTAIL PANEL AREAS AND CHORDS)                     TALPAN 
540   FORMAT (1H1,9X,27H FIN PANEL AREAS AND CHORDS)                     TALPAN 
550   FORMAT (65H ERROR - NUMBER OF WING AND TAIL PANEL CONTROL POINTS E TALPAN 
     1XCEEDS 600)                                                        TALPAN 
      END                                                                TALPAN 
      OVERLAY(LWB,1,10)                                                  NACSHL 
      PROGRAM NACSHL                                                     NACSHL 
C                                                                        NACSHL 
C*********************************************************************** NACSHL 
C                                                                        NACSHL 
C          READ NACELLE OR SHELL INPUTS                                  NACSHL 
C                                                                        NACSHL 
C          AND CALCULATE PANEL GEOMETRY                                  NACSHL 
C                                                                        NACSHL 
C*********************************************************************** NACSHL 
C                                                                        NACSHL 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,    NACSHL 
     1               TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15     NACSHL 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           NACSHL 
      COMMON /NEWCOM/ KDUM(6),K6,KDUMO(37),KOL,NCPT                      NACSHL 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BTE(20),NWT( NACSHL 
     120),SPNW(20),XLEW(20),BLE(20),ZLEW(20),XS(20),YS(20),ZS(20)        NACSHL 
      COMMON /SCRAT/ BLOCK(7500)                                         NACSHL 
      COMMON /POINT/ ARRAY(6000)                                         NACSHL 
      COMMON /VELCOM/ DUM1(6),PRINT                                      NACSHL 
      COMMON /GRAPH/ PLOT                                                NACSHL 
      COMMON /PI/ PI,RADEG,DEGRAD                                        NACSHL 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, NACSHL 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        NACSHL 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NACSHL 
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NACSHL 
C                                                                        NACSHL 
      DIMENSION XPT(600), YPT(600), ZPT(600), THET(600), DELTA(600),     NACSHL 
     1 XC(30,20), YC(30,20), ZC(30,20), AREA(600), XE(600), CHORD(600),  NACSHL 
     2 SLOPE(600), X(20), Y(20), Z(20), C(20), TH(20), BL(20), BT(20),   NACSHL 
     3 XOC(30), DZCDX(20,30), DZTDX(20,30)                               NACSHL 
      DIMENSION TITLE(14)                                                NACSHL 
C                                                                        NACSHL 
      EQUIVALENCE (ARRAY(1),XPT(1)),(ARRAY(601),YPT(1)),                 NACSHL 
     1(ARRAY(1201),ZPT(1)),(ARRAY(1801),THET(1)),(ARRAY(2401),DELTA(1)), NACSHL 
     2(ARRAY(3001),XC(1)),(ARRAY(3601),YC(1)),(ARRAY(4201),ZC(1)),       NACSHL 
     3(ARRAY(4801),AREA(1)),(ARRAY(5401),XE(1)),(BLOCK(1),X(1)),         NACSHL 
     4(BLOCK(21),Y(1)),(BLOCK(41),Z(1)),(BLOCK(61),C(1)),                NACSHL 
     5(BLOCK(81),TH(1)),(BLOCK(101),BL(1)),(BLOCK(121),BT(1)),           NACSHL 
     6(BLOCK(141),XOC(1)),(BLOCK(171),DZCDX(1)), (BLOCK(771),DZTDX(1)),  NACSHL 
     7(BLOCK(6301),CHORD(1)),(BLOCK(6901),SLOPE(1))                      NACSHL 
C                                                                        NACSHL 
      LOGICAL LBC,THK,NAC,SHELL                                          NACSHL 
      INTEGER PRINT,PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,      NACSHL 
     1 TAPE8,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15             NACSHL 
C                                                                        NACSHL 
C          INITIALIZE CONSTANTS                                          NACSHL 
C                                                                        NACSHL 
      NAC=.FALSE.                                                        NACSHL 
      SHELL=.FALSE.                                                      NACSHL 
      IF(K6.EQ.0) GO TO 10                                               NACSHL 
      IF(K6.EQ.1) GO TO 20                                               NACSHL 
10    NN=NNAC                                                            NACSHL 
      NAC=.TRUE.                                                         NACSHL 
      GO TO 30                                                           NACSHL 
20    NN=NSHELL                                                          NACSHL 
      SHELL=.TRUE.                                                       NACSHL 
30    CONTINUE                                                           NACSHL 
      IF(NN.EQ.0) GO TO 130                                              NACSHL 
      NC=NCPT                                                            NACSHL 
      NC1=NC+1                                                           NACSHL 
      NP=NWING                                                           NACSHL 
      NP1=NP+1                                                           NACSHL 
      NKOL=0                                                             NACSHL 
      IF(NSEG.EQ.0) GO TO 50                                             NACSHL 
      DO 40 N=1,NSEG                                                     NACSHL 
40    NKOL=NKOL+NCOL(N)                                                  NACSHL 
50    CONTINUE                                                           NACSHL 
C                                                                        NACSHL 
C          CALCULATE GEOMETRY FOR EACH NACELLE OR SHELL                  NACSHL 
C                                                                        NACSHL 
      IF (NAC) WRITE(TAPE6,600)                                          NACSHL 
      IF (SHELL) WRITE(TAPE6,605)                                        NACSHL 
      WRITE(TAPE6,610)                                                   NACSHL 
      DO 100 NS=1,NN                                                     NACSHL 
C                                                                        NACSHL 
C          INPUT NACELLE OR SHELL GEOMETRY                               NACSHL 
C                                                                        NACSHL 
      READ(TAPE5,530) TITLE                                              NACSHL 
      READ(TAPE5,500) IAXI,IRAD                                          NACSHL 
      IF(NAC.AND.IRAD.LT.0) THK=.TRUE.                                   NACSHL 
      NAXI=IABS(IAXI)                                                    NACSHL 
      NRAD=IABS(IRAD)                                                    NACSHL 
      READ(TAPE5,520) (XOC(J),J=1,NAXI)                                  NACSHL 
      READ(TAPE5,510) (X(K),Y(K),Z(K),C(K),K=1,NRAD)                     NACSHL 
      IF(IAXI.GE.0) GO TO 54                                             NACSHL 
      DO 52 K=2,NRAD                                                     NACSHL 
52    READ(TAPE5,520) (DZCDX(K,J),J=1,NAXI)                              NACSHL 
54    IF(IRAD.GE.0) GO TO 58                                             NACSHL 
      DO 56 K=2,NRAD                                                     NACSHL 
56    READ(TAPE5,520) (DZTDX(K,J),J=1,NAXI)                              NACSHL 
58    CONTINUE                                                           NACSHL 
C                                                                        NACSHL 
C          CALCULATE SEGMENT AND COLUMN GEOMETRY                         NACSHL 
C                                                                        NACSHL 
      DO 100 K=1,NRAD                                                    NACSHL 
      K1=K-1                                                             NACSHL 
      KOL=KOL+1                                                          NACSHL 
      L=KOL                                                              NACSHL 
      L1=L-1                                                             NACSHL 
      IF(K.EQ.1) GO TO 70                                                NACSHL 
      NKOL=NKOL+1                                                        NACSHL 
      DELX=X(K)-X(K1)                                                    NACSHL 
      DELC=C(K)-C(K1)                                                    NACSHL 
      DELY=Y(K)-Y(K1)                                                    NACSHL 
      DELZ=Z(K)-Z(K1)                                                    NACSHL 
      SPN=SQRT(DELY*DELY+DELZ*DELZ)                                      NACSHL 
      TH(NKOL)=ATAN2(DELZ,DELY)                                          NACSHL 
      BL(NKOL)=DELX/SPN                                                  NACSHL 
      BT(NKOL)=(DELX+DELC)/SPN                                           NACSHL 
      SPNW(NKOL)=SPN                                                     NACSHL 
      IF(K.EQ.2) GO TO 60                                                NACSHL 
      IF(ABS(TH(NKOL)-TH(NKOL-1)).GT.EPSWP2) GO TO 60                    NACSHL 
      IF(ABS(BL(NKOL)-BL(NKOL-1)).GT.EPSWP2) GO TO 60                    NACSHL 
      IF(ABS(BT(NKOL)-BT(NKOL-1)).GT.EPSWP2) GO TO 60                    NACSHL 
      NCOL(NSEG)=NCOL(NSEG)+1                                            NACSHL 
      GO TO 70                                                           NACSHL 
60    NSEG=NSEG+1                                                        NACSHL 
      NROW(NSEG)=NAXI-1                                                  NACSHL 
      NCOL(NSEG)=1                                                       NACSHL 
      COSS(NSEG)=COS(TH(NKOL))                                           NACSHL 
      SINS(NSEG)=SIN(TH(NKOL))                                           NACSHL 
      BTE(NSEG)=BT(NKOL)                                                 NACSHL 
      BLE(NSEG)=BL(NKOL)                                                 NACSHL 
      IF (NAC) NWT(NSEG)=2                                               NACSHL 
      IF (NAC.AND.K.EQ.2) NWT(NSEG)=-2                                   NACSHL 
      IF (SHELL) NWT(NSEG)=3                                             NACSHL 
      IF (SHELL.AND.K.EQ.2) NWT(NSEG)=-3                                 NACSHL 
70    CONTINUE                                                           NACSHL 
C                                                                        NACSHL 
C          CALCULATE PANEL CORNER POINTS                                 NACSHL 
C                                                                        NACSHL 
      DO 100 J=1,NAXI                                                    NACSHL 
      J1=J-1                                                             NACSHL 
      XC(J,L)=X(K)+C(K)*XOC(J)/100.0                                     NACSHL 
      YC(J,L)=Y(K)                                                       NACSHL 
      ZC(J,L)=Z(K)                                                       NACSHL 
C                                                                        NACSHL 
C          CALCULATE PANEL EDGE POINTS THROUGH CENTROID                  NACSHL 
C                                                                        NACSHL 
      IF(K.EQ.1) GO TO 100                                               NACSHL 
      NC=NC+1                                                            NACSHL 
      IF(J.EQ.1) GO TO 80                                                NACSHL 
      CR=XC(J,L1)-XC(J1,L1)                                              NACSHL 
      CT=XC(J,L)-XC(J1,L)                                                NACSHL 
      RI=(1.0+CT/(CR+CT))/3.0                                            NACSHL 
      RO=1.0-RI                                                          NACSHL 
      XLE=RI*XC(J1,L)+RO*XC(J1,L1)                                       NACSHL 
      XTE=RI*XC(J,L)+RO*XC(J,L1)                                         NACSHL 
      IF(J.EQ.2) XLEW(NKOL)=XLE                                          NACSHL 
      YLE=RI*Y(K)+RO*Y(K1)                                               NACSHL 
      ZLE=RI*Z(K)+RO*Z(K1)                                               NACSHL 
      IF(J.EQ.2) ZLEW(NKOL)=ZLE                                          NACSHL 
80    CONTINUE                                                           NACSHL 
      XPT(NC)=XTE                                                        NACSHL 
      IF(J.EQ.NAXI) XPT(NC)=XTE-EPSTP                                    NACSHL 
      XE(NC)=XPT(NC)                                                     NACSHL 
      YPT(NC)=YLE                                                        NACSHL 
      ZPT(NC)=ZLE                                                        NACSHL 
      IF(J.EQ.2) XPT(NC-1)=XLE                                           NACSHL 
      IF(J.EQ.2) XE(NC-1)=XPT(NC-1)                                      NACSHL 
      IF(J.EQ.2) YPT(NC-1)=YLE                                           NACSHL 
      IF(J.EQ.2) ZPT(NC-1)=ZLE                                           NACSHL 
C                                                                        NACSHL 
C          CALCULATE PANEL ANGLES                                        NACSHL 
C                                                                        NACSHL 
      SLOPE(NC)=0.0                                                      NACSHL 
      THET(NC)=TH(NKOL)                                                  NACSHL 
      DELTA(NC)=0.0                                                      NACSHL 
      IF(IAXI.LT.0) DELTA(NC)=DZCDX(K,J)                                 NACSHL 
      IF(NAC.AND.IRAD.LT.0) SLOPE(NC)=DZTDX(K,J)                         NACSHL 
      IF(J.EQ.1) GO TO 100                                               NACSHL 
C                                                                        NACSHL 
C          OUTPUT CORNER POINTS                                          NACSHL 
C                                                                        NACSHL 
      NP=NP+1                                                            NACSHL 
      IF(PRINT.GE.0) GO TO 90                                            NACSHL 
      WRITE(TAPE6,620) NP,XC(J1,L1),YC(J1,L1),ZC(J1,L1),XC(J,L1),        NACSHL 
     1 YC(J,L1),ZC(J,L1),XC(J1,L),YC(J1,L),ZC(J1,L),XC(J,L),YC(J,L),     NACSHL 
     2 ZC(J,L)                                                           NACSHL 
90    CONTINUE                                                           NACSHL 
C                                                                        NACSHL 
C          CALCULATE PANEL AREAS AND CHORDS                              NACSHL 
C                                                                        NACSHL 
      CHORD(NP)=XTE-XLE                                                  NACSHL 
      AREA(NP)=0.5*SPN*(CR+CT)                                           NACSHL 
100   CONTINUE                                                           NACSHL 
C                                                                        NACSHL 
C          REDEFINE NUMBER OF PANELS AND CONTROL POINTS                  NACSHL 
C                                                                        NACSHL 
      NCPT=NC                                                            NACSHL 
      NWING=NP                                                           NACSHL 
      IF(NCPT.GT.600) GO TO 140                                          NACSHL 
      IF(PRINT.GE.0) GO TO 130                                           NACSHL 
C                                                                        NACSHL 
C          OUTPUT PANEL EDGE POINTS ON CHORDS THROUGH CENTROIDS          NACSHL 
C                                                                        NACSHL 
      IF (NAC) WRITE(TAPE6,630)                                          NACSHL 
      IF (SHELL) WRITE(TAPE6,635)                                        NACSHL 
      WRITE(TAPE6,640)                                                   NACSHL 
      DO 110 NC=NC1,NCPT                                                 NACSHL 
      TDEG=THET(NC)*RADEG                                                NACSHL 
110   WRITE(TAPE6,650) NC,XPT(NC),YPT(NC),ZPT(NC),THET(NC),DELTA(NC),    NACSHL 
     1                 SLOPE(NC),TDEG                                    NACSHL 
C                                                                        NACSHL 
C          OUTPUT PANEL AREAS AND CHORDS                                 NACSHL 
C                                                                        NACSHL 
      IF (NAC) WRITE(TAPE6,660)                                          NACSHL 
      IF (SHELL) WRITE(TAPE6,665)                                        NACSHL 
      WRITE(TAPE6,670)                                                   NACSHL 
      DO 120 NP=NP1,NWING                                                NACSHL 
120   WRITE(TAPE6,680) NP,AREA(NP),CHORD(NP)                             NACSHL 
C                                                                        NACSHL 
C          STORE WING, TAIL, AND/OR SHELL GEOMETRY ON TAPE7              NACSHL 
C                                                                        NACSHL 
130   CONTINUE                                                           NACSHL 
      IF(SHELL.AND.NSEG.NE.0) WRITE (TAPE7) ARRAY,CHORD,SLOPE            NACSHL 
      GO TO 150                                                          NACSHL 
C                                                                        NACSHL 
140   WRITE(TAPE6,690)                                                   NACSHL 
      IF (NAC) WRITE(TAPE6,700)                                          NACSHL 
      IF (SHELL) WRITE(TAPE6,705)                                        NACSHL 
      CALL EXIT                                                          NACSHL 
150   CONTINUE                                                           NACSHL 
C                                                                        NACSHL 
C          FORMATS                                                       NACSHL 
C                                                                        NACSHL 
500   FORMAT(2I3)                                                        NACSHL 
510   FORMAT(4F7.0)                                                      NACSHL 
520   FORMAT(10F7.0)                                                     NACSHL 
530   FORMAT(13A6,A2)                                                    NACSHL 
600   FORMAT(1H1,8X,38HNACELLE PANEL CORNER POINT COORDINATES/10X,89H1 A NACSHL 
     1ND 3 INDICATE NACELLE PANEL LEADING EDGE POINTS, 2 AND 4 INDICATE  NACSHL 
     2TRAILING EDGE POINTS)                                              NACSHL 
605   FORMAT(1H1,8X,36HSHELL PANEL CORNER POINT COORDINATES/10X,87H1 AND NACSHL 
     1 3 INDICATE SHELL PANEL LEADING EDGE POINTS, 2 AND 4 INDICATE TRAI NACSHL 
     2LING EDGE POINTS)                                                  NACSHL 
610   FORMAT(1H0,5X,5HPANEL,4(8X,1HX,8X,1HY,8X,1HZ)/20X,3(1H1,8X),3(1H2, NACSHL 
     18X),3(1H3,8X),3(1H4,8X)//)                                         NACSHL 
620   FORMAT(1H ,4X,I3,4X,12F9.5)                                        NACSHL 
630   FORMAT(1H1,1X,83HNACELLE PANEL EDGE POINTS ON CHORD PASSING THROUG NACSHL 
     1H CENTROID, AND INCLINATION ANGLES)                                NACSHL 
635   FORMAT(1H1,1X,81HSHELL PANEL EDGE POINTS ON CHORD PASSING THROUGH  NACSHL 
     1CENTROID, AND INCLINATION ANGLES)                                  NACSHL 
640   FORMAT(1H0,5HPOINT,8X,1HX,10X,1HY,10X,1HZ,10X,5HTHETA,6X,6HCAMBER, NACSHL 
     15X,9HTHICKNESS,2X,5HTHETA/15X,3(2HCP,9X),3HRAD,8X,5HSLOPE,6X,5HSLO NACSHL 
     2PE,6X,3HDEG//)                                                     NACSHL 
650   FORMAT(1H ,1X,I3,4X,8F11.5)                                        NACSHL 
660   FORMAT(1H1,9X,30HNACELLE PANEL AREAS AND CHORDS)                   NACSHL 
665   FORMAT(1H1,9X,28HSHELL PANEL AREAS AND CHORDS)                     NACSHL 
670   FORMAT(1H0,5HPANEL,6X,4HAREA,8X,5HCHORD//)                         NACSHL 
680   FORMAT(1H ,1X,I3,4X,2F11.5)                                        NACSHL 
690   FORMAT(1H0,25H ERROR MESSAGE FROM SHELL/1H0)                       NACSHL 
700   FORMAT(77H ERROR - NUMBER OF WING AND TAIL AND NACELLE PANEL CONTR NACSHL 
     1OL POINTS EXCEEDS 600)                                             NACSHL 
705   FORMAT(90H ERROR - NUMBER OF WING AND TAIL AND NACELLE AND/OR SHEL NACSHL 
     1L PANEL CONTROL POINTS EXCEEDS 600)                                NACSHL 
      END                                                                NACSHL 
      OVERLAY(LWB,2,0)                                                   VELCMP 
C     OVERLAY(LWB,2,0)                                                   VELCMP 
      PROGRAM VELCMP                                                     VELCMP 
C                                                                        VELCMP 
C     *******************************************VERSION B00************ VELCMP 
C                                                                        VELCMP 
C                                                                        VELCMP 
C     COMPUTE THE VELOCITY COMPONENTS (U,V,W) AT THE PANEL CONTROL       VELCMP 
C     POINTS AND FORM THE AERODYNAMIC INFLUENCE COEFFICIENT MATRICES     VELCMP 
C                                                                        VELCMP 
C*                                                                       VELCMP 
      COMMON/ DES / CLBAR,CMBAR                                          VELCMP 
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON/ TAPES / ITAPES(20)                                         VELCMP 
      COMMON/ ROWS / NWCOL, NWRPC(20)                                    VELCMP 
      COMMON/ CYCLE / NEWAIC, IPREP, NDRAG1, NDRAG2, IDIR                VELCMP 
C*                                                                       VELCMP 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP VELCMP 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17         NEWSHLC
      COMMON /LWB/ LWB                                                   VELCMP 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           VELCMP 
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EM,PRINT,NWTHK,NWBLOK, VELCMP 
     1NWROW(20),NBBLOK,NBROW(60)                                         VELCMP 
      COMMON/NEWCOM/KDUM(9),KFUS,KRADX(4),KFORX(4),KDUMW(27),NCPT,       VELCMP 
     X              LOCPT(20),XCPT(20)                                   VELCMP 
      COMMON /SCRAT/ BLOCK(7500)                                         VELCMP 
      COMMON /POINT/ ARRAY(6000)                                         VELCMP 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BT(20),DUM(6 VELCMP 
     10),BL(20)                                                          VELCMP 
      COMMON /MATCOM/ MATIN                                              VELCMP 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, VELCMP 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        VELCMP 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART,IIDUM            NEWSHLC
C                                                                        VELCMP 
      DIMENSION XLE(600), XPT(600), DEL(600), COSTH(600), XBT(600), YBT( VELCMP 
     1600), ZBT(600), YPT(600), ZPT(600), CHORD(600), DZTDX(600), TI(600 VELCMP 
     2), D(60,60), DELTA(600), DELTI(600), A(600)                        NEWSHLC
C                                                                        VELCMP 
      EQUIVALENCE (BLOCK(1),DEL(1)), (BLOCK(601),COSTH(1)), (BLOCK(3901) VELCMP 
     1,XBT(1)), (BLOCK(4501),YBT(1)), (BLOCK(5101),ZBT(1)), (BLOCK(5701) VELCMP 
     2,TI(1)), (BLOCK(6301),CHORD(1)), (BLOCK(6901),DZTDX(1)), (ARRAY(1) VELCMP 
     3,XPT(1)), (ARRAY(601),YPT(1)), (ARRAY(1201),ZPT(1)), (ARRAY(1801), VELCMP 
     4D(1)), (ARRAY(2401),DELTA(1)), (ARRAY(4801),DELTI(1)), (ARRAY(5401 VELCMP 
     5),XLE(1)), (BLOCK(5701),A(1))                                      NEWSHLC
C                                                                        VELCMP 
      COMMON/STAR/XSTAR(3600),NSEGW                                      VELCMP 
      DIMENSION ZCSTR(600),ZTSTR(600),CPSTR(600),                        VELCMP 
     1          DCNSTR(600),DCTSTR(600),DCMSTR(600)                      VELCMP 
      EQUIVALENCE (XSTAR(1)   , ZCSTR(1)),(XSTAR(601) , ZTSTR(1)),       VELCMP 
     1            (XSTAR(1201), CPSTR(1)),(XSTAR(1801),DCNSTR(1)),       VELCMP 
     2            (XSTAR(2401),DCTSTR(1)),(XSTAR(3001),DCMSTR(1))        VELCMP 
      COMMON/DESIGN/CAMBER(600)                                          VELCMP 
C*                                                                       VELCMP 
      DIMENSION XBAR(600)                                                VELCMP 
      EQUIVALENCE ( ARRAY(1801),XBAR(1) )                                VELCMP 
C*                                                                       VELCMP 
C                                                                        VELCMP 
      REAL MACH                                                          VELCMP 
      LOGICAL LBC,SUB,SUPLE,SUPTE                                        VELCMP 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE VELCMP 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17,FFFILE         NEWSHLC
C                                                                        VELCMP 
      MATIN=0                                                            VELCMP 
C                                                                        VELCMP 
C     SET MATRIX BLOCK SIZE AT 60 BY 60                                  VELCMP 
C                                                                        VELCMP 
      NMAX=60                                                            VELCMP 
C                                                                        VELCMP 
C     READ IN MACH NUMBER AND ANGLE OF ATTACK                            VELCMP 
C                                                                        VELCMP 
C*                                                                       VELCMP 
      NEWAIC = NEWAIC + 1                                                VELCMP 
      READ(TAPE5,290) MACH,ALPHA,CLBAR,CMBAR                             VELCMP 
C*                                                                       VELCMP 
      IF (MACH.LT.0..OR.MACH.EQ.EM) GO TO 240                            VELCMP 
      NEWAIC = 1                                                         VELCMP 
      IPREP = 0                                                          VELCMP 
      NDRAG1 = 0                                                         VELCMP 
      NDRAG2 = 0                                                         VELCMP 
      IDIR = 0                                                           VELCMP 
      SUB=MACH.LT.1.0                                                    VELCMP 
      BETA=SQRT(ABS(MACH*MACH-1.0))                                      VELCMP 
      BETAD=1./BETA                                                      VELCMP 
      NBBLOK=0                                                           VELCMP 
      NWBLOK=0                                                           VELCMP 
      REWIND TAPE8                                                       VELCMP 
      REWIND TAPE9                                                       VELCMP 
      REWIND TAPE10                                                      VELCMP 
      REWIND TAPE11                                                      NEWSHLC
      N16=ITAPES(16)                                                     NEWSHLC
      REWIND N16                                                         NEWSHLC
      CALL WINGS(1)                                                      NEWSHLC
      NPANEL=NBODY+NWING                                                 NEWSHLC
      CALL WINGS(2)                                                      NEWSHLC
      NPANEL=NPANEL+NWING                                                NEWSHLC
      IF (NPANEL.EQ.0) GO TO 240                                         VELCMP 
      REWIND TAPE7                                                       VELCMP 
      NPTSWT=0                                                           NEWSHLC
      NPTSN=0                                                            NEWSHLC
      NPTSS=0                                                            NEWSHLC
      NPTSNS=0                                                           NEWSHLC
      DO 60 IP=1,2                                                       NEWSHLC
      IPART=IP                                                           NEWSHLC
      CALL WINGS(IPART)                                                  NEWSHLC
      IF(IPART.EQ.1) NCPT1=NCPT                                          NEWSHLC
      IF(IPART.EQ.2) NCPT2=NCPT                                          NEWSHLC
      IF(NWING.EQ.0) GO TO 60                                            NEWSHLC
      IF(.NOT.LBC) GO TO 10                                              NEWSHLC
      READ(TAPE7) ARRAY,CHORD,DZTDX                                      NEWSHLC
      IF(IPART.EQ.2) GO TO 10                                            NEWSHLC
C*                                                                       VELCMP 
      N11 = ITAPES(11)                                                   VELCMP 
      REWIND N11                                                         VELCMP 
C                                                                        VELCMP 
C      STORE WING GEOMETRY ON N11                                        VELCMP 
C                                                                        VELCMP 
      WRITE(N11) ARRAY                                                   VELCMP 
C                                                                        VELCMP 
C     SAVE INFO. ALREADY IN ARRAY(1801) TO ARRAY(2400) ON TAPE11         VELCMP 
      REWIND TAPE11                                                      VELCMP 
      WRITE(TAPE11) XBAR                                                 VELCMP 
10    CONTINUE                                                           NEWSHLC
      I=0                                                                VELCMP 
      J=0                                                                VELCMP 
      K=0                                                                VELCMP 
      NWBLOK=0                                                           VELCMP 
      DO 50 N=1,NSEG                                                     VELCMP 
      NC=NCOL(N)                                                         VELCMP 
      NR=NROW(N)                                                         VELCMP 
      NR1=NR+1                                                           VELCMP 
      NWBLOK=NWBLOK+NC                                                   VELCMP 
      BLE=BL(N)*BETAD                                                    VELCMP 
      SUPLE=.FALSE.                                                      VELCMP 
      IF (.NOT.SUB.AND.ABS(BLE).LT.1.0) SUPLE=.TRUE.                     VELCMP 
      BTE=BT(N)*BETAD                                                    VELCMP 
      SUPTE=.FALSE.                                                      VELCMP 
      IF (.NOT.SUB.AND.ABS(BTE).LT.1.0) SUPTE=.TRUE.                     VELCMP 
C*                                                                       VELCMP 
      IF( NOPT(1) .EQ. 2 ) SUPLE = .FALSE.                               VELCMP 
      IF( NOPT(1) .EQ. 2 ) SUPTE = .FALSE.                               VELCMP 
      IF( NOPT(1).EQ.1 .AND. NOPT(4).EQ.2 ) SUPLE = .FALSE.              VELCMP 
      IF( NOPT(1).EQ.1 .AND. NOPT(4).EQ.2 ) SUPTE = .FALSE.              VELCMP 
C*                                                                       VELCMP 
      DO 50 M=1,NC                                                       VELCMP 
      K=K+1                                                              VELCMP 
      NK=NR                                                              VELCMP 
      IF (LBC.AND.SUPTE) NK=NR1                                          VELCMP 
      IF (.NOT.LBC) NK=2*NR                                              VELCMP 
      NWROW(K)=NK                                                        VELCMP 
      DO 50 L=1,NR1                                                      VELCMP 
      I=I+1                                                              VELCMP 
      TI(I)=0.                                                           VELCMP 
      IF (L.LT.NR1) GO TO 30                                             VELCMP 
      IF (LBC) XPT(I)=XLE(I)                                             VELCMP 
      IF (SUPTE) GO TO 20                                                VELCMP 
      TI(I)=I                                                            VELCMP 
      GO TO 46                                                           NEWSHLC
20    J=J+1                                                              VELCMP 
      IF (LBC) DEL(J)=DELTA(I)                                           VELCMP 
      IF(IPART.EQ.2) GO TO 25                                            NEWSHLC
      IF(LBC) ZCSTR(J)=DELTA(I)                                          VELCMP 
      IF(LBC) ZTSTR(J)=DZTDX(I)                                          VELCMP 
      IF(LBC) CAMBER(J)=ZCSTR(J)                                         VELCMP 
25    CONTINUE                                                           NEWSHLC
      IF (LBC) COSTH(J)=COSS(N)                                          VELCMP 
      GO TO 46                                                           NEWSHLC
30    IF(.NOT.LBC) GO TO 46                                              NEWSHLC
      J=J+1                                                              VELCMP 
      XF=.50                                                             VELCMP 
C*                                                                       VELCMP 
      IF( NOPT(1) .EQ. 1 ) GO TO 35                                      VELCMP 
      XF = .95                                                           VELCMP 
      IF(IPART.EQ.2) GO TO 35                                            NEWSHLC
      XBAR(J) = ( XLE( I + 1 ) + XLE ( I ) ) / 2.                        VELCMP 
   35 CONTINUE                                                           VELCMP 
      IF( NOPT(1).EQ.1 .AND. NOPT(4).EQ. 2 ) XF = 0.95                   VELCMP 
      IF(SUB.AND.NOPT(4).EQ.2) XF=0.85                                   SUBCPS 
C*                                                                       VELCMP 
      XS=XF                                                              VELCMP 
      LOCPT(N)=0                                                         VELCMP 
      IF (.NOT.SUPTE) GO TO 40                                           VELCMP 
      LOCPT(N)=1                                                         VELCMP 
      IF (SUPLE) XS=EPSVC                                                VELCMP 
      XF=XS*FLOAT(NR1-L)/FLOAT(NR1-1)                                    VELCMP 
40    XPT(I)=XF*XLE(I+1)+(1.-XF)*XLE(I)                                  VELCMP 
      DEL(J)=XF*DELTA(I+1)+(1.-XF)*DELTA(I)                              VELCMP 
      IF(IPART.EQ.2) GO TO 44                                            NEWSHLC
      ZCSTR(J)=XF*DELTA(I+1)+(1.-XF)*DELTA(I)                            VELCMP 
      ZTSTR(J)=XF*DZTDX(I+1)+(1.-XF)*DZTDX(I)                            VELCMP 
      CAMBER(J)=ZCSTR(J)                                                 VELCMP 
44    CONTINUE                                                           NEWSHLC
      COSTH(J)=COSS(N)                                                   VELCMP 
      XCPT(N)=XS                                                         VELCMP 
46    CONTINUE                                                           NEWSHLC
      IF(IPART.EQ.1) NPTSWT=J                                            NEWSHLC
      IF(IPART.EQ.2) NPTSNS=J                                            NEWSHLC
      IF(IPART.EQ.2.AND.N.LE.NSEGN) NPTSN=J                              NEWSHLC
      IF(IPART.EQ.2.AND.N.GT.NSEGN) NPTSS=NPTSNS-NPTSN                   NEWSHLC
50    CONTINUE                                                           NEWSHLC
      WRITE(N16) TI                                                      NEWSHLC
      IF(IPART.EQ.2) GO TO 55                                            NEWSHLC
C*                                                                       VELCMP 
C                                                                        VELCMP 
C     STORE XBAR ON N11                                                  VELCMP 
C                                                                        VELCMP 
      WRITE(N11) XBAR                                                    VELCMP 
C                                                                        VELCMP 
C     RESTORE INFO. ON TAPE11 TO COMMON BLOCK / POINT /                  VELCMP 
C                                                                        VELCMP 
      REWIND TAPE11                                                      VELCMP 
      READ(TAPE11) XBAR                                                  VELCMP 
      REWIND TAPE11                                                      VELCMP 
C*                                                                       VELCMP 
55    CONTINUE                                                           NEWSHLC
      IF(LBC) NCPT=I                                                     NEWSHLC
      IF(.NOT.LBC) GO TO 60                                              NEWSHLC
      WRITE(TAPE11) DEL,COSTH                                            NEWSHLC
      WRITE(TAPE10) ARRAY,CHORD,DZTDX                                    NEWSHLC
      CALL WINGS(-IPART)                                                 NEWSHLC
      WRITE(TAPE6,250) IPART,NWING,NCPT,NSEG                             NEWSHLC
      IF(NSEG.NE.0) WRITE(TAPE6,260) NSEG,(NROW(N),N=1,NSEG)             NEWSHLC
      IF(NSEG.NE.0) WRITE(TAPE6,270) NSEG,(NCOL(N),N=1,NSEG)             NEWSHLC
60    CONTINUE                                                           NEWSHLC
      REWIND TAPE11                                                      NEWSHLC
      IF(NBODY.EQ.0) GO TO 65                                            NEWSHLC
      WRITE(TAPE6,275) NBODY                                             NEWSHLC
      READ(TAPE7) ARRAY                                                  NEWSHLC
      WRITE(TAPE10) ARRAY                                                NEWSHLC
65    REWIND TAPE7                                                       NEWSHLC
      REWIND TAPE10                                                      NEWSHLC
      IF(NPTSWT.NE.0) READ(TAPE10) ARRAY,CHORD,DZTDX                     NEWSHLC
      IF(NPTSWT.NE.0) WRITE(TAPE7) ARRAY,CHORD,DZTDX                     NEWSHLC
      IF(NPTSNS.NE.0) READ(TAPE10) ARRAY,CHORD,DZTDX                     NEWSHLC
      IF(NPTSNS.NE.0) WRITE(TAPE7) ARRAY,CHORD,DZTDX                     NEWSHLC
      IF(NBODY.NE.0) READ(TAPE10) ARRAY                                  NEWSHLC
      IF(NBODY.NE.0) WRITE(TAPE7) ARRAY                                  NEWSHLC
      EM=MACH                                                            NEWSHLC
      NPART=0                                                            NEWSHLC
      N15=ITAPES(15)                                                     NEWSHLC
      N17=ITAPES(17)                                                     NEWSHLC
      N18=ITAPES(18)                                                     NEWSHLC
      N19=ITAPES(19)                                                     NEWSHLC
      N20=ITAPES(20)                                                     NEWSHLC
      REWIND N17                                                         NEWSHLC
      REWIND N18                                                         NEWSHLC
      REWIND N19                                                         NEWSHLC
      REWIND N20                                                         NEWSHLC
      REWIND TAPE10                                                      NEWSHLC
      REWIND TAPE15                                                      NEWSHLC
      REWIND TAPE16                                                      NEWSHLC
      REWIND TAPE17                                                      NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE VELOCITY COMPONENTS FOR THE MATRIX PARTITIONS       NEWSHLC
C                                                                        NEWSHLC
C          NSEGNS EQUAL TO ZERO %  IMPLIES NO SHELL                      NEWSHLC
C                  AND THE WING AND NACELLE INFLUENCE THE BODY           NEWSHLC
C                                                                        NEWSHLC
C          NSEGNS NOT EQUAL TO ZERO %  IMPLIES A SHELL                   NEWSHLC
C                  AND ONLY WING AND NACELLE THICKNESSES                 NEWSHLC
C                  INFLUENCE THE BODY                                    NEWSHLC
C                                                                        NEWSHLC
C                                                                        NEWSHLC
      DO 110 I=1,3                                                       NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      REWIND N15                                                         NEWSHLC
      REWIND N16                                                         NEWSHLC
      IF(NCPT1.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                       NEWSHLC
      IF(NCPT1.NE.0) READ(N16) TI                                        NEWSHLC
      NPOINT=NCPT1                                                       NEWSHLC
      IF(NCPT1.NE.0.AND.I.EQ.2) GO TO 70                                 NEWSHLC
      IF(NCPT2.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                       NEWSHLC
      IF(NCPT2.NE.0) READ(N16) TI                                        NEWSHLC
      NPOINT=NCPT2                                                       NEWSHLC
      IF(NCPT2.NE.0.AND.I.EQ.3) GO TO 70                                 NEWSHLC
      IF(NBODY.NE.0) READ(TAPE7) ARRAY                                   NEWSHLC
      NPOINT=NBODY                                                       NEWSHLC
      IF(NBODY.NE.0.AND.I.EQ.1) GO TO 70                                 NEWSHLC
      GO TO 75                                                           NEWSHLC
70    WRITE(N15) (ARRAY(II),II=1,3000)                                   NEWSHLC
75    CONTINUE                                                           NEWSHLC
      DO 110 J=1,3                                                       NEWSHLC
      NPART=NPART+1                                                      NEWSHLC
      IF(NBODY.EQ.0.AND.(I.EQ.1.OR.J.EQ.1)) GO TO 110                    NEWSHLC
      IF(NCPT1.EQ.0.AND.(I.EQ.2.OR.J.EQ.2)) GO TO 110                    NEWSHLC
      IF(NCPT2.EQ.0.AND.(I.EQ.3.OR.J.EQ.3)) GO TO 110                    NEWSHLC
      CALL SECOND(TIME)                                                  NEWSHLC
      WRITE(TAPE6,310) NPART,TIME                                        NEWSHLC
      IF(NPART.EQ.1) WRITE(TAPE6,320)                                    NEWSHLC
      IF(NPART.EQ.2) WRITE(TAPE6,330)                                    NEWSHLC
      IF(NPART.EQ.3) WRITE(TAPE6,400)                                    NEWSHLC
      IF(NPART.EQ.4) WRITE(TAPE6,340)                                    NEWSHLC
      IF(NPART.EQ.5) WRITE(TAPE6,350)                                    NEWSHLC
      IF(NPART.EQ.6) WRITE(TAPE6,390)                                    NEWSHLC
      IF(NPART.EQ.7) WRITE(TAPE6,380)                                    NEWSHLC
      IF(NPART.EQ.8) WRITE(TAPE6,370)                                    NEWSHLC
      IF(NPART.EQ.9) WRITE(TAPE6,360)                                    NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      IF(NCPT1.EQ.0) GO TO 80                                            NEWSHLC
      READ(TAPE7) ARRAY,CHORD,DZTDX                                      NEWSHLC
      CALL WINGS(1)                                                      NEWSHLC
      IF(J.EQ.2) GO TO 95                                                NEWSHLC
80    IF(NCPT2.EQ.0) GO TO 85                                            NEWSHLC
      READ(TAPE7) ARRAY,CHORD,DZTDX                                      NEWSHLC
      CALL WINGS(2)                                                      NEWSHLC
      IF(J.EQ.3) GO TO 95                                                NEWSHLC
85    IF(NBODY.EQ.0) GO TO 95                                            NEWSHLC
      READ(TAPE7) ARRAY                                                  NEWSHLC
      DO 90 N=1,NBODY                                                    NEWSHLC
      XBT(N)=XPT(N)                                                      NEWSHLC
      YBT(N)=YPT(N)                                                      NEWSHLC
90    ZBT(N)=ZPT(N)                                                      NEWSHLC
95    REWIND N15                                                         NEWSHLC
      READ(N15) (ARRAY(II),II=1,2400),(DELTI(II),II=1,600)               NEWSHLC
      IF(J.EQ.2.OR.J.EQ.3) GO TO 100                                     NEWSHLC
C                                                                        NEWSHLC
C          COMPUTE VELOCITY COMPONENTS INDUCED BY BODY PANELS            NEWSHLC
C                                                                        NEWSHLC
      CALL OVERLAY(LWB,2,1)                                              NEWSHLC
      GO TO 110                                                          NEWSHLC
C                                                                        NEWSHLC
C          COMPUTE VELOCITY COMPONENTS INDUCED BY WING PANELS            NEWSHLC
C                                                                        NEWSHLC
100   IF (LBC) CALL OVERLAY(LWB,2,2)                                     NEWSHLC
      IF (.NOT.LBC) CALL OVERLAY(LWB,2,3)                                NEWSHLC
      IF(I.EQ.2.AND.J.EQ.2) CALL WINGS(-1)                               NEWSHLC
      IF(I.EQ.3.AND.J.EQ.3) CALL WINGS(-2)                               NEWSHLC
C                                                                        NEWSHLC
110   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
      CALL SECOND(TIME)                                                  NEWSHLC
      WRITE(TAPE6,410) TIME                                              NEWSHLC
C                                                                        NEWSHLC
C          FOR CASES WITH NACELLES AND SHELLS                            NEWSHLC
C          WING AND SHELL ARRAYS MUST BE FLIPPED                         NEWSHLC
C                                                                        NEWSHLC
      IF(NPTSNS.EQ.0) GO TO 530                                          NEWSHLC
      IREC1=5                                                            NEWSHLC
      DO 520 K=1,4                                                       NEWSHLC
      REWIND TAPE15                                                      NEWSHLC
      REWIND TAPE16                                                      NEWSHLC
      IREC1=IREC1-1                                                      NEWSHLC
      IREC2=0                                                            NEWSHLC
      DO 510 I=1,2                                                       NEWSHLC
      IPART=I                                                            NEWSHLC
      CALL WINGS(IPART)                                                  NEWSHLC
      NCPTS=NWING                                                        NEWSHLC
      DO 510 J=1,2                                                       NEWSHLC
      JPART=J                                                            NEWSHLC
      CALL WINGS(JPART)                                                  NEWSHLC
      NSING=NWING                                                        NEWSHLC
      IREC2=IREC2+1                                                      NEWSHLC
      IF(NSING.EQ.0.OR.NWING.EQ.0) GO TO 505                             NEWSHLC
      DO 500 N=1,NCPTS                                                   NEWSHLC
      READ(TAPE15) (A(NN),NN=1,NSING)                                    NEWSHLC
      IF(IREC1.EQ.IREC2) WRITE(TAPE9) (A(NN),NN=1,NSING)                 NEWSHLC
      READ(TAPE16) (A(NN),NN=1,NSING)                                    NEWSHLC
      IF(IREC1.EQ.IREC2) WRITE(N11) (A(NN),NN=1,NSING)                   NEWSHLC
500   CONTINUE                                                           NEWSHLC
505   IF(IREC1.EQ.IREC2) GO TO 520                                       NEWSHLC
510   CONTINUE                                                           NEWSHLC
520   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
530   CONTINUE                                                           NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      REWIND TAPE8                                                       NEWSHLC
      REWIND TAPE9                                                       NEWSHLC
      REWIND TAPE10                                                      NEWSHLC
      MATIN=1                                                            NEWSHLC
      IF(NCPT1.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                       NEWSHLC
      IF(NCPT2.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                       NEWSHLC
      IF(NBODY.NE.0) READ(TAPE7) ARRAY                                   NEWSHLC
C                                                                        NEWSHLC
C          WRITE DIAGONAL BLOCKS OF MATRICES                             NEWSHLC
C                                                                        NEWSHLC
      IIN=TAPE10                                                         NEWSHLC
      IOUT=TAPE7                                                         NEWSHLC
      IF(NPTSNS.EQ.0) GO TO 115                                          NEWSHLC
      IIN=TAPE17                                                         NEWSHLC
      IOUT=N17                                                           NEWSHLC
      REWIND IIN                                                         NEWSHLC
      REWIND IOUT                                                        NEWSHLC
115   CONTINUE                                                           NEWSHLC
      DO 200 IP=1,2                                                      NEWSHLC
      IPART=3-IP                                                         NEWSHLC
      CALL WINGS(IPART)                                                  NEWSHLC
      IF(NWING.LE.NMAX) GO TO 150                                        NEWSHLC
      IF(IPART.EQ.1.AND.NPTSNS.NE.0) REWIND TAPE10                       NEWSHLC
      DO 140 JP=1,IPART                                                  NEWSHLC
      JPART=JP                                                           NEWSHLC
      CALL WINGS(JPART)                                                  NEWSHLC
      IF(NWING.LE.NMAX) GO TO 140                                        NEWSHLC
      DO 130 NW=1,NWBLOK                                                 NEWSHLC
      NR=NWROW(NW)                                                       NEWSHLC
      DO 120 M=1,NR                                                      NEWSHLC
120   READ(TAPE10) (D(M,N),N=1,NR)                                       NEWSHLC
130   IF(JPART.EQ.IPART) WRITE(TAPE7) D                                  NEWSHLC
140   CONTINUE                                                           NEWSHLC
      GO TO 160                                                          NEWSHLC
150   NWBLOK=1                                                           NEWSHLC
      NWROW(1)=NWING                                                     NEWSHLC
160   NBBLOK=1                                                           NEWSHLC
      NBROW(1)=NBODY                                                     NEWSHLC
      IF(NBODY.LE.NMAX) GO TO 190                                        NEWSHLC
      NBBLOK=0                                                           NEWSHLC
      DO 180 KF=1,KFUS                                                   NEWSHLC
      NR=KRADX(KF)-1                                                     NEWSHLC
      NC=KFORX(KF)-1                                                     NEWSHLC
      DO 180 NN=1,NC                                                     NEWSHLC
      NBBLOK=NBBLOK+1                                                    NEWSHLC
      NBROW(NBBLOK)=NR                                                   NEWSHLC
      IF(IPART.EQ.1) GO TO 180                                           NEWSHLC
      DO 170 M=1,NR                                                      NEWSHLC
170   READ(IIN) (D(M,N),N=1,NR)                                          NEWSHLC
      WRITE(IOUT) D                                                      NEWSHLC
180   CONTINUE                                                           NEWSHLC
190   CALL WINGS(-IPART)                                                 NEWSHLC
200   CONTINUE                                                           NEWSHLC
      DO 220 IP=1,2                                                      NEWSHLC
      IPART=IP                                                           NEWSHLC
      CALL WINGS(IPART)                                                  NEWSHLC
      IF(IPART.EQ.2) GO TO 210                                           NEWSHLC
      WRITE(TAPE6,275) NBODY                                             NEWSHLC
      WRITE(TAPE6,285) NBBLOK                                            NEWSHLC
210   WRITE(TAPE6,250) IPART,NWING,NCPT,NSEG                             NEWSHLC
      IF(NSEG.NE.0) WRITE(TAPE6,260) NSEG,(NROW(N),N=1,NSEG)             NEWSHLC
      IF(NSEG.NE.0) WRITE(TAPE6,270) NSEG,(NCOL(N),N=1,NSEG)             NEWSHLC
220   WRITE(TAPE6,280) NWBLOK                                            NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      REWIND TAPE10                                                      NEWSHLC
      IF(NPTSNS.NE.0) REWIND IOUT                                        NEWSHLC
C                                                                        NEWSHLC
      CALL SECOND(TIME)                                                  NEWSHLC
      WRITE(TAPE6,300) TIME                                              NEWSHLC
C                                                                        NEWSHLC
      CALL WINGS(1)                                                      NEWSHLC
      NWCOL = 0                                                          VELCMP 
      ICT = 0                                                            VELCMP 
      DO 175 I = 1, NSEG                                                 VELCMP 
      NR = NROW(I)                                                       VELCMP 
      NC = NCOL(I)                                                       VELCMP 
      DO 173 J = 1, NC                                                   VELCMP 
      ICT = ICT + 1                                                      VELCMP 
  173 NWRPC(ICT) = NR                                                    VELCMP 
  175 NWCOL = NWCOL + NCOL(I)                                            VELCMP 
240   CONTINUE                                                           VELCMP 
C                                                                        VELCMP 
C                                                                        VELCMP 
C                                                                        VELCMP 
250   FORMAT(//,1X,6HIPART=,I6,//,                                       NEWSHLC
     1 1X,6HNWING=,I6,2X,5HNCPT=,I6,2X,5HNSEG=,I6)                       NEWSHLC
260   FORMAT(/,1X,12HNROW(N),N=1,,I4/(1X,20I6))                          NEWSHLC
270   FORMAT(/,1X,12HNCOL(N),N=1,,I4/(1X,20I6))                          NEWSHLC
275   FORMAT(//,1X,6HNBODY=,I6)                                          NEWSHLC
280   FORMAT(/,1X,7HNWBLOK=,I6)                                          NEWSHLC
285   FORMAT(/,1X,7HNBBLOK=,I6)                                          NEWSHLC
290   FORMAT (10F7.0)                                                    VELCMP 
300   FORMAT (1H0,14HVELCMP, TIME =,F10.5)                               VELCMP 
310   FORMAT (1H1,11HPARTITION =I3,2X,6HTIME =F10.5)                     VELCMP 
320   FORMAT (1H ,25HINFLUENCE OF BODY ON BODY)                          VELCMP 
330   FORMAT (1H ,25HINFLUENCE OF WING ON BODY)                          VELCMP 
340   FORMAT (1H ,25HINFLUENCE OF BODY ON WING)                          VELCMP 
350   FORMAT (1H ,25HINFLUENCE OF WING ON WING)                          VELCMP 
360   FORMAT(1H ,43HINFLUENCE OF NACELLE/SHELL ON NACELLE/SHELL)         NEWSHLC
370   FORMAT(1H ,34HINFLUENCE OF WING ON NACELLE/SHELL)                  NEWSHLC
380   FORMAT(1H ,34HINFLUENCE OF BODY ON NACELLE/SHELL)                  NEWSHLC
390   FORMAT(1H ,34HINFLUENCE OF NACELLE/SHELL ON WING)                  NEWSHLC
400   FORMAT(1H ,34HINFLUENCE OF NACELLE/SHELL ON BODY)                  NEWSHLC
410   FORMAT(1H1,31HEND OF AIC CALCULATIONS, TIME =,F10.5)               NEWSHLC
      END                                                                VELCMP 
      SUBROUTINE TRAP (XT,YT,SUM,NT)                                     TRAP 
C                                                                        TRAP 
C     *******************************************VERSION A00************ TRAP 
C                                                                        TRAP 
C                                                                        TRAP 
C     EVALUATE AN INTEGRAL BY THE TRAPEZOIDAL RULE.                      TRAP 
C                                                                        TRAP 
      DIMENSION XT(1), YT(1)                                             TRAP 
C                                                                        TRAP 
      SUM=0.                                                             TRAP 
      DO 10 I=2,NT                                                       TRAP 
10    SUM=SUM+.5*(XT(I)-XT(I-1))*(YT(I)+YT(I-1))                         TRAP 
      RETURN                                                             TRAP 
      END                                                                TRAP 
      OVERLAY(LWB,2,1)                                                   BODVEL 
C     OVERLAY(LWB,2,1)                                                   BODVEL 
      PROGRAM BODVEL                                                     BODVEL 
C                                                                        BODVEL 
C     *******************************************VERSION B00************ BODVEL 
C                                                                        BODVEL 
C                                                                        BODVEL 
C     COMPUTE THE THREE COMPONENTS OF VELOCITY INDUCED AT SPECIFIED      BODVEL 
C     CONTROL POINTS BY THE BODY PANELS                                  BODVEL 
C                                                                        BODVEL 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP BODVEL 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAP16,TAPE17          NEWSHLC
      COMMON /PARAM/ NBODY,NWING,NPANEL,LBC,THK,MACH,ALPHA,REFA          BODVEL 
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EX,PRINT,NWTHK         BODVEL 
      COMMON/NEWCOM/KDUM(9),KFUS,KRADX(4),KFORX(4),KDUMN(25),MAX         BODVEL 
      COMMON /POINT/ ARRAY(6000)                                         BODVEL 
      COMMON /SCRAT/ BLOCK(7500)                                         BODVEL 
      COMMON /BODCOM/ EM,DA,CX,XCOR(4),YCOR(4),ZCOR(4),XI,YI,ZI,XJ,ZJ    BODVEL 
     X,BTA                                                               BODVEL 
      COMMON /BTHET/ THETA(600)                                          BODVEL 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NEWSHLC
C                                                                        BODVEL 
      DIMENSION UB(600), VB(600), WB(600), VI(600), WI(600), AN(600), DN BODVEL 
     1(60), XBT(600), YBT(600), ZBT(600), TI(600), CD(600), XPT(600), YP BODVEL 
     2T(600), ZPT(600), THET(600), DELTA(600), XC(30,20), YC(30,20), ZC( BODVEL 
     330,20), DELTI(600)                                                 BODVEL 
C                                                                        BODVEL 
      EQUIVALENCE (BLOCK(1),UB(1)), (BLOCK(601),VB(1)), (BLOCK(1201),WB( BODVEL 
     11)), (BLOCK(1801),VI(1)), (BLOCK(2401),WI(1)), (BLOCK(3001),AN(1)) BODVEL 
     2, (BLOCK(3601),DN(1)), (BLOCK(3901),XBT(1)), (BLOCK(4501),YBT(1)), BODVEL 
     3 (BLOCK(5101),ZBT(1)), (BLOCK(5701),TI(1)), (BLOCK(6301),CD(1)), ( BODVEL 
     4ARRAY(1),XPT(1)), (ARRAY(601),YPT(1)), (ARRAY(1201),ZPT(1)), (ARRA BODVEL 
     5Y(1801),THET(1)), (ARRAY(2401),DELTA(1)), (ARRAY(3001),XC(1)), (AR BODVEL 
     6RAY(3601),YC(1)), (ARRAY(4201),ZC(1)), (ARRAY(4801),DELTI(1))      BODVEL 
C*                                                                       BODVEL 
      COMMON/ TAPES / ITAPES(20)                                         BODVEL 
C*                                                                       BODVEL 
C                                                                        BODVEL 
      LOGICAL LBC                                                        BODVEL 
     X,SUB,SUP                                                           BODVEL 
      REAL MACH                                                          BODVEL 
      INTEGER PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE BODVEL 
     19,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17          NEWSHLC
C                                                                        BODVEL 
C*                                                                       BODVEL 
      N11 = ITAPES(11)                                                   BODVEL 
      N17 = ITAPES(17)                                                   NEWSHLC
      N18 = ITAPES(18)                                                   NEWSHLC
      N20 = ITAPES(20)                                                   NEWSHLC
C*                                                                       BODVEL 
      EM=MACH                                                            BODVEL 
      BTA = SQRT(ABS(EM*EM - 1.0))                                       BODVEL 
      SUB = .FALSE.                                                      BODVEL 
      IF(MACH.LT.1.0) SUB = .TRUE.                                       BODVEL 
      SUP = .NOT.SUB                                                     BODVEL 
      JMAX=MAX                                                           BODVEL 
      II=0                                                               BODVEL 
C                                                                        BODVEL 
C     I IS THE INDEX OF THE CONTROL POINT                                BODVEL 
C     J IS THE INDEX OF THE INFLUENCING PANEL                            BODVEL 
C                                                                        BODVEL 
      DO 110 I=1,NPOINT                                                  BODVEL 
      ISKIP=TI(I)                                                        BODVEL 
      IF(LBC.AND.I.EQ.ISKIP.AND.NPART.NE.1) GO TO 110                    NEWSHLC
      II=II+1                                                            BODVEL 
      SINTI=SIN(THET(I))                                                 BODVEL 
      COSTI=COS(THET(I))                                                 BODVEL 
      XPTI=XPT(I)                                                        BODVEL 
      YPTI=YPT(I)                                                        BODVEL 
      ZPTI=ZPT(I)                                                        BODVEL 
      IF(NPART.NE.1) GO TO 10                                            NEWSHLC
      SIND=SIN(DELTA(I))                                                 BODVEL 
      COSD=COS(DELTA(I))                                                 BODVEL 
      GO TO 20                                                           BODVEL 
10    IF (LBC) DELT=0.                                                   BODVEL 
      IF (.NOT.LBC) DELT=DELTI(I)                                        BODVEL 
      SIND=SIN(DELT)                                                     BODVEL 
      COSD=COS(DELT)                                                     BODVEL 
20    CONTINUE                                                           BODVEL 
      DO 30 J=1,NBODY                                                    BODVEL 
      UB(J)=0.                                                           BODVEL 
      VI(J)=0.                                                           BODVEL 
30    WI(J)=0.                                                           BODVEL 
      J=0                                                                BODVEL 
      J2=0                                                               BODVEL 
      L=0                                                                BODVEL 
      DO 70 KF=1,KFUS                                                    BODVEL 
      NROW=KRADX(KF)-1                                                   BODVEL 
      NCOL=KFORX(KF)-1                                                   BODVEL 
      DO 60 NC=1,NCOL                                                    BODVEL 
      L=L+1                                                              BODVEL 
      J1=1+J2                                                            BODVEL 
      J2=J1+NROW-1                                                       BODVEL 
      DO 50 N=1,NROW                                                     BODVEL 
      J=J+1                                                              BODVEL 
      DA=TAN(DELTA(J))                                                   BODVEL 
      COST=COS(THETA(J))                                                 BODVEL 
      SINT=SIN(THETA(J))                                                 BODVEL 
      XW=SINT*COSTI                                                      BODVEL 
      XX=COST*SINTI                                                      BODVEL 
      XY=COST*COSTI                                                      BODVEL 
      XZ=SINT*SINTI                                                      BODVEL 
      SINTR=XW-XX                                                        BODVEL 
      SINTL=XW+XX                                                        BODVEL 
      COSTR=XY+XZ                                                        BODVEL 
      COSTL=XY-XZ                                                        BODVEL 
      N1=N+1                                                             BODVEL 
      XC1=XC(L,N1)                                                       BODVEL 
      YC1=YC(L,N1)                                                       BODVEL 
      ZC1=ZC(L,N1)                                                       BODVEL 
C                                                                        BODVEL 
C     CALCULATION OF PANEL CORNER POINTS IN PANEL COORDINATE SYSTEM      BODVEL 
C                                                                        BODVEL 
      XCOR(1)=0.                                                         BODVEL 
      YCOR(1)=0.                                                         BODVEL 
      ZCOR(1)=0.                                                         BODVEL 
      XCOR(2)=XC(L+1,N+1)-XC1                                            BODVEL 
      XCOR(3)=0.                                                         BODVEL 
      XCOR(4)=XCOR(2)                                                    BODVEL 
      DO 40 K=2,4                                                        BODVEL 
      L1=L+1                                                             BODVEL 
      N1=N+1                                                             BODVEL 
      IF (K.GE.3) N1=N                                                   BODVEL 
      IF (K.EQ.3) L1=L                                                   BODVEL 
      DELY=YC(L1,N1)-YC1                                                 BODVEL 
      DELZ=ZC(L1,N1)-ZC1                                                 BODVEL 
      YCOR(K)=DELY*COST+DELZ*SINT                                        BODVEL 
40    ZCOR(K)=DELZ*COST-DELY*SINT                                        BODVEL 
      CX=XCOR(2)                                                         BODVEL 
C                                                                        BODVEL 
C     CALCULATION OF CONTROL POINT IN PANEL COORDINATE SYSTEM            BODVEL 
C                                                                        BODVEL 
      XI=XPTI-XC1                                                        BODVEL 
      DY=YPTI-YC1                                                        BODVEL 
      DZ=ZPTI-ZC1                                                        BODVEL 
      YI=DY*COST+DZ*SINT                                                 BODVEL 
      ZI=DZ*COST-DY*SINT                                                 BODVEL 
      XJ=XBT(J)-XC1                                                      BODVEL 
      DYJ=YBT(J)-YC1                                                     BODVEL 
      DZJ=ZBT(J)-ZC1                                                     BODVEL 
      ZJ=DZJ*COST-DYJ*SINT                                               BODVEL 
C                                                                        BODVEL 
C     CALCULATE VELOCITY COMPONENTS INDUCED BY CONSTANT SOURCE           BODVEL 
C     DISTRIBUTION PANELS                                                BODVEL 
C                                                                        BODVEL 
      IF(NPART.EQ.7.AND.II.GT.NPTSN) GO TO 42                            NEWSHLC
      IF(SUB) CALL SUBPAN(UR,VR,WR)                                      BODVEL 
      IF(SUP) CALL SUPPAN(UR,VR,WR)                                      BODVEL 
      DY=-YPTI-YC1                                                       BODVEL 
      YI=DY*COST+DZ*SINT                                                 BODVEL 
      ZI=DZ*COST-DY*SINT                                                 BODVEL 
      IF(SUB) CALL SUBPAN(UL,VL,WL)                                      BODVEL 
      IF(SUP) CALL SUPPAN(UL,VL,WL)                                      BODVEL 
      GO TO 44                                                           NEWSHLC
42    UR=0.0                                                             NEWSHLC
      VR=0.0                                                             NEWSHLC
      WR=0.0                                                             NEWSHLC
      UL=0.0                                                             NEWSHLC
      VL=0.0                                                             NEWSHLC
      WL=0.0                                                             NEWSHLC
44    CONTINUE                                                           NEWSHLC
C                                                                        BODVEL 
C     CALCULATE VELOCITY COMPONENTS IN ORIGINAL COORDINATE SYSTEM        BODVEL 
C                                                                        BODVEL 
      UB(J)=UL+UR+UB(J)                                                  BODVEL 
      VI(J)=VR*COSTR-WR*SINTR-VL*COSTL+WL*SINTL+VI(J)                    BODVEL 
      WI(J)=VR*SINTR+VL*SINTL+WR*COSTR+WL*COSTL+WI(J)                    BODVEL 
      VB(J)=VI(J)*COSTI-WI(J)*SINTI                                      BODVEL 
      WB(J)=WI(J)*COSTI+VI(J)*SINTI                                      BODVEL 
      AN(J)=WI(J)*COSD-UB(J)*SIND                                        BODVEL 
      IF(NPART.NE.1) GO TO 50                                            NEWSHLC
      IF (NBODY.LE.NMAX) GO TO 50                                        BODVEL 
      IF (II.LT.J1.OR.II.GT.J2) GO TO 50                                 BODVEL 
      JS1=J1                                                             BODVEL 
      JS2=J2                                                             BODVEL 
      NS=NROW                                                            BODVEL 
50    CONTINUE                                                           BODVEL 
60    CONTINUE                                                           BODVEL 
      L=L+1                                                              BODVEL 
70    CONTINUE                                                           BODVEL 
      JMAX=L                                                             BODVEL 
C*                                                                       BODVEL 
      IF(NPTSNS.EQ.0) WRITE(N11) (AN(J),J=1,NBODY)                       NEWSHLC
      IF(NPTSNS.NE.0) WRITE(N20) (AN(J),J=1,NBODY)                       NEWSHLC
C*                                                                       BODVEL 
      IF(NBODY.LE.NMAX.OR.NPART.NE.1) GO TO 90                           NEWSHLC
C                                                                        BODVEL 
C     STORE DIAGONAL BLOCKS OF AERODYNAMIC MATRIX IN DN ARRAY            BODVEL 
C                                                                        BODVEL 
      DO 80 J=1,NBODY                                                    BODVEL 
      IF (J.LT.JS1.OR.J.GT.JS2) GO TO 80                                 BODVEL 
      K=J-JS1+1                                                          BODVEL 
      DN(K)=AN(J)                                                        BODVEL 
      AN(J)=0.                                                           BODVEL 
80    CONTINUE                                                           BODVEL 
      IF(NPTSNS.EQ.0) WRITE(TAPE10) (DN(J),J=1,NS)                       NEWSHLC
      IF(NPTSNS.NE.0) WRITE(TAPE17) (DN(J),J=1,NS)                       NEWSHLC
90    CONTINUE                                                           BODVEL 
      IF (IABS(PRINT).LT.4) GO TO 100                                    BODVEL 
      WRITE (TAPE6,180) II                                               BODVEL 
      WRITE (TAPE6,140) NBODY                                            BODVEL 
      WRITE (TAPE6,170) (UB(J),J=1,NBODY)                                BODVEL 
      WRITE (TAPE6,120) NBODY                                            BODVEL 
      WRITE (TAPE6,170) (VB(J),J=1,NBODY)                                BODVEL 
      WRITE (TAPE6,130) NBODY                                            BODVEL 
      WRITE (TAPE6,170) (WB(J),J=1,NBODY)                                BODVEL 
      WRITE (TAPE6,150) NBODY                                            BODVEL 
      WRITE (TAPE6,170) (AN(J),J=1,NBODY)                                BODVEL 
      IF(NBODY.GT.NMAX.AND.NPART.EQ.1) WRITE(TAPE6,160) NS               NEWSHLC
      IF(NBODY.GT.NMAX.AND.NPART.EQ.1) WRITE(TAPE6,170) (DN(J),J=1,NS)   NEWSHLC
100   WRITE (TAPE8) (UB(J),VB(J),WB(J),J=1,NBODY)                        BODVEL 
      IF(NPTSNS.EQ.0) WRITE(TAPE9) (AN(J),J=1,NBODY)                     NEWSHLC
      IF(NPTSNS.NE.0) WRITE(N18) (AN(J),J=1,NBODY)                       NEWSHLC
110   CONTINUE                                                           BODVEL 
C                                                                        BODVEL 
C                                                                        BODVEL 
C                                                                        BODVEL 
120   FORMAT (2X,10HVB(J),J=1,,I3)                                       BODVEL 
130   FORMAT (2X,10HWB(J),J=1,,I3)                                       BODVEL 
140   FORMAT (2X,10HUB(J),J=1,,I3)                                       BODVEL 
150   FORMAT (2X,10HAN(J),J=1,,I3)                                       BODVEL 
160   FORMAT (2X,10HDN(J),J=1,,I3)                                       BODVEL 
170   FORMAT (1X,10F10.5)                                                BODVEL 
180   FORMAT (1H0,22HAERODYNAMIC MATRIX, I=I3)                           BODVEL 
      END                                                                BODVEL 
      SUBROUTINE SUBPAN(UPM,VPM,WPM)                                     SUBPAN 
C                                                                        SUBPAN 
C     ********************************************VERSION B00*********** SUBPAN 
C                                                                        SUBPAN 
C                                                                        SUBPAN 
C     COMPUTE THE THREE COMPONENTS OF VELOCITY INDUCED AT A SPECIFIED    SUBPAN 
C     CONTROL POINT BY A CONSTANT SOURCE DISTRIBUTION ON A               SUBPAN 
C     QUADRILATERAL PANEL HAVING LONGITUDINAL TAPER AND INCLINED AT AN   SUBPAN 
C     ANGLE DELTA TO THE FREE STREAM DIRECTION                           SUBPAN 
C                                                                        SUBPAN 
C                                                                        SUBPAN 
C     SUBSONIC SOURCE INFLUENCE FUNCTIONS                                SUBPAN 
C                                                                        SUBPAN 
C                                                                        SUBPAN 
      COMMON/BODCOM/EM,SA,CX,XC(4),YC(4),ZC(4),XJ,YJ,ZJ,XI,ZI,BETA       SUBPAN 
      COMMON /PI/ PI,RADEG,DEGRAD                                        SUBPAN 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, SUBPAN 
     X             EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM,EPSSB1,   SUBPAN 
     X             EPSSB2                                                SUBPAN 
C                                                                        SUBPAN 
      DIMENSION ZK(2)                                                    SUBPAN 
C                                                                        SUBPAN 
      REAL INF                                                           SUBPAN 
C                                                                        SUBPAN 
      EQUIVALENCE (EPSSB2,INF)                                           SUBPAN 
C                                                                        SUBPAN 
      R4PI=1./(4.*PI)                                                    SUBPAN 
      IS=0                                                               SUBPAN 
      IF(ABS(SA).GE.INF) IS=1                                            SUBPAN 
      IF(IS.NE.0) SA=0.                                                  SUBPAN 
      A=BETA*SA                                                          SUBPAN 
      BT2=BETA*BETA                                                      SUBPAN 
      BA2 = BT2*SA*SA                                                    SUBPAN 
      TA= 1.0 + BA2                                                      SUBPAN 
      RTA=1./TA                                                          SUBPAN 
      DO 5 I=1,2                                                         SUBPAN 
    5 ZK(I)=ZI-SA*(XI-XC(I))                                             SUBPAN 
      CL=CX                                                              SUBPAN 
      IF(IS.NE.0) CL=BETA*ZC(2)                                          SUBPAN 
      BI=BETA*(YC(2)-YC(1))/CL                                           SUBPAN 
      BO=BETA*(YC(4)-YC(3))/CL                                           SUBPAN 
      SABI=SQRT(TA+BI*BI)                                                SUBPAN 
      SABO=SQRT(TA+BO*BO)                                                SUBPAN 
      XL=XJ-XC(1)                                                        SUBPAN 
      XT=XJ-XC(2)                                                        SUBPAN 
      IF(IS.EQ.0) GO TO 8                                                SUBPAN 
      XL=BETA*(ZJ-ZC(1))                                                 SUBPAN 
      XT=BETA*(ZJ-ZC(2))                                                 SUBPAN 
    8 CONTINUE                                                           SUBPAN 
      IF(ABS(XL).LE.EPS                                                  SUBPAN 
     *SB1)XL=0.                                                          SUBPAN 
      IF(ABS(XT).LE.EPS                                                  SUBPAN 
     *SB1)XT=0.                                                          SUBPAN 
      YIL=(YJ-YC(1))*BETA                                                SUBPAN 
      YIT=(YJ-YC(2))*BETA                                                SUBPAN 
      YOL=(YJ-YC(3))*BETA                                                SUBPAN 
      YOT=(YJ-YC(4))*BETA                                                SUBPAN 
      ZL=(ZJ-ZK(1))*BETA                                                 SUBPAN 
      ZT=(ZJ-ZK(2))*BETA                                                 SUBPAN 
      IF(IS.EQ.0) GO TO 9                                                SUBPAN 
      ZL=XI-XJ                                                           SUBPAN 
      ZT=ZL                                                              SUBPAN 
    9 CONTINUE                                                           SUBPAN 
      ZAX=ZL-A*XL                                                        SUBPAN 
      IF(ABS(ZAX).LE..001) ZAX=0.                                        SUBPAN 
      ZAX2=ZAX*ZAX                                                       SUBPAN 
      RL2=XL*XL+ZL*ZL                                                    SUBPAN 
      RT2=XT*XT+ZT*ZT                                                    SUBPAN 
      DIL=SQRT(YIL*YIL+RL2)                                              SUBPAN 
      DIT=SQRT(YIT*YIT+RT2)                                              SUBPAN 
      DOL=SQRT(YOL*YOL+RL2)                                              SUBPAN 
      DOT=SQRT(YOT*YOT+RT2)                                              SUBPAN 
      YDIL=YIL+DIL                                                       SUBPAN 
      YDOL=YOL+DOL                                                       SUBPAN 
      YDOT=YOT+DOT                                                       SUBPAN 
      YDIT=YIT+DIT                                                       SUBPAN 
      YBXI=YIL-BI*XL                                                     SUBPAN 
      YBXO=YOL-BO*XL                                                     SUBPAN 
      IF(ABS(YBXI).LE.EPS                                                SUBPAN 
     *SB1)YBXI=0.                                                        SUBPAN 
      IF(ABS(YBXO).LE.EPS                                                SUBPAN 
     *SB1)YBXO=0.                                                        SUBPAN 
      XAZL=XL+A*ZL                                                       SUBPAN 
      XAZT=XT+A*ZT                                                       SUBPAN 
      XIL=XAZL+BI*YIL                                                    SUBPAN 
      XOL=XAZL+BO*YOL                                                    SUBPAN 
      XIT=XAZT+BI*YIT                                                    SUBPAN 
      XOT=XAZT+BO*YOT                                                    SUBPAN 
      IF(ZAX.EQ.0.) GO TO 10                                             SUBPAN 
      AYZI=A*YIL-BI*ZL                                                   SUBPAN 
      AYZO=A*YOL-BO*ZL                                                   SUBPAN 
      EIL=-XL*YBXI-ZL*AYZI                                               SUBPAN 
      EOL=-XL*YBXO-ZL*AYZO                                               SUBPAN 
      EIT=-XT*YBXI-ZT*AYZI                                               SUBPAN 
      EOT=-XT*YBXO-ZT*AYZO                                               SUBPAN 
      FI=ATAN2(ZAX*(DIL*EIT-DIT*EIL),EIL*EIT+ZAX2*(DIL*DIT))             SUBPAN 
      FO=ATAN2(ZAX*(DOL*EOT-DOT*EOL),EOL*EOT+ZAX2*(DOL*DOT))             SUBPAN 
      F=FI-FO                                                            SUBPAN 
      GO TO 20                                                           SUBPAN 
   10 F=0.                                                               SUBPAN 
      IF(YBXI*YBXO.LE.0..AND.XL*XT.LE.0.) F=2.*PI                        SUBPAN 
      IF(YBXI.EQ.0.) GO TO 30                                            SUBPAN 
   20 GI=ALOG((XIL+SABI*DIL)/(XIT+SABI*DIT))/SABI                        SUBPAN 
      GO TO 40                                                           SUBPAN 
   30 IF(XIL.GT.0..AND.XIT.GT.0.) GO TO 20                               SUBPAN 
      IF(XIL.GE.0..AND.XIT.LE.0.) GI=INF                                 SUBPAN 
      IF(XIL.LT.0..AND.XIT.LE.0.) GI=ALOG(XIT/XIL)/SABI                  SUBPAN 
   40 IF(ZAX.EQ.0..AND.YBXO.EQ.0.) GO TO 50                              SUBPAN 
   45 GO=ALOG((XOL+SABO*DOL)/(XOT+SABO*DOT))/SABO                        SUBPAN 
      GO TO 60                                                           SUBPAN 
   50 IF(XOL.GT.0..AND.XOT.GT.0.) GO TO 45                               SUBPAN 
      IF(XOL.GE.0..AND.XOT.LE.0.) GO=INF                                 SUBPAN 
      IF(XOL.LT.0..AND.XOT.LE.0.) GO=ALOG(XOT/XOL)/SABO                  SUBPAN 
   60 IF(RL2.GT.EPS                                                      SUBPAN 
     *SB1)GO TO 70                                                       SUBPAN 
      IF(YIL.GT.0..AND.YOL.GT.0.) GO TO 70                               SUBPAN 
      IF(YIL.GE.0..AND.YOL.LE.0.) HL=INF                                 SUBPAN 
      IF(YIL.LT.0..AND.YOL.LT.0.) HL=ALOG(YOL/YIL)                       SUBPAN 
      GO TO 80                                                           SUBPAN 
   70 HL=ALOG(YDIL/YDOL)                                                 SUBPAN 
   80 IF(RT2.GT.EPS                                                      SUBPAN 
     *SB1)GO TO 90                                                       SUBPAN 
      IF(YIT.GT.0..AND.YOT.GT.0.) GO TO 90                               SUBPAN 
      IF(YIT.GE.0..AND.YOT.LE.0.) HT=INF                                 SUBPAN 
      IF(YIT.LT.0..AND.YOT.LT.0.) HT=ALOG(YOT/YIT)                       SUBPAN 
      GO TO 100                                                          SUBPAN 
   90 HT=ALOG(YDIT/YDOT)                                                 SUBPAN 
  100 G=BI*GI-BO*GO-HL+HT                                                SUBPAN 
      VPM=(GO-GI)*R4PI                                                   SUBPAN 
      IF(IS.EQ.0) GO TO 110                                              SUBPAN 
      UPM=-F*R4PI/BETA                                                   SUBPAN 
      WPM= G*R4PI                                                        SUBPAN 
      RETURN                                                             SUBPAN 
  110 CONTINUE                                                           SUBPAN 
      UPM=(G-A*F)*R4PI*RTA/BETA                                          SUBPAN 
      WPM=(F+A*G)*R4PI*RTA                                               SUBPAN 
      RETURN                                                             SUBPAN 
      END                                                                SUBPAN 
      SUBROUTINE SUPPAN(UPM,VPM,WPM)                                     SUPPAN 
C                                                                        SUPPAN 
C     *******************************************VERSION A01************ SUPPAN 
C                                                                        SUPPAN 
C                                                                        SUPPAN 
C     COMPUTE THE THREE COMPONENTS OF VELOCITY INDUCED AT A SPECIFIED    SUPPAN 
C     CONTROL POINT BY A CONSTANT SOURCE DISTRIBUTION ON A               SUPPAN 
C     QUADRILATERAL PANEL HAVING LONGITUDINAL TAPER AND INCLINED AT AN   SUPPAN 
C     ANGLE DELTA TO THE FREE STREAM DIRECTION                           SUPPAN 
C                                                                        SUPPAN 
C     SUPERSONIC SOURCE PANEL INFLUENCE FUNCTIONS                        SUPPAN 
C                                                                        SUPPAN 
C                                                                        SUPPAN 
      COMMON/FILES/TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,      SUPPAN 
     X             TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15       SUPPAN 
      COMMON /BODCOM/ EM,SA,CX,XC(4),YC(4),ZC(4),XI,YI,ZI,XJ,ZJ          SUPPAN 
     X,BTA                                                               SUPPAN 
      COMMON/PI/ PI,RADEG,DEGRAD                                         SUPPAN 
      COMMON/EPS/EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV,   SUPPAN 
     X           EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM             SUPPAN 
C                                                                        SUPPAN 
      DIMENSION B(4), SX(4), SM(4), DX(4), DY(4), DZ(4), D(4), E(4), F(4 SUPPAN 
     1), G(4), H(4), XPM(4), YMX(4), ZAX(4), AYM(4), RPM2(4)             SUPPAN 
C                                                                        SUPPAN 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,     SUPPAN 
     X        TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                  SUPPAN 
      REAL NUM                                                           SUPPAN 
C                                                                        SUPPAN 
      EPS=1.0E-5                                                         SUPPAN 
      EP2=EPS*EPS                                                        SUPPAN 
      PI=3.14159265                                                      SUPPAN 
      BT2=1.-EM*EM                                                       SUPPAN 
      BTA=SQRT(ABS(BT2))                                                 SUPPAN 
      BA2=BT2*SA*SA                                                      SUPPAN 
      TA=1.0+BA2                                                         SUPPAN 
      IF (TA.LT.0.) GO TO 200                                            SUPPAN 
      SM(3)=0.0                                                          SUPPAN 
      DO 190 I=1,4                                                       SUPPAN 
      ZC(I)=ZJ-SA*(XJ-XC(I))                                             SUPPAN 
      IF (I.LE.2) SM(1)=(YC(2)-YC(1))/CX                                 SUPPAN 
      IF (I.GT.2) SM(3)=(YC(4)-YC(3))/CX                                 SUPPAN 
      SM(2)=SM(1)                                                        SUPPAN 
      SM(4)=SM(3)                                                        SUPPAN 
      SSM=SIGN(1.,SM(I))                                                 SUPPAN 
      BM2=BT2*SM(I)*SM(I)                                                SUPPAN 
      TAM=TA+BM2                                                         SUPPAN 
      IF (ABS(TAM).LE.EPS) TAM=0.                                        SUPPAN 
      SAM=SQRT(ABS(TAM))                                                 SUPPAN 
      SAMD=1./SAM                                                        SUPPAN 
      CPM=CX*SAM                                                         SUPPAN 
      DX(I)=XI-XC(I)                                                     SUPPAN 
      DY(I)=YI-YC(I)                                                     SUPPAN 
      DZ(I)=ZI-ZC(I)                                                     SUPPAN 
      IF (ABS(DX(I)).LE.EPS) DX(I)=0.                                    SUPPAN 
      IF (ABS(DY(I)).LE.EPS) DY(I)=0.                                    SUPPAN 
      IF (ABS(DZ(I)).LE.EPS) DZ(I)=0.                                    SUPPAN 
      RPM2(I)=0.                                                         SUPPAN 
      DX2=DX(I)*DX(I)                                                    SUPPAN 
      DY2=DY(I)*DY(I)                                                    SUPPAN 
      DZ2=DZ(I)*DZ(I)                                                    SUPPAN 
      DR2=DY2+DZ2                                                        SUPPAN 
      D2=DX2+BT2*DR2                                                     SUPPAN 
      D(I)=0.0                                                           SUPPAN 
      IF (EM.GE.1.) DXZ=DX(I)-BTA*ABS(DZ(I))                             SUPPAN 
      IF (EM.GE.1..AND.DXZ.LT.0.) GO TO 170                              SUPPAN 
      IF (D2.GT.0.0) D(I)=SQRT(D2)                                       SUPPAN 
      XPM(I)=DX(I)+BT2*(SM(I)*DY(I)+SA*DZ(I))                            SUPPAN 
      YMX(I)=DY(I)-SM(I)*DX(I)                                           SUPPAN 
      ZAX(I)=DZ(I)-SA*DX(I)                                              SUPPAN 
      AYM(I)=SA*DY(I)-SM(I)*DZ(I)                                        SUPPAN 
      IF (ABS(XPM(I)).LE.EPS) XPM(I)=0.                                  SUPPAN 
      IF (ABS(YMX(I)).LE.EPS) YMX(I)=0.                                  SUPPAN 
      IF (ABS(ZAX(I)).LE.EPS) ZAX(I)=0.                                  SUPPAN 
      IF (ABS(AYM(I)).LE.EPS) AYM(I)=0.                                  SUPPAN 
      IF (I.LE.2) RPM2(1)=YMX(1)*YMX(1)+ZAX(1)*ZAX(1)+BT2*(AYM(1)*AYM(1) SUPPAN 
     1)                                                                  SUPPAN 
      RPM2(2)=RPM2(1)                                                    SUPPAN 
      IF (I.GT.2) RPM2(3)=YMX(3)*YMX(3)+ZAX(3)*ZAX(3)+BT2*(AYM(3)*AYM(3) SUPPAN 
     1)                                                                  SUPPAN 
      RPM2(4)=RPM2(3)                                                    SUPPAN 
      IF (ABS(RPM2(I)).LE.EP2) RPM2(I)=0.                                SUPPAN 
      RPM=SQRT(ABS(RPM2(I)))                                             SUPPAN 
      IF (RPM.LE.EPS) RPM=0.                                             SUPPAN 
      DPM=SAM*D(I)                                                       SUPPAN 
      F(I)=0.                                                            SUPPAN 
      DNOM=-DX(I)*YMX(I)-BT2*DZ(I)*AYM(I)                                SUPPAN 
      FNUM=D(I)*ZAX(I)                                                   SUPPAN 
      IF (FNUM.EQ.0..AND.DNOM.EQ.0.) GO TO 10                            SUPPAN 
      F(I)=ATAN2(FNUM,DNOM)                                              SUPPAN 
      IF (D(I).EQ.0.) F(I)=F(I)*SIGN(1.,ZAX(I))                          SUPPAN 
10    IF (TAM) 100,90,20                                                 SUPPAN 
20    IF (EM.GT.1..AND.D(I).EQ.0.) GO TO 70                              SUPPAN 
      IF (RPM-EPS) 40,40,30                                              SUPPAN 
30    NUM=XPM(I)+DPM                                                     SUPPAN 
      G(I)=ALOG(NUM/(BTA*RPM))*SAMD                                      SUPPAN 
      GO TO 150                                                          SUPPAN 
40    SX(I)=SIGN(1.,XPM(I))                                              SUPPAN 
      IF (EM.LT.1.0) GO TO 50                                            SUPPAN 
      IF (I.EQ.1.AND.XPM(1).LT.CPM) GO TO 130                            SUPPAN 
      IF (I.EQ.3.AND.XPM(3).LT.CPM) GO TO 140                            SUPPAN 
50    IF (I.EQ.2) SGN12=SX(1)*SX(2)                                      SUPPAN 
      IF (I.EQ.4) SGN34=SX(3)*SX(4)                                      SUPPAN 
      IF (XPM(I)) 60,70,80                                               SUPPAN 
60    IF (I.EQ.2.AND.SGN12.LT.0.) GO TO 130                              SUPPAN 
      IF (I.EQ.4.AND.SGN34.LT.0.) GO TO 140                              SUPPAN 
      G(I)=-ALOG(ABS(XPM(I)))*SAMD                                       SUPPAN 
      GO TO 150                                                          SUPPAN 
70    G(I)=0.                                                            SUPPAN 
      GO TO 150                                                          SUPPAN 
80    G(I)=ALOG(XPM(I))*SAMD                                             SUPPAN 
      GO TO 150                                                          SUPPAN 
90    G(I)=0.                                                            SUPPAN 
      IF (XPM(I).GT.BTA*RPM) G(I)=D(I)/XPM(I)                            SUPPAN 
      GO TO 150                                                          SUPPAN 
100   G(I)=0.0                                                           SUPPAN 
      ARG=SIGN(1.,XPM(I))                                                SUPPAN 
      IF (RPM.NE.0.) ARG=XPM(I)/(BTA*RPM)                                SUPPAN 
      IF (ARG.GE.1.) GO TO 150                                           SUPPAN 
      IF (ARG.LE.-1.) GO TO 110                                          SUPPAN 
      IF (D(I).GT.0) G(I)=ACOS(ARG)*SAMD                                 SUPPAN 
      GO TO 150                                                          SUPPAN 
110   AM2=SA*SA+SM(I)*SM(I)                                              SUPPAN 
      TRM1=(SM(I)*DY(I)+SA*DZ(I)+ABS(AYM(I))*SAM)/AM2                    SUPPAN 
      IF (DX(I).GT.TRM1) GO TO 120                                       SUPPAN 
      F(I)=0.                                                            SUPPAN 
      IF (SSM.GT.0.) F(I)=PI*SIGN(1.,ZAX(I))                             SUPPAN 
      GO TO 150                                                          SUPPAN 
120   IF (SSM*YMX(I).GE.0.) GO TO 150                                    SUPPAN 
      G(I)=PI*SAMD                                                       SUPPAN 
      GO TO 150                                                          SUPPAN 
130   G(1)=500.*SAMD                                                     SUPPAN 
      IF (EM.LT.1.0) G(2)=-G(1)                                          SUPPAN 
      GO TO 160                                                          SUPPAN 
140   G(3)=500.*SAMD                                                     SUPPAN 
      IF (EM.LT.1.0) G(4)=-G(3)                                          SUPPAN 
150   CONTINUE                                                           SUPPAN 
160   H(I)=0.                                                            SUPPAN 
      HARG=-BTA*DY(I)                                                    SUPPAN 
      IF (D(I).EQ.0.0.AND.HARG.EQ.0.0) GO TO 180                         SUPPAN 
      IF (EM.LT.1.0) H(I)=BTA*.5*ALOG((D(I)+HARG)/(D(I)-HARG))           SUPPAN 
      IF (EM.GT.1.) H(I)=BTA*ATAN2(D(I),HARG)                            SUPPAN 
      GO TO 180                                                          SUPPAN 
170   F(I)=0.                                                            SUPPAN 
      G(I)=0.                                                            SUPPAN 
      H(I)=0.                                                            SUPPAN 
      AYM(I)=0.                                                          SUPPAN 
      YMX(I)=0.                                                          SUPPAN 
      ZAX(I)=0.                                                          SUPPAN 
      XPM(I)=0.                                                          SUPPAN 
      DPM=0.                                                             SUPPAN 
      RPM=0.                                                             SUPPAN 
      RPM2(2)=RPM2(1)                                                    SUPPAN 
      RPM2(4)=RPM2(3)                                                    SUPPAN 
180   E(I)=H(I)+BT2*SM(I)*G(I)                                           SUPPAN 
190   CONTINUE                                                           SUPPAN 
      TAD=1./TA                                                          SUPPAN 
      E14=(E(1)-E(2)-E(3)+E(4))*TAD                                      SUPPAN 
      F14=(F(1)-F(2)-F(3)+F(4))*TAD                                      SUPPAN 
      G14=G(1)-G(2)-G(3)+G(4)                                            SUPPAN 
      R4PI=1.0/(4.*PI)                                                   SUPPAN 
      IF (EM.GT.1.) R4PI=2.*R4PI                                         SUPPAN 
      UPM=R4PI*(E14/BT2-SA*F14)                                          SUPPAN 
      VPM=-R4PI*G14                                                      SUPPAN 
      WPM=R4PI*(F14+SA*E14)                                              SUPPAN 
      RETURN                                                             SUPPAN 
200   WRITE (6,210)                                                      SUPPAN 
      CALL EXIT                                                          SUPPAN 
C                                                                        SUPPAN 
C                                                                        SUPPAN 
C                                                                        SUPPAN 
210   FORMAT (1H0,43HERROR - BODY PANEL SLOPE EXCEEDS MACH ANGLE)        SUPPAN 
      END                                                                SUPPAN 
      OVERLAY(LWB,2,2)                                                   LINVEL 
C     OVERLAY(LWB,2,2)                                                   LINVEL 
      PROGRAM LINVEL                                                     LINVEL 
C                                                                        LINVEL 
C     *******************************************VERSION B00************ LINVEL 
C                                                                        LINVEL 
C     COMPUTE THE THREE COMPONENTS OF VELOCITY INDUCED AT SPECIFIED      LINVEL 
C     CONTROL POINTS BY SOURCE AND VORTEX DISTRIBUTIONS ON PANELS        LINVEL 
C     LOCATED IN THE PLANE OF THE WING, FIN (VERTICAL TAIL), OR CANARD   LINVEL 
C     (HORIZONTAL TAIL) SURFACE                                          LINVEL 
C                                                                        LINVEL 
C                                                                        LINVEL 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP LINVEL 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17         NEWSHLC
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THIK,MACH,ALPHA,REFA          LINVEL 
      COMMON /COMPS/ DX,DY,DZ,AL,BL,CL,SUB,BPOS,BCOS,BSIN,ML             LINVEL 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),TT(20),NWT(2 LINVEL 
     10)                                                                 LINVEL 
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EM,PRINT,NWTHK         LINVEL 
      COMMON /POINT/ ARRAY(6000)                                         LINVEL 
      COMMON /SCRAT/ BLOCK(7500)                                         LINVEL 
      COMMON /PI/ PI,RADEG,DEGRAD                                        LINVEL 
C*                                                                       LINVEL 
      COMMON/ TAPES / ITAPES(20)                                         LINVEL 
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
C*                                                                       LINVEL 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, LINVEL 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        LINVEL 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART,II               NEWSHLC
C                                                                        LINVEL 
      DIMENSION XPT(600), YPT(600), ZPT(600), THET(600), DELTA(600), XC( LINVEL 
     130,20), YC(30,20), ZC(30,20), BLE(30), UTOR(30), VTOR(30), WTOR(30 LINVEL 
     2), UTOL(30), VTOL(30), WTOL(30), UTIR(30), VTIR(30), WTIR(30), UTI LINVEL 
     3L(30), VTIL(30), WTIL(30), ASAVE(30), USAVE(30), VSAVE(30), WSAVE( LINVEL 
     430), UCOR(30), VCOR(30), WCOR(30), ULOR(30), VLOR(30), WLOR(30), U LINVEL 
     5COL(30), VCOL(30), WCOL(30), ULOL(30), VLOL(30), WLOL(30), UCIR(30 LINVEL 
     6), VCIR(30), WCIR(30), ULIR(30), VLIR(30), WLIR(30), UCIL(30), VCI LINVEL 
     7L(30), WCIL(30), ULIL(30), VLIL(30), WLIL(30), RCOR(30), SCOR(30), LINVEL 
     8 TCOR(30), RLOR(30), SLOR(30), TLOR(30), RCOL(30), SCOL(30), TCOL( LINVEL 
     930), RLOL(30), SLOL(30), TLOL(30), RCIR(30), SCIR(30), TCIR(30), R LINVEL 
     $LIR(30), SLIR(30), TLIR(30), RCIL(30), SCIL(30), TCIL(30), RLIL(30 LINVEL 
     $), SLIL(30), TLIL(30), AC(600), UC(600), VC(600), WC(600), UT(600) LINVEL 
     $, VT(600), WT(600), DC(60), TI(600), CHORD(600), DZTDX(600)        LINVEL 
C                                                                        LINVEL 
      EQUIVALENCE (ARRAY(1),XPT(1)), (ARRAY(601),YPT(1)), (ARRAY(1201),Z LINVEL 
     1PT(1)), (ARRAY(1801),THET(1)), (ARRAY(3001),XC(1)), (ARRAY(2401),U LINVEL 
     2TOR(1)), (ARRAY(2431),VTOR(1)), (ARRAY(2461),WTOR(1)), (ARRAY(2491 LINVEL 
     3),UTOL(1)), (ARRAY(2521),VTOL(1)), (ARRAY(2551),WTOL(1)), (ARRAY(2 LINVEL 
     4581),UTIR(1)), (ARRAY(2611),VTIR(1)), (ARRAY(2641),WTIR(1)), (ARRA LINVEL 
     5Y(2671),UTIL(1)), (ARRAY(2701),VTIL(1)), (ARRAY(2731),WTIL(1)), (A LINVEL 
     6RRAY(3601),YC(1)), (ARRAY(4201),ZC(1)), (ARRAY(4801),DELTA(1)), (A LINVEL 
     7RRAY(2761),USAVE(1)), (ARRAY(2791),VSAVE(1)), (ARRAY(2821),WSAVE(1 LINVEL 
     8)), (ARRAY(2851),ASAVE(1)), (BLOCK(1),UCOR(1)), (BLOCK(31),VCOR(1) LINVEL 
     9), (BLOCK(61),WCOR(1)), (BLOCK(91),ULOR(1)), (BLOCK(121),VLOR(1)), LINVEL 
     $ (BLOCK(151),WLOR(1)), (BLOCK(181),UCOL(1)), (BLOCK(211),VCOL(1)), LINVEL 
     $ (BLOCK(241),WCOL(1)), (BLOCK(271),ULOL(1)), (BLOCK(301),VLOL(1)), LINVEL 
     $ (BLOCK(331),WLOL(1)), (BLOCK(361),UCIR(1)), (BLOCK(391),VCIR(1)), LINVEL 
     $ (BLOCK(421),WCIR(1)), (BLOCK(451),ULIR(1)), (BLOCK(481),VLIR(1)), LINVEL 
     $ (BLOCK(511),WLIR(1)), (BLOCK(541),UCIL(1)), (BLOCK(571),VCIL(1)), LINVEL 
     $ (BLOCK(601),WCIL(1)), (BLOCK(631),ULIL(1)), (BLOCK(661),VLIL(1)), LINVEL 
     $ (BLOCK(691),WLIL(1)), (BLOCK(721),RCOR(1)), (BLOCK(751),SCOR(1)), LINVEL 
     $ (BLOCK(781),TCOR(1)), (BLOCK(811),RLOR(1)), (BLOCK(841),SLOR(1)), LINVEL 
     $ (BLOCK(871),TLOR(1))                                              LINVEL 
      EQUIVALENCE (BLOCK(901),RCOL(1)), (BLOCK(931),SCOL(1)), (BLOCK(961 LINVEL 
     1),TCOL(1)), (BLOCK(991),RLOL(1)), (BLOCK(1021),SLOL(1)), (BLOCK(10 LINVEL 
     251),TLOL(1)), (BLOCK(1081),RCIR(1)), (BLOCK(1111),SCIR(1)), (BLOCK LINVEL 
     3(1141),TCIR(1)), (BLOCK(1171),RLIR(1)), (BLOCK(1201),SLIR(1)), (BL LINVEL 
     4OCK(1231),TLIR(1)), (BLOCK(1261),RCIL(1)), (BLOCK(1291),SCIL(1)),  LINVEL 
     5(BLOCK(1321),TCIL(1)), (BLOCK(1351),RLIL(1)), (BLOCK(1381),SLIL(1) LINVEL 
     6), (BLOCK(1411),TLIL(1)), (BLOCK(1441),AC(1)), (BLOCK(2041),UC(1)) LINVEL 
     7, (BLOCK(2641),VC(1)), (BLOCK(3241),WC(1)), (BLOCK(3841),UT(1)), ( LINVEL 
     8BLOCK(4441),VT(1)), (BLOCK(5041),WT(1)), (BLOCK(5641),DC(1)), (BLO LINVEL 
     9CK(5701),TI(1)), (BLOCK(6301),CHORD(1)), (BLOCK(6901),DZTDX(1))    LINVEL 
C                                                                        NEWSHLC
      DIMENSION UCF(30),VCF(30),WCF(30),UTF(30),VTF(30),WTF(30)          NEWSHLC
      EQUIVALENCE (ARRAY(5401),UCF(1)), (ARRAY(5431),VCF(1)),            NEWSHLC
     1 (ARRAY(5461),WCF(1)), (ARRAY(5491),UTF(1)),                       NEWSHLC
     2 (ARRAY(5521),VTF(1)), (ARRAY(5551),WTF(1))                        NEWSHLC
C                                                                        LINVEL 
      LOGICAL THK,THIK,LBC,SUB,BPOS,SUPTE,FLAG,FIN,MIDFIN                LINVEL 
      INTEGER PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE LINVEL 
     19,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17          NEWSHLC
      REAL MACH                                                          LINVEL 
C*                                                                       LINVEL 
      N11 = ITAPES(11)                                                   LINVEL 
C*                                                                       LINVEL 
C                                                                        LINVEL 
      SUB=MACH.LT.1.0                                                    LINVEL 
      THK=THIK                                                           LINVEL 
      FLAG=.FALSE.                                                       LINVEL 
      NYC=1                                                              LINVEL 
      IF (ABS(YC(1,1)).LE.EPSLV) NYC=0                                   LINVEL 
      BETA=SQRT(ABS(MACH*MACH-1.0))                                      LINVEL 
      CON=1./(2.*PI)                                                     LINVEL 
      IF (SUB) CON=CON/2.                                                LINVEL 
      CONT=2.*CON/BETA                                                   LINVEL 
      BCON=BETA*CON                                                      LINVEL 
      BCONT=BETA*CONT                                                    LINVEL 
C                                                                        LINVEL 
C     I IS THE CONTROL POINT INDEX                                       LINVEL 
C     J IS THE INFLUENCING PANEL INDEX                                   LINVEL 
C     L IS THE PANEL ROW INDEX                                           LINVEL 
C     M IS THE PANEL COLUMN INDEX                                        LINVEL 
C     N IS THE WING SEGMENT INDEX                                        LINVEL 
C                                                                        LINVEL 
      II=0                                                               LINVEL 
      DO 400 I=1,NPOINT                                                  LINVEL 
      ISKIP=TI(I)                                                        LINVEL 
      IF(NPART.GT.3.AND.I.EQ.ISKIP) GO TO 400                            NEWSHLC
      II=II+1                                                            LINVEL 
      SINTI=SIN(THET(I))                                                 LINVEL 
      COSTI=COS(THET(I))                                                 LINVEL 
      XI=XPT(I)                                                          LINVEL 
      YI=YPT(I)                                                          LINVEL 
      ZI=ZPT(I)                                                          LINVEL 
      IF(NPART.LE.3) GO TO 10                                            NEWSHLC
      SIND=0.                                                            LINVEL 
      COSD=1.                                                            LINVEL 
      GO TO 20                                                           LINVEL 
10    SIND=SIN(DELTA(I))                                                 LINVEL 
      COSD=COS(DELTA(I))                                                 LINVEL 
20    CONTINUE                                                           LINVEL 
      J=0                                                                LINVEL 
      K=0                                                                LINVEL 
      J2=0                                                               LINVEL 
      J2T=0                                                              NEWSHLC
      M2=1                                                               LINVEL 
      NP=0                                                               LINVEL 
      DO 340 N=1,NSEG                                                    LINVEL 
      NR=NROW(N)                                                         LINVEL 
      NC=NCOL(N)                                                         LINVEL 
      NT=NWT(N)                                                          LINVEL 
      NR1=NR+1                                                           LINVEL 
      NC1=NC+1                                                           LINVEL 
      DO 30 L=1,NR1                                                      LINVEL 
      USAVE(L)=0.                                                        LINVEL 
      VSAVE(L)=0.                                                        LINVEL 
      WSAVE(L)=0.                                                        LINVEL 
30    ASAVE(L)=0.                                                        LINVEL 
      M1=M2                                                              LINVEL 
      IF (N.GT.1.AND.NT.NE.0) M1=M2+1                                    LINVEL 
      IF(NT.GE.2) M1=M2                                                  NEWSHLC
C                                                                        LINVEL 
C     IF FLAG IS TRUE, AN ADDITIONAL COLUMN OF VORTEX PANELS             LINVEL 
C     EXTENDS FROM THE CENTER LINE TO THE INBOARD EDGE OF THE            LINVEL 
C     WING, HORIZONTAL TAIL, OR CANARD                                   LINVEL 
C                                                                        LINVEL 
C     THIS EXTENSION DEPENDS ON THE VALUE OF NOPT(7) %                   LINVEL 
C                                                                        LINVEL 
C     ( B. ROSEN 081881)                                                 LINVEL 
C                                                                        LINVEL 
C                                                                        LINVEL 
C       - VORTEX PANELS EXTEND HORIZONTALLY                              LINVEL 
C         FROM WING-BODY JUNCTION                                        LINVEL 
C         TO Y=0                                                         LINVEL 
C         (ZERO DIHEDRAL)                                                LINVEL 
C                                                                        LINVEL 
C           VORTEX PANELS UNSWEPT                 NOPT(7)=0              LINVEL 
C           VORTEX PANELS SWEPT AT MACH ANGLE     NOPT(7)=1              LINVEL 
C                                                                        LINVEL 
C       - VORTEX PANELS EXTEND                                           LINVEL 
C         FROM WING-BODY JUNCTION                                        LINVEL 
C         TO Y=Z=0                                                       LINVEL 
C         (DIHEDRAL CALCULATED IN LINVEL)                                LINVEL 
C                                                                        LINVEL 
C           VORTEX PANELS UNSWEPT                 NOPT(7)=2              LINVEL 
C           VORTEX PANELS SWEPT AT MACH ANGLE     NOPT(7)=3              LINVEL 
C                                                                        LINVEL 
C       - VORTEX PANELS EXTEND                                           LINVEL 
C         FROM WING-BODY JUNCTION                                        LINVEL 
C         TO Y=0                                                         LINVEL 
C         WITH SAME DIHEDRAL AS INBOARD WING (CANARD) SEGMENT            LINVEL 
C                                                                        LINVEL 
C           VORTEX PANELS UNSWEPT                 NOPT(7)=4              LINVEL 
C           VORTEX PANELS SWEPT AT MACH ANGLE     NOPT(7)=5              LINVEL 
C                                                                        LINVEL 
C                                                                        LINVEL 
      IF (N.EQ.1.AND.NYC.NE.0) FLAG=.TRUE.                               LINVEL 
      MYC=1                                                              LINVEL 
      IF (ABS(YC(1,M1)).LE.EPSLV) MYC=0                                  LINVEL 
      IF (N.GT.1.AND.NT.EQ.1.AND.MYC.NE.0) FLAG=.TRUE.                   LINVEL 
      IF(NPTSNS.NE.0) FLAG=.FALSE.                                       NEWSHLC
      IF (FLAG) THK=.FALSE.                                              LINVEL 
40    M2=M1+NC                                                           LINVEL 
      IF (FLAG) M2=M1                                                    LINVEL 
      COST=COSS(N)                                                       LINVEL 
      SINT=SINS(N)                                                       LINVEL 
      IF(FLAG) DELTAY=YC(1,M1)                                           LINVEL 
      IF(FLAG) DELTAZ=0.0                                                LINVEL 
      IF(FLAG.AND.NOPT(7).GE.2) DELTAZ=ZC(1,M1)                          LINVEL 
      IF(FLAG.AND.NOPT(7).GE.4) DELTAZ=DELTAY*SINT/COST                  LINVEL 
      IF(FLAG) REFF=SQRT(DELTAY**2+DELTAZ**2)                            LINVEL 
      IF(FLAG) COST=DELTAY/REFF                                          LINVEL 
      IF(FLAG) SINT=DELTAZ/REFF                                          LINVEL 
      FIN=.FALSE.                                                        LINVEL 
      MIDFIN=.FALSE.                                                     LINVEL 
      IF (NT.NE.0.AND.COST.LE.0.70710678) FIN=.TRUE.                     LINVEL 
      IF(NPART.EQ.3.OR.NPART.EQ.6.OR.NPART.EQ.9) FIN=.FALSE.             NEWSHLC
      IF (.NOT.FIN) GO TO 50                                             LINVEL 
      IF (NYC.EQ.0.AND.ABS(COST).LE.EPSLV) MIDFIN=.TRUE.                 LINVEL 
50    CONTINUE                                                           LINVEL 
C                                                                        LINVEL 
C     CALCULATE PANEL LEADING EDGE SLOPES                                LINVEL 
C                                                                        LINVEL 
      DO 70 L=1,NR1                                                      LINVEL 
      IF (FLAG) GO TO 60                                                 LINVEL 
      DY=YC(L,M2)-YC(L,M1)                                               LINVEL 
      DZ=ZC(L,M2)-ZC(L,M1)                                               LINVEL 
      DYZ=DY*COST+DZ*SINT                                                LINVEL 
      BLE(L)=(XC(L,M2)-XC(L,M1))/(BETA*DYZ)                              LINVEL 
      GO TO 70                                                           LINVEL 
60    BLE(L)=0.                                                          LINVEL 
      IF(.NOT.SUB.AND.2*(NOPT(7)/2).EQ.NOPT(7)) BLE(L)=0.0               LINVEL 
      IF(.NOT.SUB.AND.2*((NOPT(7)+1)/2).EQ.(NOPT(7)+1)) BLE(L)=-1.0      LINVEL 
70    CONTINUE                                                           LINVEL 
      BTE=BLE(NR1)                                                       LINVEL 
      SUPTE=.FALSE.                                                      LINVEL 
      IF (.NOT.SUB.AND.ABS(BTE).LT.1.0) SUPTE=.TRUE.                     LINVEL 
C*                                                                       LINVEL 
      IF( NOPT(1) .EQ. 1 .AND. NOPT(4) .LE. 1 ) GO TO 75                 LINVEL 
      SUPTE = .FALSE.                                                    LINVEL 
   75 CONTINUE                                                           LINVEL 
C*                                                                       LINVEL 
      BCOS=BETA*COST                                                     LINVEL 
      BSIN=BETA*SINT                                                     LINVEL 
      XW=SINT*COSTI                                                      LINVEL 
      XX=COST*SINTI                                                      LINVEL 
      XY=COST*COSTI                                                      LINVEL 
      XZ=SINT*SINTI                                                      LINVEL 
      SINTR=XW-XX                                                        LINVEL 
      SINTL=XW+XX                                                        LINVEL 
      COSTR=XY+XZ                                                        LINVEL 
      COSTL=XY-XZ                                                        LINVEL 
C                                                                        LINVEL 
C     CALCULATE INFLUENCE OF INBOARD CORNERS OF FIRST COLUMN OF PANELS   LINVEL 
C                                                                        LINVEL 
      DO 120 L=1,NR1                                                     LINVEL 
      DX=XI-XC(L,M1)                                                     LINVEL 
      DY=YI-YC(L,M1)                                                     LINVEL 
      DZ=ZI-ZC(L,M1)                                                     LINVEL 
      IF(FLAG) DX=XI-(XC(L,M1)-BLE(L)*BETA*REFF)                         LINVEL 
      IF(FLAG) DY=YI                                                     LINVEL 
      IF(FLAG) DZ=ZI-(ZC(L,M1)-REFF*SINT)                                LINVEL 
      AT=AL                                                              LINVEL 
      BL=BLE(L)                                                          LINVEL 
      CT=CL                                                              LINVEL 
      ML=1                                                               LINVEL 
      IF (L.EQ.NR1) GO TO 80                                             LINVEL 
      BL1=BLE(L+1)                                                       LINVEL 
      AB=BL-BL1                                                          LINVEL 
      CC=XC(L+1,M1)-XC(L,M1)                                             LINVEL 
80    CONTINUE                                                           LINVEL 
      BPOS=BL.GE.0.                                                      LINVEL 
      AL=AB                                                              LINVEL 
      CL=CC                                                              LINVEL 
      CALL VORVEL (UCOR(L),VCOR(L),WCOR(L),ULOR(L),VLOR(L),WLOR(L),UTOR( LINVEL 
     1L),VTOR(L),WTOR(L))                                                LINVEL 
      IF (L.EQ.1) GO TO 90                                               LINVEL 
      ABA=ABS(AL-AT)                                                     LINVEL 
      ACL=ABS(CL-CT)                                                     LINVEL 
      IF (ABA.LE.EPSLV.AND.ACL.LE.EPSLV) GO TO 90                        LINVEL 
      AL=AT                                                              LINVEL 
      CL=CT                                                              LINVEL 
      ML=2                                                               LINVEL 
      CALL VORVEL (X,X,X,X,X,X,UTOR(L),VTOR(L),WTOR(L))                  LINVEL 
      AL=AB                                                              LINVEL 
      CL=CC                                                              LINVEL 
      ML=1                                                               LINVEL 
90    IF (.NOT.THK) GO TO 100                                            LINVEL 
      CALL SORVEL (RCOR(L),SCOR(L),TCOR(L),RLOR(L),SLOR(L),TLOR(L))      LINVEL 
100   DY=-YI-YC(L,M1)                                                    LINVEL 
      IF (FLAG) DY=-YI                                                   LINVEL 
      CALL VORVEL (UCOL(L),VCOL(L),WCOL(L),ULOL(L),VLOL(L),WLOL(L),UTOL( LINVEL 
     1L),VTOL(L),WTOL(L))                                                LINVEL 
      IF (L.EQ.1) GO TO 110                                              LINVEL 
      IF (ABA.LE.EPSLV.AND.ACL.LE.EPSLV) GO TO 110                       LINVEL 
      AL=AT                                                              LINVEL 
      CL=CT                                                              LINVEL 
      ML=2                                                               LINVEL 
      CALL VORVEL (X,X,X,X,X,X,UTOL(L),VTOL(L),WTOL(L))                  LINVEL 
      AL=AB                                                              LINVEL 
      CL=CC                                                              LINVEL 
      ML=1                                                               LINVEL 
110   IF (.NOT.THK) GO TO 120                                            LINVEL 
      CALL SORVEL (RCOL(L),SCOL(L),TCOL(L),RLOL(L),SLOL(L),TLOL(L))      LINVEL 
120   CONTINUE                                                           LINVEL 
C                                                                        LINVEL 
C     CALCULATE INFLUENCE OF CORNERS OF REMAINING COLUMNS OF PANELS      LINVEL 
C                                                                        LINVEL 
      IF (.NOT.FLAG) M1=M1+1                                             LINVEL 
      DO 330 M=M1,M2                                                     LINVEL 
      NS=NR                                                              LINVEL 
      IF (SUPTE) NS=NR1                                                  LINVEL 
      IF (FLAG) GO TO 130                                                LINVEL 
      J1=1+J2                                                            LINVEL 
      J2=J1+NS-1                                                         LINVEL 
      NST=NR1                                                            NEWSHLC
      J1T=1+J2T                                                          NEWSHLC
      J2T=J1T+NST-1                                                      NEWSHLC
130   DO 190 L=1,NR1                                                     LINVEL 
      UCIR(L)=UCOR(L)                                                    LINVEL 
      VCIR(L)=VCOR(L)                                                    LINVEL 
      WCIR(L)=WCOR(L)                                                    LINVEL 
      UCIL(L)=UCOL(L)                                                    LINVEL 
      VCIL(L)=VCOL(L)                                                    LINVEL 
      WCIL(L)=WCOL(L)                                                    LINVEL 
      ULIR(L)=ULOR(L)                                                    LINVEL 
      VLIR(L)=VLOR(L)                                                    LINVEL 
      WLIR(L)=WLOR(L)                                                    LINVEL 
      ULIL(L)=ULOL(L)                                                    LINVEL 
      VLIL(L)=VLOL(L)                                                    LINVEL 
      WLIL(L)=WLOL(L)                                                    LINVEL 
      UTIR(L)=UTOR(L)                                                    LINVEL 
      VTIR(L)=VTOR(L)                                                    LINVEL 
      WTIR(L)=WTOR(L)                                                    LINVEL 
      UTIL(L)=UTOL(L)                                                    LINVEL 
      VTIL(L)=VTOL(L)                                                    LINVEL 
      WTIL(L)=WTOL(L)                                                    LINVEL 
      IF (.NOT.THK) GO TO 140                                            LINVEL 
      RCIR(L)=RCOR(L)                                                    LINVEL 
      SCIR(L)=SCOR(L)                                                    LINVEL 
      TCIR(L)=TCOR(L)                                                    LINVEL 
      RCIL(L)=RCOL(L)                                                    LINVEL 
      SCIL(L)=SCOL(L)                                                    LINVEL 
      TCIL(L)=TCOL(L)                                                    LINVEL 
      RLIR(L)=RLOR(L)                                                    LINVEL 
      SLIR(L)=SLOR(L)                                                    LINVEL 
      TLIR(L)=TLOR(L)                                                    LINVEL 
      RLIL(L)=RLOL(L)                                                    LINVEL 
      SLIL(L)=SLOL(L)                                                    LINVEL 
      TLIL(L)=TLOL(L)                                                    LINVEL 
140   DX=XI-XC(L,M)                                                      LINVEL 
      DY=YI-YC(L,M)                                                      LINVEL 
      DZ=ZI-ZC(L,M)                                                      LINVEL 
      AT=AL                                                              LINVEL 
      BL=BLE(L)                                                          LINVEL 
      CT=CL                                                              LINVEL 
      IF (L.EQ.NR1) GO TO 150                                            LINVEL 
      BL1=BLE(L+1)                                                       LINVEL 
      AB=BL-BL1                                                          LINVEL 
      CC=XC(L+1,M)-XC(L,M)                                               LINVEL 
150   CONTINUE                                                           LINVEL 
      BPOS=BL.GE.0.                                                      LINVEL 
      AL=AB                                                              LINVEL 
      CL=CC                                                              LINVEL 
      CALL VORVEL (UCOR(L),VCOR(L),WCOR(L),ULOR(L),VLOR(L),WLOR(L),UTOR( LINVEL 
     1L),VTOR(L),WTOR(L))                                                LINVEL 
      IF (L.EQ.1) GO TO 160                                              LINVEL 
      ABA=ABS(AL-AT)                                                     LINVEL 
      ACL=ABS(CL-CT)                                                     LINVEL 
      IF (ABA.LE.EPSLV.AND.ACL.LE.EPSLV) GO TO 160                       LINVEL 
      AL=AT                                                              LINVEL 
      CL=CT                                                              LINVEL 
      ML=1                                                               LINVEL 
      CALL VORVEL (X,X,X,X,X,X,UTOR(L),VTOR(L),WTOR(L))                  LINVEL 
      AL=AB                                                              LINVEL 
      CL=CC                                                              LINVEL 
      ML=1                                                               LINVEL 
160   IF (.NOT.THK) GO TO 170                                            LINVEL 
      CALL SORVEL (RCOR(L),SCOR(L),TCOR(L),RLOR(L),SLOR(L),TLOR(L))      LINVEL 
170   DY=-YI-YC(L,M)                                                     LINVEL 
      CALL VORVEL (UCOL(L),VCOL(L),WCOL(L),ULOL(L),VLOL(L),WLOL(L),UTOL( LINVEL 
     1L),VTOL(L),WTOL(L))                                                LINVEL 
      IF (L.EQ.1) GO TO 180                                              LINVEL 
      IF (ABA.LE.EPSLV.AND.ACL.LE.EPSLV) GO TO 180                       LINVEL 
      AL=AT                                                              LINVEL 
      CL=CT                                                              LINVEL 
      ML=2                                                               LINVEL 
      CALL VORVEL (X,X,X,X,X,X,UTOL(L),VTOL(L),WTOL(L))                  LINVEL 
      AL=AB                                                              LINVEL 
      CL=CC                                                              LINVEL 
      ML=1                                                               LINVEL 
180   IF (.NOT.THK) GO TO 190                                            LINVEL 
      CALL SORVEL (RCOL(L),SCOL(L),TCOL(L),RLOL(L),SLOL(L),TLOL(L))      LINVEL 
190   CONTINUE                                                           LINVEL 
C                                                                        LINVEL 
C     COMBINE CORNER INFLUENCES TO OBTAIN PANEL VELOCITY COMPONENTS      LINVEL 
C                                                                        LINVEL 
      DO 320 L=1,NR1                                                     LINVEL 
      IF (.NOT.FLAG.OR.L.GT.1) GO TO 200                                 LINVEL 
      JSAVE=J                                                            LINVEL 
      KSAVE=K                                                            LINVEL 
      NPSAVE=NP                                                          LINVEL 
200   K=K+1                                                              LINVEL 
      IF (SUPTE.OR.L.LT.NR1) GO TO 210                                   LINVEL 
      IF (.NOT.THK) GO TO 320                                            LINVEL 
      GO TO 250                                                          LINVEL 
210   CONTINUE                                                           LINVEL 
      J=J+1                                                              LINVEL 
      IF (L.EQ.NR1) GO TO 240                                            LINVEL 
      NP=NP+1                                                            LINVEL 
      AMP=1.0/CHORD(NP)                                                  LINVEL 
C                                                                        LINVEL 
C     VELOCITY COMPONENTS INDUCED BY PANEL VORTEX DISTRIBUTIONS          LINVEL 
C                                                                        LINVEL 
      ULR=ULIR(L)-UTIR(L+1)-ULOR(L)+UTOR(L+1)                            LINVEL 
      ULL=ULIL(L)-UTIL(L+1)-ULOL(L)+UTOL(L+1)                            LINVEL 
      VLR=VLIR(L)-VTIR(L+1)-VLOR(L)+VTOR(L+1)                            LINVEL 
      VLL=VLIL(L)-VTIL(L+1)-VLOL(L)+VTOL(L+1)                            LINVEL 
      WLR=WLIR(L)-WTIR(L+1)-WLOR(L)+WTOR(L+1)                            LINVEL 
      WLL=WLIL(L)-WTIL(L+1)-WLOL(L)+WTOL(L+1)                            LINVEL 
      UCR=UCIR(L)-UCOR(L)-UCIR(L+1)+UCOR(L+1)-ULR                        LINVEL 
      UCL=UCIL(L)-UCOL(L)-UCIL(L+1)+UCOL(L+1)-ULL                        LINVEL 
      VCR=VCIR(L)-VCOR(L)-VCIR(L+1)+VCOR(L+1)-VLR                        LINVEL 
      VCL=VCIL(L)-VCOL(L)-VCIL(L+1)+VCOL(L+1)-VLL                        LINVEL 
      WCR=WCIR(L)-WCOR(L)-WCIR(L+1)+WCOR(L+1)-WLR                        LINVEL 
      WCL=WCIL(L)-WCOL(L)-WCIL(L+1)+WCOL(L+1)-WLL                        LINVEL 
      IF (.NOT.THK) GO TO 220                                            LINVEL 
C                                                                        LINVEL 
C     VELOCITY COMPONENTS INDUCED BY PANEL SOURCE DISTRIBUTIONS          LINVEL 
C                                                                        LINVEL 
      RLR=(RLIR(L)-RLIR(L+1)-RLOR(L)+RLOR(L+1))*AMP                      LINVEL 
      RLL=(RLIL(L)-RLIL(L+1)-RLOL(L)+RLOL(L+1))*AMP                      LINVEL 
      SLR=(SLIR(L)-SLIR(L+1)-SLOR(L)+SLOR(L+1))*AMP                      LINVEL 
      SLL=(SLIL(L)-SLIL(L+1)-SLOL(L)+SLOL(L+1))*AMP                      LINVEL 
      TLR=(TLIR(L)-TLIR(L+1)-TLOR(L)+TLOR(L+1))*AMP                      LINVEL 
      TLL=(TLIL(L)-TLIL(L+1)-TLOL(L)+TLOL(L+1))*AMP                      LINVEL 
220   IF (L.EQ.1) GO TO 230                                              LINVEL 
      UCR=RCR+UCR                                                        LINVEL 
      UCL=RCL+UCL                                                        LINVEL 
      VCR=SCR+VCR                                                        LINVEL 
      VCL=SCL+VCL                                                        LINVEL 
      WCR=TCR+WCR                                                        LINVEL 
      WCL=TCL+WCL                                                        LINVEL 
      IF (.NOT.THK) GO TO 260                                            LINVEL 
      UTR=RTR-RLR                                                        LINVEL 
      UTL=RTL-RLL                                                        LINVEL 
      VTR=STR-SLR                                                        LINVEL 
      VTL=STL-SLL                                                        LINVEL 
      WTR=TTR-TLR                                                        LINVEL 
      WTL=TTL-TLL                                                        LINVEL 
      GO TO 260                                                          LINVEL 
C                                                                        LINVEL 
C     SPECIAL CASE FOR LEADING EDGE PANELS                               LINVEL 
C                                                                        LINVEL 
230   IF (.NOT.THK) GO TO 260                                            LINVEL 
      UTR=RCIR(L)-RCOR(L)-RLR                                            LINVEL 
      UTL=RCIL(L)-RCOL(L)-RLL                                            LINVEL 
      VTR=SCIR(L)-SCOR(L)-SLR                                            LINVEL 
      VTL=SCIL(L)-SCOL(L)-SLL                                            LINVEL 
      WTR=TCIR(L)-TCOR(L)-TLR                                            LINVEL 
      WTL=TCIL(L)-TCOL(L)-TLL                                            LINVEL 
      GO TO 260                                                          LINVEL 
C                                                                        LINVEL 
C     SPECIAL CASE FOR TRAILING EDGE PANELS                              LINVEL 
C                                                                        LINVEL 
240   UCR=RCR                                                            LINVEL 
      UCL=RCL                                                            LINVEL 
      VCR=SCR                                                            LINVEL 
      VCL=SCL                                                            LINVEL 
      WCR=TCR                                                            LINVEL 
      WCL=TCL                                                            LINVEL 
      IF (.NOT.THK) GO TO 270                                            LINVEL 
250   UTR=RLR-RCIR(L)+RCOR(L)                                            LINVEL 
      UTL=RLL-RCIL(L)+RCOL(L)                                            LINVEL 
      VTR=SLR-SCIR(L)+SCOR(L)                                            LINVEL 
      VTL=SLL-SCIL(L)+SCOL(L)                                            LINVEL 
      WTR=TLR-TCIR(L)+TCOR(L)                                            LINVEL 
      WTL=TLL-TCIL(L)+TCOL(L)                                            LINVEL 
      GO TO 270                                                          LINVEL 
260   RCR=ULR                                                            LINVEL 
      RCL=ULL                                                            LINVEL 
      SCR=VLR                                                            LINVEL 
      SCL=VLL                                                            LINVEL 
      TCR=WLR                                                            LINVEL 
      TCL=WLL                                                            LINVEL 
      IF (.NOT.THK) GO TO 270                                            LINVEL 
      RTR=RLR                                                            LINVEL 
      RTL=RLL                                                            LINVEL 
      STR=SLR                                                            LINVEL 
      STL=SLL                                                            LINVEL 
      TTR=TLR                                                            LINVEL 
      TTL=TLL                                                            LINVEL 
C                                                                        LINVEL 
C     COMBINE CONTRIBUTIONS OF LEFT AND RIGHT WING PANELS AND TRANSFORM  LINVEL 
C     VELOCITY COMPONENTS BACK TO ORIGINAL COORDINATE SYSTEM             LINVEL 
C                                                                        LINVEL 
270   CONTINUE                                                           LINVEL 
      CONR=1.0                                                           LINVEL 
      CONL=1.0                                                           LINVEL 
      IF (MIDFIN) CONR=.5                                                LINVEL 
      IF (MIDFIN) CONL=.5                                                LINVEL 
      IF (ABS(YI).GT..001) GO TO 280                                     LINVEL 
      IF (ABS(COSTI).GT..001) GO TO 280                                  LINVEL 
      IF (ABS(COST).GT.0.001) GO TO 280                                  LINVEL 
      CONR=1.0                                                           LINVEL 
      CONL=1.0                                                           LINVEL 
      IF (SINTI.GT.0.) CONR=0.                                           LINVEL 
      IF (SINTI.LT.0.) CONL=0.                                           LINVEL 
280   CONTINUE                                                           LINVEL 
      IF (.NOT.SUPTE.AND.L.EQ.NR1) GO TO 310                             LINVEL 
      ACR=WCR*COSTR+VCR*SINTR                                            LINVEL 
      ACL=WCL*COSTL+VCL*SINTL                                            LINVEL 
      BCR=VCR*COSTR-WCR*SINTR                                            LINVEL 
      BCL=VCL*COSTL-WCL*SINTL                                            LINVEL 
      AT=(ACR*CONR+ACL*CONL)*BCON                                        LINVEL 
      BT=(BCR*CONR-BCL*CONL)*BCON                                        LINVEL 
      UC(J)=(UCR*CONR+UCL*CONL)*CON                                      LINVEL 
      VC(J)=BT*COSTI-AT*SINTI                                            LINVEL 
      WC(J)=AT*COSTI+BT*SINTI                                            LINVEL 
      AC(J)=AT*COSD-UC(J)*SIND                                           LINVEL 
      IF (M.GT.M1) GO TO 300                                             LINVEL 
      IF (.NOT.FLAG) GO TO 290                                           LINVEL 
      USAVE(L)=UC(J)                                                     LINVEL 
      VSAVE(L)=VC(J)                                                     LINVEL 
      WSAVE(L)=WC(J)                                                     LINVEL 
      ASAVE(L)=AC(J)                                                     LINVEL 
      GO TO 320                                                          LINVEL 
290   UC(J)=UC(J)+USAVE(L)                                               LINVEL 
      VC(J)=VC(J)+VSAVE(L)                                               LINVEL 
      WC(J)=WC(J)+WSAVE(L)                                               LINVEL 
      AC(J)=AC(J)+ASAVE(L)                                               LINVEL 
300   CONTINUE                                                           NEWSHLC
      IF(NPART.NE.5.AND.NPART.NE.9) GO TO 310                            NEWSHLC
      IF (II.LT.J1.OR.II.GT.J2) GO TO 310                                LINVEL 
      JS1=J1                                                             LINVEL 
      JS2=J2                                                             LINVEL 
      NSS=NS                                                             LINVEL 
      ACF=VCR*SINTR                                                      NEWSHLC
      BCF=VCR*COSTR                                                      NEWSHLC
      ATF=ACF*CONR*BCON                                                  NEWSHLC
      BTF=BCF*CONR*BCON                                                  NEWSHLC
      UCF(L)=UCR*CONR*CON                                                NEWSHLC
      VCF(L)=BTF*COSTI-ATF*SINTI                                         NEWSHLC
      WCF(L)=ATF*COSTI+BTF*SINTI                                         NEWSHLC
310   IF (.NOT.THK) GO TO 320                                            LINVEL 
      ATR=WTR*COSTR+VTR*SINTR                                            LINVEL 
      ATL=WTL*COSTL+VTL*SINTL                                            LINVEL 
      BTR=VTR*COSTR-WTR*SINTR                                            LINVEL 
      BTL=VTL*COSTL-WTL*SINTL                                            LINVEL 
      AT=(ATR*CONR+ATL*CONL)*BCONT                                       LINVEL 
      BT=(BTR*CONR-BTL*CONL)*BCONT                                       LINVEL 
      UT(K)=(UTR*CONR+UTL*CONL)*CONT                                     LINVEL 
      VT(K)=BT*COSTI-AT*SINTI                                            LINVEL 
      WT(K)=AT*COSTI+BT*SINTI                                            LINVEL 
      IF(NPART.NE.5.AND.NPART.NE.9) GO TO 320                            NEWSHLC
      IF(I.LT.J1T.OR.I.GT.J2T) GO TO 320                                 NEWSHLC
      JS1T=J1T                                                           NEWSHLC
      JS2T=J2T                                                           NEWSHLC
      NSST=NST                                                           NEWSHLC
      ATRF=WTR*COSTR                                                     NEWSHLC
      BTRF=-WTR*SINTR                                                    NEWSHLC
      ATF=ATRF*CONR*BCONT                                                NEWSHLC
      BTF=BTRF*CONR*BCONT                                                NEWSHLC
      UTF(L)=0.0                                                         NEWSHLC
      VTF(L)=BTF*COSTI-ATF*SINTI                                         NEWSHLC
      WTF(L)=ATF*COSTI+BTF*SINTI                                         NEWSHLC
320   CONTINUE                                                           LINVEL 
330   CONTINUE                                                           LINVEL 
      IF (.NOT.FLAG) GO TO 340                                           LINVEL 
      FLAG=.FALSE.                                                       LINVEL 
      THK=THIK                                                           LINVEL 
      J=JSAVE                                                            LINVEL 
      K=KSAVE                                                            LINVEL 
      NP=NPSAVE                                                          LINVEL 
      GO TO 40                                                           LINVEL 
340   CONTINUE                                                           LINVEL 
      NWING=J                                                            LINVEL 
      NWTHK=K                                                            LINVEL 
C*                                                                       LINVEL 
      IF(NSEGNS.NE.0.AND.NPART.LE.3) GO TO 345                           NEWSHLC
      IF(NPTSNS.EQ.0) WRITE(N11) (AC(J),J=1,NWING)                       NEWSHLC
      IF(NPTSNS.NE.0) WRITE(TAPE16) (AC(J),J=1,NWING)                    NEWSHLC
345   CONTINUE                                                           NEWSHLC
C*                                                                       LINVEL 
      IF(NWING.LE.NMAX.OR.(NPART.NE.5.AND.NPART.NE.9)) GO TO 360         NEWSHLC
C                                                                        LINVEL 
C     STORE DIAGONAL BLOCKS OF AERODYNAMIC MATRIX IN DC ARRAY            LINVEL 
C                                                                        LINVEL 
      DO 350 J=1,NWING                                                   LINVEL 
      IF (J.LT.JS1.OR.J.GT.JS2) GO TO 350                                LINVEL 
      K=J-JS1+1                                                          LINVEL 
      DC(K)=AC(J)                                                        LINVEL 
      AC(J)=0.                                                           LINVEL 
350   CONTINUE                                                           LINVEL 
      WRITE (TAPE10) (DC(J),J=1,NSS)                                     LINVEL 
360   CONTINUE                                                           LINVEL 
      IF (IABS(PRINT).LT.4) GO TO 380                                    LINVEL 
      WRITE (TAPE6,450) II                                               LINVEL 
      WRITE (TAPE6,460) NWING                                            LINVEL 
      WRITE (TAPE6,440) (UC(J),J=1,NWING)                                LINVEL 
      WRITE (TAPE6,420) NWING                                            LINVEL 
      WRITE (TAPE6,440) (VC(J),J=1,NWING)                                LINVEL 
      WRITE (TAPE6,410) NWING                                            LINVEL 
      WRITE (TAPE6,440) (WC(J),J=1,NWING)                                LINVEL 
      WRITE(TAPE6,425) NWING                                             LINVEL 
      WRITE (TAPE6,440) (AC(J),J=1,NWING)                                LINVEL 
      IF (.NOT.THK) GO TO 370                                            LINVEL 
      WRITE (TAPE6,470) NWTHK                                            LINVEL 
      WRITE (TAPE6,440) (UT(K),K=1,NWTHK)                                LINVEL 
      WRITE (TAPE6,430) NWTHK                                            LINVEL 
      WRITE (TAPE6,440) (VT(K),K=1,NWTHK)                                LINVEL 
      WRITE (TAPE6,480) NWTHK                                            LINVEL 
      WRITE (TAPE6,440) (WT(K),K=1,NWTHK)                                LINVEL 
370   CONTINUE                                                           LINVEL 
      IF(NWING.GT.NMAX.AND.(NPART.EQ.5.OR.NPART.EQ.9))                   NEWSHLC
     1 WRITE(TAPE6,490) NSS                                              NEWSHLC
      IF(NWING.GT.NMAX.AND.(NPART.EQ.5.OR.NPART.EQ.9))                   NEWSHLC
     1 WRITE(TAPE6,440) (DC(J),J=1,NSS)                                  NEWSHLC
380   IF (.NOT.THK) GO TO 390                                            LINVEL 
      WRITE (TAPE8) (UT(K),VT(K),WT(K),K=1,NWTHK)                        LINVEL 
      IF(NPART.NE.5.AND.NPART.NE.9) GO TO 390                            NEWSHLC
      WRITE(TAPE8) (UTF(K),VTF(K),WTF(K),K=1,NSST)                       NEWSHLC
390   IF(NSEGNS.NE.0.AND.NPART.LE.3) GO TO 395                           NEWSHLC
      WRITE(TAPE8) (UC(J),VC(J),WC(J),J=1,NWING)                         NEWSHLC
      IF(NPTSNS.EQ.0) WRITE(TAPE9) (AC(J),J=1,NWING)                     NEWSHLC
      IF(NPTSNS.NE.0) WRITE(TAPE15) (AC(J),J=1,NWING)                    NEWSHLC
      IF(NPART.NE.5.AND.NPART.NE.9) GO TO 395                            NEWSHLC
      WRITE(TAPE8) (UCF(J),VCF(J),WCF(J),J=1,NSS)                        NEWSHLC
395   CONTINUE                                                           NEWSHLC
400   CONTINUE                                                           LINVEL 
C                                                                        LINVEL 
C                                                                        LINVEL 
C                                                                        LINVEL 
410   FORMAT (2X,10HWC(J),J=1,,I3)                                       LINVEL 
420   FORMAT (2X,10HVC(J),J=1,,I3)                                       LINVEL 
  425 FORMAT(2X,10HAC(J),J=1,I3)                                         LINVEL 
430   FORMAT (2X,10HVT(K),K=1,,I3)                                       LINVEL 
440   FORMAT (1X,10F10.5)                                                LINVEL 
450   FORMAT (1H0,22HAERODYNAMIC MATRIX, I=I3)                           LINVEL 
460   FORMAT (2X,10HUC(J),J=1,,I3)                                       LINVEL 
470   FORMAT (2X,10HUT(K),K=1,,I3)                                       LINVEL 
480   FORMAT (2X,10HWT(K),K=1,,I3)                                       LINVEL 
490   FORMAT (2X,10HDC(J),J=1,,I3)                                       LINVEL 
      END                                                                LINVEL 
      SUBROUTINE SORVEL (UC,VC,WC,UL,VL,WL)                              SORVEL 
C                                                                        SORVEL 
C     ********************************************VERSION B00*********** SORVEL 
C                                                                        SORVEL 
C                                                                        SORVEL 
C     COMPUTE THE THREE COMPONENTS OF VELOCITY INDUCED AT A SPECIFIED    SORVEL 
C     CONTROL POINT BY CONSTANT AND LINEARLY VARYING SOURCE              SORVEL 
C     DISTRIBUTIONS ON A SWEPT QUADRILATERAL PANEL. SORVEL CALCULATES    SORVEL 
C     THE VELOCITY INDUCED BY ONE CORNER OF THE PANEL.                   SORVEL 
C                                                                        SORVEL 
C     UC, VC, WC ARE VELOCITY COMPONENTS INDUCED BY CONSTANT SOURCE      SORVEL 
C     DISTRIBUTION                                                       SORVEL 
C                                                                        SORVEL 
C     UL, VL, WL ARE VELOCITY COMPONENTS INDUCED BY LINEAR CHORDWISE,    SORVEL 
C     LINEAR SPANWISE SOURCE DISTRIBUTION                                SORVEL 
C                                                                        SORVEL 
      COMMON/COMPS/X,DELTAY,DELTAZ,A,BB,C,SUB,BPOS,COST,SINT             SORVEL 
      COMMON /PI/ PI,RADEG,DEGRAD                                        SORVEL 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, SORVEL 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        SORVEL 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART,II               NEWSHLC
      COMMON /VELCOM/ NPOINT,NPART                                       NEWSHLC
C                                                                        SORVEL 
      LOGICAL SUB,SUP,BPOS,BNEG,SUPLE                                    SORVEL 
C                                                                        SORVEL 
      IF(NSEGNS.NE.0.AND.NPART.GE.7.AND.II.GT.NPTSN) GO TO 170           NEWSHLC
      SUP=.NOT.SUB                                                       SORVEL 
      SUPLE=.FALSE.                                                      SORVEL 
      BNEG=.NOT.BPOS                                                     SORVEL 
      B = ABS(BB)                                                        SORVEL 
      IF(B.LE.EPSSV) B = 0.0                                             SORVEL 
      SGN=1.0                                                            SORVEL 
      IF (SUP) SGN=-1.0                                                  SORVEL 
      BT1=SGN+B*B                                                        SORVEL 
      BTERM=SQRT(ABS(BT1))                                               SORVEL 
      BTERMD=1./BTERM                                                    SORVEL 
      Y=DELTAY*COST+DELTAZ*SINT                                          SORVEL 
      IF (BNEG) Y=-Y                                                     SORVEL 
      Z=DELTAZ*COST-DELTAY*SINT                                          SORVEL 
      IF (ABS(Y).LE.EPSSV) Y=0.                                          SORVEL 
      IF (ABS(Z).LE.EPSSV) Z=0.                                          SORVEL 
      X2=X*X                                                             SORVEL 
      Y2=Y*Y                                                             SORVEL 
      Z2=Z*Z                                                             SORVEL 
      R2=Y2+Z2                                                           SORVEL 
      R=SQRT(R2)                                                         SORVEL 
      IF (SUB) GO TO 10                                                  SORVEL 
      IF (B.LT.1.0) SUPLE=.TRUE.                                         SORVEL 
      IF (X.LE.0.) GO TO 170                                             SORVEL 
      D=0.                                                               SORVEL 
      IF (X2.GT.R2) D=SQRT(X2-R2)                                        SORVEL 
      GO TO 20                                                           SORVEL 
10    D=SQRT(X2+R2)                                                      SORVEL 
20    CONTINUE                                                           SORVEL 
      T2=B*X+SGN*Y                                                       SORVEL 
      T3=X-B*Y                                                           SORVEL 
      AT3=ABS(T3)                                                        SORVEL 
      IF (AT3.LE.EPSSV) AT3=0.                                           SORVEL 
      UC=-PI*BTERMD                                                      SORVEL 
C                                                                        SORVEL 
C     SPECIAL CASE FOR SUPERSONIC LEADING EDGE                           SORVEL 
C                                                                        SORVEL 
      IF (D.GT.0.) GO TO 30                                              SORVEL 
      IF (Y.LE.B*X) GO TO 170                                            SORVEL 
      IF (T3.LE.0.) GO TO 170                                            SORVEL 
      IF (X.LE.(B*Y+BTERM*ABS(Z))) GO TO 170                             SORVEL 
      SZ=SIGN(1.0,Z)                                                     SORVEL 
      UC=-PI/BTERM                                                       SORVEL 
      VC=-B*UC                                                           SORVEL 
      WC=SZ*PI                                                           SORVEL 
      UL=-PI*(T3*BTERMD-Z*SZ)                                            SORVEL 
      VL=-B*UL                                                           SORVEL 
      WL=-SZ*BTERM*UL                                                    SORVEL 
      GO TO 160                                                          SORVEL 
30    IF (SUP.AND.X2.LE.R2) GO TO 170                                    SORVEL 
      IF (Z.EQ.0.) GO TO 80                                              SORVEL 
C                                                                        SORVEL 
C     GENERAL EQUATIONS                                                  SORVEL 
C                                                                        SORVEL 
      DENOM=B*R2-X*Y                                                     SORVEL 
      F1=ATAN2(Z*D,DENOM)                                                SORVEL 
      IF (SUB) F1=F1-ATAN2(Z,Y)                                          SORVEL 
      G1=0.                                                              SORVEL 
      IF (BTERM.EQ.0.) GO TO 60                                          SORVEL 
      ARG=T2                                                             SORVEL 
      IF (SUB) GO TO 40                                                  SORVEL 
      TZ=T3*T3+BT1*Z2                                                    SORVEL 
      IF (TZ.GT.0.) ST3=SQRT(TZ)                                         SORVEL 
      IF (SUPLE) GO TO 50                                                SORVEL 
40    ARG=ARG+D*BTERM                                                    SORVEL 
      IF (SUP) ARG=ARG/ST3                                               SORVEL 
      IF (ARG.GT.0.) G1=ALOG(ARG)*BTERMD                                 SORVEL 
      GO TO 70                                                           SORVEL 
50    ARG1=ARG/ST3                                                       SORVEL 
      IF (ABS(ARG1).LE.1.0) G1=ACOS(ARG1)*BTERMD                         SORVEL 
      GO TO 70                                                           SORVEL 
60    IF (T2.NE.0.) G1=D/T2                                              SORVEL 
70    G2=ALOG((X+D)/R)                                                   SORVEL 
      G3=0.                                                              SORVEL 
      IF (SUB) G3=ALOG(R)                                                SORVEL 
      C1=D                                                               SORVEL 
      IF (SUB) C1=X+D                                                    SORVEL 
      G=BT1*G1-B*G2                                                      SORVEL 
      H=B*G1-G2+G3                                                       SORVEL 
      UC=-G1                                                             SORVEL 
      VC=H                                                               SORVEL 
      WC=F1                                                              SORVEL 
      UL=Z*F1-T3*G1-Y*G2                                                 SORVEL 
      VL=T3*H+C1-B*Z*F1                                                  SORVEL 
      WL=T3*F1+Z*G                                                       SORVEL 
      GO TO 160                                                          SORVEL 
C                                                                        SORVEL 
C     SPECIAL EQUATIONS FOR Z=0                                          SORVEL 
C                                                                        SORVEL 
80    CONTINUE                                                           SORVEL 
      F1=0.                                                              SORVEL 
      DENOM=-Y*T3                                                        SORVEL 
      IF (DENOM.NE.0.) F1=ATAN2(0.,DENOM)                                SORVEL 
      IF (SUB.AND.Y.NE.0.) F1=F1-ATAN2(0.,Y)                             SORVEL 
      IF (SUPLE) GO TO 100                                               SORVEL 
      G1=0.                                                              SORVEL 
      IF (BTERM.EQ.0.) GO TO 110                                         SORVEL 
      IF (AT3.GT.0.) GO TO 90                                            SORVEL 
      G1=(100.+ALOG(2.*BT1*ABS(Y)))*BTERMD                               SORVEL 
      IF (SUB.AND.Y.LT.0.) G1=-G1                                        SORVEL 
      GO TO 120                                                          SORVEL 
90    ARG=T2+D*BTERM                                                     SORVEL 
      IF (SUP) ARG=ARG/AT3                                               SORVEL 
      IF (ARG.GT.0.) G1=ALOG(ARG)*BTERMD                                 SORVEL 
      GO TO 120                                                          SORVEL 
100   ARG1=T2/AT3                                                        SORVEL 
      IF (ABS(ARG1).LE.1.0) G1=ACOS(ARG1)*BTERMD                         SORVEL 
      GO TO 120                                                          SORVEL 
110   IF (T2.NE.0.) G1=D/T2                                              SORVEL 
120   G2=100.                                                            SORVEL 
      IF (Y.EQ.0.) GO TO 130                                             SORVEL 
      G2=ALOG((X+D)/ABS(Y))                                              SORVEL 
      GO TO 140                                                          SORVEL 
130   IF (X.NE.0.) G2=G2+ALOG(2.*ABS(X))                                 SORVEL 
      IF (X.LT.0.) G2=-G2                                                SORVEL 
140   C1=D                                                               SORVEL 
      G3=0.                                                              SORVEL 
      IF (.NOT.SUB) GO TO 150                                            SORVEL 
      C1=X+D                                                             SORVEL 
      IF (Y.NE.0.) G3=ALOG(ABS(Y))                                       SORVEL 
      IF (Y.EQ.0.) G3=-100.                                              SORVEL 
150   H=B*G1-G2+G3                                                       SORVEL 
      UC=-G1                                                             SORVEL 
      VC=H                                                               SORVEL 
      WC=F1                                                              SORVEL 
      UL=-T3*G1-Y*G2                                                     SORVEL 
      VL=T3*H+C1                                                         SORVEL 
      WL=T3*F1                                                           SORVEL 
160   IF (BPOS) RETURN                                                   SORVEL 
      UC=-UC                                                             SORVEL 
      WC=-WC                                                             SORVEL 
      UL=-UL                                                             SORVEL 
      WL=-WL                                                             SORVEL 
      RETURN                                                             SORVEL 
170   UC=0.                                                              SORVEL 
      VC=0.                                                              SORVEL 
      WC=0.                                                              SORVEL 
      UL=0.                                                              SORVEL 
      VL=0.                                                              SORVEL 
      WL=0.                                                              SORVEL 
      RETURN                                                             SORVEL 
      END                                                                SORVEL 
      SUBROUTINE VORVEL (UC,VC,WC,UL,VL,WL,ULT,VLT,WLT)                  VORVEL 
C                                                                        VORVEL 
C     *******************************************VERSION B00************ VORVEL 
C                                                                        VORVEL 
C     COMPUTE THE THREE COMPONENTS OF VELOCITY INDUCED AT A SPECIFIED    VORVEL 
C     CONTROL POINT BY CONSTANT AND LINEARLY VARYING VORTEX              VORVEL 
C     DISTRIBUTIONS ON A SWEPT QUADRILATERAL PANEL. VORVEL CALCULATES    VORVEL 
C     THE VELOCITY INDUCED BY THE LEADING AND TRAILING CORNERS OF ONE    VORVEL 
C     EDGE OF THE PANEL.                                                 VORVEL 
C                                                                        VORVEL 
C     UC, VC, WC ARE VELOCITY COMPONENTS INDUCED BY CONSTANT CHORDWISE   VORVEL 
C     AND SPANWISE VORTEX DISTRIBUTION                                   VORVEL 
C                                                                        VORVEL 
C     UL, VL, WL, ARE VELOCITY COMPONENTS INDUCED BY LEADING EDGE OF     VORVEL 
C     LINEAR CHORDWISE, CONSTANT SPANWISE VORTEX DISTRIBUTION            VORVEL 
C                                                                        VORVEL 
C     ULT, VLT, WLT ARE VELOCITY COMPONENTS INDUCED BY TRAILING EDGE OF  VORVEL 
C     LINEAR CHORDWISE, CONSTANT SPANWISE VORTEX DISTRIBUTION            VORVEL 
C                                                                        VORVEL 
C*                                                                       VORVEL 
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
C*                                                                       VORVEL 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           VORVEL 
      COMMON /COMPS/ X,DELTAY,DELTAZ,AL,BL,C,SUB,BPOS,COST,SINT,ML       VORVEL 
      COMMON /PI/ PI,RADEG,DEGRAD                                        VORVEL 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, VORVEL 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        VORVEL 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART,II               NEWSHLC
      COMMON /VELCOM/ NPOINT,NPART                                       NEWSHLC
C                                                                        VORVEL 
      DIMENSION Q(51), XI(51), QX(51)                                    VORVEL 
C                                                                        VORVEL 
      LOGICAL SUB,SUP,BPOS,SUPLE,LBC                                     VORVEL 
C                                                                        VORVEL 
      IF(NSEGNS.NE.0.AND.NPART.LE.3) GO TO 400                           NEWSHLC
      A=AL                                                               VORVEL 
      B=ABS(BL)                                                          VORVEL 
      BPOS=BL.GE.0.                                                      VORVEL 
      IF (BL.LT.0.) A=-AL                                                VORVEL 
      IF (ABS(C).LE.EPSVV) C=0.                                          VORVEL 
      CC=C*C                                                             VORVEL 
      SUP=.NOT.SUB                                                       VORVEL 
      SUPLE=.FALSE.                                                      VORVEL 
      IF (ABS(B).LE.EPSVV) B=0.                                          VORVEL 
      AB=A+B                                                             VORVEL 
      SGN=1.0                                                            VORVEL 
      IF (SUP) SGN=-1.0                                                  VORVEL 
      B1=SGN+B*B                                                         VORVEL 
      SB1=SQRT(ABS(B1))                                                  VORVEL 
      Y=DELTAY*COST+DELTAZ*SINT                                          VORVEL 
      Z=DELTAZ*COST-DELTAY*SINT                                          VORVEL 
      IF (BL.LT.0.) Y=-Y                                                 VORVEL 
      IF (ABS(Y).LE.EPSVV) Y=0.                                          VORVEL 
      IF (ABS(Z).LE.EPSVV) Z=0.                                          VORVEL 
      X2=X*X                                                             VORVEL 
      Y2=Y*Y                                                             VORVEL 
      Z2=Z*Z                                                             VORVEL 
      R2=Y2+Z2                                                           VORVEL 
      R=SQRT(R2)                                                         VORVEL 
      IF (SUB) GO TO 10                                                  VORVEL 
      IF (ABS(B).LT.1.0) SUPLE=.TRUE.                                    VORVEL 
      IF (X.LT.0.) GO TO 400                                             VORVEL 
10    D=0.                                                               VORVEL 
      D2=X2+SGN*R2                                                       VORVEL 
      IF (D2.GT.0.) D=SQRT(D2)                                           VORVEL 
      AZ=A*Z                                                             VORVEL 
      T1=C-A*Y                                                           VORVEL 
      IF (ABS(T1).LE.EPSVV) T1=0.                                        VORVEL 
      T2=T1*T1                                                           VORVEL 
      T3=X-B*Y                                                           VORVEL 
      AT3=ABS(T3)                                                        VORVEL 
      IF (AT3.LE.EPSVV) AT3=0.                                           VORVEL 
      IF (AT3.EQ.0.) T3=0.                                               VORVEL 
      T4=AZ*AZ                                                           VORVEL 
      T5=T2+T4                                                           VORVEL 
      IF (T5.NE.0.) T5=1./T5                                             VORVEL 
      T6=B*C-A*X                                                         VORVEL 
      T7=T6*T6                                                           VORVEL 
      T8=T7+SGN*(T2+T4)                                                  VORVEL 
      T9=T1*T3+A*B*Z2                                                    VORVEL 
      E=SQRT(ABS(T8))                                                    VORVEL 
      B2=SGN*(C*Y-A*R2)                                                  VORVEL 
      B3=B*X+SGN*Y                                                       VORVEL 
      B4=T5*T6                                                           VORVEL 
      TZ=T3*T3+B1*Z2                                                     VORVEL 
      IF (TZ.GT.0.) ST3=SQRT(TZ)                                         VORVEL 
      WQ=0.                                                              VORVEL 
C                                                                        VORVEL 
C     EVALUATION OF DOWNWASH INDUCED BY TRAILING VORTEX SHEET            VORVEL 
C                                                                        VORVEL 
      IF (A.EQ.0..OR.ML.EQ.2) GO TO 160                                  VORVEL 
      INT=0                                                              VORVEL 
      MAX=11                                                             VORVEL 
      XI(1)=0.                                                           VORVEL 
      XO=0.                                                              VORVEL 
      IF (T1.NE.0.) XO=T3/T1                                             VORVEL 
      BO=B-A*XO                                                          VORVEL 
      SBO=SGN+BO*BO                                                      VORVEL 
      EL=1.0                                                             VORVEL 
      IF (SUP.AND.Y.GT.0..AND.ABS(BO).LE.1.) EL=T5*(T9-E*ABS(Z))         VORVEL 
      IF (EL.LE.0.) GO TO 150                                            VORVEL 
      IF (EL.GT.1.0) EL=1.0                                              VORVEL 
      DXI=EL/FLOAT(MAX-1)                                                VORVEL 
      EPX=.005*EL                                                        VORVEL 
      IF (Y.EQ.0..OR.ABS(Z).GT..10) GO TO 60                             VORVEL 
      IF (XO.LT.-EPX.OR.XO.GT.EL+EPX) GO TO 60                           VORVEL 
      INT=1                                                              VORVEL 
      MAX=13                                                             VORVEL 
      QM=0.                                                              VORVEL 
      IF (XO.LT..6*EL) MAX=8                                             VORVEL 
      IF (XO.LT..1*EL) MAX=4                                             VORVEL 
      IF (XO.LT.EPX) MAX=1                                               VORVEL 
      IF (MAX.EQ.1) GO TO 20                                             VORVEL 
      DXI=(XO-EPX)/FLOAT(MAX-3)                                          VORVEL 
      GO TO 60                                                           VORVEL 
20    INT=2                                                              VORVEL 
      IF (XO.GE.EL-EPX) MAX=1                                            VORVEL 
      COEF=2.                                                            VORVEL 
      IF (MAX.EQ.1) COEF=1.                                              VORVEL 
      WO=0.                                                              VORVEL 
      IF (SBO.EQ.0.) GO TO 30                                            VORVEL 
      IF (MAX.GT.1.AND.QM.EQ.0.) GO TO 30                                VORVEL 
      ARG=EPX*EPX+SBO*Z2                                                 VORVEL 
      IF (ARG.LE.0.) GO TO 30                                            VORVEL 
      ARG=SQRT(ARG)/(2.*SBO*ABS(Y))                                      VORVEL 
      IF (Y.GT.0.) ARG=ARG+1./ARG                                        VORVEL 
      IF (ARG.GT.0.) WO=ALOG(ARG)                                        VORVEL 
      WO=COEF*BO*EPX*XO*WO/SQRT(ABS(SBO))                                VORVEL 
30    WQ=WQ+WO                                                           VORVEL 
      IF (MAX.EQ.1.AND.XO.GT.EPX) GO TO 60                               VORVEL 
      IF (XO.LE..9*EL) GO TO 40                                          VORVEL 
      MAX=4                                                              VORVEL 
      GO TO 50                                                           VORVEL 
40    MAX=16-MAX                                                         VORVEL 
      IF (MAX.LT.8) MAX=8                                                VORVEL 
50    DXI=(EL-XO-EPX)/FLOAT(MAX-3)*.125                                  VORVEL 
      XI(1)=XO+EPX                                                       VORVEL 
60    CONTINUE                                                           VORVEL 
      IF (MAX.EQ.1) GO TO 150                                            VORVEL 
      DO 140 M=1,MAX                                                     VORVEL 
      Q(M)=0.                                                            VORVEL 
      IF (INT.EQ.0) GO TO 80                                             VORVEL 
      IF (INT.EQ.2) GO TO 70                                             VORVEL 
      IF (M.EQ.MAX) GO TO 80                                             VORVEL 
      IF (M.GT.MAX-3) DXI=.5*DXI                                         VORVEL 
      GO TO 80                                                           VORVEL 
70    IF (M.EQ.1.OR.M.EQ.3) GO TO 80                                     VORVEL 
      IF (M.LE.5) DXI=2.*DXI                                             VORVEL 
80    CONTINUE                                                           VORVEL 
      IF (M.GT.1) XI(M)=XI(M-1)+DXI                                      VORVEL 
      DX=X-XI(M)*C                                                       VORVEL 
      DX2=DX*DX                                                          VORVEL 
      BX=B-A*XI(M)                                                       VORVEL 
      BX2=BX*BX                                                          VORVEL 
      BX1=SGN+BX2                                                        VORVEL 
      SBX=SQRT(ABS(BX1))                                                 VORVEL 
      SDX=0.                                                             VORVEL 
      DXR=DX2+SGN*R2                                                     VORVEL 
      IF (DXR.GT.0.) SDX=SQRT(DXR)                                       VORVEL 
      IF (SDX.EQ.0.) GO TO 90                                            VORVEL 
      IF (SUP.AND.DX.LT.0.) GO TO 130                                    VORVEL 
      ARG=SGN*Y+BX*DX                                                    VORVEL 
      IF (SBX.EQ.0.) GO TO 110                                           VORVEL 
      TZI=(T3-XI(M)*T1)**2+BX1*Z2                                        VORVEL 
      IF (TZI.EQ.0.) GO TO 120                                           VORVEL 
      STZ=SQRT(TZI)                                                      VORVEL 
      IF (SUP.AND.ABS(BX).LT.1.) GO TO 100                               VORVEL 
      ARG=(ARG+SBX*SDX)/STZ                                              VORVEL 
      IF (SUP) ARG=ABS(ARG)                                              VORVEL 
      IF (ARG.GT.0.) Q(M)=ALOG(ARG)*BX/SBX                               VORVEL 
      GO TO 130                                                          VORVEL 
90    IF (T1.LT.BX*T6.AND.T8.LT.0.) GO TO 130                            VORVEL 
      IF (ABS(BX).GE.1.) GO TO 130                                       VORVEL 
      IF (Y.LE.BX*DX) GO TO 130                                          VORVEL 
      IF (DX.LT.(BX*Y+SBX*ABS(Z))) GO TO 130                             VORVEL 
      Q(M)=PI*BX/SBX                                                     VORVEL 
      GO TO 130                                                          VORVEL 
100   ARG=ARG/STZ                                                        VORVEL 
      IF (ARG.GT.1.0) GO TO 130                                          VORVEL 
      IF (ARG.LE.-1.0) GO TO 90                                          VORVEL 
      Q(M)=ACOS(ARG)*BX/SBX                                              VORVEL 
      GO TO 130                                                          VORVEL 
110   IF (ABS(ARG).GT.EPSVV) Q(M)=SDX*BX/ARG                             VORVEL 
      GO TO 130                                                          VORVEL 
120   IF (Y.GE.0.) GO TO 140                                             VORVEL 
      Q(M)=-ALOG(ABS(Y))*BX/SBX                                          VORVEL 
130   CONTINUE                                                           VORVEL 
      QX(M)=Q(M)*XI(M)                                                   VORVEL 
140   CONTINUE                                                           VORVEL 
      CALL TRAP (XI,QX,DW,MAX)                                           VORVEL 
      WQ=WQ+DW                                                           VORVEL 
150   CONTINUE                                                           VORVEL 
      QM=Q(MAX)                                                          VORVEL 
      IF (INT.EQ.1) GO TO 20                                             VORVEL 
160   CONTINUE                                                           VORVEL 
      IF (.NOT.SUPLE) GO TO 180                                          VORVEL 
C                                                                        VORVEL 
C     SPECIAL EQUATIONS FOR SUPERSONIC LEADING EDGE                      VORVEL 
C                                                                        VORVEL 
      IF (D.GT.0.) GO TO 180                                             VORVEL 
      IF (Y.LE.B*X) GO TO 400                                            VORVEL 
      IF (X.LT.(B*Y+SB1*ABS(Z))) GO TO 400                               VORVEL 
      SZ=SIGN(1.0,Z)                                                     VORVEL 
      PZ=PI*SZ                                                           VORVEL 
      UC=PZ                                                              VORVEL 
      VC=-B*PZ                                                           VORVEL 
      WC=-PI*SB1                                                         VORVEL 
      IF (T8.GT.0.) E=0.                                                 VORVEL 
      SL=PI*T5*(SZ*T9-Z*E)                                               VORVEL 
      TL=SZ*E*T5*SL                                                      VORVEL 
      IF (T8.GT.0.) TL=PI*T5*T5*T8*ABS(Z)                                VORVEL 
      IF (ML.EQ.2) GO TO 170                                             VORVEL 
      UL=SL                                                              VORVEL 
      VL=-((B+T1*B4)*SL-AZ*TL)/2.                                        VORVEL 
      WL=AZ*B4*SL-T1*TL+A*WQ                                             VORVEL 
170   ULS=SL+PZ                                                          VORVEL 
      ULT=ULS                                                            VORVEL 
      TT=SZ*E*T5*ULS                                                     VORVEL 
      IF (T8.GT.0.) TT=TL                                                VORVEL 
      VLT=(A*PZ-(AB+T1*B4)*ULS+AZ*TT)/2.                                 VORVEL 
      WLT=AZ*B4*ULS-T1*TT                                                VORVEL 
      GO TO 390                                                          VORVEL 
180   IF (SUP.AND.D.EQ.0.) GO TO 400                                     VORVEL 
      IF (Z.EQ.0.) GO TO 260                                             VORVEL 
C                                                                        VORVEL 
C     GENERAL EQUATIONS                                                  VORVEL 
C                                                                        VORVEL 
      DENOM=B*R2-X*Y                                                     VORVEL 
      F1=ATAN2(Z*D,DENOM)                                                VORVEL 
      IF (SUB) F1=F1-ATAN2(Z,Y)                                          VORVEL 
      G1=0.                                                              VORVEL 
      IF (T8.EQ.0.) GO TO 210                                            VORVEL 
      IF (C.EQ.0.) GO TO 190                                             VORVEL 
      ARG=X*T6+B2                                                        VORVEL 
      IF (T8.LT.0.) GO TO 200                                            VORVEL 
      ARG=(ARG+D*E)/(ST3*C)                                              VORVEL 
      IF (SUP) ARG=ABS(ARG)                                              VORVEL 
      IF (ARG.GT.0.) G1=ALOG(ARG)                                        VORVEL 
      GO TO 210                                                          VORVEL 
190   IF (ST3.NE.0.) G1=ALOG(ST3)                                        VORVEL 
      GO TO 210                                                          VORVEL 
200   ARG=ARG/(ST3*C)                                                    VORVEL 
      IF (ABS(ARG).GT.1.0) GO TO 210                                     VORVEL 
      G1=-ACOS(ARG)                                                      VORVEL 
210   H1=0.                                                              VORVEL 
      IF (C.EQ.0..AND.A.LT.0.) G1=-G1                                    VORVEL 
      IF (ML.EQ.2) GO TO 230                                             VORVEL 
      IF (SB1.EQ.0.) GO TO 230                                           VORVEL 
      ARH=B3                                                             VORVEL 
      IF (SUPLE) GO TO 220                                               VORVEL 
      ARH=(ARH+D*SB1)/ST3                                                VORVEL 
      IF (SUP) ARH=ABS(ARH)                                              VORVEL 
      IF (ARH.GT.0.) H1=ALOG(ARH)                                        VORVEL 
      GO TO 230                                                          VORVEL 
220   H1=-ACOS(ARH/ST3)                                                  VORVEL 
230   G2=ALOG((X+D)/R)                                                   VORVEL 
      G3=0.                                                              VORVEL 
      IF (SUB) G3=ALOG(R)                                                VORVEL 
      C1=D                                                               VORVEL 
      IF (SUB) C1=X+C1                                                   VORVEL 
      C2=C1/R2                                                           VORVEL 
      H=SB1*H1-B*(G2-G3)                                                 VORVEL 
      IF (SB1.EQ.0.) H2=B*D/B3-G2+G3                                     VORVEL 
      IF (SB1.NE.0.) H2=B*H1/SB1-G2+G3                                   VORVEL 
      UC=F1                                                              VORVEL 
      VS=-B*F1+Z*C2                                                      VORVEL 
      WS=H-Y*C2                                                          VORVEL 
      VC=VS                                                              VORVEL 
      WC=WS                                                              VORVEL 
      IF (C.EQ.0.) C2=0.                                                 VORVEL 
      C3=0.                                                              VORVEL 
      C4=0.                                                              VORVEL 
      C5=G2/2.                                                           VORVEL 
      C6=0.                                                              VORVEL 
      IF (C.EQ.0.) GO TO 240                                             VORVEL 
      C3=(X*C2+SGN*G2)/(2.*C)                                            VORVEL 
      C4=((X2-SGN*R2/2.)*G2-1.5*X*D)/(2.*CC)                             VORVEL 
      C5=(D-X*G2)/C                                                      VORVEL 
240   CONTINUE                                                           VORVEL 
      WQ=WQ-C4                                                           VORVEL 
      G=E*G1-T6*G2                                                       VORVEL 
      SL=T5*(T9*F1+Z*G)                                                  VORVEL 
      TL=-B*D                                                            VORVEL 
      IF (C.NE.0.) TL=(B2*G2+T6*D)/C                                     VORVEL 
      TL=-T5*(T5*(G*T9-Z*T8*F1)+TL)                                      VORVEL 
      IF (ML.EQ.2) GO TO 250                                             VORVEL 
      UL=SL                                                              VORVEL 
      VL=-((B+T1*B4)*SL-AZ*TL)/2.+Z*C3                                   VORVEL 
      WL=AZ*B4*SL-T1*TL-Y*C3+A*WQ                                        VORVEL 
250   ULS=SL+F1                                                          VORVEL 
      ULT=ULS                                                            VORVEL 
      TLT=TL-T5*G                                                        VORVEL 
      WQT=C5-C4-G3/2.                                                    VORVEL 
      VLS=(A*F1-(AB+T1*B4)*ULS+AZ*TLT)/2.+Z*(C2+C3)                      VORVEL 
      VLT=VLS                                                            VORVEL 
      WLS=AZ*B4*ULS-T1*TLT-Y*(C2+C3)+A*WQT                               VORVEL 
      WLT=WLS                                                            VORVEL 
      GO TO 390                                                          VORVEL 
C                                                                        VORVEL 
C     SPECIAL EQUATIONS FOR Z=0                                          VORVEL 
C                                                                        VORVEL 
260   CONTINUE                                                           VORVEL 
      F1=0.                                                              VORVEL 
      DENOM=-Y*T3                                                        VORVEL 
      IF (DENOM.NE.0.) F1=ATAN2(0.,DENOM)                                VORVEL 
      IF (SUB.AND.Y.NE.0.) F1=F1-ATAN2(0.,Y)                             VORVEL 
      G1=0.                                                              VORVEL 
      IF (T8.EQ.0.) GO TO 300                                            VORVEL 
      IF (C.EQ.0.) GO TO 280                                             VORVEL 
      IF (T8.LT.0.) GO TO 290                                            VORVEL 
      IF (AT3.GT.0.) GO TO 270                                           VORVEL 
      IF (Y.EQ.0..OR.T1.EQ.0.) GO TO 300                                 VORVEL 
      ARG=2.*Y*T1*B1/C                                                   VORVEL 
      IF (ARG.GT.0.) G1=ALOG(ARG)                                        VORVEL 
      IF (Y.GT.0.) G1=100.+G1                                            VORVEL 
      GO TO 300                                                          VORVEL 
270   ARG=(X*T6+SGN*Y*T1+D*E)/(AT3*C)                                    VORVEL 
      IF (SUP) ARG=ABS(ARG)                                              VORVEL 
      IF (ARG.GT.0.) G1=ALOG(ARG)                                        VORVEL 
      GO TO 300                                                          VORVEL 
280   IF (Y.GT.0.) G1=-100.                                              VORVEL 
      IF (AT3.NE.0.) G1=ALOG(AT3)                                        VORVEL 
      GO TO 300                                                          VORVEL 
290   ARG=(X*T6-Y*T1)/(AT3*C)                                            VORVEL 
      IF (ABS(ARG).GT.1.0) GO TO 300                                     VORVEL 
      G1=-ACOS(ARG)                                                      VORVEL 
300   H1=0.                                                              VORVEL 
      IF (C.EQ.0..AND.A.LT.0.) G1=-G1                                    VORVEL 
      IF (ML.EQ.2) GO TO 330                                             VORVEL 
      IF (SB1.EQ.0.) GO TO 330                                           VORVEL 
      IF (SUPLE) GO TO 320                                               VORVEL 
      IF (AT3.GT.0.) GO TO 310                                           VORVEL 
      IF (Y.EQ.0.) GO TO 330                                             VORVEL 
      H1=ALOG(ABS(Y))                                                    VORVEL 
      IF (SUB.AND.Y.LT.0.) H1=-H1                                        VORVEL 
      IF (Y.GT.0.) H1=100.+H1                                            VORVEL 
      GO TO 330                                                          VORVEL 
310   CONTINUE                                                           VORVEL 
      ARH=(B3+D*SB1)/AT3                                                 VORVEL 
      IF (SUP) ARH=ABS(ARH)                                              VORVEL 
      IF (ARH.GT.0.) H1=ALOG(ARH)                                        VORVEL 
      GO TO 330                                                          VORVEL 
320   H1=-ACOS(B3/AT3)                                                   VORVEL 
330   G2=100.                                                            VORVEL 
      IF (Y.NE.0.) GO TO 340                                             VORVEL 
      IF (X.NE.0.) G2=G2+ALOG(2.*ABS(X))                                 VORVEL 
      IF (X.LT.0.) G2=-G2                                                VORVEL 
      GO TO 350                                                          VORVEL 
340   G2=0.                                                              VORVEL 
      ARG=(X+D)/ABS(Y)                                                   VORVEL 
      IF (ARG.GT.0.) G2=ALOG(ARG)                                        VORVEL 
350   G3=0.                                                              VORVEL 
      C1=D                                                               VORVEL 
      IF (.NOT.SUB) GO TO 360                                            VORVEL 
      C1=X+D                                                             VORVEL 
      G3=-100.                                                           VORVEL 
      IF (Y.NE.0.) G3=ALOG(ABS(Y))                                       VORVEL 
360   C2=0.                                                              VORVEL 
      IF (Y.NE.0.) C2=C1/Y2                                              VORVEL 
      H=SB1*H1-B*(G2-G3)                                                 VORVEL 
      IF (SB1.EQ.0.) H2=B*D/B3-G2+G3                                     VORVEL 
      IF (SB1.NE.0.) H2=B*H1/SB1-G2+G3                                   VORVEL 
      UC=F1                                                              VORVEL 
      VS=-B*F1                                                           VORVEL 
      WS=H-Y*C2                                                          VORVEL 
      VC=VS                                                              VORVEL 
      WC=WS                                                              VORVEL 
      IF (C.EQ.0.) C2=0.                                                 VORVEL 
      C4=0.                                                              VORVEL 
      C5=G2/2.                                                           VORVEL 
      C6=0.                                                              VORVEL 
      IF (C.EQ.0.) GO TO 370                                             VORVEL 
      C3=(X*C2+SGN*G2)/2.                                                VORVEL 
      C4=((X2-SGN*Y2/2.)*G2-1.5*X*D)/(2.*CC)                             VORVEL 
      C5=(D-X*G2)/C                                                      VORVEL 
370   CONTINUE                                                           VORVEL 
      WQ=WQ-C4                                                           VORVEL 
      WQT=C5-C4-G3/2.                                                    VORVEL 
      IF (T1.NE.0.) GO TO 380                                            VORVEL 
      WL=A*WQ                                                            VORVEL 
      WLS=A*WQT                                                          VORVEL 
      WLT=WLS                                                            VORVEL 
      GO TO 410                                                          VORVEL 
380   SL=T3*F1/T1                                                        VORVEL 
      UL=SL                                                              VORVEL 
      VL=-(B+T6/T1)*SL/2.                                                VORVEL 
      G=E*G1-T6*G2                                                       VORVEL 
      TL=T3*T5*G                                                         VORVEL 
      IF (C.EQ.0.) TL=TL-B*D/T1                                          VORVEL 
      IF (C.NE.0.) TL=TL+(T6*D/T1+Y*(SGN*G2-C3))/C                       VORVEL 
      WL=TL+A*WQ                                                         VORVEL 
      ULS=SL+F1                                                          VORVEL 
      VLS=(A*F1-(AB+T6/T1)*ULS)/2.                                       VORVEL 
      WLS=TL+G/T1-Y*C2+A*WQT                                             VORVEL 
      ULT=ULS                                                            VORVEL 
      VLT=VLS                                                            VORVEL 
      WLT=WLS                                                            VORVEL 
390   IF (BPOS) GO TO 420                                                VORVEL 
      UC=-UC                                                             VORVEL 
      WC=-WC                                                             VORVEL 
      UL=-UL                                                             VORVEL 
      WL=-WL                                                             VORVEL 
      ULT=-ULT                                                           VORVEL 
      WLT=-WLT                                                           VORVEL 
      GO TO 420                                                          VORVEL 
400   UC=0.                                                              VORVEL 
      VC=0.                                                              VORVEL 
      WC=0.                                                              VORVEL 
      WL=0.                                                              VORVEL 
      WLT=0.                                                             VORVEL 
410   UL=0.                                                              VORVEL 
      VL=0.                                                              VORVEL 
      ULT=0.                                                             VORVEL 
      VLT=0.                                                             VORVEL 
      GO TO 390                                                          VORVEL 
420   CONTINUE                                                           VORVEL 
C*                                                                       VORVEL 
      IF( NOPT(1).EQ.1 .AND. NOPT(4).EQ.0 ) GO TO 430                    VORVEL 
      UL = .0                                                            VORVEL 
      VL = 0.                                                            VORVEL 
      WL = 0.                                                            VORVEL 
      ULT = 0.                                                           VORVEL 
      VLT = 0.                                                           VORVEL 
      WLT = 0.                                                           VORVEL 
  430 CONTINUE                                                           VORVEL 
C*                                                                       VORVEL 
      RETURN                                                             VORVEL 
      END                                                                VORVEL 
      OVERLAY(LWB,2,3)                                                   WNGVEL 
C     OVERLAY(LWB,2,3)                                                   WNGVEL 
      PROGRAM WNGVEL                                                     WNGVEL 
C                                                                        WNGVEL 
C     *******************************************VERSION B00************ WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE THE THREE COMPONENTS OF VELOCITY INDUCED AT SPECIFIED      WNGVEL 
C     CONTROL POINTS BY VORTEX PANELS LOCATED ON WING, FIN (VERTICAL     WNGVEL 
C     TAIL), OR CANARD (HORIZONTAL TAIL) SURFACES.                       WNGVEL 
C                                                                        WNGVEL 
C                                                                        WNGVEL 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP WNGVEL 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       WNGVEL 
      COMMON /PARAM/ NBODY,NWING,NPANEL,LBC,THK,MACH,ALPHA,REFA          WNGVEL 
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EM,PRINT,NWTHK         WNGVEL 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),TT(20),NWT(2 WNGVEL 
     10),SPNW(20),XLEW(20),BEL(20),ZLEW(20),XS(20),YS(20),ZS(20)         WNGVEL 
      COMMON /COMPV/ XJ,YJ,ZJ,AL,BL,CL,SUB,BPOS,M,NSIDE                  WNGVEL 
      COMMON /POINT/ ARRAY(6000)                                         WNGVEL 
      COMMON /SCRAT/ BLOCK(7500)                                         WNGVEL 
      COMMON /TRAN/ SIND,COSD,TAND,SINT,COST,CONTD,SINTI,COSTI,CON,BCON, WNGVEL 
     1SINDI,COSDI,MIDFIN,FIN,VENTRL                                      WNGVEL 
      COMMON /BTHET/ THETI(600)                                          WNGVEL 
      COMMON /PI/ PI,RADEG,DEGRAD                                        WNGVEL 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, WNGVEL 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        WNGVEL 
C                                                                        WNGVEL 
      DIMENSION XPT(600), YPT(600), ZPT(600), THET(600), DELTA(600), XC( WNGVEL 
     130,20), YC(30,20), ZC(30,20), DELTI(600), USAVE(60), VSAVE(60), WS WNGVEL 
     2AVE(60), ASAVE(60), XCPT(600), YCPT(600), ZCPT(600), ZK(2,2), A(30 WNGVEL 
     3), CI(30), CO(30), AC(600), UC(600), VC(600), WC(600), COSBD(600), WNGVEL 
     4 SINBD(600), TANBD(600), DC(60), UL(30), VL(30), WL(30), AN(30), Z WNGVEL 
     5U(30,20)                                                           WNGVEL 
C                                                                        WNGVEL 
      EQUIVALENCE (ARRAY(1),XPT(1)), (ARRAY(601),YPT(1)), (ARRAY(1201),Z WNGVEL 
     1PT(1)), (ARRAY(1801),THET(1)), (ARRAY(2401),DELTA(1)), (ARRAY(3001 WNGVEL 
     2),XC(1)), (ARRAY(3601),YC(1)), (ARRAY(4201),ZC(1)), (ARRAY(4801),D WNGVEL 
     3ELTI(1)), (ARRAY(5401),USAVE(1)), (ARRAY(5461),VSAVE(1)), (ARRAY(5 WNGVEL 
     4521),WSAVE(1)), (ARRAY(5581),ASAVE(1)), (BLOCK(1),XCPT(1)), (BLOCK WNGVEL 
     5(601),YCPT(1)), (BLOCK(1441),A(1)), (BLOCK(1471),CI(1)), (BLOCK(15 WNGVEL 
     601),CO(1)), (BLOCK(1531),AC(1)), (BLOCK(2131),UC(1)), (BLOCK(2731) WNGVEL 
     7,VC(1)), (BLOCK(3331),WC(1)), (BLOCK(3931),COSBD(1)), (BLOCK(4531) WNGVEL 
     8,SINBD(1)), (BLOCK(5131),TANBD(1)), (BLOCK(5731),DC(1)), (BLOCK(57 WNGVEL 
     991),ZCPT(1)), (BLOCK(6781),UL(1)), (BLOCK(6811),VL(1)), (BLOCK(684 WNGVEL 
     $1),WL(1)), (BLOCK(6871),AN(1)), (BLOCK(6901),ZU(1))                WNGVEL 
C                                                                        WNGVEL 
      LOGICAL THK,LBC,SUB,BPOS,FLAG,MIDFIN,FIN,VENTRL                    WNGVEL 
      INTEGER PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE WNGVEL 
     19,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                        WNGVEL 
      REAL MACH                                                          WNGVEL 
C                                                                        WNGVEL 
      IF (MACH.GT.1.) GO TO 510                                          WNGVEL 
      SUB=MACH.LT.1.0                                                    WNGVEL 
      SGN=-1.0                                                           WNGVEL 
      FLAG=.FALSE.                                                       WNGVEL 
      NYC=1                                                              WNGVEL 
      IF (ABS(YC(1,1)).LE.EPSWV) NYC=0                                   WNGVEL 
      IF (SUB) SGN=1.0                                                   WNGVEL 
      BETA=SQRT(ABS(MACH*MACH-1.0))                                      WNGVEL 
      CON=1./(2.*PI)                                                     WNGVEL 
      IF (SUB) CON=CON/2.                                                WNGVEL 
      BCON=BETA*CON                                                      WNGVEL 
      IF (NPART.NE.2) GO TO 10                                           WNGVEL 
      REWIND TAPE7                                                       WNGVEL 
      READ (TAPE7) (XCPT(N),N=1,600),(YCPT(N),N=1,600),(ZCPT(N),N=1,600) WNGVEL 
     1,(THET(N),N=1,600),(DELTA(N),N=1,600)                              WNGVEL 
      REWIND TAPE7                                                       WNGVEL 
      GO TO 30                                                           WNGVEL 
10    DO 20 N=1,NWING                                                    WNGVEL 
      XCPT(N)=XPT(N)                                                     WNGVEL 
      YCPT(N)=YPT(N)                                                     WNGVEL 
20    ZCPT(N)=ZPT(N)                                                     WNGVEL 
30    CONTINUE                                                           WNGVEL 
      DO 40 N=1,NWING                                                    WNGVEL 
      BD=BETA*TAN(DELTA(N))                                              WNGVEL 
      TANBD(N)=BD                                                        WNGVEL 
      ARG=1.+SGN*BD*BD                                                   WNGVEL 
      IF (ARG.LT.0.) GO TO 500                                           WNGVEL 
      COSBD(N)=1./SQRT(ARG)                                              WNGVEL 
40    SINBD(N)=BD*COSBD(N)                                               WNGVEL 
C                                                                        WNGVEL 
C     I IS THE INDEX OF THE CONTROL POINT                                WNGVEL 
C     J IS THE INDEX OF THE INFLUENCING PANEL                            WNGVEL 
C                                                                        WNGVEL 
      DO 490 I=1,NPOINT                                                  WNGVEL 
      IF (NPART.EQ.2) GO TO 50                                           WNGVEL 
      SINTI=SIN(THET(I))                                                 WNGVEL 
      COSTI=COS(THET(I))                                                 WNGVEL 
      SINDI=SIN(DELTA(I))                                                WNGVEL 
      COSDI=COS(DELTA(I))                                                WNGVEL 
      GO TO 60                                                           WNGVEL 
50    SINTI=SIN(THETI(I))                                                WNGVEL 
      COSTI=COS(THETI(I))                                                WNGVEL 
      SINDI=SIN(DELTI(I))                                                WNGVEL 
      COSDI=COS(DELTI(I))                                                WNGVEL 
60    XI=XPT(I)                                                          WNGVEL 
      YI=YPT(I)                                                          WNGVEL 
      ZI=ZPT(I)                                                          WNGVEL 
      J=0                                                                WNGVEL 
      JJ=0                                                               WNGVEL 
      J2=0                                                               WNGVEL 
      N2=0                                                               WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE INFLUENCE OF EACH WING SEGMENT                             WNGVEL 
C                                                                        WNGVEL 
      DO 450 NS=1,NSEG                                                   WNGVEL 
      NR=NROW(NS)                                                        WNGVEL 
      NC=NCOL(NS)                                                        WNGVEL 
      NR1=NR+1                                                           WNGVEL 
      NR2=2*NR                                                           WNGVEL 
      NT=NWT(NS)                                                         WNGVEL 
      FIN=.FALSE.                                                        WNGVEL 
      MIDFIN=.FALSE.                                                     WNGVEL 
      VENTRL=.FALSE.                                                     WNGVEL 
      IF (NT.NE.0.AND.COSS(NS).LE..70711) FIN=.TRUE.                     WNGVEL 
      IF (.NOT.FIN) GO TO 70                                             WNGVEL 
      IF (NYC.EQ.0.AND.ABS(COSS(NS)).LE.EPSWV) MIDFIN=.TRUE.             WNGVEL 
      IF (SINS(NS).LT.0.) VENTRL=.TRUE.                                  WNGVEL 
70    CONTINUE                                                           WNGVEL 
      JSAVE=J                                                            WNGVEL 
      JJSAVE=JJ                                                          WNGVEL 
      J2SAVE=J2                                                          WNGVEL 
      NI=N2+1                                                            WNGVEL 
      IF (NS.GT.1.AND.NT.NE.0) NI=NI+1                                   WNGVEL 
      DO 80 K=1,NR2                                                      WNGVEL 
      USAVE(K)=0.                                                        WNGVEL 
      VSAVE(K)=0.                                                        WNGVEL 
      WSAVE(K)=0.                                                        WNGVEL 
80    ASAVE(K)=0.                                                        WNGVEL 
C                                                                        WNGVEL 
C     IF FLAG IS TRUE, AN ADDITIONAL COLUMN OF VORTEX PANELS             WNGVEL 
C     EXTENDS FROM THE CENTER LINE TO THE INBOARD EDGE OF THE            WNGVEL 
C     WING, HORIZONTAL TAIL, OR CANARD                                   WNGVEL 
C                                                                        WNGVEL 
      IF (NS.EQ.1.AND.NYC.NE.0) FLAG=.TRUE.                              WNGVEL 
      MYC=1                                                              WNGVEL 
      IF (ABS(YC(1,NI)).LE.EPSWV) MYC=0                                  WNGVEL 
      IF (NS.GT.1.AND.NT.EQ.1.AND.MYC.NE.0) FLAG=.TRUE.                  WNGVEL 
90    N2=NI+NC-1                                                         WNGVEL 
      IF (FLAG) N2=NI                                                    WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE INFLUENCE OF EACH COLUMN OF PANELS                         WNGVEL 
C                                                                        WNGVEL 
      DO 410 N=NI,N2                                                     WNGVEL 
      J1=1+J2                                                            WNGVEL 
      J2=J1+NR2-1                                                        WNGVEL 
      JL=J1                                                              WNGVEL 
      JT=J1+NR                                                           WNGVEL 
      US=0.                                                              WNGVEL 
      VS=0.                                                              WNGVEL 
      WS=0.                                                              WNGVEL 
      AS=0.                                                              WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE INFLUENCE OF UPPER AND LOWER SURFACES                      WNGVEL 
C                                                                        WNGVEL 
      DO 400 NN=1,2                                                      WNGVEL 
      NSIDE=NN                                                           WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE INFLUENCE OF EACH PANEL                                    WNGVEL 
C                                                                        WNGVEL 
      DO 400 L=1,NR1                                                     WNGVEL 
      J=J+1                                                              WNGVEL 
      IF (L.EQ.NR1) GO TO 270                                            WNGVEL 
      JJ=JJ+1                                                            WNGVEL 
      IF (FLAG) GO TO 120                                                WNGVEL 
      SIND=SINBD(JJ)                                                     WNGVEL 
      COSD=COSBD(JJ)                                                     WNGVEL 
      TAND=TANBD(JJ)                                                     WNGVEL 
      TANB=TAND/BETA                                                     WNGVEL 
      THETA=THET(JJ)                                                     WNGVEL 
      IF (FIN) THETA=THETA-.5*PI                                         WNGVEL 
      IF (VENTRL) THETA=-THETA-PI                                        WNGVEL 
      COST=COS(THETA)                                                    WNGVEL 
      SINT=SIN(THETA)                                                    WNGVEL 
      DCOST=1./COST                                                      WNGVEL 
      DO 110 K=1,2                                                       WNGVEL 
      N1=N+K-1                                                           WNGVEL 
      DO 110 MM=1,2                                                      WNGVEL 
      M=MM                                                               WNGVEL 
      M1=L+M-1                                                           WNGVEL 
      IF (FIN) GO TO 100                                                 WNGVEL 
      DX=XCPT(JJ)-XC(M1,N1)                                              WNGVEL 
      DY=YCPT(JJ)-YC(M1,N1)                                              WNGVEL 
      ZK(M,K)=ZCPT(JJ)-DCOST*(DX*TANB+DY*SINT)                           WNGVEL 
      GO TO 110                                                          WNGVEL 
  100 IF (NSIDE.EQ.1) ZK(M,K)=ZU(M1,N1)                                  WNGVEL 
      IF (NSIDE.EQ.2) ZK(M,K)=ZC(M1,N1)                                  WNGVEL 
  110 CONTINUE                                                           WNGVEL 
      GO TO 130                                                          WNGVEL 
120   THETA=0.                                                           WNGVEL 
      DXC=XC(L+1,NI)-XC(L,NI)                                            WNGVEL 
      IF (NSIDE.EQ.1) DZC=ZU(L+1,NI)-ZU(L,NI)                            WNGVEL 
      IF (NSIDE.EQ.2) DZC=ZC(L+1,NI)-ZC(L,NI)                            WNGVEL 
      TAND=BETA*DZC/DXC                                                  WNGVEL 
      ARG=1.+SGN*TAND*TAND                                               WNGVEL 
      IF (ARG.LT.0.) GO TO 500                                           WNGVEL 
      SARG=SQRT(ARG)                                                     WNGVEL 
      COSD=1./SARG                                                       WNGVEL 
      SIND=TAND*COSD                                                     WNGVEL 
      CL=DXC*SARG                                                        WNGVEL 
      COST=1.0                                                           WNGVEL 
      SINT=0.                                                            WNGVEL 
130   CONTINUE                                                           WNGVEL 
      COSTD=COST*COSD                                                    WNGVEL 
      CONTD=SQRT(SGN*TAND*TAND+COST*COST)                                WNGVEL 
      COSDTD=1./(COSD*CONTD)                                             WNGVEL 
      CONTDD=1./CONTD                                                    WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE PANEL LEADING AND TRAILING EDGE SLOPES                     WNGVEL 
C                                                                        WNGVEL 
      BL=0.                                                              WNGVEL 
      DO 150 MM=1,2                                                      WNGVEL 
      M=MM                                                               WNGVEL 
      IF (FLAG) GO TO 140                                                WNGVEL 
      M1=L+M-1                                                           WNGVEL 
      DXC=XC(M1,N+1)-XC(M1,N)                                            WNGVEL 
      DYC=YC(M1,N+1)-YC(M1,N)                                            WNGVEL 
      IF (VENTRL) DYC=-DYC                                               WNGVEL 
      DZC=ZK(M,2)-ZK(M,1)                                                WNGVEL 
      DYC=BETA*DYC                                                       WNGVEL 
      DZC=BETA*DZC                                                       WNGVEL 
      DZL=DZC*COSTD-DXC*SIND                                             WNGVEL 
      DYL=DYC*COSD*CONTD+SINT*DZL*CONTDD                                 WNGVEL 
      DXL=(DXC*COSTD+DZC*SIND*SGN)*COSDTD                                WNGVEL 
      BL=DXL/DYL                                                         WNGVEL 
140   IF (M.EQ.1) BLE=BL                                                 WNGVEL 
      IF (M.EQ.2) BTE=BL                                                 WNGVEL 
150   CONTINUE                                                           WNGVEL 
      AL=BLE-BTE                                                         WNGVEL 
      A(L)=AL                                                            WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE PANEL CHORD LENGTHS                                        WNGVEL 
C                                                                        WNGVEL 
      DO 260 K=1,2                                                       WNGVEL 
      N1=N+K-1                                                           WNGVEL 
      IF (FLAG) N1=NI                                                    WNGVEL 
      IF (FLAG) GO TO 160                                                WNGVEL 
      DXC=XC(L+1,N1)-XC(L,N1)                                            WNGVEL 
      DZC=ZK(2,K)-ZK(1,K)                                                WNGVEL 
      CL=(DXC*COSTD+BETA*DZC*SIND*SGN)*COSDTD                            WNGVEL 
160   IF (K.EQ.1) CI(L)=CL                                               WNGVEL 
      IF (K.EQ.2) CO(L)=CL                                               WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE INFLUENCE OF PANEL CORNERS                                 WNGVEL 
C                                                                        WNGVEL 
      DO 260 MM=1,2                                                      WNGVEL 
      M=MM                                                               WNGVEL 
      M1=L+M-1                                                           WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE CONTROL POINT IN PANEL COORDINATE SYSTEM                   WNGVEL 
C                                                                        WNGVEL 
      DX=XI-XC(M1,N1)                                                    WNGVEL 
      DY=YI-YC(M1,N1)                                                    WNGVEL 
      IF (VENTRL) DY=-DY                                                 WNGVEL 
      IF (FLAG) GO TO 170                                                WNGVEL 
      DZ=ZI-ZK(M,K)                                                      WNGVEL 
      GO TO 180                                                          WNGVEL 
170   IF (K.EQ.1) DY=YI                                                  WNGVEL 
      IF (NSIDE.EQ.1) DZ=ZI-ZU(M1,N1)                                    WNGVEL 
      IF (NSIDE.EQ.2) DZ=ZI-ZC(M1,N1)                                    WNGVEL 
180   CONTINUE                                                           WNGVEL 
      DY=BETA*DY                                                         WNGVEL 
      DZ=BETA*DZ                                                         WNGVEL 
      XJ=(DX*COSTD+DZ*SIND*SGN)*COSDTD                                   WNGVEL 
      ZJ=DZ*COSTD-DX*SIND                                                WNGVEL 
      YJ=DY*COSD*CONTD+SINT*ZJ*CONTDD                                    WNGVEL 
      ZJ=ZJ-DY*COSD*SINT                                                 WNGVEL 
      IF (M.EQ.1) BL=BLE                                                 WNGVEL 
      IF (M.EQ.2) BL=BTE                                                 WNGVEL 
      IF (K.EQ.2) GO TO 220                                              WNGVEL 
      IF (M.EQ.2) GO TO 190                                              WNGVEL 
      CALL VORPAN (UCIR,VCIR,WCIR,ULIR,VLIR,WLIR,X,X,X,VEIR,WEIR,VAIR,WA WNGVEL 
     1IR,USIR,VSIR)                                                      WNGVEL 
      GO TO 200                                                          WNGVEL 
190   CALL VORPAN (RCIR,SCIR,TCIR,X,X,X,RLIR,SLIR,TLIR,SEIR,TEIR,SAIR,TA WNGVEL 
     1IR,RSIR,SSIR)                                                      WNGVEL 
200   IF (MIDFIN) GO TO 260                                              WNGVEL 
      DY=-YI-YC(M1,N1)                                                   WNGVEL 
      IF (FLAG.AND.K.EQ.1) DY=-YI                                        WNGVEL 
      IF (VENTRL) DY=-DY                                                 WNGVEL 
      DY=BETA*DY                                                         WNGVEL 
      ZJ=DZ*COSTD-DX*SIND                                                WNGVEL 
      YJ=DY*COSD*CONTD+SINT*ZJ*CONTDD                                    WNGVEL 
      ZJ=ZJ-DY*COSD*SINT                                                 WNGVEL 
      IF (M.EQ.2) GO TO 210                                              WNGVEL 
      CALL VORPAN (UCIL,VCIL,WCIL,ULIL,VLIL,WLIL,X,X,X,VEIL,WEIL,VAIL,WA WNGVEL 
     1IL,USIL,VSIL)                                                      WNGVEL 
      GO TO 260                                                          WNGVEL 
210   CALL VORPAN (RCIL,SCIL,TCIL,X,X,X,RLIL,SLIL,TLIL,SEIL,TEIL,SAIL,TA WNGVEL 
     1IL,RSIL,SSIL)                                                      WNGVEL 
      GO TO 260                                                          WNGVEL 
220   IF (M.EQ.2) GO TO 230                                              WNGVEL 
      CALL VORPAN (UCOR,VCOR,WCOR,ULOR,VLOR,WLOR,X,X,X,VEOR,WEOR,VAOR,WA WNGVEL 
     1OR,USOR,VSOR)                                                      WNGVEL 
      GO TO 240                                                          WNGVEL 
230   CALL VORPAN (RCOR,SCOR,TCOR,X,X,X,RLOR,SLOR,TLOR,SEOR,TEOR,SAOR,TA WNGVEL 
     1OR,RSOR,SSOR)                                                      WNGVEL 
240   IF (MIDFIN) GO TO 260                                              WNGVEL 
      DY=-YI-YC(M1,N1)                                                   WNGVEL 
      IF (FLAG.AND.K.EQ.1) DY=-YI                                        WNGVEL 
      IF (VENTRL) DY=-DY                                                 WNGVEL 
      DY=BETA*DY                                                         WNGVEL 
      ZJ=DZ*COSTD-DX*SIND                                                WNGVEL 
      YJ=DY*COSD*CONTD+SINT*ZJ*CONTDD                                    WNGVEL 
      ZJ=ZJ-DY*COSD*SINT                                                 WNGVEL 
      IF (M.EQ.2) GO TO 250                                              WNGVEL 
      CALL VORPAN (UCOL,VCOL,WCOL,ULOL,VLOL,WLOL,X,X,X,VEOL,WEOL,VAOL,WA WNGVEL 
     1OL,USOL,VSOL)                                                      WNGVEL 
      GO TO 260                                                          WNGVEL 
250   CALL VORPAN (RCOL,SCOL,TCOL,X,X,X,RLOL,SLOL,TLOL,SEOL,TEOL,SAOL,TA WNGVEL 
     1OL,RSOL,SSOL)                                                      WNGVEL 
260   CONTINUE                                                           WNGVEL 
      GO TO 320                                                          WNGVEL 
C                                                                        WNGVEL 
C     COMPUTE INFLUENCE OF WAKE- NOTE- PLANAR WAKE ASSUMED               WNGVEL 
C                                                                        WNGVEL 
270   SINT=SINS(NS)                                                      WNGVEL 
      COST=COSS(NS)                                                      WNGVEL 
      IF (.NOT.FIN) GO TO 280                                            WNGVEL 
      SINT=0.                                                            WNGVEL 
      COST=1.0                                                           WNGVEL 
280   CONTINUE                                                           WNGVEL 
      TAND=0.                                                            WNGVEL 
      SIND=0.                                                            WNGVEL 
      COSD=1.0                                                           WNGVEL 
      BCOS=BETA*COST                                                     WNGVEL 
      BSIN=BETA*SINT                                                     WNGVEL 
      CONTD=COST                                                         WNGVEL 
      BL=0.                                                              WNGVEL 
      IF (FLAG) GO TO 290                                                WNGVEL 
      DXC=XC(NR1,N+1)-XC(NR1,N)                                          WNGVEL 
      DYC=YC(NR1,N+1)-YC(NR1,N)                                          WNGVEL 
      DZC=ZC(NR1,N+1)-ZC(NR1,N)                                          WNGVEL 
      IF (VENTRL) DYC=-DYC                                               WNGVEL 
      DYL=DYC*COST+DZC*SINT                                              WNGVEL 
      BL=DXC/(BETA*DYL)                                                  WNGVEL 
290   AL=0.                                                              WNGVEL 
      CL=1.0                                                             WNGVEL 
      M=1                                                                WNGVEL 
      DO 310 K=1,2                                                       WNGVEL 
      N1=N+K-1                                                           WNGVEL 
      IF (FLAG) N1=NI                                                    WNGVEL 
      XJ=XI-XC(NR1,N1)                                                   WNGVEL 
      DY=YI-YC(NR1,N1)                                                   WNGVEL 
      IF (FLAG.AND.K.EQ.1) DY=YI                                         WNGVEL 
      IF (VENTRL) DY=-DY                                                 WNGVEL 
      DZ=ZI-ZC(NR1,N1)                                                   WNGVEL 
      YJ=DY*BCOS+DZ*BSIN                                                 WNGVEL 
      ZJ=DZ*BCOS-DY*BSIN                                                 WNGVEL 
      IF (K.EQ.2) GO TO 300                                              WNGVEL 
      CALL VORPAN (X,X,X,X,X,X,X,X,X,VEIR,WEIR,VAIR,WAIR,X,X)            WNGVEL 
      IF (MIDFIN) GO TO 310                                              WNGVEL 
      DY=-YI-YC(NR1,N1)                                                  WNGVEL 
      IF (FLAG.AND.K.EQ.1) DY=-YI                                        WNGVEL 
      IF (VENTRL) DY=-DY                                                 WNGVEL 
      YJ=DY*BCOS+DZ*BSIN                                                 WNGVEL 
      ZJ=DZ*BCOS-DY*BSIN                                                 WNGVEL 
      CALL VORPAN (X,X,X,X,X,X,X,X,X,VEIL,WEIL,VAIL,WAIL,X,X)            WNGVEL 
      GO TO 310                                                          WNGVEL 
300   CALL VORPAN (X,X,X,X,X,X,X,X,X,VEOR,WEOR,VAOR,WAOR,X,X)            WNGVEL 
      IF (MIDFIN) GO TO 310                                              WNGVEL 
      DY=-YI-YC(NR1,N1)                                                  WNGVEL 
      IF (FLAG.AND.K.EQ.1) DY=-YI                                        WNGVEL 
      IF (VENTRL) DY=-DY                                                 WNGVEL 
      YJ=DY*BCOS+DZ*BSIN                                                 WNGVEL 
      ZJ=DZ*BCOS-DY*BSIN                                                 WNGVEL 
      CALL VORPAN (X,X,X,X,X,X,X,X,X,VEOL,WEOL,VAOL,WAOL,X,X)            WNGVEL 
      SEIR=0.                                                            WNGVEL 
      SEIL=0.                                                            WNGVEL 
      SEOL=0.                                                            WNGVEL 
      SEOR=0.                                                            WNGVEL 
      SAIR=0.                                                            WNGVEL 
      SAIL=0.                                                            WNGVEL 
      SAOL=0.                                                            WNGVEL 
      SAOR=0.                                                            WNGVEL 
      TAIR=0.                                                            WNGVEL 
      TAIL=0.                                                            WNGVEL 
      TAOL=0.                                                            WNGVEL 
      TAOR=0.                                                            WNGVEL 
      TEIR=0.                                                            WNGVEL 
      TEIL=0.                                                            WNGVEL 
      TEOR=0.                                                            WNGVEL 
      TEOL=0.                                                            WNGVEL 
310   CONTINUE                                                           WNGVEL 
320   CONTINUE                                                           WNGVEL 
C                                                                        WNGVEL 
C     COMBINE CORNER INFLUENCES TO OBTAIN PANEL VELOCITY COMPONENTS      WNGVEL 
C                                                                        WNGVEL 
      UAR=0.                                                             WNGVEL 
      VAR=VAIR-VAOR-SAIR+SAOR                                            WNGVEL 
      WAR=WAIR-WAOR-TAIR+TAOR                                            WNGVEL 
      UAL=0.                                                             WNGVEL 
      VAL=VAIL-VAOL-SAIL+SAOL                                            WNGVEL 
      WAL=WAIL-WAOL-TAIL+TAOL                                            WNGVEL 
      UIR=0.                                                             WNGVEL 
      VIR=VEIR-SEIR                                                      WNGVEL 
      WIR=WEIR-TEIR                                                      WNGVEL 
      UIL=0.                                                             WNGVEL 
      VIL=VEIL-SEIL                                                      WNGVEL 
      WIL=WEIL-TEIL                                                      WNGVEL 
      UOR=0.                                                             WNGVEL 
      VOR=VEOR-SEOR                                                      WNGVEL 
      WOR=WEOR-TEOR                                                      WNGVEL 
      UOL=0.                                                             WNGVEL 
      VOL=VEOL-SEOL                                                      WNGVEL 
      WOL=WEOL-TEOL                                                      WNGVEL 
      IF (L.EQ.NR1) GO TO 330                                            WNGVEL 
      ULR=ULIR-ULOR-RLIR+RLOR                                            WNGVEL 
      ULL=ULIL-ULOL-RLIL+RLOL                                            WNGVEL 
      VLR=VLIR-VLOR-SLIR+SLOR                                            WNGVEL 
      VLL=VLIL-VLOL-SLIL+SLOL                                            WNGVEL 
      WLR=WLIR-WLOR-TLIR+TLOR                                            WNGVEL 
      WLL=WLIL-WLOL-TLIL+TLOL                                            WNGVEL 
      USR=USIR-USOR-RSIR+RSOR                                            WNGVEL 
      USL=USIL-USOL-RSIL+RSOL                                            WNGVEL 
      VSR=VSIR-VSOR-SSIR+SSOR                                            WNGVEL 
      VSL=VSIL-VSOL-SSIL+SSOL                                            WNGVEL 
      WSR=UCIR-UCOR-RCIR+RCOR                                            WNGVEL 
      WSL=UCIL-UCOL-RCIL+RCOL                                            WNGVEL 
      UCR=WSR-ULR                                                        WNGVEL 
      UCL=WSL-ULL                                                        WNGVEL 
      VCR=VCIR-VCOR-SCIR+SCOR-VLR                                        WNGVEL 
      VCL=VCIL-VCOL-SCIL+SCOL-VLL                                        WNGVEL 
      WCR=WCIR-WCOR-TCIR+TCOR-WLR                                        WNGVEL 
      WCL=WCIL-WCOL-TCIL+TCOL-WLL                                        WNGVEL 
C                                                                        WNGVEL 
C     COMBINE CONTRIBUTIONS OF LEFT AND RIGHT WING PANELS AND TRANSFORM  WNGVEL 
C     VELOCITY COMPONENTS BACK TO ORIGINAL COORDINATE SYSTEM             WNGVEL 
C                                                                        WNGVEL 
      CALL TRANS (UCR,VCR,WCR,UCL,VCL,WCL,UC(J),VC(J),WC(J),AC(J))       WNGVEL 
      CALL TRANS (ULR,VLR,WLR,ULL,VLL,WLL,UL(L+1),VL(L+1),WL(L+1),AN(L+1 WNGVEL 
     1))                                                                 WNGVEL 
      CALL TRANS (USR,VSR,WSR,USL,VSL,WSL,USJ,VSJ,WSJ,ASJ)               WNGVEL 
      US=US+USJ                                                          WNGVEL 
      VS=VS+VSJ                                                          WNGVEL 
      WS=WS+WSJ                                                          WNGVEL 
      AS=AS+ASJ                                                          WNGVEL 
      IF (L.EQ.1) GO TO 360                                              WNGVEL 
330   CALL TRANS (UIR,VIR,WIR,UIL,VIL,WIL,UI,VI,WI,AI)                   WNGVEL 
      CALL TRANS (UOR,VOR,WOR,UOL,VOL,WOL,UO,VO,WO,AO)                   WNGVEL 
      CALL TRANS (UAR,VAR,WAR,UAL,VAL,WAL,UA,VA,WA,BA)                   WNGVEL 
      IF (L.EQ.NR1) GO TO 340                                            WNGVEL 
      UC(J)=UC(J)+UL(L)                                                  WNGVEL 
      VC(J)=VC(J)+VL(L)                                                  WNGVEL 
      WC(J)=WC(J)+WL(L)                                                  WNGVEL 
      AC(J)=AC(J)+AN(L)                                                  WNGVEL 
340   CONTINUE                                                           WNGVEL 
C                                                                        WNGVEL 
C     ADD CONTRIBUTION OF THE WAKE                                       WNGVEL 
C                                                                        WNGVEL 
      DO 350 K=2,L                                                       WNGVEL 
      K1=K-1                                                             WNGVEL 
      UW=UI*CI(K1)-UO*CO(K1)+UA*A(K1)                                    WNGVEL 
      VW=VI*CI(K1)-VO*CO(K1)+VA*A(K1)                                    WNGVEL 
      WW=WI*CI(K1)-WO*CO(K1)+WA*A(K1)                                    WNGVEL 
      AW=AI*CI(K1)-AO*CO(K1)+BA*A(K1)                                    WNGVEL 
      JK=JL+K-2                                                          WNGVEL 
      IF (NSIDE.EQ.2.AND.K.GT.2) JK=JK+NR                                WNGVEL 
      UC(JK)=UC(JK)+UW                                                   WNGVEL 
      VC(JK)=VC(JK)+VW                                                   WNGVEL 
      WC(JK)=WC(JK)+WW                                                   WNGVEL 
      AC(JK)=AC(JK)+AW                                                   WNGVEL 
      IF (L.EQ.NR1.AND.K.EQ.L) GO TO 350                                 WNGVEL 
      JM=JK+1                                                            WNGVEL 
      IF (NSIDE.EQ.2.AND.K.EQ.2) JM=JM+NR                                WNGVEL 
      UC(JM)=UC(JM)+UW                                                   WNGVEL 
      VC(JM)=VC(JM)+VW                                                   WNGVEL 
      WC(JM)=WC(JM)+WW                                                   WNGVEL 
      AC(JM)=AC(JM)+AW                                                   WNGVEL 
350   CONTINUE                                                           WNGVEL 
360   CONTINUE                                                           WNGVEL 
      IF (NSIDE.EQ.1) GO TO 380                                          WNGVEL 
      IF (L.NE.1) GO TO 370                                              WNGVEL 
C                                                                        WNGVEL 
C     SPECIAL CASE FOR LEADING EDGE PANELS                               WNGVEL 
C                                                                        WNGVEL 
      UC(JL)=UC(JL)+UC(J)                                                WNGVEL 
      VC(JL)=VC(JL)+VC(J)                                                WNGVEL 
      WC(JL)=WC(JL)+WC(J)                                                WNGVEL 
      AC(JL)=AC(JL)+AC(J)                                                WNGVEL 
      J=J-1                                                              WNGVEL 
370   IF (L.NE.NR1) GO TO 380                                            WNGVEL 
      J=J-1                                                              WNGVEL 
380   IF (NWING.LE.NMAX) GO TO 390                                       WNGVEL 
      IF (NPART.EQ.2) GO TO 390                                          WNGVEL 
      IF (I.LT.J1.OR.I.GT.J2) GO TO 390                                  WNGVEL 
      JS1=J1                                                             WNGVEL 
      JS2=J2                                                             WNGVEL 
      NRS=NR2                                                            WNGVEL 
390   CONTINUE                                                           WNGVEL 
400   CONTINUE                                                           WNGVEL 
      UC(JT)=US                                                          WNGVEL 
      VC(JT)=VS                                                          WNGVEL 
      WC(JT)=WS                                                          WNGVEL 
      AC(JT)=AS                                                          WNGVEL 
410   CONTINUE                                                           WNGVEL 
      IF (N.GT.NI) GO TO 450                                             WNGVEL 
      IF (.NOT.FLAG) GO TO 430                                           WNGVEL 
      FLAG=.FALSE.                                                       WNGVEL 
      J=JSAVE                                                            WNGVEL 
      JJ=JJSAVE                                                          WNGVEL 
      J2=J2SAVE                                                          WNGVEL 
      DO 420 K=1,NR2                                                     WNGVEL 
      JK=JSAVE+K                                                         WNGVEL 
      USAVE(K)=UC(JK)                                                    WNGVEL 
      VSAVE(K)=VC(JK)                                                    WNGVEL 
      WSAVE(K)=WC(JK)                                                    WNGVEL 
420   ASAVE(K)=AC(JK)                                                    WNGVEL 
      GO TO 90                                                           WNGVEL 
430   DO 440 K=1,NR2                                                     WNGVEL 
      JK=JSAVE+K                                                         WNGVEL 
      UC(K)=UC(JK)+USAVE(K)                                              WNGVEL 
      VC(K)=VC(JK)+VSAVE(K)                                              WNGVEL 
      WC(K)=WC(JK)+WSAVE(K)                                              WNGVEL 
440   AC(K)=AC(JK)+ASAVE(K)                                              WNGVEL 
450   CONTINUE                                                           WNGVEL 
      NWING=J                                                            WNGVEL 
      NWTHK=NWING                                                        WNGVEL 
      IF (NWING.LE.NMAX) GO TO 470                                       WNGVEL 
      IF (NPART.EQ.2) GO TO 470                                          WNGVEL 
C                                                                        WNGVEL 
C     STORE DIAGONAL BLOCKS OF AERODYNAMIC MATRIX IN DC ARRAY            WNGVEL 
C                                                                        WNGVEL 
      DO 460 J=1,NWING                                                   WNGVEL 
      IF (J.LT.JS1.OR.J.GT.JS2) GO TO 460                                WNGVEL 
      M=J-JS1+1                                                          WNGVEL 
      DC(M)=AC(J)                                                        WNGVEL 
      AC(J)=0.                                                           WNGVEL 
460   CONTINUE                                                           WNGVEL 
      WRITE (TAPE10) (DC(J),J=1,NRS)                                     WNGVEL 
470   CONTINUE                                                           WNGVEL 
      IF (IABS(PRINT).LT.4) GO TO 480                                    WNGVEL 
      WRITE (TAPE6,600) I                                                WNGVEL 
      WRITE (TAPE6,560) NWING                                            WNGVEL 
      WRITE (TAPE6,590) (UC(J),J=1,NWING)                                WNGVEL 
      WRITE (TAPE6,540) NWING                                            WNGVEL 
      WRITE (TAPE6,590) (VC(J),J=1,NWING)                                WNGVEL 
      WRITE (TAPE6,550) NWING                                            WNGVEL 
      WRITE (TAPE6,590) (WC(J),J=1,NWING)                                WNGVEL 
      WRITE (TAPE6,570) NWING                                            WNGVEL 
      WRITE (TAPE6,590) (AC(J),J=1,NWING)                                WNGVEL 
      IF (NWING.GT.NMAX) WRITE (TAPE6,580) NR                            WNGVEL 
      IF (NWING.GT.NMAX) WRITE (TAPE6,590) (DC(J),J=1,NRS)               WNGVEL 
480   WRITE (TAPE8) (UC(J),VC(J),WC(J),J=1,NWING)                        WNGVEL 
      WRITE (TAPE9) (AC(J),J=1,NWING)                                    WNGVEL 
490   CONTINUE                                                           WNGVEL 
      GO TO 520                                                          WNGVEL 
500   CONTINUE                                                           WNGVEL 
      WRITE (TAPE6,530)                                                  WNGVEL 
      WRITE (TAPE6,610)                                                  WNGVEL 
      CALL EXIT                                                          WNGVEL 
510   CONTINUE                                                           WNGVEL 
      WRITE (TAPE6,530)                                                  WNGVEL 
      WRITE (TAPE6,620)                                                  WNGVEL 
      CALL EXIT                                                          WNGVEL 
520   CONTINUE                                                           WNGVEL 
C                                                                        WNGVEL 
C                                                                        WNGVEL 
C                                                                        WNGVEL 
530   FORMAT (1H0,26H ERROR MESSAGE FROM WNGVEL)                         WNGVEL 
540   FORMAT (2X,10HVC(J),J=1,,I3)                                       WNGVEL 
550   FORMAT (2X,10HWC(J),J=1,,I3)                                       WNGVEL 
560   FORMAT (2X,10HUC(J),J=1,,I3)                                       WNGVEL 
570   FORMAT (2X,10HAC(J),J=1,,I3)                                       WNGVEL 
580   FORMAT (2X,10HDC(J),J=1,,I3)                                       WNGVEL 
590   FORMAT (1X,10F10.5)                                                WNGVEL 
600   FORMAT (1H0,22HAERODYNAMIC MATRIX, I=I3)                           WNGVEL 
610   FORMAT (1H0,43HERROR - WING PANEL SLOPE EXCEEDS MACH ANGLE)        WNGVEL 
620   FORMAT (1H0,108HTHE NONPLANAR BOUNDARY CONDITION OPTION IS NOT AVA WNGVEL 
     1ILABLE AT SUPERSONIC SPEEDS IN THIS VERSION OF THE PROGRAM/1X,44HR WNGVEL 
     2ERUN USING PLANAR BOUNDARY CONDITION OPTION)                       WNGVEL 
      END                                                                WNGVEL 
      SUBROUTINE VORPAN (UC,VC,WC,UL,VL,WL,ULT,VLT,WLT,VE,WE,VA,WA,UCS,V VORPAN 
     1CS)                                                                VORPAN 
C                                                                        VORPAN 
C     *******************************************VERSION B00************ VORPAN 
C                                                                        VORPAN 
C     COMPUTE THE THREE COMPONENTS OF VELOCITY INDUCED AT A SPECIFIED    VORPAN 
C     CONTROL POINT BY CONSTANT AND LINEARLY VARYING VORTEX              VORPAN 
C     DISTRIBUTIONS ON A SWEPT QUADRILATERAL PANEL. ALSO COMPUTE THE     VORPAN 
C     THREE COMPONENTS OF VELOCITY INDUCED BY THE CONCENTRATED VORTEX    VORPAN 
C     LYING ALONG THE DOWNSTREAM EXTENSION OF THE INBOARD EDGE AS WELL   VORPAN 
C     AS THE VORTEX SHEET LOCATED DOWNSTREAM OF THE TRAILING EDGE        VORPAN 
C     BETWEEN THE INBOARD EDGE AND THE INTERSECTION OF THE LEADING AND   VORPAN 
C     TRAILING EDGES OF THE PANEL.                                       VORPAN 
C                                                                        VORPAN 
C     UC, VC, WC ARE VELOCITY COMPONENTS INDUCED BY CONSTANT CHORDWISE   VORPAN 
C     AND SPANWISE VORTEX DISTRIBUTION                                   VORPAN 
C                                                                        VORPAN 
C     UL, VL, WL, ARE VELOCITY COMPONENTS INDUCED BY LEADING EDGE OF     VORPAN 
C     LINEAR CHORDWISE, CONSTANT SPANWISE VORTEX DISTRIBUTION            VORPAN 
C                                                                        VORPAN 
C     ULT, VLT, WLT ARE VELOCITY COMPONENTS INDUCED BY TRAILING EDGE OF  VORPAN 
C     LINEAR CHORDWISE, CONSTANT SPANWISE VORTEX DISTRIBUTION            VORPAN 
C                                                                        VORPAN 
C     UCS,VCS ARE VELOCITY COMPONENTS INDUCED BY CONSTANT CHORDWISE      VORPAN 
C     AND SPANWISE SOURCE DISTRIBUTIONS                                  VORPAN 
C                                                                        VORPAN 
C                                                                        VORPAN 
C     VE, WE ARE VELOCITY COMPONENTS INDUCED BY CONCENTRATED VORTICES    VORPAN 
C     IN THE WAKE                                                        VORPAN 
C                                                                        VORPAN 
C     VA, WA ARE VELOCITY COMPONENTS INDUCED BY VORTEX SHEET IN THE      VORPAN 
C     WAKE                                                               VORPAN 
C                                                                        VORPAN 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           VORPAN 
      COMMON /COMPV/ X,YL,Z,AL,BL,C,SUB,BPOS,ML,NS                       VORPAN 
      COMMON /PI/ PI,RADEG,DEGRAD                                        VORPAN 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, VORPAN 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        VORPAN 
C                                                                        VORPAN 
      DIMENSION Q(51), XI(51), QX(51)                                    VORPAN 
C                                                                        VORPAN 
      LOGICAL SUB,SUP,BPOS,SUPLE,LBC                                     VORPAN 
C                                                                        VORPAN 
      A=AL                                                               VORPAN 
      B=ABS(BL)                                                          VORPAN 
      BPOS=BL.GE.0.                                                      VORPAN 
      IF (BL.LT.0.) A=-AL                                                VORPAN 
      Y=YL                                                               VORPAN 
      IF (BL.LT.0.) Y=-YL                                                VORPAN 
      IF (ABS(C).LE.EPSVP) C=0.                                          VORPAN 
      CC=C*C                                                             VORPAN 
      SUP=.NOT.SUB                                                       VORPAN 
      SUPLE=.FALSE.                                                      VORPAN 
      IF (ABS(B).LE.EPSVP) B=0.                                          VORPAN 
      AB=A+B                                                             VORPAN 
      SGN=1.0                                                            VORPAN 
      IF (SUP) SGN=-1.0                                                  VORPAN 
      B1=SGN+B*B                                                         VORPAN 
      SB1=SQRT(ABS(B1))                                                  VORPAN 
      IF (ABS(Y).LE.EPSVP) Y=0.                                          VORPAN 
      IF (ABS(Z).LE.EPSVP) Z=0.                                          VORPAN 
      X2=X*X                                                             VORPAN 
      Y2=Y*Y                                                             VORPAN 
      Z2=Z*Z                                                             VORPAN 
      R2=Y2+Z2                                                           VORPAN 
      R=SQRT(R2)                                                         VORPAN 
      VA=0.                                                              VORPAN 
      VE=0.                                                              VORPAN 
      WA=0.                                                              VORPAN 
      WE=0.                                                              VORPAN 
      IF (SUB) GO TO 10                                                  VORPAN 
      IF (ABS(B).LT.1.0) SUPLE=.TRUE.                                    VORPAN 
      IF (X.LT.0.) GO TO 440                                             VORPAN 
10    D=0.                                                               VORPAN 
      D2=X2+SGN*R2                                                       VORPAN 
      IF (D2.GT.0.) D=SQRT(D2)                                           VORPAN 
      AZ=A*Z                                                             VORPAN 
      T1=C-A*Y                                                           VORPAN 
      IF (ABS(T1).LE.EPSVP) T1=0.                                        VORPAN 
      T2=T1*T1                                                           VORPAN 
      T3=X-B*Y                                                           VORPAN 
      AT3=ABS(T3)                                                        VORPAN 
      IF (AT3.LE.EPSVP) AT3=0.                                           VORPAN 
      T4=AZ*AZ                                                           VORPAN 
      T5=T2+T4                                                           VORPAN 
      IF (T5.NE.0.) T5=1./T5                                             VORPAN 
      T6=B*C-A*X                                                         VORPAN 
      T7=T6*T6                                                           VORPAN 
      T8=T7+SGN*(T2+T4)                                                  VORPAN 
      T9=T1*T3+A*B*Z2                                                    VORPAN 
      E=SQRT(ABS(T8))                                                    VORPAN 
      B2=SGN*(C*Y-A*R2)                                                  VORPAN 
      B3=B*X+SGN*Y                                                       VORPAN 
      B4=T5*T6                                                           VORPAN 
      TZ=T3*T3+B1*Z2                                                     VORPAN 
      IF (TZ.GT.0.) ST3=SQRT(TZ)                                         VORPAN 
      WQ=0.                                                              VORPAN 
C                                                                        VORPAN 
C     EVALUATION OF DOWNWASH INDUCED BY TRAILING VORTEX SHEET            VORPAN 
C                                                                        VORPAN 
      IF (A.EQ.0..OR.ML.EQ.2) GO TO 160                                  VORPAN 
      INT=0                                                              VORPAN 
      MAX=11                                                             VORPAN 
      XI(1)=0.                                                           VORPAN 
      XO=0.                                                              VORPAN 
      IF (T1.NE.0.) XO=T3/T1                                             VORPAN 
      BO=B-A*XO                                                          VORPAN 
      SBO=SGN+BO*BO                                                      VORPAN 
      EL=1.0                                                             VORPAN 
      IF (SUP.AND.Y.GT.0..AND.ABS(BO).LE.1.) EL=T5*(T9-E*ABS(Z))         VORPAN 
      IF (EL.LE.0.) GO TO 150                                            VORPAN 
      IF (EL.GT.1.0) EL=1.0                                              VORPAN 
      DXI=EL/FLOAT(MAX-1)                                                VORPAN 
      EPX=.005*EL                                                        VORPAN 
      IF (Y.EQ.0..OR.ABS(Z).GT..10) GO TO 60                             VORPAN 
      IF(XO.LT.-EPX.OR.XO.GT.EL+EPX) GO TO 60                            TRNSM2 
      INT=1                                                              VORPAN 
      MAX=13                                                             VORPAN 
      QM=0.                                                              VORPAN 
      IF (XO.LT..6*EL) MAX=8                                             VORPAN 
      IF (XO.LT..1*EL) MAX=4                                             VORPAN 
      IF (XO.LT.EPX) MAX=1                                               VORPAN 
      IF (MAX.EQ.1) GO TO 20                                             VORPAN 
      DXI=(XO-EPX)/FLOAT(MAX-3)                                          VORPAN 
      GO TO 60                                                           VORPAN 
20    INT=2                                                              VORPAN 
      IF (XO.GE.EL-EPX) MAX=1                                            VORPAN 
      COEF=2.                                                            VORPAN 
      IF (MAX.EQ.1) COEF=1.                                              VORPAN 
      WO=0.                                                              VORPAN 
      IF (SBO.EQ.0.) GO TO 30                                            VORPAN 
      IF (MAX.GT.1.AND.QM.EQ.0.) GO TO 30                                VORPAN 
      ARG=EPX*EPX+SBO*Z2                                                 VORPAN 
      IF (ARG.LE.0.) GO TO 30                                            VORPAN 
      ARG=SQRT(ARG)/(2.*SBO*ABS(Y))                                      VORPAN 
      IF (Y.GT.0.) ARG=ARG+1./ARG                                        VORPAN 
      IF (ARG.GT.0.) WO=ALOG(ARG)                                        VORPAN 
      WO=COEF*BO*EPX*XO*WO/SQRT(ABS(SBO))                                VORPAN 
30    WQ=WQ+WO                                                           VORPAN 
      IF (MAX.EQ.1.AND.XO.GT.EPX) GO TO 60                               VORPAN 
      IF (XO.LE..9*EL) GO TO 40                                          VORPAN 
      MAX=4                                                              VORPAN 
      GO TO 50                                                           VORPAN 
40    MAX=16-MAX                                                         VORPAN 
      IF (MAX.LT.8) MAX=8                                                VORPAN 
50    DXI=(EL-XO-EPX)/FLOAT(MAX-3)*.125                                  VORPAN 
      XI(1)=XO+EPX                                                       VORPAN 
60    CONTINUE                                                           VORPAN 
      IF (MAX.EQ.1) GO TO 150                                            VORPAN 
      DO 140 M=1,MAX                                                     VORPAN 
      Q(M)=0.                                                            VORPAN 
      IF (INT.EQ.0) GO TO 80                                             VORPAN 
      IF (INT.EQ.2) GO TO 70                                             VORPAN 
      IF (M.EQ.MAX) GO TO 80                                             VORPAN 
      IF (M.GT.MAX-3) DXI=.5*DXI                                         VORPAN 
      GO TO 80                                                           VORPAN 
70    IF (M.EQ.1.OR.M.EQ.3) GO TO 80                                     VORPAN 
      IF (M.LE.5) DXI=2.*DXI                                             VORPAN 
80    CONTINUE                                                           VORPAN 
      IF (M.GT.1) XI(M)=XI(M-1)+DXI                                      VORPAN 
      DX=X-XI(M)*C                                                       VORPAN 
      DX2=DX*DX                                                          VORPAN 
      BX=B-A*XI(M)                                                       VORPAN 
      BX2=BX*BX                                                          VORPAN 
      BX1=SGN+BX2                                                        VORPAN 
      SBX=SQRT(ABS(BX1))                                                 VORPAN 
      SDX=0.                                                             VORPAN 
      DXR=DX2+SGN*R2                                                     VORPAN 
      IF (DXR.GT.0.) SDX=SQRT(DXR)                                       VORPAN 
      IF (SDX.EQ.0.) GO TO 90                                            VORPAN 
      IF (SUP.AND.DX.LT.0.) GO TO 130                                    VORPAN 
      ARG=SGN*Y+BX*DX                                                    VORPAN 
      IF (SBX.EQ.0.) GO TO 110                                           VORPAN 
      TZI=(T3-XI(M)*T1)**2+BX1*Z2                                        VORPAN 
      IF (TZI.EQ.0.) GO TO 120                                           VORPAN 
      STZ=SQRT(TZI)                                                      VORPAN 
      IF (SUP.AND.ABS(BX).LT.1.) GO TO 100                               VORPAN 
      ARG=(ARG+SBX*SDX)/STZ                                              VORPAN 
      IF (SUP) ARG=ABS(ARG)                                              VORPAN 
      IF (ARG.GT.0.) Q(M)=ALOG(ARG)*BX/SBX                               VORPAN 
      GO TO 130                                                          VORPAN 
90    IF (T1.LT.BX*T6.AND.T8.LT.0.) GO TO 130                            VORPAN 
      IF (ABS(BX).GE.1.) GO TO 130                                       VORPAN 
      IF (Y.LE.BX*DX) GO TO 130                                          VORPAN 
      IF (DX.LT.(BX*Y+SBX*ABS(Z))) GO TO 130                             VORPAN 
      Q(M)=PI*BX/SBX                                                     VORPAN 
      GO TO 130                                                          VORPAN 
100   ARG=ARG/STZ                                                        VORPAN 
      IF (ARG.GT.1.0) GO TO 130                                          VORPAN 
      IF (ARG.LE.-1.0) GO TO 90                                          VORPAN 
      Q(M)=ACOS(ARG)*BX/SBX                                              VORPAN 
      GO TO 130                                                          VORPAN 
110   IF (ABS(ARG).GT.EPSVP) Q(M)=SDX*BX/ARG                             VORPAN 
      GO TO 130                                                          VORPAN 
120   IF (Y.GE.0.) GO TO 140                                             VORPAN 
      Q(M)=-ALOG(ABS(Y))*BX/SBX                                          VORPAN 
130   CONTINUE                                                           VORPAN 
      QX(M)=Q(M)*XI(M)                                                   VORPAN 
140   CONTINUE                                                           VORPAN 
      CALL TRAP (XI,QX,DW,MAX)                                           VORPAN 
      WQ=WQ+DW                                                           VORPAN 
150   CONTINUE                                                           VORPAN 
      IF (INT.EQ.1) GO TO 20                                             VORPAN 
160   CONTINUE                                                           VORPAN 
      IF (.NOT.SUPLE) GO TO 180                                          VORPAN 
C                                                                        VORPAN 
C     SPECIAL EQUATIONS FOR SUPERSONIC LEADING EDGE                      VORPAN 
C                                                                        VORPAN 
      IF (D.GT.0.) GO TO 180                                             VORPAN 
      IF (Y.LE.B*X) GO TO 440                                            VORPAN 
      IF (X.LT.(B*Y+SB1*ABS(Z))) GO TO 440                               VORPAN 
      SZ=SIGN(1.0,Z)                                                     VORPAN 
      PZ=PI*SZ                                                           VORPAN 
      IF (NS.EQ.2.AND.Z.EQ.0.) PZ=-PZ                                    VORPAN 
      UC=PZ                                                              VORPAN 
      VC=-B*PZ                                                           VORPAN 
      WC=-PI*SB1                                                         VORPAN 
      UCS=-PI/SB1                                                        VORPAN 
      VCS=-B*UCS                                                         VORPAN 
      IF (T8.GT.0.) E=0.                                                 VORPAN 
      SL=PI*T5*(SZ*T9-Z*E)                                               VORPAN 
      TL=SZ*E*T5*SL                                                      VORPAN 
      IF (T8.GT.0.) TL=PI*T5*T5*T8*ABS(Z)                                VORPAN 
      IF (NS.EQ.2.AND.Z.EQ.0.) SL=-SL                                    VORPAN 
      IF (ML.EQ.2) GO TO 170                                             VORPAN 
      UL=SL                                                              VORPAN 
      VL=-((B+T1*B4)*SL-AZ*TL)*0.5                                       VORPAN 
      WL=AZ*B4*SL-T1*TL+A*WQ                                             VORPAN 
      IF (ML.EQ.1) GO TO 430                                             VORPAN 
170   ULS=SL+PZ                                                          VORPAN 
      ULT=ULS                                                            VORPAN 
      TT=SZ*E*T5*ULS                                                     VORPAN 
      IF (NS.EQ.2.AND.Z.EQ.0.) TT=-TT                                    VORPAN 
      IF (T8.GT.0.) TT=TL                                                VORPAN 
      VLT=(A*PZ-(AB+T1*B4)*ULS+AZ*TT)*0.5                                VORPAN 
      WLT=AZ*B4*ULS-T1*TT                                                VORPAN 
      GO TO 430                                                          VORPAN 
180   IF (SUP.AND.D.EQ.0.) GO TO 440                                     VORPAN 
      IF (Z.EQ.0.) GO TO 280                                             VORPAN 
C                                                                        VORPAN 
C     GENERAL EQUATIONS                                                  VORPAN 
C                                                                        VORPAN 
      DENOM=B*R2-X*Y                                                     VORPAN 
      F1=ATAN2(Z*D,DENOM)                                                VORPAN 
      IF (SUB) F1=F1-ATAN2(Z,Y)                                          VORPAN 
      G1=0.                                                              VORPAN 
      IF (T8.EQ.0.) GO TO 210                                            VORPAN 
      IF (C.EQ.0.) GO TO 190                                             VORPAN 
      ARG=X*T6+B2                                                        VORPAN 
      IF (T8.LT.0.) GO TO 200                                            VORPAN 
      ARG=(ARG+D*E)/(ST3*C)                                              VORPAN 
      IF (SUP) ARG=ABS(ARG)                                              VORPAN 
      IF (ARG.GT.0.) G1=ALOG(ARG)                                        VORPAN 
      GO TO 210                                                          VORPAN 
190   IF (ST3.NE.0.) G1=ALOG(ST3)                                        VORPAN 
      GO TO 210                                                          VORPAN 
200   ARG=ARG/(ST3*C)                                                    VORPAN 
      IF (ABS(ARG).GT.1.0) GO TO 210                                     VORPAN 
      G1=-ACOS(ARG)                                                      VORPAN 
210   H1=0.                                                              VORPAN 
      GS=0.                                                              VORPAN 
      IF (C.EQ.0..AND.A.LT.0.) G1=-G1                                    VORPAN 
      IF (SB1.EQ.0.) GO TO 230                                           VORPAN 
      ARH=B3                                                             VORPAN 
      IF (SUPLE) GO TO 220                                               VORPAN 
      ARH=(ARH+D*SB1)/ST3                                                VORPAN 
      IF (ARH.GT.0.) H1=ALOG(ARH)                                        VORPAN 
      GS=H1/SB1                                                          VORPAN 
      GO TO 240                                                          VORPAN 
220   ARG=ARH/ST3                                                        VORPAN 
      IF (ABS(ARG).LE.1.0) H1=-ACOS(ARG)                                 VORPAN 
      GS=-H1/SB1                                                         VORPAN 
      GO TO 240                                                          VORPAN 
230   IF (B3.NE.0.) GS=D/B3                                              VORPAN 
240   G2=ALOG((X+D)/R)                                                   VORPAN 
      G3=0.                                                              VORPAN 
      IF (SUB) G3=ALOG(R)                                                VORPAN 
      C1=D                                                               VORPAN 
      IF (SUB) C1=X+C1                                                   VORPAN 
      C2=C1/R2                                                           VORPAN 
      H=SB1*H1-B*(G2-G3)                                                 VORPAN 
      IF (SB1.EQ.0.) H2=B*D/B3-G2+G3                                     VORPAN 
      IF (SB1.NE.0.) H2=B*H1/SB1-G2+G3                                   VORPAN 
      UC=F1                                                              VORPAN 
      VS=-B*F1+Z*C2                                                      VORPAN 
      WS=H-Y*C2                                                          VORPAN 
      VC=VS                                                              VORPAN 
      WC=WS                                                              VORPAN 
      UCS=-GS                                                            VORPAN 
      VCS=-B*UCS-G2                                                      VORPAN 
      IF (C.EQ.0.) C2=0.                                                 VORPAN 
      C3=0.                                                              VORPAN 
      C4=0.                                                              VORPAN 
      C5=G2/2.                                                           VORPAN 
      IF (C.EQ.0.) GO TO 250                                             VORPAN 
      C3=(X*C2+SGN*G2)/(2.*C)                                            VORPAN 
      C4=((X2-SGN*R2*0.5)*G2-1.5*X*D)/(2.*CC)                            VORPAN 
      C5=(D-X*G2)/C                                                      VORPAN 
250   CONTINUE                                                           VORPAN 
      C6=.50/R2                                                          VORPAN 
      IF (SUB) C6=C6*C1/D                                                VORPAN 
      C2=C2+C6*C                                                         VORPAN 
      VB=-F1*0.5                                                         VORPAN 
      WB=H2*0.5                                                          VORPAN 
      VD=Z*C6                                                            VORPAN 
      WD=-Y*C6                                                           VORPAN 
      VA=VB                                                              VORPAN 
      WA=WB                                                              VORPAN 
      VE=VD                                                              VORPAN 
      WE=WD                                                              VORPAN 
      IF (ML.EQ.1) GO TO 260                                             VORPAN 
      VC=VS+2.0*(C*VD+A*VB)                                              VORPAN 
      WC=WS+2.0*(C*WD+A*WB)                                              VORPAN 
260   WQ=WQ-C4                                                           VORPAN 
      G=E*G1-T6*G2                                                       VORPAN 
      SL=T5*(T9*F1+Z*G)                                                  VORPAN 
      TL=-B*D                                                            VORPAN 
      IF (C.NE.0.) TL=(B2*G2+T6*D)/C                                     VORPAN 
      TL=-T5*(T5*(G*T9-Z*T8*F1)+TL)                                      VORPAN 
      IF (ML.EQ.2) GO TO 270                                             VORPAN 
      UL=SL                                                              VORPAN 
      VL=-((B+T1*B4)*SL-AZ*TL)*0.5+Z*C3                                  VORPAN 
      WL=AZ*B4*SL-T1*TL-Y*C3+A*WQ                                        VORPAN 
      IF (ML.EQ.1) GO TO 430                                             VORPAN 
270   ULS=SL+F1                                                          VORPAN 
      ULT=ULS                                                            VORPAN 
      TLT=TL-T5*G                                                        VORPAN 
      WQT=C5-C4-G3*0.5                                                   VORPAN 
      VLS=(A*F1-(AB+T1*B4)*ULS+AZ*TLT)*0.5+Z*(C2+C3)                     VORPAN 
      WLS=AZ*B4*ULS-T1*TLT-Y*(C2+C3)+A*WQT                               VORPAN 
      VLT=VLS+A*VB                                                       VORPAN 
      WLT=WLS+A*WB                                                       VORPAN 
      GO TO 430                                                          VORPAN 
C                                                                        VORPAN 
C     SPECIAL EQUATIONS FOR Z=0                                          VORPAN 
C                                                                        VORPAN 
280   CONTINUE                                                           VORPAN 
      F1=0.                                                              VORPAN 
      DENOM=-Y*T3                                                        VORPAN 
      IF (DENOM.NE.0.) F1=ATAN2(0.,DENOM)                                VORPAN 
      IF (SUB.AND.Y.NE.0.) F1=F1-ATAN2(0.,Y)                             VORPAN 
      IF (NS.EQ.2) F1=-F1                                                VORPAN 
      G1=0.                                                              VORPAN 
      IF (T8.EQ.0.) GO TO 320                                            VORPAN 
      IF (C.EQ.0.) GO TO 300                                             VORPAN 
      IF (T8.LT.0.) GO TO 310                                            VORPAN 
      IF (AT3.GT.0.) GO TO 290                                           VORPAN 
      IF (Y.EQ.0..OR.T1.EQ.0.) GO TO 320                                 VORPAN 
      ARG=2.*Y*T1*B1/C                                                   VORPAN 
      IF (ARG.GT.0.) G1=ALOG(ARG)                                        VORPAN 
      IF (Y.GT.0.) G1=100.+G1                                            VORPAN 
      GO TO 320                                                          VORPAN 
290   ARG=(X*T6+SGN*Y*T1+D*E)/(AT3*C)                                    VORPAN 
      IF (SUP) ARG=ABS(ARG)                                              VORPAN 
      IF (ARG.GT.0.) G1=ALOG(ARG)                                        VORPAN 
      GO TO 320                                                          VORPAN 
300   IF (Y.GT.0.) G1=-100.                                              VORPAN 
      IF (AT3.NE.0.) G1=ALOG(AT3)                                        VORPAN 
      GO TO 320                                                          VORPAN 
310   ARG=(X*T6-Y*T1)/(AT3*C)                                            VORPAN 
      IF (ABS(ARG).GT.1.0) GO TO 320                                     VORPAN 
      G1=-ACOS(ARG)                                                      VORPAN 
320   H1=0.                                                              VORPAN 
      GS=0.                                                              VORPAN 
      IF (C.EQ.0..AND.A.LT.0.) G1=-G1                                    VORPAN 
      IF (SB1.EQ.0.) GO TO 350                                           VORPAN 
      IF (SUPLE) GO TO 340                                               VORPAN 
      IF (AT3.GT.0.) GO TO 330                                           VORPAN 
      IF (Y.EQ.0.) GO TO 360                                             VORPAN 
      H1=ALOG(ABS(Y))                                                    VORPAN 
      IF (SUB.AND.Y.LT.0.) H1=-H1                                        VORPAN 
      IF (Y.GT.0.) H1=100.+H1                                            VORPAN 
      GS=H1/SB1                                                          VORPAN 
      GO TO 360                                                          VORPAN 
330   CONTINUE                                                           VORPAN 
      ARH=(B3+D*SB1)/AT3                                                 VORPAN 
      IF (SUP) ARH=ABS(ARH)                                              VORPAN 
      IF (ARH.GT.0.) H1=ALOG(ARH)                                        VORPAN 
      GS=H1/SB1                                                          VORPAN 
      GO TO 360                                                          VORPAN 
340   ARG=B3/AT3                                                         VORPAN 
      IF (ABS(ARG).LE.1.0) H1=-ACOS(ARG)                                 VORPAN 
      GS=-H1/SB1                                                         VORPAN 
      GO TO 360                                                          VORPAN 
350   IF (B3.NE.0.) GS=D/B3                                              VORPAN 
360   G2=100.                                                            VORPAN 
      IF (Y.NE.0.) GO TO 370                                             VORPAN 
      IF (X.NE.0.) G2=G2+ALOG(2.*ABS(X))                                 VORPAN 
      IF (X.LT.0.) G2=-G2                                                VORPAN 
      GO TO 380                                                          VORPAN 
370   G2=0.                                                              VORPAN 
      ARG=(X+D)/ABS(Y)                                                   VORPAN 
      IF (ARG.GT.0.) G2=ALOG(ARG)                                        VORPAN 
380   G3=0.                                                              VORPAN 
      C1=D                                                               VORPAN 
      IF (.NOT.SUB) GO TO 390                                            VORPAN 
      C1=X+D                                                             VORPAN 
      G3=-100.                                                           VORPAN 
      IF (Y.NE.0.) G3=ALOG(ABS(Y))                                       VORPAN 
390   C2=0.                                                              VORPAN 
      IF (Y.NE.0.) C2=C1/Y2                                              VORPAN 
      H=SB1*H1-B*(G2-G3)                                                 VORPAN 
      IF (SB1.EQ.0.) H2=B*D/B3-G2+G3                                     VORPAN 
      IF (SB1.NE.0.) H2=B*H1/SB1-G2+G3                                   VORPAN 
      UC=F1                                                              VORPAN 
      VS=-B*F1                                                           VORPAN 
      WS=H-Y*C2                                                          VORPAN 
      VC=VS                                                              VORPAN 
      WC=WS                                                              VORPAN 
      UCS=-GS                                                            VORPAN 
      VCS=-B*UCS-G2                                                      VORPAN 
      IF (C.EQ.0.) C2=0.                                                 VORPAN 
      C4=0.                                                              VORPAN 
      C5=G2*0.5                                                          VORPAN 
      IF (C.EQ.0.) GO TO 400                                             VORPAN 
      C3=(X*C2+SGN*G2)*0.5                                               VORPAN 
      C4=((X2-SGN*Y2*0.5)*G2-1.5*X*D)/(2.*CC)                            VORPAN 
      C5=(D-X*G2)/C                                                      VORPAN 
400   CONTINUE                                                           VORPAN 
      C6=0.                                                              VORPAN 
      IF (Y.NE.0.) C6=.50/Y2                                             VORPAN 
      IF (SUB.AND.D.NE.0.) C6=C6*C1/D                                    VORPAN 
      C2=C2+C6*C                                                         VORPAN 
      VB=-F1*0.5                                                         VORPAN 
      WB=H2*0.5                                                          VORPAN 
      WD=-Y*C6                                                           VORPAN 
      VA=VB                                                              VORPAN 
      WA=WB                                                              VORPAN 
      WE=WD                                                              VORPAN 
      IF (ML.EQ.1) GO TO 410                                             VORPAN 
      VC=VS+2.0*(A*VB)                                                   VORPAN 
      WC=WS+2.0*(A*WB+C*WD)                                              VORPAN 
410   WQ=WQ-C4                                                           VORPAN 
      WQT=C5-C4-G3*0.5                                                   VORPAN 
      IF (T1.NE.0.) GO TO 420                                            VORPAN 
      WL=A*WQ                                                            VORPAN 
      WLS=A*WQT                                                          VORPAN 
      WLT=WLS+A*WB                                                       VORPAN 
      GO TO 450                                                          VORPAN 
420   SL=T3*F1/T1                                                        VORPAN 
      UL=SL                                                              VORPAN 
      VL=-(B+T6/T1)*SL*0.5                                               VORPAN 
      G=E*G1-T6*G2                                                       VORPAN 
      TL=T3*T5*G                                                         VORPAN 
      IF (C.EQ.0.) TL=TL-B*D/T1                                          VORPAN 
      IF (C.NE.0.) TL=TL+(T6*D/T1+Y*(SGN*G2-C3))/C                       VORPAN 
      WL=TL+A*WQ                                                         VORPAN 
      IF (ML.EQ.1) GO TO 430                                             VORPAN 
      ULS=SL+F1                                                          VORPAN 
      VLS=(A*F1-(AB+T6/T1)*ULS)*0.5                                      VORPAN 
      WLS=TL+G/T1-Y*C2+A*WQT                                             VORPAN 
      ULT=ULS                                                            VORPAN 
      VLT=VLS                                                            VORPAN 
      WLT=WLS                                                            VORPAN 
      VLT=VLS+A*VB                                                       VORPAN 
      WLT=WLS+A*WB                                                       VORPAN 
430   IF (BPOS) GO TO 460                                                VORPAN 
      UC=-UC                                                             VORPAN 
      WC=-WC                                                             VORPAN 
      UL=-UL                                                             VORPAN 
      WL=-WL                                                             VORPAN 
      ULT=-ULT                                                           VORPAN 
      WLT=-WLT                                                           VORPAN 
      UCS=-UCS                                                           VORPAN 
      GO TO 460                                                          VORPAN 
440   UC=0.                                                              VORPAN 
      VC=0.                                                              VORPAN 
      WC=0.                                                              VORPAN 
      UCS=0.                                                             VORPAN 
      VCS=0.                                                             VORPAN 
      WL=0.                                                              VORPAN 
      WLT=0.                                                             VORPAN 
450   UL=0.                                                              VORPAN 
      VL=0.                                                              VORPAN 
      ULT=0.                                                             VORPAN 
      VLT=0.                                                             VORPAN 
      GO TO 430                                                          VORPAN 
460   CONTINUE                                                           VORPAN 
      RETURN                                                             VORPAN 
      END                                                                VORPAN 
      SUBROUTINE TRANS (UR,VR,WR,UL,VL,WL,U,V,W,A)                       TRANS
C                                                                        TRANS
C     *******************************************VERSION B00************ TRANS
C                                                                        TRANS
C     TRANSFORM THE THREE COMPONENTS OF VELOCITY FROM THE PANEL          TRANS
C     COORDINATE SYSTEM TO THE REFERENCE COORDINATE SYSTEM. ALSO COMBINE TRANS
C     THE CONTRIBUTIONS OF THE LEFT AND RIGHT WING PANELS AND CALCULATE  TRANS
C     THE NORMAL VELOCITY AT THE CONTROL POINT.                          TRANS
C                                                                        TRANS
      COMMON /TRAN/ SIND,COSD,TAND,SINT,COST,CONTD,SINTI,COSTI,CON,BCON, TRANS
     1SINDI,COSDI,MIDFIN,FIN,VENTRL                                      TRANS
C                                                                        TRANS
      LOGICAL MIDFIN,FIN,VENTRL                                          TRANS
C                                                                        TRANS
      IF (.NOT.MIDFIN) GO TO 10                                          TRANS
      UL=0.                                                              TRANS
      VL=0.                                                              TRANS
      WL=0.                                                              TRANS
10    CONTINUE                                                           TRANS
      VW=SINT*(VR+VL)+CONTD*(WR+WL)                                      TRANS
      U=CON*(COST*(UR+UL)-SIND*VW)/CONTD                                 TRANS
      V=BCON*COSD*(CONTD*(VR-VL)-SINT*(WR-WL))                           TRANS
      W=BCON*(TAND*(UR+UL)+COST*COSD*VW)/CONTD                           TRANS
      SGN=1.0                                                            TRANS
      IF (.NOT.FIN) GO TO 20                                             TRANS
      VA=V                                                               TRANS
      V=W                                                                TRANS
      W=VA                                                               TRANS
      IF (.NOT.VENTRL) SGN=-1.0                                          TRANS
20    CONTINUE                                                           TRANS
      A=(W*COSTI-SGN*V*SINTI)*COSDI-U*SINDI                              TRANS
      RETURN                                                             TRANS
      END                                                                TRANS
      OVERLAY(LWB,5,0)                                                   OLAY50 
      PROGRAM OLAY50                                                     OLAY50 
      COMMON / PARAM / NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA         OLAY50 
      COMMON/ POINT / ARRAY(6000)                                        OLAY50 
      COMMON/ SCRAT/ BLOCK(7500)                                         OLAY50 
      COMMON/ ROWS / NWCOL, NWRPC(20)                                    OLAY50 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BTE(20),NWT( OLAY50 
     120),SPNW(20),XLEW(20),BLE(20),ZLEW(20)                             OLAY50 
      DIMENSION AREA(600), XBAR(600)                                     OLAY50 
      DIMENSION A(1202), B(1202), C(1202)                                OLAY50 
      DIMENSION CHORD(600), DELTA(600), DZTDX(600)                       OLAY50 
      EQUIVALENCE ( ARRAY(4801),AREA(1)), ( ARRAY(1), XBAR(1) )          OLAY50 
     1, ( BLOCK(1), A(1)), ( BLOCK(1203),B(1)), ( BLOCK(2405),C(1))      OLAY50 
     2, ( ARRAY(2401),DELTA(1)), ( ARRAY(3601), CHORD(1))                OLAY50 
     3, ( BLOCK(6901), DZTDX(1))                                         OLAY50 
      COMMON / TAPES / ITAPES(20)                                        OLAY50 
      COMMON/ DES / CLBAR, CMBAR                                         OLAY50 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP OLAY50 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       OLAY50 
      INTEGER COMPT,PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE OLAY50 
     18,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,FFILE            OLAY50 
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON/ CYCLE / NEWAIC, IPREP, NDRAG1, NDRAG2, IDIR                OLAY50 
C                                                                        OLAY50 
C     CHECK FOR NEW MACH NUMBER OR CONFIGURATION                         OLAY50 
C                                                                        OLAY50 
      IF( IPREP .NE. 0 ) GO TO 50                                        OLAY50 
      IF( NOPT(1).EQ.1 .AND. NOPT(2).GE.2 ) GO TO 1                      OLAY50 
      IF( NOPT(1).EQ.1 .AND. NOPT(3).EQ.0) GO TO 50                      OLAY50 
C                                                                        OLAY50 
C     ASSIGN SCRATCH UNITS                                               OLAY50 
C                                                                        OLAY50 
    1 CONTINUE                                                           OLAY50 
      N1 = ITAPES(1)                                                     OLAY50 
      N2 = ITAPES(2)                                                     OLAY50 
      N3 = ITAPES(3)                                                     OLAY50 
      N4 = ITAPES(4)                                                     OLAY50 
      N5 = ITAPES(5)                                                     OLAY50 
      N6 = ITAPES(6)                                                     OLAY50 
      N7 = ITAPES(7)                                                     OLAY50 
      N8 = ITAPES(8)                                                     OLAY50 
      N9 = ITAPES(9)                                                     OLAY50 
      N10 = ITAPES(10)                                                   OLAY50 
      IN = ITAPES(11)                                                    OLAY50 
      REWIND IN                                                          OLAY50 
C                                                                        OLAY50 
C     DUMMY READ STATEMENTS TO SKIP GEOMETRY FILES                       OLAY50 
C                                                                        OLAY50 
      IF( NWING .EQ. 0 ) GO TO 5                                         OLAY50 
      READ(IN)                                                           OLAY50 
      READ(IN)                                                           OLAY50 
    5 CONTINUE                                                           OLAY50 
      IPREP = IPREP + 1                                                  OLAY50 
C                                                                        OLAY50 
C                                                                        OLAY50 
C     SET STORAGE FOR SUBROUTINE TRIXY                                   OLAY50 
C                                                                        OLAY50 
      NMAX = 1202                                                        OLAY50 
      IF( NBODY .NE. 0 .AND. NWING .NE. 0 ) GO TO 20                     OLAY50 
      IF( NWING .NE. 0 ) CALL XFER( IN, N5, NWING, NWING, A )            OLAY50 
      IF( NBODY .NE. 0 ) CALL XFER( IN, N5, NBODY, NBODY, A )            OLAY50 
      GO TO 50                                                           OLAY50 
C                                                                        OLAY50 
C     INVERT MATRIX (ABB)                                                OLAY50 
   20 CONTINUE                                                           OLAY50 
C                                                                        OLAY50 
      CALL INV(NBODY,IN,N6,N3,N4,N8,N9,N1,N2,NMAX,A,B,0)                 OLAY50 
C                                                                        OLAY50 
C     (ABB) INVERSE IS ON N3                                             OLAY50 
C                                                                        OLAY50 
      CALL XFER( IN, N1, NBODY, NWING, A )                               OLAY50 
C                                                                        OLAY50 
C     TRANSPOSE (ABW) TO OBTAIN COLUMN SORT MATRIX ON N8                 OLAY50 
C                                                                        OLAY50 
      REWIND N8                                                          OLAY50 
      REWIND N9                                                          OLAY50 
      REWIND N1                                                          OLAY50 
      CALL TRPOSE(N1,A,B,NWING,NBODY,N8,N9,NMAX)                         OLAY50 
C                                                                        OLAY50 
C     TRANSFER (AWB) TO UNIT N1                                          OLAY50 
C                                                                        OLAY50 
      CALL XFER( IN, N1, NWING, NBODY, A )                               OLAY50 
C                                                                        OLAY50 
C     TRANSPOSE (AWB) TO OBTAIN COLUMN SORT MATRIX ON N2                 OLAY50 
C                                                                        OLAY50 
      REWIND N2                                                          OLAY50 
      REWIND N9                                                          OLAY50 
      CALL TRPOSE(N1,A,B,NBODY,NWING,N2,N9,NMAX)                         OLAY50 
C                                                                        OLAY50 
C     FORM MATRIX PRODUCT (AWB) * INV(ABB)                               OLAY50 
C     RESULT WILL BE IN COLUMN SORT ON UNIT N1                           OLAY50 
C                                                                        OLAY50 
      REWIND N1                                                          OLAY50 
      CALL TRIXY(N2,N3,N1,NWING,NBODY,NBODY,A,B,C,NMAX,IRET)             OLAY50 
C                                                                        OLAY50 
C     SAVE AWB * INV(ABB) ON UNIT N10                                    OLAY50 
C                                                                        OLAY50 
      REWIND N1                                                          OLAY50 
      CALL XFER( N1, N10, NBODY, NWING, A )                              OLAY50 
C                                                                        OLAY50 
C     FORM AWB * INV( ABB ) * ABW IN COLUMN FORM ON UNIT N2              OLAY50 
C                                                                        OLAY50 
      REWIND N1                                                          OLAY50 
      REWIND N8                                                          OLAY50 
      REWIND N2                                                          OLAY50 
      CALL TRIXY(N1,N8,N2,NWING,NBODY,NWING,A,B,C,NMAX,IRET)             OLAY50 
C                                                                        OLAY50 
C     TAKE TRANSPOSE ( ONE MORE TIME ) TO OBTAIN                         OLAY50 
C     MATRIX IN ROW SORT ON UNIT N7                                      OLAY50 
C                                                                        OLAY50 
      REWIND N7                                                          OLAY50 
      REWIND N9                                                          OLAY50 
      REWIND N2                                                          OLAY50 
      CALL TRPOSE(N2,A,B,NWING,NWING,N7,N9,NMAX)                         OLAY50 
C                                                                        OLAY50 
C     READ IN (AWW)                                                      OLAY50 
C                                                                        OLAY50 
      CALL XFER( IN, N9, NWING, NWING, A )                               OLAY50 
C                                                                        OLAY50 
C     FORM REDUCED MATRIX (AR) = (AWW) - (AWB) * INV(ABB) * (ABW)        OLAY50 
C                                                                        OLAY50 
      REWIND N5                                                          OLAY50 
      DO 40 I = 1, NWING                                                 OLAY50 
      READ(N9) ( A(J), J = 1, NWING )                                    OLAY50 
      READ(N7) ( B(J), J = 1, NWING )                                    OLAY50 
      DO 30 J = 1, NWING                                                 OLAY50 
   30 C(J) = A(J) - B(J)                                                 OLAY50 
      WRITE(N5) ( C(J) , J = 1, NWING )                                  OLAY50 
   40 CONTINUE                                                           OLAY50 
C                                                                        OLAY50 
C     TRANSFER THE FOLLOWING MATRICES IN COLUMN FORM TO UNIT N5          OLAY50 
C                                                                        OLAY50 
C     AWB * INV(ABB)                                                     OLAY50 
C     ABW                                                                OLAY50 
C     INV(ABB)                                                           OLAY50 
C                                                                        OLAY50 
      REWIND N10                                                         OLAY50 
      REWIND N8                                                          OLAY50 
      REWIND N3                                                          OLAY50 
      DO 60 I = 1, NBODY                                                 OLAY50 
      READ(N10) ( A(J), J = 1, NWING )                                   OLAY50 
   60 WRITE(N5) ( A(J), J = 1, NWING )                                   OLAY50 
      DO 70 I = 1, NWING                                                 OLAY50 
      READ(N8) ( A(J), J = 1, NBODY )                                    OLAY50 
   70 WRITE(N5) ( A(J), J = 1, NBODY )                                   OLAY50 
      DO 80 I = 1, NBODY                                                 OLAY50 
      READ(N3) ( A(J), J = 1, NBODY )                                    OLAY50 
   80 WRITE(N5) ( A(J), J = 1, NBODY )                                   OLAY50 
   50 CONTINUE                                                           OLAY50 
      END                                                                OLAY50 
      OVERLAY(LWB,3,0)                                                   SOLVE
C     OVERLAY(LWB,3,0)                                                   SOLVE
      PROGRAM SOLVE                                                      SOLVE
C                                                                        SOLVE
C     *******************************************VERSION B00************ SOLVE
C                                                                        SOLVE
C                                                                        SOLVE
C     SOLVE FOR THE STRENGTHS OF THE BODY SOURCES AND WING VORTICES      SOLVE
C     WHICH SATISFY THE BOUNDARY CONDITION OF TANGENTIAL FLOW AT THE     SOLVE
C     PANEL CONTROL POINTS. ALSO DETERMINE THE CORRESPONDING PRESSURE    SOLVE
C     DISTRIBUTION AND THE FORCES AND MOMENTS ON THE CONFIGURATION.      SOLVE
C                                                                        SOLVE
C                                                                        SOLVE
C     THE PROGRAM MUST SOLVE A SYSTEM OF LINEAR EQUATIONS OF MAXIMUM     SOLVE
C     ORDER 1200. THE SOLUTION TECHNIQUE SELECTED CAN BE DESCRIBED AS A  SOLVE
C     BLOCKED JACOBI ITERATIVE METHOD. THE 1200 BY 1200 MATRIX IS        SOLVE
C     NATURALLY PARTITIONED INTO FOUR 600 BY 600 BLOCKS. EACH PARTITION  SOLVE
C     IS FURTHER SUBDIVIDED INTO BLOCKS OF MAXIMUM SIZE 60 BY 60. THE    SOLVE
C     MATRIX ELEMENTS IN EACH BLOCK ARE CAREFULLY CHOSEN TO REPRESENT    SOLVE
C     SOME WELL DEFINED FEATURE OF THE ORIGINAL CONFIGURATION. FOR       SOLVE
C     EXAMPLE, A BODY BLOCK REPRESENTS THE INFLUENCE OF ONE RING OF      SOLVE
C     PANELS AROUND THE BODY, WHILE A WING BLOCK REPRESENTS THE          SOLVE
C     INFLUENCE OF ONE CHORDWISE COLUMN OF WING PANELS. FOR WINGS USING  SOLVE
C     THE NON-PLANAR BOUNDARY CONDITION OPTION, THE BLOCK SIZE           SOLVE
C     CORRESPONDS TO THE TOTAL NUMBER OF PANELS ON THE UPPER AND LOWER   SOLVE
C     SURFACES OF THE COLUMN.                                            SOLVE
C                                                                        SOLVE
C     THE INITIAL ITERATION CALCULATES THE SINGULARITY STRENGTHS         SOLVE
C     CORRESPONDING TO EACH BLOCK IN ISOLATION. FOR THIS STEP, ONLY THE  SOLVE
C     DIAGONAL BLOCKS ARE PRESENT IN THE AERODYNAMIC MATRIX. ONCE THE    SOLVE
C     INITIAL APPROXIMATION TO THE SINGULARITY STRENGTHS IS DETERMINED,  SOLVE
C     THE INTERFERENCE EFFECT OF EACH BLOCK ON ALL THE OTHERS IS         SOLVE
C     CALCULATED BY MATRIX MULTIPLICATION. THE INCREMENTAL NORMAL        SOLVE
C     VELOCITIES OBTAINED ARE SUBTRACTED FROM THE NORMAL VELOCITIES      SOLVE
C     SPECIFIED BY THE BOUNDARY CONDITIONS. THIS PROCESS IS ITERATED     SOLVE
C     UNTIL A CONVERGENCE TEST ON THE MAXIMUM RESIDUAL IS SATISFIED OR A SOLVE
C     MAXIMUM NUMBER OF ITERATIONS IS REACHED. THE CONVERGENCE CRITERION SOLVE
C     AND THE ITERATION LIMIT ARE SET IN SUBROUTINE ITRATE.              SOLVE
C                                                                        SOLVE
C                                                                        SOLVE
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP SOLVE
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17         SC3PLT 
      COMMON /LWB/ LWB                                                   SOLVE
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           SOLVE
      COMMON /POINT/ ARRAY(6000)                                         SOLVE
      COMMON /SCRAT/ BLOCK(7500)                                         SOLVE
      COMMON /SEG/ NSEG,NR(20),NC(20),COSS(20),SINS(20),BTE(20),NWT(20), SOLVE
     1             SPNW(20),XLEW(20),BLE(20),ZLEW(20)                    SOLVE
      COMMON /NEWCOM/ KDUM(46),LOCPT(20),XCPT(20)                        SOLVE
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EX,PRINT,NWTHK         SOLVE
      COMMON /FORM/ CN,CT,CM,CNB,CTB,CMB,CNS(20),CTS(20),CMS(20)         SOLVE
      COMMON /MATCOM/ MATIN                                              SOLVE
      COMMON /PRESS/ KRADX(4),NRADX(4),KFORX(4),NFORX(4),KWAF,NWAF,KWAFO SOLVE
     1R,NWAFOR,NFUS                                                      SOLVE
      COMMON /PI/ PI,RADEG,DEGRAD                                        SOLVE
C                                                                        SOLVE
      DIMENSION UA(600), VA(600), WA(600), CP(600), NS(600), CHORD(600), SOLVE
     1 THET(600), DELTA(600), NB(600), NW(600), NT(600), U(600), V(600), SOLVE
     2 W(600),A(60,60),GW(600),GB(600),DZTDX(600),X(600),Y(600),Z(600),  SOLVE
     3 CHD(20),DEL(600),COSTH(600)                                       SOLVE
C                                                                        SOLVE
      EQUIVALENCE (BLOCK(1),U(1)),(BLOCK(601),V(1)),(BLOCK(1201),W(1)),  SOLVE
     1 (BLOCK(1801),A(1)),(BLOCK(5701),GW(1)),(BLOCK(6301),GB(1)),       SOLVE
     2 (BLOCK(6901),DZTDX(1)),(BLOCK(1801),UA(1)),(BLOCK(2401),VA(1)),   SOLVE
     3 (BLOCK(3001),WA(1)),(BLOCK(3601),CP(1)),(BLOCK(4201),NS(1)),      SOLVE
     4 (BLOCK(1),NW(1)),(BLOCK(601),NB(1)),(BLOCK(1201),NT(1)),          SOLVE
     5 (ARRAY(1801),THET(1)),(ARRAY(2401),DELTA(1)),                     SOLVE
     6 (ARRAY(3601),CHORD(1)),(ARRAY(1),X(1)),(ARRAY(601),Y(1)),         SOLVE
     7 (ARRAY(1201),Z(1)),(BLOCK(5701),DEL(1)),(BLOCK(6301),COSTH(1))    SOLVE
C                                                                        SOLVE
      COMMON/STAR/XSTAR(3600),NSEGW                                      SOLVE
      DIMENSION ZCSTR(600),ZTSTR(600),CPSTR(600),                        SOLVE
     1          DCNSTR(600),DCTSTR(600),DCMSTR(600)                      SOLVE
      EQUIVALENCE (XSTAR(1)   , ZCSTR(1)),(XSTAR(601) , ZTSTR(1)),       SOLVE
     1            (XSTAR(1201), CPSTR(1)),(XSTAR(1801),DCNSTR(1)),       SOLVE
     2            (XSTAR(2401),DCTSTR(1)),(XSTAR(3001),DCMSTR(1))        SOLVE
C*                                                                       SOLVE
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON/ TAPES / ITAPES(20)                                         SOLVE
      COMMON/ SAVZLE / ZLE(600)                                          SOLVE
      COMMON/ DESIGN / CAMBER(600)                                       SOLVE
      COMMON/ NEWCAM / CAMMID(600)                                       SOLVE
      COMMON /POLAR/NCASE,CDBP(10),CLBP(10),CMBP(10),CDWP(10),CLWP(10),  SC3PLT 
     XCMWP(10),ALPHAP(10),MACHP(10),NSPAN,XSPAN(20)                      SC3PLT 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NEWSHLC
      DIMENSION UF(30),VF(30),WF(30)                                     NEWSHLC
      EQUIVALENCE (BLOCK(4801),UF(1)), (BLOCK(4831),VF(1)),              NEWSHLC
     1            (BLOCK(4861),WF(1))                                    NEWSHLC
C                                                                        SOLVE
      REAL MACH,NB,NW,NT,NS                                              SOLVE
      INTEGER COMPT,PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE SOLVE
     18,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17,   SC3PLT 
     2 FFILE                                                             SC3PLT 
      LOGICAL LBC,THK                                                    SOLVE
C                                                                        SOLVE
      NCASE=NCASE+1                                                      SC3PLT 
      EM=MACH                                                            SOLVE
      REWIND TAPE7                                                       SOLVE
      REWIND TAPE8                                                       SOLVE
      REWIND TAPE12                                                      SOLVE
      REWIND TAPE13                                                      SOLVE
      REWIND TAPE15                                                      SC3PLT 
      REWIND TAPE16                                                      SC3PLT 
      REWIND TAPE17                                                      SC3PLT 
      ALP=ALPHA*DEGRAD                                                   SOLVE
      SINAL=SIN(ALP)                                                     SOLVE
      COSAL=COS(ALP)                                                     SOLVE
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE BOUNDARY CONDITIONS ON                              NEWSHLC
C          BODY, WING, TAIL, NACELLE, AND SHELL PANELS                   NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
      N15=ITAPES(15)                                                     NEWSHLC
      N16=ITAPES(16)                                                     NEWSHLC
      N17=ITAPES(17)                                                     NEWSHLC
      N18=ITAPES(18)                                                     NEWSHLC
      N19=ITAPES(19)                                                     NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      REWIND TAPE11                                                      NEWSHLC
      DO 50 IP=1,3                                                       NEWSHLC
      IPART=IP                                                           NEWSHLC
      IF(IPART.NE.3) CALL WINGS(IPART)                                   NEWSHLC
      NPTS=NWING                                                         NEWSHLC
      IF(IPART.EQ.3) NPTS=NBODY                                          NEWSHLC
      IF(NPTS.EQ.0) GO TO 50                                             NEWSHLC
      IF(IPART.NE.3) READ(TAPE7) ARRAY,CHORD,DZTDX                       NEWSHLC
      IF(IPART.EQ.3) READ(TAPE7) ARRAY                                   NEWSHLC
      IF(LBC.AND.IPART.NE.3) READ(TAPE11) DEL,COSTH                      NEWSHLC
      IF(IPART.NE.1) GO TO 30                                            NEWSHLC
      IF(NOPT(1).EQ.2) GO TO 30                                          NEWSHLC
      IF(NOPT(6).NE.1) GO TO 10                                          NEWSHLC
      READ(TAPE5,425) (CAMBER(J),J=1,NPTS)                               NEWSHLC
      WRITE(TAPE6,426)                                                   NEWSHLC
      WRITE(TAPE6,427)                                                   NEWSHLC
425   FORMAT(7F10.3)                                                     NEWSHLC
426   FORMAT(1H1,/,2X,25H***   ANALYSIS CASE   ***)                      NEWSHLC
427   FORMAT(1H ,2X,43HCAMBER SLOPES INPUT AT PANEL CONTROL POINTS,//)   NEWSHLC
      CALL OUTW(TAPE6,CAMBER)                                            NEWSHLC
      CALL SHAPE                                                         NEWSHLC
10    IF(.NOT.LBC) GO TO 30                                              NEWSHLC
      IF(NOPT(2).NE.1.AND.NOPT(6).NE.1) GO TO 30                         NEWSHLC
      DO 20 I=1,NPTS                                                     NEWSHLC
20    DEL(I)=CAMBER(I)                                                   NEWSHLC
30    DO 40 I=1,NPTS                                                     NEWSHLC
      IF(LBC.AND.IPART.NE.3)                                             NEWSHLC
     1 NS(I)=COSAL*DEL(I)-SINAL*COSTH(I)                                 NEWSHLC
      IF(.NOT.LBC.OR.IPART.EQ.3)                                         NEWSHLC
     1 NS(I)=COSAL*SIN(DELTA(I))-SINAL*COS(THET(I))*COS(DELTA(I))        NEWSHLC
      IF(IPART.EQ.2.AND.I.GT.NPTSN)                                      NEWSHLC
     1 NS(I)=0.0                                                         NEWSHLC
      IF(IPART.EQ.1) NW(I)=NS(I)                                         NEWSHLC
      IF(IPART.EQ.2) NT(I)=NS(I)                                         NEWSHLC
40    IF(IPART.EQ.3) NB(I)=NS(I)                                         NEWSHLC
50    CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C          MODIFY BOUNDARY CONDITIONS                                    NEWSHLC
C          ON BODY, WING, TAIL, NACELLE, AND SHELL                       NEWSHLC
C          TO ACCOUNT FOR THE EFFECTS OF                                 NEWSHLC
C          WING, TAIL, AND NACELLE THICKNESS                             NEWSHLC
C                                                                        NEWSHLC
      REWIND TAPE16                                                      NEWSHLC
      DO 125 IP=1,3                                                      NEWSHLC
      IPART=IP-1                                                         NEWSHLC
      IF(IPART.NE.0) CALL WINGS(IPART)                                   NEWSHLC
      LLBC=0                                                             NEWSHLC
      IF(LBC) LLBC=1                                                     NEWSHLC
      NPTS=NWING                                                         NEWSHLC
      IF(IPART.EQ.0) NPTS=NBODY                                          NEWSHLC
      IF(NPTS.EQ.0) GO TO 125                                            NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      IF(NPTSWT.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                      NEWSHLC
      IF(IPART.EQ.1) GO TO 60                                            NEWSHLC
      IF(NPTSNS.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                      NEWSHLC
      IF(IPART.EQ.2) GO TO 60                                            NEWSHLC
      IF(NBODY.NE.0) READ(TAPE7) ARRAY                                   NEWSHLC
60    REWIND TAPE15                                                      NEWSHLC
      WRITE(TAPE15) THET,DELTA                                           NEWSHLC
      IF(NBODY.EQ.0) GO TO 80                                            NEWSHLC
      DO 70 I=1,NPTS                                                     NEWSHLC
70    READ(TAPE8)                                                        NEWSHLC
80    REWIND TAPE7                                                       NEWSHLC
      DO 120 JP=1,2                                                      NEWSHLC
      JPART=JP                                                           NEWSHLC
      CALL WINGS(JPART)                                                  NEWSHLC
      IF(NWING.EQ.0) GO TO 120                                           NEWSHLC
      READ(TAPE7) ARRAY,CHORD,DZTDX                                      NEWSHLC
      REWIND TAPE15                                                      NEWSHLC
      READ(TAPE15) THET,DELTA                                            NEWSHLC
      DO 110 I=1,NPTS                                                    NEWSHLC
      IF(THK) READ(TAPE8) (UA(J),VA(J),WA(J),J=1,NWTHK)                  NEWSHLC
      IF(THK.AND.JPART.EQ.IPART) READ(TAPE8)                             NEWSHLC
      IF(IPART.EQ.0.AND.NPTSNS.NE.0) GO TO 85                            NEWSHLC
      READ(TAPE8)                                                        NEWSHLC
      IF(JPART.EQ.IPART) READ(TAPE8)                                     NEWSHLC
85    IF(.NOT.THK) GO TO 110                                             NEWSHLC
      US=0.0                                                             NEWSHLC
      VS=0.0                                                             NEWSHLC
      WS=0.0                                                             NEWSHLC
      JC2=0                                                              NEWSHLC
      JT=0                                                               NEWSHLC
      DO 100 N=1,NSEG                                                    NEWSHLC
      NCOL=NC(N)                                                         NEWSHLC
      NROW=NR(N)                                                         NEWSHLC
      NR1=NROW+1                                                         NEWSHLC
      IF(LOCPT(N).NE.0) NROW=NR1                                         NEWSHLC
      DO 100 NN=1,NCOL                                                   NEWSHLC
      JC1=JC2+1                                                          NEWSHLC
      JC2=JC1+NROW-1                                                     NEWSHLC
      IF(I.GE.JC1.AND.I.LE.JC2.AND.JPART.EQ.IPART)                       NEWSHLC
     1 JT=JT+NR1                                                         NEWSHLC
      IF(I.GE.JC1.AND.I.LE.JC2.AND.JPART.EQ.IPART)                       NEWSHLC
     1 GO TO 100                                                         NEWSHLC
      DO 90 NNN=1,NR1                                                    NEWSHLC
      JT=JT+1                                                            NEWSHLC
      US=US+UA(JT)*DZTDX(JT)                                             NEWSHLC
      VS=VS+VA(JT)*DZTDX(JT)                                             NEWSHLC
90    WS=WS+WA(JT)*DZTDX(JT)                                             NEWSHLC
100   CONTINUE                                                           NEWSHLC
      NS(I)=WS*COS(THET(I))-VS*SIN(THET(I))                              NEWSHLC
      IF(LLBC.EQ.0.OR.IPART.EQ.0)                                        NEWSHLC
     1 NS(I)=NS(I)*COS(DELTA(I))-US*SIN(DELTA(I))                        NEWSHLC
      IF(IPART.EQ.0) NB(I)=NB(I)-NS(I)                                   NEWSHLC
      IF(IPART.EQ.1) NW(I)=NW(I)-NS(I)                                   NEWSHLC
      IF(IPART.EQ.2) NT(I)=NT(I)-NS(I)                                   NEWSHLC
110   CONTINUE                                                           NEWSHLC
      IF(THK.AND.IPART.EQ.1) WRITE(TAPE16) NS                            NEWSHLC
120   CONTINUE                                                           NEWSHLC
125   CONTINUE                                                           NEWSHLC
      REWIND TAPE15                                                      NEWSHLC
      IF(NBODY.NE.0) WRITE(TAPE15) NB                                    NEWSHLC
      IF(NPTSWT.NE.0) WRITE(TAPE15) NW                                   NEWSHLC
      IF(NPTSNS.NE.0) WRITE(TAPE15) NT                                   NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
C          SOLVE GOVERNING EQUATIONS                                     NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
      NPTSB=NBODY                                                        NEWSHLC
      REWIND N15                                                         NEWSHLC
C                                                                        NEWSHLC
C          SOLUTION FOR WING/BODY                                        NEWSHLC
C                                                                        NEWSHLC
      IF(NPTSNS.NE.0) GO TO 130                                          NEWSHLC
      CALL WINGS(1)                                                      NEWSHLC
      IPART=1                                                            NEWSHLC
      WRITE(TAPE6,620)                                                   NEWSHLC
620   FORMAT(1H1,/,1X,18HWING/BODY SOLUTION,/)                           NEWSHLC
      GO TO 190                                                          NEWSHLC
C                                                                        NEWSHLC
C          SOLUTION FOR ISOLATED BODY                                    NEWSHLC
C                                                                        NEWSHLC
130   IF(NPTSB.EQ.0) GO TO 140                                           NEWSHLC
      CALL WINGS(1)                                                      NEWSHLC
      NWING=0                                                            NEWSHLC
      IPART=0                                                            NEWSHLC
      WRITE(TAPE6,630)                                                   NEWSHLC
630   FORMAT(1H1,/,1X,22HISOLATED BODY SOLUTION,/)                       NEWSHLC
      GO TO 210                                                          NEWSHLC
C                                                                        NEWSHLC
C          SOLUTION FOR WING/SHELL                                       NEWSHLC
C          IN PRESENCE OF BODY                                           NEWSHLC
C                                                                        NEWSHLC
140   REWIND TAPE15                                                      NEWSHLC
      IF(NPTSB.NE.0) READ(TAPE15) NB                                     NEWSHLC
      IF(NPTSWT.NE.0) READ(TAPE15) NW                                    NEWSHLC
      IF(NPTSNS.NE.0) READ(TAPE15) NB                                    NEWSHLC
      IF(NPTSB.EQ.0) GO TO 180                                           NEWSHLC
      REWIND N18                                                         NEWSHLC
      DO 150 I=1,NPTSB                                                   NEWSHLC
150   READ(N18) (NT(J),J=1,NPTSB)                                        NEWSHLC
      DO 170 IP=1,2                                                      NEWSHLC
      IPART=IP                                                           NEWSHLC
      CALL WINGS(IPART)                                                  NEWSHLC
      IF(NWING.EQ.0) GO TO 170                                           NEWSHLC
      DO 160 I=1,NWING                                                   NEWSHLC
      READ(N18) (NT(J),J=1,NPTSB)                                        NEWSHLC
      SUM=0.0                                                            NEWSHLC
      NS(I)=SOSCAP(NT,GB,SUM,NPTSB,1,1,1,1)                              NEWSHLC
      IF(IPART.EQ.1) NW(I)=NW(I)-NS(I)                                   NEWSHLC
      IF(IPART.EQ.2) NB(I)=NB(I)-NS(I)                                   NEWSHLC
160   CONTINUE                                                           NEWSHLC
      IF(IPART.EQ.1) WRITE(TAPE16) NS                                    NEWSHLC
170   CONTINUE                                                           NEWSHLC
180   CALL WINGS(1)                                                      NEWSHLC
      CALL WINGS(3)                                                      NEWSHLC
      IPART=-1                                                           NEWSHLC
      WRITE(TAPE6,640)                                                   NEWSHLC
640   FORMAT(1H1,/,1X,39HWING/SHELL SOLUTION IN PRESENCE OF BODY,/)      NEWSHLC
C                                                                        NEWSHLC
C          BRANCH TO APPROPRIATE SOLUTION METHOD                         NEWSHLC
C                                                                        NEWSHLC
190   IF(NOPT(1).EQ.2) GO TO 200                                         NEWSHLC
      IF(NOPT(2).LE.1) GO TO 210                                         NEWSHLC
C                                                                        NEWSHLC
C          INVERSE ANALYSIS, FULL OR MIXED                               NEWSHLC
C                                                                        NEWSHLC
      CALL MIXED                                                         NEWSHLC
      CALL SHAPE                                                         NEWSHLC
      GO TO 260                                                          NEWSHLC
C                                                                        NEWSHLC
C          DRAG OPTIMIZATION, FULL OR CONSTRAINED                        NEWSHLC
C                                                                        NEWSHLC
200   CALL DRAG                                                          NEWSHLC
      CALL SHAPE                                                         NEWSHLC
      GO TO 260                                                          NEWSHLC
C                                                                        NEWSHLC
C          ANALYSIS                                                      NEWSHLC
C                                                                        NEWSHLC
210   IF(IPART.NE.0) GO TO 220                                           NEWSHLC
      IDUM7=TAPE7                                                        NEWSHLC
      IDUM9=TAPE9                                                        NEWSHLC
      IDUM10=TAPE10                                                      NEWSHLC
      IDUM24=ITAPES(5)                                                   NEWSHLC
      TAPE7=N17                                                          NEWSHLC
      TAPE9=N18                                                          NEWSHLC
      TAPE10=N19                                                         NEWSHLC
      ITAPES(5)=ITAPES(20)                                               NEWSHLC
220   REWIND TAPE7                                                       NEWSHLC
      REWIND TAPE9                                                       NEWSHLC
      REWIND TAPE10                                                      NEWSHLC
      IF(NOPT(3).EQ.1) GO TO 245                                         NEWSHLC
      IF(IPART.EQ.0) GO TO 230                                           NEWSHLC
      IF(NPTSWT.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                      NEWSHLC
      IF(NPTSNS.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                      NEWSHLC
      IF(NPTSB.NE.0) READ(TAPE7) ARRAY                                   NEWSHLC
230   IF(NBODY.LE.NMAX.AND.NWING.LE.NMAX) GO TO 240                      NEWSHLC
      CALL DIAGIN                                                        NEWSHLC
      REWIND TAPE10                                                      NEWSHLC
      GO TO 245                                                          NEWSHLC
240   CALL PARTIN                                                        NEWSHLC
      IF(NBODY.EQ.0.OR.NWING.EQ.0) GO TO 250                             NEWSHLC
245   IF(NOPT(3).EQ.0) CALL ITRATE                                       NEWSHLC
      IF(NOPT(3).EQ.1) CALL DIRECT                                       NEWSHLC
250   IF(IPART.NE.0) GO TO 260                                           NEWSHLC
      TAPE7=IDUM7                                                        NEWSHLC
      TAPE9=IDUM9                                                        NEWSHLC
      TAPE10=IDUM10                                                      NEWSHLC
      ITAPES(5)=IDUM24                                                   NEWSHLC
      WRITE(N15) GB                                                      NEWSHLC
      GO TO 140                                                          NEWSHLC
260   IF(IPART.EQ.1.AND.NPTSB.NE.0) WRITE(N15) GB                        NEWSHLC
      IF(NPTSWT.NE.0) WRITE(N15) GW                                      NEWSHLC
      IF(IPART.EQ.-1) WRITE(N15) GB                                      NEWSHLC
      REWIND TAPE15                                                      NEWSHLC
      REWIND TAPE16                                                      NEWSHLC
      REWIND TAPE17                                                      NEWSHLC
      IF(NPTSWT.EQ.0.OR.NOPT(4).EQ.0) GO TO 270                          NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      READ(TAPE7) ARRAY,CHORD,DZTDX                                      NEWSHLC
      IF(MACH.GE.1.0) CALL INTPOL(.95,.75)                               SUBCPS 
      IF(MACH.LT.1.0) CALL INTPOL(.85,.75)                               SUBCPS 
270   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE VELOCITITES ON BODY                                 NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
      REWIND TAPE8                                                       NEWSHLC
      IF(NPTSB.EQ.0) GO TO 360                                           NEWSHLC
      COMPT=1                                                            NEWSHLC
      NPASS=1                                                            NEWSHLC
      REWIND N15                                                         NEWSHLC
      READ(N15) GB                                                       NEWSHLC
C                                                                        NEWSHLC
C          BODY ON BODY                                                  NEWSHLC
C                                                                        NEWSHLC
      DO 280 I=1,NPTSB                                                   NEWSHLC
      U(I)=0.0                                                           NEWSHLC
      V(I)=0.0                                                           NEWSHLC
280   W(I)=0.0                                                           NEWSHLC
      DO 290 I=1,NPTSB                                                   NEWSHLC
      READ(TAPE8) (UA(J),VA(J),WA(J),J=1,NPTSB)                          NEWSHLC
      DO 290 J=1,NPTSB                                                   NEWSHLC
      U(I)=U(I)+UA(J)*GB(J)                                              NEWSHLC
      V(I)=V(I)+VA(J)*GB(J)                                              NEWSHLC
290   W(I)=W(I)+WA(J)*GB(J)                                              NEWSHLC
C                                                                        NEWSHLC
C          WING, TAIL, NACELLE AND SHELL ON BODY                         NEWSHLC
C                                                                        NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      DO 335 IP=1,2                                                      NEWSHLC
      IPART=IP                                                           NEWSHLC
      CALL WINGS(IPART)                                                  NEWSHLC
      IF(NWING.EQ.0) GO TO 335                                           NEWSHLC
      READ(N15) GW                                                       NEWSHLC
      READ(TAPE7) ARRAY,CHORD,DZTDX                                      NEWSHLC
      DO 330 I=1,NPTSB                                                   NEWSHLC
      IF(.NOT.THK) GO TO 310                                             NEWSHLC
      READ(TAPE8) (UA(J),VA(J),WA(J),J=1,NWTHK)                          NEWSHLC
      DO 300 J=1,NWTHK                                                   NEWSHLC
      U(I)=U(I)+UA(J)*DZTDX(J)                                           NEWSHLC
      V(I)=V(I)+VA(J)*DZTDX(J)                                           NEWSHLC
300   W(I)=W(I)+WA(J)*DZTDX(J)                                           NEWSHLC
310   IF(NPTSNS.NE.0) GO TO 330                                          NEWSHLC
      READ(TAPE8) (UA(J),VA(J),WA(J),J=1,NWING)                          NEWSHLC
      DO 320 J=1,NWING                                                   NEWSHLC
      U(I)=U(I)+UA(J)*GW(J)                                              NEWSHLC
      V(I)=V(I)+VA(J)*GW(J)                                              NEWSHLC
320   W(I)=W(I)+WA(J)*GW(J)                                              NEWSHLC
330   CONTINUE                                                           NEWSHLC
335   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
      READ(TAPE7) ARRAY                                                  NEWSHLC
      IF(IABS(PRINT).LT.2) GO TO 350                                     NEWSHLC
      WRITE(TAPE6,800) EM,ALPHA                                          NEWSHLC
      WRITE(TAPE6,810)                                                   NEWSHLC
      DO 340 N=1,NBODY                                                   NEWSHLC
      NS(N)=(W(N)*COS(THET(N))-V(N)*SIN(THET(N)))*COS(DELTA(N))          NEWSHLC
     1      -U(N)*SIN(DELTA(N))                                          NEWSHLC
340   WRITE(TAPE6,820) N,GB(N),U(N),V(N),W(N),NS(N)                      NEWSHLC
350   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE PRESSURES ON BODY                                   NEWSHLC
C                                                                        NEWSHLC
      CALL PRESS(NPTSB,EM,ALP,U,V,W,CP,CPSTAG,CPCRIT,CPVAC,COMPT,        NEWSHLC
     1 VFIX,SGN)                                                         NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE FORCES AND MOMENT ON BODY                           NEWSHLC
C                                                                        NEWSHLC
      CALL FORMOM(NPTSB,NPASS,ALP,COMPT)                                 NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE VELOCITIES ON WING/TAIL AND NACELLE/SHELL           NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
360   IF(NPTSWT.EQ.0.AND.NPTSNS.EQ.0) GO TO 610                          NEWSHLC
      DO 600 IP=1,2                                                      NEWSHLC
      IPART=IP                                                           NEWSHLC
      COMPT=IP+1                                                         NEWSHLC
      NPASS=1                                                            NEWSHLC
370   REWIND TAPE7                                                       NEWSHLC
      REWIND N15                                                         NEWSHLC
      REWIND N16                                                         NEWSHLC
      CALL WINGS(IPART)                                                  NEWSHLC
      IF(NWING.EQ.0) GO TO 600                                           NEWSHLC
      DO 380 I=1,NWING                                                   NEWSHLC
      U(I)=0.0                                                           NEWSHLC
      V(I)=0.0                                                           NEWSHLC
380   W(I)=0.0                                                           NEWSHLC
C                                                                        NEWSHLC
C          BODY ON WING, TAIL, NACELLE, AND SHELL                        NEWSHLC
C                                                                        NEWSHLC
      IF(NPTSB.EQ.0) GO TO 400                                           NEWSHLC
      READ(N15) GB                                                       NEWSHLC
      DO 395 I=1,NWING                                                   NEWSHLC
      IF(NPASS.EQ.2) GO TO 385                                           NEWSHLC
      READ(TAPE8) (UA(J),VA(J),WA(J),J=1,NPTSB)                          NEWSHLC
      WRITE(N16) (UA(J),VA(J),WA(J),J=1,NPTSB)                           NEWSHLC
      GO TO 386                                                          NEWSHLC
385   READ(N16) (UA(J),VA(J),WA(J),J=1,NPTSB)                            NEWSHLC
386   IF(IPART.EQ.2.AND.NPASS.EQ.2.AND.I.GT.NPTSN) GO TO 395             NEWSHLC
      DO 390 J=1,NPTSB                                                   NEWSHLC
      U(I)=U(I)+UA(J)*GB(J)                                              NEWSHLC
      V(I)=V(I)+VA(J)*GB(J)                                              NEWSHLC
390   W(I)=W(I)+WA(J)*GB(J)                                              NEWSHLC
395   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C          WING, TAIL, NACELLE, AND SHELL                                NEWSHLC
C                       ON                                               NEWSHLC
C          WING, TAIL, NACELLE, AND SHELL                                NEWSHLC
C                                                                        NEWSHLC
400   SGN=1.0                                                            NEWSHLC
      IF(LBC.AND.NPASS.EQ.2) SGN=-1.0                                    NEWSHLC
      DO 500 JP=1,2                                                      NEWSHLC
      JPART=JP                                                           NEWSHLC
      CALL WINGS(JPART)                                                  NEWSHLC
      THICK=0.0                                                          NEWSHLC
      IF(THK) THICK=1.0                                                  NEWSHLC
      NSING=NWING                                                        NEWSHLC
      NTING=NWTHK                                                        NEWSHLC
      CALL WINGS(IPART)                                                  NEWSHLC
      IF(NSING.EQ.0) GO TO 500                                           NEWSHLC
      READ(TAPE7) ARRAY,CHORD,DZTDX                                      NEWSHLC
      READ(N15) GW                                                       NEWSHLC
      JT2=0                                                              NEWSHLC
      JC2=0                                                              NEWSHLC
      I=0                                                                NEWSHLC
      DO 495 N=1,NSEG                                                    NEWSHLC
      NCOL=NC(N)                                                         NEWSHLC
      NROW=NR(N)                                                         NEWSHLC
      NR1=NROW+1                                                         NEWSHLC
      IF(LBC.AND.LOCPT(N).NE.0) NROW=NROW+1                              NEWSHLC
      IF(.NOT.LBC) NROW=2*NROW                                           NEWSHLC
      DO 495 NN=1,NCOL                                                   NEWSHLC
      JT1=JT2+1                                                          NEWSHLC
      JT2=JT1+NR1-1                                                      NEWSHLC
      JC1=JC2+1                                                          NEWSHLC
      JC2=JC1+NROW-1                                                     NEWSHLC
      DO 495 NNN=1,NROW                                                  NEWSHLC
      I=I+1                                                              NEWSHLC
C                                                                        NEWSHLC
C          SOURCE PANELS                                                 NEWSHLC
C                                                                        NEWSHLC
      IF(THICK.EQ.0.0) GO TO 450                                         NEWSHLC
      IF(NPASS.EQ.2) GO TO 410                                           NEWSHLC
      READ(TAPE8) (UA(J),VA(J),WA(J),J=1,NTING)                          NEWSHLC
      WRITE(N16) (UA(J),VA(J),WA(J),J=1,NTING)                           NEWSHLC
      IF(JPART.NE.IPART) GO TO 420                                       NEWSHLC
      READ(TAPE8) (UF(J),VF(J),WF(J),J=1,NR1)                            NEWSHLC
      WRITE(N16) (UF(J),VF(J),WF(J),J=1,NR1)                             NEWSHLC
      GO TO 420                                                          NEWSHLC
410   READ(N16) (UA(J),VA(J),WA(J),J=1,NTING)                            NEWSHLC
      IF(JPART.NE.IPART) GO TO 420                                       NEWSHLC
      READ(N16) (UF(J),VF(J),WF(J),J=1,NR1)                              NEWSHLC
420   IF(IPART.EQ.2.AND.NPASS.EQ.2.AND.I.GT.NPTSN) GO TO 450             NEWSHLC
      DO 440 J=1,NTING                                                   NEWSHLC
      IF(JPART.EQ.IPART.AND.J.GE.JT1.AND.J.LE.JT2) GO TO 430             NEWSHLC
      U(I)=U(I)+UA(J)*DZTDX(J)                                           NEWSHLC
      V(I)=V(I)+VA(J)*DZTDX(J)                                           NEWSHLC
      W(I)=W(I)+WA(J)*DZTDX(J)                                           NEWSHLC
      GO TO 440                                                          NEWSHLC
430   JF=J-JT1+1                                                         NEWSHLC
      U(I)=U(I)+(UA(J)-UF(JF)*(1.0-SGN))*DZTDX(J)                        NEWSHLC
      V(I)=V(I)+(VA(J)-VF(JF)*(1.0-SGN))*DZTDX(J)                        NEWSHLC
      W(I)=W(I)+(WA(J)-WF(JF)*(1.0-SGN))*DZTDX(J)                        NEWSHLC
440   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C          VORTEX PANELS                                                 NEWSHLC
C                                                                        NEWSHLC
450   CONTINUE                                                           NEWSHLC
      IF(NPASS.EQ.2) GO TO 460                                           NEWSHLC
      READ(TAPE8) (UA(J),VA(J),WA(J),J=1,NSING)                          NEWSHLC
      WRITE(N16) (UA(J),VA(J),WA(J),J=1,NSING)                           NEWSHLC
      IF(JPART.NE.IPART) GO TO 470                                       NEWSHLC
      READ(TAPE8) (UF(J),VF(J),WF(J),J=1,NROW)                           NEWSHLC
      WRITE(N16) (UF(J),VF(J),WF(J),J=1,NROW)                            NEWSHLC
      GO TO 470                                                          NEWSHLC
460   READ(N16) (UA(J),VA(J),WA(J),J=1,NSING)                            NEWSHLC
      IF(JPART.NE.IPART) GO TO 470                                       NEWSHLC
      READ(N16) (UF(J),VF(J),WF(J),J=1,NROW)                             NEWSHLC
470   IF(IPART.EQ.2.AND.NPASS.EQ.2.AND.I.GT.NPTSN) GO TO 495             NEWSHLC
      DO 490 J=1,NSING                                                   NEWSHLC
      IF(JPART.EQ.IPART.AND.J.GE.JC1.AND.J.LE.JC2) GO TO 480             NEWSHLC
      U(I)=U(I)+UA(J)*GW(J)                                              NEWSHLC
      V(I)=V(I)+VA(J)*GW(J)                                              NEWSHLC
      W(I)=W(I)+WA(J)*GW(J)                                              NEWSHLC
      GO TO 490                                                          NEWSHLC
480   JF=J-JC1+1                                                         NEWSHLC
      U(I)=U(I)+(UA(J)-UF(JF)*(1.0-SGN))*GW(J)                           NEWSHLC
      V(I)=V(I)+(VA(J)-VF(JF)*(1.0-SGN))*GW(J)                           NEWSHLC
      W(I)=W(I)+(WA(J)-WF(JF)*(1.0-SGN))*GW(J)                           NEWSHLC
490   CONTINUE                                                           NEWSHLC
495   CONTINUE                                                           NEWSHLC
500   CONTINUE                                                           NEWSHLC
      REWIND N15                                                         NEWSHLC
      IF(NPTSB.NE.0) READ(N15) GB                                        NEWSHLC
      IF(NPTSWT.NE.0) READ(N15) GW                                       NEWSHLC
      IF(IPART.EQ.2) READ(N15) GW                                        NEWSHLC
C                                                                        NEWSHLC
      IF(IPART.EQ.2) GO TO 560                                           NEWSHLC
      REWIND 31                                                          NEWSHLC
      DO 505 N=1,NWING                                                   NEWSHLC
505   WRITE(31,830) U(N),V(N),W(N)                                       NEWSHLC
      IF(IABS(PRINT).LT.2) GO TO 520                                     NEWSHLC
      IF(LBC) GO TO 520                                                  NEWSHLC
      IF(IPART.EQ.1) WRITE(TAPE6,840) EM,ALPHA                           NEWSHLC
      IF(IPART.EQ.2) WRITE(TAPE6,845) EM,ALPHA                           NEWSHLC
      WRITE(TAPE6,850)                                                   NEWSHLC
      DO 510 N=1,NWING                                                   NEWSHLC
510   WRITE(TAPE6,820) N,GW(N),U(N),V(N),W(N)                            NEWSHLC
520   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE VFIX FOR THE CARLSON CORRECTION                     NEWSHLC
C                                                                        NEWSHLC
      REWIND TAPE11                                                      NEWSHLC
      READ(TAPE11) DEL,COSTH                                             NEWSHLC
      TANLES=TAN(XLAMDA)                                                 NEWSHLC
      IF(TANLES.EQ.0) GO TO 530                                          NEWSHLC
      IF(MACH.LE.1.0) GO TO 530                                          NEWSHLC
      XNUINF=SQRT(6.0)*ATAN(SQRT((MACH**2-1.0)/6.0))-ACOS(1.0/MACH)      NEWSHLC
      BETA=SQRT(MACH**2-1.0)                                             NEWSHLC
      BCOTLM=BETA/TANLES                                                 NEWSHLC
      ETAVFX=1.226+0.15*PI**(1.0-SQRT(BCOTLM))                           NEWSHLC
      EEK=1.0+(PI/2.0-1.0)*BCOTLM**ETAVFX                                NEWSHLC
      VFIX=-SGN*ALP/EEK                                                  NEWSHLC
      GO TO 540                                                          NEWSHLC
530   VFIX=0.0                                                           NEWSHLC
540   DO 550 NCAM=1,NWING                                                NEWSHLC
550   ZCSTR(NCAM)=CAMBER(NCAM)                                           NEWSHLC
560   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE PRESSURES ON WING, TAIL, NACELLE, AND SHELL         NEWSHLC
C                                                                        NEWSHLC
      CALL PRESS(NWING,EM,ALP,U,V,W,CP,CPSTAG,CPCRIT,CPVAC,COMPT,        NEWSHLC
     1 VFIX,SGN)                                                         NEWSHLC
C                                                                        NEWSHLC
      REWIND TAPE7                                                       NEWSHLC
      IF(NPTSWT.NE.0) READ(TAPE7) ARRAY,CHORD,DZTDX                      NEWSHLC
      IF(IPART.EQ.2) READ(TAPE7) ARRAY,CHORD,DZTDX                       NEWSHLC
      REWIND N15                                                         NEWSHLC
      IF(NPTSB.NE.0) READ(N15) GB                                        NEWSHLC
      IF(NPTSWT.NE.0) READ(N15) GW                                       NEWSHLC
      IF(IPART.EQ.2) READ(N15) GW                                        NEWSHLC
      IF(IABS(PRINT).LT.1) GO TO 580                                     NEWSHLC
      IF(.NOT.LBC) GO TO 580                                             NEWSHLC
      IF(IPART.EQ.1.AND.NPASS.EQ.1) WRITE(TAPE6,860) EM,ALPHA,VFIX       NEWSHLC
      IF(IPART.EQ.1.AND.NPASS.EQ.2) WRITE(TAPE6,870) EM,ALPHA,VFIX       NEWSHLC
      IF(IPART.EQ.2.AND.NPASS.EQ.1) WRITE(TAPE6,880) EM,ALPHA            NEWSHLC
      IF(IPART.EQ.2.AND.NPASS.EQ.2) WRITE(TAPE6,890) EM,ALPHA            NEWSHLC
      WRITE(TAPE6,900)                                                   NEWSHLC
      NX=0                                                               NEWSHLC
      NCP=0                                                              NEWSHLC
      DO 570 N=1,NSEG                                                    NEWSHLC
      NCOL=NC(N)                                                         NEWSHLC
      NROW=NR(N)                                                         NEWSHLC
      NR1=NROW+1                                                         NEWSHLC
      DO 570 NN=1,NCOL                                                   NEWSHLC
      DO 570 NNN=1,NR1                                                   NEWSHLC
      NX=NX+1                                                            NEWSHLC
      IF(NNN.EQ.NR1.AND.LOCPT(N).EQ.0) GO TO 570                         NEWSHLC
      NCP=NCP+1                                                          NEWSHLC
      IF(IPART.EQ.1) WRITE(TAPE6,910)                                    NEWSHLC
     1 NCP,X(NX),Y(NX),Z(NX),GW(NCP),U(NCP),V(NCP),W(NCP),ZCSTR(NCP),    NEWSHLC
     2 ZTSTR(NCP),CP(NCP),CPSTR(NCP),NCP                                 NEWSHLC
      IF(IPART.EQ.2) WRITE(TAPE6,920)                                    NEWSHLC
     1 NCP,X(NX),Y(NX),Z(NX),GW(NCP),U(NCP),V(NCP),W(NCP),CP(NCP),NCP    NEWSHLC
570   CONTINUE                                                           NEWSHLC
580   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE FORCES AND MOMENT                                   NEWSHLC
C          ON WING, TAIL, NACELLE, AND SHELL                             NEWSHLC
C                                                                        NEWSHLC
      CALL FORMOM(NWING,NPASS,ALP,COMPT)                                 NEWSHLC
      IF(LBC.AND.NPASS.EQ.1) GO TO 590                                   NEWSHLC
      GO TO 600                                                          NEWSHLC
590   NPASS=NPASS+1                                                      NEWSHLC
      GO TO 370                                                          NEWSHLC
600   CONTINUE                                                           NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
C          CALCULATIONS COMPLETED                                        NEWSHLC
C                                                                        NEWSHLC
C**********************************************************              NEWSHLC
C                                                                        NEWSHLC
610   WRITE(TAPE6,930) CPSTAG,CPCRIT,CPVAC                               NEWSHLC
      CALL SECOND(TIME)                                                  NEWSHLC
      WRITE(TAPE6,940) TIME                                              NEWSHLC
C                                                                        NEWSHLC
C          FORMATS                                                       NEWSHLC
C                                                                        NEWSHLC
800   FORMAT(1H1,25HVELOCITIES ON BODY, MACH=,F5.3,3X,6HALPHA=,F7.3//)   NEWSHLC
810   FORMAT(1X,5HPANEL,10X,6HSOURCE,10X,5HAXIAL,10X,7HLATERAL,10X,      NEWSHLC
     1 8HVERTICAL,10X,6HNORMAL/2X,3HNO.,10X,8HSTRENGTH,7X,8HVELOCITY,    NEWSHLC
     2 9X,8HVELOCITY,9X,8HVELOCITY,9X,8HVELOCITY//)                      NEWSHLC
820   FORMAT(1H ,I4,7X,F10.5,5X,F10.5,3(7X,F10.5))                       NEWSHLC
830   FORMAT(3E14.7)                                                     NEWSHLC
840   FORMAT(1H1,25HVELOCITIES ON WING, MACH=,F5.3,3X,6HALPHA=,F7.3//)   NEWSHLC
845   FORMAT(1H1,26HVELOCITIES ON SHELL, MACH=,F5.3,3X,6HALPHA=,F7.3//)  NEWSHLC
850   FORMAT(1X,5HPANEL,10X,6HVORTEX,10X,5HAXIAL,10X,7HLATERAL,10X,      NEWSHLC
     1 8HVERTICAL/2X,3HNO.,10X,8HSTRENGTH,7X,8HVELOCITY,9X,8HVELOCITY,   NEWSHLC
     2 9X,8HVELOCITY//)                                                  NEWSHLC
860   FORMAT(1H1,40HWING UPPER SURFACE CONTROL POINTS, MACH=,F5.3,       NEWSHLC
     1 3X,6HALPHA=,F7.3,3X,5HVFIX=,F12.5,//)                             NEWSHLC
870   FORMAT(1H1,40HWING LOWER SURFACE CONTROL POINTS, MACH=,F5.3,       NEWSHLC
     1 3X,6HALPHA=,F7.3,3X,5HVFIX=,F12.5,//)                             NEWSHLC
880   FORMAT(1H1,43HNACELLE/SHELL UPPER SURFACE CONTROL POINTS,,         NEWSHLC
     1 3X,5HMACH=,F6.3,3X,6HALPHA=,F7.3,//)                              NEWSHLC
890   FORMAT(1H1,43HNACELLE/SHELL LOWER SURFACE CONTROL POINTS,,         NEWSHLC
     1 3X,5HMACH=,F6.3,3X,6HALPHA=,F7.3,//)                              NEWSHLC
900   FORMAT(3X,5HPOINT,4X,1HX,9X,1HY,9X,1HZ,9X,1HG,9X,1HU,9X,1HV,       NEWSHLC
     1 9X,1HW,7X,5HDZCDX,5X,5HDZTDX,6X,2HCP,7X,5HCPSTR,3X,5HPOINT,/)     NEWSHLC
910   FORMAT(1X,I6,11F10.5,I6)                                           NEWSHLC
920   FORMAT(1X,I6,7F10.5,20X,F10.5,10X,I6)                              NEWSHLC
930   FORMAT(1H0,8HCPSTAG =F10.5,3X,8HCPCRIT =F10.5,3X,7HCPVAC =F10.5)   NEWSHLC
940   FORMAT(1H0,13HSOLVE, TIME =,F10.5)                                 NEWSHLC
      END                                                                NEWSHLC
      SUBROUTINE INVERT (A,IA,NROWS)                                     INVERT 
C                                                                        INVERT 
C     ********************************************VERSION B00*********** INVERT 
C                                                                        INVERT 
C                                                                        INVERT 
C     SIMPLE MATRIX INVERSION ROUTINE BASED ON GAUSS-JORDAN ELIMINATION  INVERT 
C     WITHOUT PIVOTING                                                   INVERT 
C                                                                        INVERT 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP INVERT 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       INVERT 
C                                                                        INVERT 
      DIMENSION IPIVOT(115), INDXR(115), INDXC(115), A(NROWS,NROWS)      INVERT 
C                                                                        INVERT 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE INVERT 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              INVERT 
C                                                                        INVERT 
      N=IA                                                               INVERT 
      DO 10 J=1,N                                                        INVERT 
10    IPIVOT(J)=0                                                        INVERT 
      DO 100 I=1,N                                                       INVERT 
      T=0.0                                                              INVERT 
      DO 30 J=1,N                                                        INVERT 
      IF (IPIVOT(J).EQ.1) GO TO 30                                       INVERT 
      DO 20 K=1,N                                                        INVERT 
      IF (IPIVOT(K).EQ.1) GO TO 20                                       INVERT 
      IF (.NOT.(ABS(A(J,K))-ABS(T).GT.0.0)) GO TO 20                     INVERT 
      IROW=J                                                             INVERT 
      ICOL=K                                                             INVERT 
      T=A(J,K)                                                           INVERT 
20    CONTINUE                                                           INVERT 
30    CONTINUE                                                           INVERT 
      IPIVOT(ICOL)=IPIVOT(ICOL)+1                                        INVERT 
      IF (IROW.EQ.ICOL) GO TO 50                                         INVERT 
      DO 40 L=1,N                                                        INVERT 
      T=A(IROW,L)                                                        INVERT 
      A(IROW,L)=A(ICOL,L)                                                INVERT 
40    A(ICOL,L)=T                                                        INVERT 
50    INDXR(I)=IROW                                                      INVERT 
      INDXC(I)=ICOL                                                      INVERT 
      PIVOT=A(ICOL,ICOL)                                                 INVERT 
      IF (PIVOT) 60,130,60                                               INVERT 
60    A(ICOL,ICOL)=1.0                                                   INVERT 
      DO 70 L=1,N                                                        INVERT 
70    A(ICOL,L)=A(ICOL,L)/PIVOT                                          INVERT 
      DO 90 L=1,N                                                        INVERT 
      IF (L.EQ.ICOL) GO TO 90                                            INVERT 
      T=A(L,ICOL)                                                        INVERT 
      A(L,ICOL)=0.0                                                      INVERT 
      DO 80 M=1,N                                                        INVERT 
80    A(L,M)=A(L,M)-A(ICOL,M)*T                                          INVERT 
90    CONTINUE                                                           INVERT 
100   CONTINUE                                                           INVERT 
      DO 120 I=1,N                                                       INVERT 
      L=N+1-I                                                            INVERT 
      IF (INDXR(L).EQ.INDXC(L)) GO TO 120                                INVERT 
      IROW=INDXR(L)                                                      INVERT 
      ICOL=INDXC(L)                                                      INVERT 
      DO 110 K=1,N                                                       INVERT 
      T=A(K,IROW)                                                        INVERT 
      A(K,IROW)=A(K,ICOL)                                                INVERT 
110   A(K,ICOL)=T                                                        INVERT 
120   CONTINUE                                                           INVERT 
C                                                                        INVERT 
C     SUCCESSFUL SOLUTION                                                INVERT 
C                                                                        INVERT 
      RETURN                                                             INVERT 
130   CONTINUE                                                           INVERT 
C                                                                        INVERT 
C     SINGULAR MATRIX                                                    INVERT 
C                                                                        INVERT 
      WRITE (TAPE6,140)                                                  INVERT 
      WRITE (TAPE6,150)                                                  INVERT 
      CALL EXIT                                                          INVERT 
      RETURN                                                             INVERT 
C                                                                        INVERT 
C                                                                        INVERT 
140   FORMAT (1H0,26H ERROR MESSAGE FROM INVERT)                         INVERT 
150   FORMAT (1H0,30HERROR - THE MATRIX IS SINGULAR)                     INVERT 
      END                                                                INVERT 
      SUBROUTINE PARTIN                                                  PARTIN 
C                                                                        PARTIN 
C     ********************************************VERSION B00*********** PARTIN 
C                                                                        PARTIN 
C                                                                        PARTIN 
C     FOR WING-BODY COMBINATIONS, INVERT THE MATRIX PATITIONS (PROVIDED  PARTIN 
C     THE ORDER DOES NOT EXCEED 60).                                     PARTIN 
C                                                                        PARTIN 
C     FOR ISOLATED WINGS OR BODIES, ALSO SOLVE THE BOUNDARY CONDITION    PARTIN 
C     EQUATIONS AND DETERMINE THE WING VORTEX STRENGTHS OR BODY SOURCE   PARTIN 
C     STRENGTHS.                                                         PARTIN 
C                                                                        PARTIN 
C                                                                        PARTIN 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP PARTIN 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       PARTIN 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           PARTIN 
      COMMON /SEG/ NSEG,NR(20)                                           PARTIN 
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EX,PRINT,NWTHK         PARTIN 
      COMMON /POINT/ ARRAY(6000)                                         PARTIN 
      COMMON /SCRAT/ BLOCK(7500)                                         PARTIN 
      COMMON /MATCOM/ MATIN                                              NEWSHLC
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NEWSHLC
C                                                                        PARTIN 
      DIMENSION D(60,60), NW(600), NB(600), NT(600), A(60,60), GW(600),  PARTIN 
     1GB(600), GT(600)                                                   PARTIN 
C                                                                        PARTIN 
      EQUIVALENCE (ARRAY(1),D(1)), (BLOCK(1),NW(1)), (BLOCK(601),NB(1)), PARTIN 
     1 (BLOCK(1201),NT(1)), (BLOCK(1801),A(1)), (BLOCK(5701),GW(1)), (BL PARTIN 
     2OCK(6301),GB(1)), (BLOCK(6901),GT(1))                              PARTIN 
C                                                                        PARTIN 
      REAL NW,NB,NT                                                      PARTIN 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE PARTIN 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              PARTIN 
C                                                                        PARTIN 
      CALL SECOND (TIME)                                                 PARTIN 
      WRITE (TAPE6,110) TIME                                             PARTIN 
C                                                                        PARTIN 
C     SET MATRIX BLOCK SIZE AT 60 BY 60                                  PARTIN 
C                                                                        PARTIN 
      NDIM=60                                                            PARTIN 
C                                                                        PARTIN 
      REWIND TAPE9                                                       PARTIN 
      REWIND TAPE10                                                      NEWSHLC
      NPANEL=NBODY+NWING                                                 PARTIN 
      IF (NWING.EQ.0.OR.NBODY.EQ.0) GO TO 50                             PARTIN 
      IF(MATIN.EQ.0) GO TO 100                                           NEWSHLC
      DO 10 I=1,NBODY                                                    PARTIN 
10    READ (TAPE9) (D(I,J),J=1,NBODY)                                    PARTIN 
      CALL INVERT (D,NBODY,NDIM)                                         PARTIN 
      WRITE (TAPE10) D                                                   PARTIN 
      DO 20 I = 1,NPANEL                                                 PARTIN 
   20 READ(TAPE9)                                                        PARTIN 
      DO 40 I=1,NWING                                                    PARTIN 
40    READ (TAPE9) (D(I,J),J=1,NWING)                                    PARTIN 
      CALL INVERT (D,NWING,NDIM)                                         PARTIN 
      WRITE (TAPE10) D                                                   PARTIN 
      REWIND TAPE9                                                       PARTIN 
      REWIND TAPE10                                                      PARTIN 
      MATIN=0                                                            NEWSHLC
      GO TO 100                                                          PARTIN 
50    CONTINUE                                                           PARTIN 
      IF(MATIN.EQ.1) GO TO 55                                            NEWSHLC
      READ(TAPE10) A                                                     NEWSHLC
      GO TO 65                                                           NEWSHLC
55    CONTINUE                                                           NEWSHLC
      DO 60 I=1,NPANEL                                                   PARTIN 
60    READ (TAPE9) (A(I,J),J=1,NPANEL)                                   PARTIN 
      REWIND TAPE9                                                       PARTIN 
      CALL INVERT (A,NPANEL,NDIM)                                        PARTIN 
      WRITE(TAPE10) A                                                    NEWSHLC
      IF(IPART.NE.0) MATIN=0                                             NEWSHLC
65    CONTINUE                                                           NEWSHLC
      IF (NWING.EQ.0) GO TO 80                                           PARTIN 
      DO 70 I=1,NWING                                                    PARTIN 
      GW(I)=0.                                                           PARTIN 
      DO 70 J=1,NWING                                                    PARTIN 
      GW(I)=GW(I)+A(I,J)*NW(J)                                           PARTIN 
70    CONTINUE                                                           PARTIN 
      GO TO 100                                                          PARTIN 
80    DO 90 I=1,NBODY                                                    PARTIN 
      GB(I)=0.                                                           PARTIN 
      DO 90 J=1,NBODY                                                    PARTIN 
      GB(I)=GB(I)+A(I,J)*NB(J)                                           PARTIN 
90    CONTINUE                                                           PARTIN 
100   CALL SECOND (TIME)                                                 PARTIN 
      WRITE (TAPE6,110) TIME                                             PARTIN 
      REWIND TAPE9                                                       PARTIN 
      RETURN                                                             PARTIN 
C                                                                        PARTIN 
C                                                                        PARTIN 
110   FORMAT (1H0,14HPARTIN, TIME =,F10.5)                               PARTIN 
      END                                                                PARTIN 
      SUBROUTINE DIAGIN                                                  DIAGIN 
C                                                                        DIAGIN 
C     ********************************************VERSION B00*********** DIAGIN 
C                                                                        DIAGIN 
C                                                                        DIAGIN 
C     INVERT THE DIAGONAL BLOCKS OF THE MATRIX.                          DIAGIN 
C                                                                        DIAGIN 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP DIAGIN 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       DIAGIN 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           DIAGIN 
      COMMON /SEG/ NSEG,NR(20)                                           DIAGIN 
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EM,PRINT,NWTHK,NWBLOK, DIAGIN 
     1NWROW(20),NBBLOK,NBROW(60)                                         DIAGIN 
      COMMON /POINT/ ARRAY(6000)                                         DIAGIN 
      COMMON /MATCOM/ MATIN                                              NEWSHLC
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NEWSHLC
C                                                                        DIAGIN 
      DIMENSION D(60,60)                                                 DIAGIN 
C                                                                        DIAGIN 
      EQUIVALENCE (ARRAY(1),D(1))                                        DIAGIN 
C                                                                        DIAGIN 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE DIAGIN 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              DIAGIN 
C                                                                        DIAGIN 
      REWIND TAPE9                                                       DIAGIN 
      REWIND TAPE10                                                      DIAGIN 
C                                                                        DIAGIN 
C     SET MATRIX BLOCK SIZE AT 60 BY 60                                  DIAGIN 
C                                                                        DIAGIN 
      NDIM=60                                                            DIAGIN 
C                                                                        DIAGIN 
      IF(MATIN.EQ.0) GO TO 140                                           NEWSHLC
      IF (NBODY.EQ.0) GO TO 50                                           DIAGIN 
      DO 40 NB=1,NBBLOK                                                  DIAGIN 
      NROW=NBROW(NB)                                                     DIAGIN 
      NCOL=NROW                                                          DIAGIN 
      IF (NBODY.GT.NMAX) GO TO 20                                        DIAGIN 
      DO 10 I=1,NBODY                                                    DIAGIN 
10    READ (TAPE9) (D(I,J),J=1,NBODY)                                    DIAGIN 
      GO TO 30                                                           DIAGIN 
20    READ (TAPE7) D                                                     DIAGIN 
30    CALL INVERT (D,NCOL,NDIM)                                          DIAGIN 
      WRITE (TAPE10) D                                                   DIAGIN 
40    CONTINUE                                                           DIAGIN 
50    IF (NWING.EQ.0) GO TO 140                                          DIAGIN 
      DO 130 NW=1,NWBLOK                                                 DIAGIN 
      NROW=NWROW(NW)                                                     DIAGIN 
      NCOL=NROW                                                          DIAGIN 
      IF (NWING.GT.NMAX) GO TO 110                                       DIAGIN 
      IF (NBODY.EQ.0) GO TO 90                                           DIAGIN 
C                        SKIP                                            DIAGIN 
      NPO = NBODY + NBODY + NWING                                        DIAGIN 
      DO 60 I = 1,NPO                                                    DIAGIN 
   60 READ(TAPE9)                                                        DIAGIN 
90    DO 100 I=1,NWING                                                   DIAGIN 
100   READ (TAPE9) (D(I,J),J=1,NWING)                                    DIAGIN 
      GO TO 120                                                          DIAGIN 
110   READ (TAPE7) D                                                     DIAGIN 
120   CALL INVERT (D,NCOL,NDIM)                                          DIAGIN 
      WRITE (TAPE10) D                                                   DIAGIN 
130   CONTINUE                                                           DIAGIN 
140   CONTINUE                                                           DIAGIN 
      REWIND TAPE7                                                       DIAGIN 
      REWIND TAPE9                                                       DIAGIN 
      REWIND TAPE10                                                      DIAGIN 
      IF(IPART.NE.0) MATIN=0                                             NEWSHLC
      RETURN                                                             DIAGIN 
      END                                                                DIAGIN 
      SUBROUTINE ITRATE                                                  ITRATE 
C                                                                        ITRATE 
C     *******************************************VERSION B00************ ITRATE 
C                                                                        ITRATE 
C     SOLVE THE BOUNDARY CONDITION EQUATIONS BY AN ITERATIVE METHOD AND  ITRATE 
C     DETERMINE THE STRENGTHS OF THE BODY SOURCES AND THE WING, FIN      ITRATE 
C     (VERTICAL TAIL), AND CANARD (HORIZONTAL TAIL) VORTICES.            ITRATE 
C                                                                        ITRATE 
C     A NEW VERSION OF ITRATE HAS BEEN DEVELOPED AT PURDUE UNIVERSITY    ITRATE 
C     THAT PERMITS THE SELECTION OF THE ITERATIVE SOLUTION METHOD.       ITRATE 
C                                                                        ITRATE 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP ITRATE 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       ITRATE 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           ITRATE 
      COMMON /SEG/ NSEG,NR(20)                                           ITRATE 
      COMMON /VELCOM/ NPOINT,NPART,IMAX,JMAX,NMAX,EM,PRINT,NWTHK,NWBLOK, ITRATE 
     1NWROW(20),NBBLOK,NBROW(60)                                         ITRATE 
      COMMON /POINT/ ARRAY(6000)                                         ITRATE 
      COMMON /SCRAT/ BLOCK(7500)                                         ITRATE 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, ITRATE 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        ITRATE 
      COMMON /ITERAT/ ITMAX,CCTEST,DCTEST,ITMETH,ALF1,ALF2               ITRATE 
C                                                                        ITRATE 
      DIMENSION D(60,60), DNB(600), DNW(600), NW(600), NB(600), NT(600), ITRATE 
     1 A(600), RW(600), RB(600), WW(600), BB(600), GW(600), GB(600), GT( ITRATE 
     2600)                                                               ITRATE 
C                                                                        ITRATE 
      EQUIVALENCE (ARRAY(1),D(1)), (ARRAY(3601),DNB(1)), (ARRAY(4201),DN ITRATE 
     1W(1)), (BLOCK(1),NW(1)), (BLOCK(601),NB(1)), (BLOCK(1201),NT(1)),  ITRATE 
     2(BLOCK(1801),A(1)), (BLOCK(2401),RW(1)), (BLOCK(3001),RB(1)), (BLO ITRATE 
     3CK(4501),WW(1)), (BLOCK(5101),BB(1)), (BLOCK(5701),GW(1)), (BLOCK( ITRATE 
     46301),GB(1)), (BLOCK(6901),GT(1))                                  ITRATE 
C                                                                        ITRATE 
      REAL NB,NW,NT                                                      ITRATE 
      INTEGER PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE ITRATE 
     19,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPEI                  ITRATE 
C                                                                        ITRATE 
C     SET MAXIMUM NUMBER OF ITERATIONS - IMAX                            ITRATE 
C                                                                        ITRATE 
      IMAX=50                                                            ITRATE 
      IF (ITMAX.NE.0) IMAX=ITMAX                                         ITRATE 
C                                                                        ITRATE 
C                                                                        ITRATE 
C     SET CONVERGENCE CRITERIA - EPSIT1                                  ITRATE 
C                                                                        ITRATE 
C                                                                        ITRATE 
      IF (CCTEST.NE.0.) EPSIT1=CCTEST                                    ITRATE 
C                                                                        ITRATE 
C                                                                        ITRATE 
C     SET DIVERGENCE CRITERIA - EPSIT2                                   ITRATE 
C                                                                        ITRATE 
      IF (DCTEST.NE.0.) EPSIT2=DCTEST                                    ITRATE 
C                                                                        ITRATE 
C                                                                        ITRATE 
C     SET ITERATIVE SOLUTION METHOD - IMETH                              ITRATE 
C                                                                        ITRATE 
      IMETH=1                                                            ITRATE 
      IF (ITMETH.NE.0.) IMETH=ITMETH-1                                   ITRATE 
      IF (IMETH.GT.3) IMETH=1                                            ITRATE 
C                                                                        ITRATE 
C     IN TERMS OF IMETH, THE SOLUTION PROCEDURES ARE                     ITRATE 
C            IMETH=0     BLOCKED JACOBI                                  ITRATE 
C                  1     BLOCKED GAUSS-SIEDEL                            ITRATE 
C                  2     BLOCKED CONTROLLED SUCCESSIVE OVERRELAXATION    ITRATE 
C                  3     BLOCKED SUCCESSIVE OVERRELAXATION               ITRATE 
C                                                                        ITRATE 
      IF (IMETH.EQ.0) WRITE (TAPE6,600)                                  ITRATE 
      IF (IMETH.EQ.0) GO TO 60                                           ITRATE 
      IF (IMETH.EQ.1) ALF1=1.0                                           ITRATE 
      IF (IMETH.NE.2) GO TO 10                                           ITRATE 
      ALF1=0.9                                                           ITRATE 
      ALF2=1.1                                                           ITRATE 
10    ALF=ALF1                                                           ITRATE 
      IF (IMETH.EQ.1) WRITE (TAPE6,610) ALF                              ITRATE 
      IF (IMETH.EQ.2) WRITE (TAPE6,620) ALF1,ALF2                        ITRATE 
      IF (IMETH.EQ.3) WRITE (TAPE6,630) ALF1,ALF2                        ITRATE 
      TAPEI=TAPE9                                                        ITRATE 
      IF (NWING.EQ.0.OR.NBODY.EQ.0) GO TO 60                             ITRATE 
      TAPEI=TAPE14                                                       ITRATE 
      REWIND TAPE9                                                       ITRATE 
      DO 20 I=1,NBODY                                                    ITRATE 
   20 READ(TAPE9)                                                        ITRATE 
      DO 30 I=1,NBODY                                                    ITRATE 
      READ (TAPE9) (A(K),K=1,NWING)                                      ITRATE 
   30 WRITE(TAPE14) (A(K),K=1,NWING)                                     ITRATE 
      IF (NWING.LE.NMAX) GO TO 60                                        ITRATE 
      DO 40 I=1,NWING                                                    ITRATE 
   40 READ(TAPE9)                                                        ITRATE 
      DO 50 I=1,NWING                                                    ITRATE 
      READ (TAPE9) (A(K),K=1,NWING)                                      ITRATE 
50    WRITE (TAPE14) (A(K),K=1,NWING)                                    ITRATE 
60    CONTINUE                                                           ITRATE 
      IT=0                                                               ITRATE 
      REWIND TAPE9                                                       ITRATE 
      REWIND TAPE10                                                      ITRATE 
      IF (NBODY.EQ.0) GO TO 80                                           ITRATE 
      DO 70 N=1,NBODY                                                    ITRATE 
      NT(N)=0.                                                           ITRATE 
70    RB(N)=NB(N)                                                        ITRATE 
80    IF (NWING.EQ.0) GO TO 100                                          ITRATE 
      DO 90 N=1,NWING                                                    ITRATE 
      GT(N)=0.                                                           ITRATE 
90    RW(N)=NW(N)                                                        ITRATE 
100   IT=IT+1                                                            ITRATE 
      ITEST=0                                                            ITRATE 
      JTEST=0                                                            ITRATE 
      CALL SECOND (TIME)                                                 ITRATE 
      WRITE (TAPE6,710) TIME                                             ITRATE 
      IB=0                                                               ITRATE 
      IW=0                                                               ITRATE 
      IF (NBODY.EQ.0) GO TO 150                                          ITRATE 
      JS=0                                                               ITRATE 
      NBLOK=NBBLOK                                                       ITRATE 
      DO 120 NN=1,NBLOK                                                  ITRATE 
      NROW=NBROW(NN)                                                     ITRATE 
      NCOL=NROW                                                          ITRATE 
      READ (TAPE10) D                                                    ITRATE 
      DO 110 I=1,NROW                                                    ITRATE 
      IB=IB+1                                                            ITRATE 
      GB(IB)=0.                                                          ITRATE 
      DO 110 J=1,NCOL                                                    ITRATE 
      JJ=J+JS                                                            ITRATE 
110   GB(IB)=GB(IB)+D(I,J)*RB(JJ)                                        ITRATE 
      JS=JS+NROW                                                         ITRATE 
120   CONTINUE                                                           ITRATE 
      DO 130 N=1,NBODY                                                   ITRATE 
      IF (ITEST.EQ.1.OR.IT.EQ.1) GO TO 130                               ITRATE 
      IF (ABS(GB(N)-NT(N)).GE.EPSIT1) ITEST=1                            ITRATE 
130   CONTINUE                                                           ITRATE 
      DO 140 N=1,NBODY                                                   ITRATE 
      IF (JTEST.EQ.1.OR.IT.EQ.1) GO TO 140                               ITRATE 
      IF (ABS(GB(N)).GE.EPSIT2) JTEST=1                                  ITRATE 
140   CONTINUE                                                           ITRATE 
150   IF (NWING.EQ.0) GO TO 200                                          ITRATE 
      JS=0                                                               ITRATE 
      NBLOK=NWBLOK                                                       ITRATE 
      DO 170 NN=1,NBLOK                                                  ITRATE 
      NROW=NWROW(NN)                                                     ITRATE 
      NCOL=NROW                                                          ITRATE 
      READ (TAPE10) D                                                    ITRATE 
      DO 160 I=1,NROW                                                    ITRATE 
      IW=IW+1                                                            ITRATE 
      GW(IW)=0.                                                          ITRATE 
      DO 160 J=1,NCOL                                                    ITRATE 
      JJ=J+JS                                                            ITRATE 
160   GW(IW)=GW(IW)+D(I,J)*RW(JJ)                                        ITRATE 
      JS=JS+NROW                                                         ITRATE 
170   CONTINUE                                                           ITRATE 
      DO 180 N=1,NWING                                                   ITRATE 
      IF (ITEST.EQ.1.OR.IT.EQ.1) GO TO 180                               ITRATE 
      IF (ABS(GW(N)-GT(N)).GE.EPSIT1) ITEST=1                            ITRATE 
180   CONTINUE                                                           ITRATE 
      DO 190 N=1,NWING                                                   ITRATE 
      IF (JTEST.EQ.1.OR.IT.EQ.1) GO TO 190                               ITRATE 
      IF (ABS(GW(N)).GE.EPSIT2) JTEST=1                                  ITRATE 
190   CONTINUE                                                           ITRATE 
200   CONTINUE                                                           ITRATE 
      REWIND TAPE10                                                      ITRATE 
210   IF (IABS(PRINT).LT.3) GO TO 220                                    ITRATE 
      WRITE (TAPE6,720) IT                                               ITRATE 
      IF (NBODY.GT.0) WRITE (TAPE6,730) NBODY,(GB(N),N=1,NBODY)          ITRATE 
      IF (NWING.GT.0) WRITE (TAPE6,740) NWING,(GW(N),N=1,NWING)          ITRATE 
220   CONTINUE                                                           ITRATE 
      IF (IABS(PRINT).LT.4) GO TO 230                                    ITRATE 
      IF (NBODY.GT.0) WRITE (TAPE6,650) NBODY,(RB(N),N=1,NBODY)          ITRATE 
      IF (NWING.GT.0) WRITE (TAPE6,660) NWING,(RW(N),N=1,NWING)          ITRATE 
230   CONTINUE                                                           ITRATE 
      IF (JTEST.EQ.1.AND.IT.NE.1) GO TO 550                              ITRATE 
      IF (ITEST.EQ.0.AND.IT.NE.1) GO TO 560                              ITRATE 
      IF (IT.EQ.IMAX) GO TO 570                                          ITRATE 
      IF (IMETH.NE.0) GO TO 350                                          ITRATE 
      IF (NBODY.EQ.0) GO TO 290                                          ITRATE 
      DO 250 I=1,NBODY                                                   ITRATE 
      NT(I)=GB(I)                                                        ITRATE 
      DNB(I)=0.                                                          ITRATE 
      READ (TAPE9) (A(J),J=1,NBODY)                                      ITRATE 
      IF (NBODY.LE.NMAX) GO TO 250                                       ITRATE 
      DO 240 J=1,NBODY                                                   ITRATE 
240   DNB(I)=DNB(I)+A(J)*GB(J)                                           ITRATE 
250   RB(I)=NB(I)-DNB(I)                                                 ITRATE 
      IF (NWING.EQ.0) GO TO 280                                          ITRATE 
      DO 270 I=1,NBODY                                                   ITRATE 
      READ (TAPE9) (A(J),J=1,NWING)                                      ITRATE 
      DO 260 J=1,NWING                                                   ITRATE 
260   DNB(I)=DNB(I)+A(J)*GW(J)                                           ITRATE 
270   RB(I)=NB(I)-DNB(I)                                                 ITRATE 
280   CONTINUE                                                           ITRATE 
290   IF (NWING.EQ.0) GO TO 340                                          ITRATE 
      DO 310 I=1,NWING                                                   ITRATE 
      GT(I)=GW(I)                                                        ITRATE 
      DNW(I)=0.                                                          ITRATE 
      IF (NBODY.EQ.0) GO TO 310                                          ITRATE 
      READ (TAPE9) (A(J),J=1,NBODY)                                      ITRATE 
      DO 300 J=1,NBODY                                                   ITRATE 
300   DNW(I)=DNW(I)+A(J)*GB(J)                                           ITRATE 
310   RW(I)=NW(I)-DNW(I)                                                 ITRATE 
      IF (NWING.LE.NMAX) GO TO 340                                       ITRATE 
      DO 330 I=1,NWING                                                   ITRATE 
      READ (TAPE9) (A(J),J=1,NWING)                                      ITRATE 
      DO 320 J=1,NWING                                                   ITRATE 
320   DNW(I)=DNW(I)+A(J)*GW(J)                                           ITRATE 
330   RW(I)=NW(I)-DNW(I)                                                 ITRATE 
340   CONTINUE                                                           ITRATE 
      REWIND TAPE9                                                       ITRATE 
      IF (IT.LT.IMAX) GO TO 100                                          ITRATE 
      IF (IMETH.EQ.0) GO TO 560                                          ITRATE 
350   JJ=0                                                               ITRATE 
      CALL SECOND (TIME)                                                 ITRATE 
      WRITE (TAPE6,710) TIME                                             ITRATE 
      IT=IT+1                                                            ITRATE 
      II=1                                                               ITRATE 
      ITEST=0                                                            ITRATE 
      JTEST=0                                                            ITRATE 
      REWIND TAPE9                                                       ITRATE 
      REWIND TAPE10                                                      ITRATE 
      REWIND TAPE14                                                      ITRATE 
      IF (NBODY.EQ.0) GO TO 450                                          ITRATE 
      DO 430 I=1,NBBLOK                                                  ITRATE 
      NROW=NBROW(I)                                                      ITRATE 
      READ (TAPE10) D                                                    ITRATE 
      DO 390 J=1,NROW                                                    ITRATE 
      DNB(J)=0.                                                          ITRATE 
      READ (TAPE9) (A(K),K=1,NBODY)                                      ITRATE 
      IF (NBODY.LE.NMAX) GO TO 370                                       ITRATE 
      DO 360 K=1,NBODY                                                   ITRATE 
360   DNB(J)=DNB(J)+A(K)*GB(K)                                           ITRATE 
370   CONTINUE                                                           ITRATE 
      IF (NWING.EQ.0) GO TO 390                                          ITRATE 
      READ (TAPEI) (A(K),K=1,NWING)                                      ITRATE 
      DO 380 K=1,NWING                                                   ITRATE 
380   DNB(J)=DNB(J)+A(K)*GW(K)                                           ITRATE 
390   RB(J)=NB(J+JJ)-DNB(J)                                              ITRATE 
      DO 420 M=1,NROW                                                    ITRATE 
      NT(II)=GB(II)                                                      ITRATE 
      GB(II)=0.                                                          ITRATE 
      DO 400 L=1,NROW                                                    ITRATE 
400   GB(II)=GB(II)+D(M,L)*RB(L)                                         ITRATE 
      SAVE=BB(II)                                                        ITRATE 
      BB(II)=(GB(II)-NT(II))                                             ITRATE 
      IF (IMETH.NE.2) GO TO 410                                          ITRATE 
      SAVE=BB(II)*SAVE                                                   ITRATE 
      ALF=ALF1                                                           ITRATE 
      IF (SAVE.GE.0.) ALF=ALF2                                           ITRATE 
410   CONTINUE                                                           ITRATE 
      GB(II)=ALF*GB(II)+(1.-ALF)*NT(II)                                  ITRATE 
      IF (ABS(BB(II)).GT.EPSIT1) ITEST=1                                 ITRATE 
      IF (ABS(BB(II)).GT.EPSIT2) JTEST=1                                 ITRATE 
      II=II+1                                                            ITRATE 
420   CONTINUE                                                           ITRATE 
      JJ=JJ+NBROW(I)                                                     ITRATE 
430   CONTINUE                                                           ITRATE 
      IF (NWING.EQ.0) GO TO 540                                          ITRATE 
      DO 440 I=1,NBODY                                                   ITRATE 
440   READ (TAPE9) (A(K),K=1,NWING)                                      ITRATE 
450   CONTINUE                                                           ITRATE 
      JJ=0                                                               ITRATE 
      II=1                                                               ITRATE 
      DO 530 I=1,NWBLOK                                                  ITRATE 
      NROW=NWROW(I)                                                      ITRATE 
      READ (TAPE10) D                                                    ITRATE 
      DO 490 J=1,NROW                                                    ITRATE 
      DNW(J)=0.                                                          ITRATE 
      IF (NBODY.EQ.0) GO TO 470                                          ITRATE 
      READ (TAPE9) (A(K),K=1,NBODY)                                      ITRATE 
      DO 460 K=1,NBODY                                                   ITRATE 
460   DNW(J)=DNW(J)+A(K)*GB(K)                                           ITRATE 
470   CONTINUE                                                           ITRATE 
      IF (NWING.LE.NMAX) GO TO 490                                       ITRATE 
      READ (TAPEI) (A(K),K=1,NWING)                                      ITRATE 
      DO 480 K=1,NWING                                                   ITRATE 
480   DNW(J)=DNW(J)+A(K)*GW(K)                                           ITRATE 
490   RW(J)=NW(J+JJ)-DNW(J)                                              ITRATE 
      DO 520 M=1,NROW                                                    ITRATE 
      GT(II)=GW(II)                                                      ITRATE 
      GW(II)=0.                                                          ITRATE 
      DO 500 L=1,NROW                                                    ITRATE 
500   GW(II)=GW(II)+D(M,L)*RW(L)                                         ITRATE 
      SAVE=WW(II)                                                        ITRATE 
      WW(II)=GW(II)-GT(II)                                               ITRATE 
      IF (IMETH.NE.2) GO TO 510                                          ITRATE 
      SAVE=WW(II)*SAVE                                                   ITRATE 
      ALF=ALF1                                                           ITRATE 
      IF (SAVE.GE.0.) ALF=ALF2                                           ITRATE 
510   CONTINUE                                                           ITRATE 
      GW(II)=ALF*GW(II)+(1.-ALF)*GT(II)                                  ITRATE 
      IF (ABS(WW(II)).GT.EPSIT1) ITEST=1                                 ITRATE 
      IF (ABS(WW(II)).GT.EPSIT2) JTEST=1                                 ITRATE 
      II=II+1                                                            ITRATE 
520   CONTINUE                                                           ITRATE 
      JJ=JJ+NWROW(I)                                                     ITRATE 
530   CONTINUE                                                           ITRATE 
540   CONTINUE                                                           ITRATE 
      GO TO 210                                                          ITRATE 
550   CONTINUE                                                           ITRATE 
      WRITE (TAPE6,590)                                                  ITRATE 
      WRITE (TAPE6,640) IT,EPSIT1,EPSIT2                                 ITRATE 
      GO TO 580                                                          ITRATE 
560   CONTINUE                                                           ITRATE 
      WRITE (TAPE6,670) IT,EPSIT1                                        ITRATE 
      GO TO 580                                                          ITRATE 
570   CONTINUE                                                           ITRATE 
      WRITE (TAPE6,590)                                                  ITRATE 
      WRITE (TAPE6,680) IMAX,EPSIT1                                      ITRATE 
580   CONTINUE                                                           ITRATE 
      WRITE (TAPE6,690)                                                  ITRATE 
      IF (NBODY.GT.0) WRITE (TAPE6,730) NBODY,(NT(N),N=1,NBODY)          ITRATE 
      IF (NWING.GT.0) WRITE (TAPE6,740) NWING,(GT(N),N=1,NWING)          ITRATE 
      WRITE (TAPE6,700)                                                  ITRATE 
      IF (NBODY.GT.0) WRITE (TAPE6,730) NBODY,(GB(N),N=1,NBODY)          ITRATE 
      IF (NWING.GT.0) WRITE (TAPE6,740) NWING,(GW(N),N=1,NWING)          ITRATE 
      RETURN                                                             ITRATE 
C                                                                        ITRATE 
C                                                                        ITRATE 
590   FORMAT (1H0,26H ERROR MESSAGE FROM ITRATE)                         ITRATE 
600   FORMAT (//1X,13HJACOBI METHOD//)                                   ITRATE 
610   FORMAT (//1X,21HGAUSS - SEIDEL METHOD,5X,4HALF=,F5.2//)            ITRATE 
620   FORMAT (//1X,43HCONTROLLED SUCCESSIVE OVERRELAXATION METHOD,5X,5HA ITRATE 
     1LF1=,F5.2,5X,5HALF2=,F5.2//)                                       ITRATE 
630   FORMAT (//1X,32HSUCCESSIVE OVERRELAXATION METHOD,5X,5HALF1=,F5.2,5 ITRATE 
     1X,5HALF2=,F5.2//)                                                  ITRATE 
640   FORMAT (1H0,30HTHE ITERATION DIVERGED AFTER  ,I3,2X,35HITERATIONS  ITRATE 
     1WITH A TEST CRITERION OF,F10.7,2X,34HAND A DIVERGENCE TEST CRITERI ITRATE 
     2ON OF,F10.3)                                                       ITRATE 
650   FORMAT (2X,10HRB(N),N=1,,I3/(1X,10F10.5))                          ITRATE 
660   FORMAT (2X,10HRW(N),N=1,,I3/(1X,10F10.5))                          ITRATE 
670   FORMAT (1H0,30HTHE ITERATION CONVERGED AFTER ,I3,2X,35HITERATIONS  ITRATE 
     1WITH A TEST CRITERION OF,F10.7)                                    ITRATE 
680   FORMAT (1H0,37HTHE ITERATION DID NOT CONVERGE AFTER ,I3,2X,35HITER ITRATE 
     1ATIONS WITH A TEST CRITERION OF,F10.7)                             ITRATE 
690   FORMAT (1H0,41HTHE SOLUTION AT THE PREVIOUS ITERATION IS)          ITRATE 
700   FORMAT (1H0,40HTHE SOLUTION AT THE PRESENT ITERATION IS)           ITRATE 
710   FORMAT (1H0,14HITRATE, TIME =,F10.5)                               ITRATE 
720   FORMAT (17H0ITERATION NUMBER,I4)                                   ITRATE 
730   FORMAT (2X,10HGB(N),N=1,,I3/(1X,10F10.5))                          ITRATE 
740   FORMAT (2X,10HGW(N),N=1,,I3/(1X,10F10.5))                          ITRATE 
      END                                                                ITRATE 
      SUBROUTINE PRESS(NP,XMACH,ARA,U,V,W,CPP,CPSTAG,CPCRIT,CPVAC,COMPT, PRESS
     1 VFIX,SGN)                                                         PRESS
C                                                                        PRESS
C     *******************************************VERSION B00************ PRESS
C                                                                        PRESS
C                                                                        PRESS
C     THE PRESSURE COEFFICIENT IS CALCULATED USING THE EXACT ISENTROPIC  PRESS
C     FORMULA IN ALL CASES EXCEPT FOR WING, CANARD (HORIZONTAL TAIL),    PRESS
C     AND FIN (VERTICAL TAIL) COMPONENTS ANALYZED UNDER THE PLANAR       PRESS
C     BOUNDARY CONDITION OPTION. IN THESE CASES, THE LINEARIZED THEORY   PRESS
C     PRESSURE COEFFICIENT FORMULA IS USED AND THE PRESSURE COEFFICIENT  PRESS
C     IS LIMITED BY THE VACUUM PRESSURE COEFFICIENT AND BY THE           PRESS
C     STAGNATION PRESSURE COEFFICIENT.                                   PRESS
C     COMPUTE THE STAGNATION PRESSURE COEFFICIENT, CRITICAL PRESSURE     PRESS
C     COEFFICIENT, AND VACUUM PRESSURE COEFFICIENT.                      PRESS
C                                                                        PRESS
      COMMON /PARAM/ DUM(3),LBC                                          PRESS
C                                                                        PRESS
      DIMENSION U(1), V(1), W(1), CPP(1)                                 PRESS
C                                                                        PRESS
      COMMON /SEG/ NSEG,NR(20),NC(20),COSS(20),SINS(20),BTE(20),NWT(20), NEWSHLC
     1             SPNW(20),XLEW(20),BLE(20),ZLEW(20)                    NEWSHLC
      COMMON /NEWCOM/ KDUM(46),LOCPT(20),XCPT(20)                        NEWSHLC
      COMMON/STAR/XSTAR(3600),NSEGW                                      PRESS
      DIMENSION ZCSTR(600),ZTSTR(600),CPSTR(600),                        PRESS
     1          DCNSTR(600),DCTSTR(600),DCMSTR(600)                      PRESS
      EQUIVALENCE (XSTAR(1)   , ZCSTR(1)),(XSTAR(601) , ZTSTR(1)),       PRESS
     1            (XSTAR(1201), CPSTR(1)),(XSTAR(1801),DCNSTR(1)),       PRESS
     2            (XSTAR(2401),DCTSTR(1)),(XSTAR(3001),DCMSTR(1))        PRESS
C                                                                        PRESS
      INTEGER COMPT                                                      PRESS
      LOGICAL LBC                                                        PRESS
C                                                                        PRESS
      XM2=XMACH*XMACH                                                    PRESS
      CPCRIT=0.                                                          PRESS
      CPSTAG=1.                                                          PRESS
      CPVAC=-100.                                                        PRESS
      COSARA=COS(ARA)                                                    PRESS
      SINARA=SIN(ARA)                                                    PRESS
      IF (XM2.EQ.0.) GO TO 10                                            PRESS
      CON=1.42857/XM2                                                    PRESS
      CON1=.2*XM2                                                        PRESS
      CPVAC=-CON                                                         PRESS
      CPSTAG=CON*((1.+CON1)**3.5-1.)                                     PRESS
      CPCRIT=CON*((5./6.+XM2/6.)**3.5-1.)                                PRESS
10    CONTINUE                                                           NEWSHLC
      NBLK=NSEG                                                          NEWSHLC
      IF(COMPT.EQ.1) NBLK=1                                              NEWSHLC
      J=0                                                                NEWSHLC
      DO 40 N=1,NBLK                                                     NEWSHLC
      NCOL=NC(N)                                                         NEWSHLC
      NROW=NR(N)+1                                                       NEWSHLC
      IF(LBC.AND.LOCPT(N).EQ.0) NROW=NR(N)                               NEWSHLC
      IF(COMPT.EQ.1) NCOL=1                                              NEWSHLC
      IF(COMPT.EQ.1) NROW=NP                                             NEWSHLC
      DO 40 NN=1,NCOL                                                    NEWSHLC
      DO 40 NNN=1,NROW                                                   NEWSHLC
      J=J+1                                                              NEWSHLC
      UWPM=U(J)*COSARA+W(J)*SINARA                                       PRESS
      IF(LBC.AND.COMPT.GE.2) GO TO 20                                    NEWSHLC
      UWIND=1.+UWPM                                                      PRESS
      VWIND=V(J)                                                         PRESS
      WWIND=W(J)*COSARA-U(J)*SINARA                                      PRESS
      VW2=VWIND*VWIND+WWIND*WWIND                                        PRESS
      Q2=UWIND*UWIND+VW2                                                 PRESS
      IF (XMACH.EQ.0.) GO TO 30                                          PRESS
      ARG=1.+CON1*(1.-Q2)                                                PRESS
      IF (ARG.LT.0.) ARG=0.                                              PRESS
      CPP(J)=CON*(ARG**3.5-1.)                                           PRESS
      GO TO 40                                                           PRESS
20    CPP(J)=-2.*U(J)                                                    PRESS
C                                                                        PRESS
C     CONSTRAIN THE PRESSURE COEFFICIENT SO THAT IT DOES NOT EXCEED THE  PRESS
C     VACUUM PRESSURE COEFFICIENT OR THE STAGNATION PRESSURE COEFFICIENT PRESS
C                                                                        PRESS
      IF (CPP(J).LT.CPVAC) CPP(J)=CPVAC                                  PRESS
      IF (CPP(J).GT.CPSTAG) CPP(J)=CPSTAG                                PRESS
      IF(COMPT.EQ.3) GO TO 25                                            NEWSHLC
      IF(XMACH .LE. 1.0) GO TO 25                                        PRESS
      COST=COSS(N)                                                       NEWSHLC
      SINT=SINS(N)                                                       NEWSHLC
      THET=ATAN2(SINT,COST)                                              NEWSHLC
      VN=V(J)*COST+W(J)*SINT                                             NEWSHLC
      WN=W(J)*COST-V(J)*SINT                                             NEWSHLC
      VN=VN-VFIX                                                         NEWSHLC
C     VN=0.0                                                             NEWSHLC
      UI=U(J)                                                            NEWSHLC
      VI=VN*COST-WN*SINT                                                 NEWSHLC
      WI=WN*COST+VN*SINT                                                 NEWSHLC
      DC=SGN*ATAN(ZCSTR(J))                                              NEWSHLC
      DT=ATAN(ZTSTR(J))                                                  NEWSHLC
      CALL CARLSN(XMACH,ARA,THET,DC,DT,UI,VI,WI,EPS,DSTR,CPSTRD,4)       NEWSHLC
      CPSTR(J)=CPSTRD                                                    NEWSHLC
      GO TO 40                                                           PRESS
25    CPSTR(J)=CPP(J)                                                    PRESS
      GO TO 40                                                           PRESS
30    CPP(J)=1.-Q2                                                       PRESS
40    CONTINUE                                                           PRESS
      RETURN                                                             PRESS
      END                                                                PRESS
      SUBROUTINE FORMOM (NPAN,NPASS,ALFA,COMPT)                          FORMOM 
C                                                                        FORMOM 
C     *******************************************VERSION B00************ FORMOM 
C                                                                        FORMOM 
C                                                                        FORMOM 
C     CALCULATE THE FORCE AND MOMENT COEFFICIENTS ON THE BODY, WING,     FORMOM 
C     FIN (VERTICAL TAIL) AND CANARD (HORIZONTAL TAIL)                   FORMOM 
C                                                                        FORMOM 
C                                                                        FORMOM 
C     IN THE OUTPUT FROM THIS ROUTINE X, Y, Z, AND 2Y/B ARE IN THE       FORMOM 
C     REFERENCE AXIS SYSTEM WHILE X/C AND Z/C ARE IN AN AXIS SYSTEM      FORMOM 
C     WITH ORIGIN AT THE LOCAL LEADING EDGE OF THE WING.                 FORMOM 
C                                                                        FORMOM 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NEWSHLC
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP FORMOM 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,TAPE17         SC3PLT 
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA,REFB,REFC FORMOM 
     1,REFD,REFL,REFX,REFZ                                               FORMOM 
      COMMON /HEAD/ TITLE1(14),TITLE2(14)                                FORMOM 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BTE(20),NWT( FORMOM 
     120),SPNW(20),XLEW(20),BLE(20),ZLEW(20)                             FORMOM 
      COMMON /POINT/ ARRAY(6000)                                         FORMOM 
      COMMON /SCRAT/ BLOCK(7500)                                         FORMOM 
      COMMON/NEWCOM/KDUM(46),LOCPT(20),XCPT(20)                          FORMOM 
      COMMON /VELCOM/ NPOINT,NDUM(5),PRINT                               FORMOM 
      COMMON /FORM/ CNW,CTW,CMW,CNB,CTB,CMB,CNS(20),CTS(20),CMS(20)      FORMOM 
      COMMON /PRESS/ KRADX(4),NRADX(4),KFORX(4),NFORX(4),KWAF,NWAF,KWAFO FORMOM 
     1R,NWAFOR,NFUS                                                      FORMOM 
      COMMON /GRAPH/ PLOT                                                FORMOM 
      COMMON /EPS/ EPSPAN,EPSWP1,EPSWP2,EPSTP,EPSVC,EPSSP1,EPSSP2,EPSLV, FORMOM 
     1EPSSV,EPSVV,EPSWV,EPSVP,EPSIT1,EPSIT2,EPSFM                        FORMOM 
      COMMON/ PSAVE / IFREE(600), CTFREE, CNFREE                         FORMOM 
      COMMON / SAVZLE /  ZLE(600)                                        FORMOM 
      COMMON/ NEWCAM / CAMMID(600)                                       FORMOM 
      COMMON/ DESIGN / CAMBER(600)                                       FORMOM 
      COMMON /POLAR/NCASE,CDBP(10),CLBP(10),CMBP(10),CDWP(10),CLWP(10),  SC3PLT 
     XCMWP(10),ALPHAP(10),MACHP(10),NSPAN,XSPAN(20)                      SC3PLT 
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
C                                                                        FORMOM 
      DIMENSION XPT(600), YPT(600), ZPT(600), THET(600), DELTA(600), SGN FORMOM 
     1(600), AREA(600), CHORD(600), CHD(20), XLE(600),           XC(30,2 FORMOM 
     20), DCN(600), DCM(600), DCT(600), II(600), SIND(600), COSD(600), C FORMOM 
     3P(600), SINT(600), COST(600), GW(600), GB(600), DZTDX(600)         FORMOM 
      DIMENSION XINTP(31),CPINTP(31)                                     FORMOM 
      DIMENSION CNSSTR(20),CTSSTR(20),CMSSTR(20)                         FORMOM 
C                                                                        FORMOM 
      EQUIVALENCE (ARRAY(1),XPT(1)), (ARRAY(601),YPT(1)), (ARRAY(1201),Z FORMOM 
     1PT(1)), (ARRAY(1801),THET(1)), (ARRAY(2401),DELTA(1)), (ARRAY(3001 FORMOM 
     2),XC(1)), (ARRAY(3001),SGN(1)), (ARRAY(4801),AREA(1)), (ARRAY(3601 FORMOM 
     3),CHORD(1)), (ARRAY(5401),XLE(1)), (BLOCK(1),DCN(1)), (BLOCK(601), FORMOM 
     4DCM(1)), (BLOCK(1201),DCT(1)), (BLOCK(1801),II(1)), (BLOCK(2401),S FORMOM 
     5IND(1)), (BLOCK(3001),COSD(1)), (BLOCK(3601),CP(1)), (BLOCK(4201), FORMOM 
     6CHD(1)), (BLOCK(4501),SINT(1)), (BLOCK(5101),COST(1)), (BLOCK(5701 FORMOM 
     7),GW(1)), (BLOCK(6301),GB(1)), (BLOCK(6901),DZTDX(1))              FORMOM 
C                                                                        FORMOM 
      COMMON/STAR/XSTAR(3600),NSEGW                                      FORMOM 
      DIMENSION ZCSTR(600),ZTSTR(600),CPSTR(600),                        FORMOM 
     1          DCNSTR(600),DCTSTR(600),DCMSTR(600)                      FORMOM 
      EQUIVALENCE (XSTAR(1)   , ZCSTR(1)),(XSTAR(601) , ZTSTR(1)),       FORMOM 
     1            (XSTAR(1201), CPSTR(1)),(XSTAR(1801),DCNSTR(1)),       FORMOM 
     2            (XSTAR(2401),DCTSTR(1)),(XSTAR(3001),DCMSTR(1))        FORMOM 
C                                                                        FORMOM 
      REAL MACH                                                          FORMOM 
      LOGICAL LBC                                                        FORMOM 
      INTEGER PLOT,COMPT,PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7 FORMOM 
     ,,TAPE8,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,     SC3PLT 
     ,TAPE17                                                             SC3PLT 
C                                                                        FORMOM 
C                                                                        FORMOM 
C     NOTE THAT THE WING, CANARD, AND TAIL ARE ALL SEGMENTS OF THE WING  FORMOM 
C     IN THIS SUBROUTINE                                                 FORMOM 
C                                                                        FORMOM 
      NP=NPAN                                                            FORMOM 
C                                                                        FORMOM 
C     COMPT=1 INDICATES BODY FORCE AND MOMENT CALCULATION                FORMOM 
C     COMPT=2 INDICATES WING FORCE AND MOMENT CALCULATION                FORMOM 
C     COMPT=3 INDICATES NACELLE/SHELL FORCE AND MOMENT CALCULATION       NEWSHLC
C                                                                        FORMOM 
C     NPASS=1 FOR THE BODY                                               FORMOM 
C     NPASS=1 FOR THE WING UPPER AND LOWER SURFACES IF THE NON-PLANAR    FORMOM 
C             BOUNDARY CONDITION OPTION IS SELECTED                      FORMOM 
C     NPASS=1 FOR THE WING UPPER SURFACE IF THE PLANAR BOUNDARY          FORMOM 
C             CONDITION OPTION IS SELECTED                               FORMOM 
C     NPASS=2 FOR THE WING LOWER SURFACE IF THE PLANAR BOUNDARY          FORMOM 
C             CONDITION OPTION IS SELECTED                               FORMOM 
C                                                                        FORMOM 
      KPLOT=0                                                            SC3PLT 
      IF(NOPT(8).NE.0.AND.NOPT(8).NE.1000) KPLOT=1                       SC3PLT 
      IF(KPLOT.EQ.0) GO TO 720                                           SC3PLT 
      IF(COMPT.EQ.1) WRITE(TAPE15) NPAN,NPASS,COMPT                      SC3PLT 
      IF(COMPT.EQ.2.AND.NPASS.EQ.1) WRITE(TAPE16) NPAN,NPASS,COMPT       SC3PLT 
      IF(COMPT.EQ.2.AND.NPASS.EQ.2) WRITE(TAPE17) NPAN,NPASS,COMPT       SC3PLT 
720   CONTINUE                                                           SC3PLT 
C*                                                                       FORMOM 
      ATOTAL = 0.0                                                       FORMOM 
      AFREE = 0.0                                                        FORMOM 
C*                                                                       FORMOM 
      DO 10 I=1,4                                                        FORMOM 
      IF (KRADX(I).NE.0) NRADX(I)=KRADX(I)                               FORMOM 
      IF (KFORX(I).NE.0) NFORX(I)=KFORX(I)                               FORMOM 
10    CONTINUE                                                           FORMOM 
      IF (KWAF.NE.0) NWAF=KWAF                                           FORMOM 
      IF (KWAFOR.NE.0) NWAFOR=KWAFOR                                     FORMOM 
      IF (COMPT.EQ.1) XON=XC(1,1)                                        FORMOM 
      IF (COMPT.EQ.2.AND.NBODY.GT.0) GO TO 20                            FORMOM 
      IF(COMPT.EQ.3.AND.(NPTSB.GT.0.OR.NPTSWT.GT.0)) GO TO 20            NEWSHLC
      CNB=0.                                                             FORMOM 
      CTB=0.                                                             FORMOM 
      CMB=0.                                                             FORMOM 
20    CONTINUE                                                           FORMOM 
      SIAL=SIN(ALFA)                                                     FORMOM 
      COAL=COS(ALFA)                                                     FORMOM 
      IF(COMPT.GE.2) GO TO 40                                            NEWSHLC
      WRITE(TAPE6,350)                                                   FORMOM 
      WRITE(TAPE6,370) TITLE1,TITLE2                                     FORMOM 
      WRITE(TAPE6,360)                                                   FORMOM 
      WRITE(TAPE6,500)                                                   FORMOM 
      WRITE(TAPE6,380) MACH,ALPHA                                        FORMOM 
      WRITE(TAPE6,400)                                                   FORMOM 
40    CONTINUE                                                           FORMOM 
      IF (LBC.AND.COMPT.GT.1) GO TO 70                                   FORMOM 
      DO 60 I=1,NPAN                                                     FORMOM 
      SGN(I)=1.0                                                         FORMOM 
      SIND(I)=SIN(DELTA(I))                                              FORMOM 
      COSD(I)=COS(DELTA(I))                                              FORMOM 
      SINT(I)=SIN(THET(I))                                               FORMOM 
60    COST(I)=COS(THET(I))                                               FORMOM 
      GO TO 90                                                           FORMOM 
70    CONTINUE                                                           FORMOM 
C                                                                        FORMOM 
C     CALCULATE CHORD LENGTH OF EACH COLUMN OF PANELS ON WING            FORMOM 
C                                                                        FORMOM 
      I=0                                                                FORMOM 
      J=0                                                                FORMOM 
      DO 100 N=1,NSEG                                                    FORMOM 
      NC=NCOL(N)                                                         FORMOM 
      NR=NROW(N)                                                         FORMOM 
      DO 100 M=1,NC                                                      FORMOM 
      J=J+1                                                              FORMOM 
      CHD(J)=0.                                                          FORMOM 
      KS=2                                                               FORMOM 
      IF (LBC) KS=1                                                      FORMOM 
      DO 100 K=1,KS                                                      FORMOM 
      DO 100 L=1,NR                                                      FORMOM 
      I=I+1                                                              FORMOM 
      IF (K.EQ.1) CHD(J)=CHD(J)+CHORD(I)                                 FORMOM 
      IF (K.EQ.2) SGN(I)=-1.0                                            FORMOM 
100   CONTINUE                                                           FORMOM 
      IF(COMPT.EQ.3) GO TO 630                                           NEWSHLC
C                                                                        SC3PLT 
C          WRITE WING PRESSURES ON TAPE16 AND TAPE17                     SC3PLT 
C                                                                        SC3PLT 
      IF(KPLOT.EQ.0) GO TO 710                                           SC3PLT 
      IMAX=0                                                             SC3PLT 
      JMAX=0                                                             SC3PLT 
      NTOT=0                                                             SC3PLT 
      DO 700 N=1,NSEG                                                    SC3PLT 
      NCC=NCOL(N)                                                        SC3PLT 
      NRR=NROW(N)                                                        SC3PLT 
      NR1=NRR+1                                                          SC3PLT 
      NPTS=NR1                                                           SC3PLT 
      IF(LOCPT(N).EQ.0) NPTS=NRR                                         SC3PLT 
      DO 700 NN=1,NCC                                                    SC3PLT 
      NTOT=NTOT+1                                                        SC3PLT 
      IMIN=IMAX+1                                                        SC3PLT 
      JMIN=JMAX+1                                                        SC3PLT 
      IMAX=IMIN+NR1-1                                                    SC3PLT 
      JMAX=JMIN+NPTS-1                                                   SC3PLT 
      DO 700 NNN=1,NPTS                                                  SC3PLT 
      IDEX=IMIN+(NNN-1)                                                  SC3PLT 
      JDEX=JMIN+(NNN-1)                                                  SC3PLT 
      XQ=(XPT(IDEX)-XLEW(NTOT))/CHD(NTOT)                                SC3PLT 
      IF(NPASS.EQ.1)                                                     SC3PLT 
     1 WRITE(TAPE16) XPT(IDEX),YPT(IDEX),XQ,CP(JDEX),ZPT(IDEX)           SC3PLT 
      IF(NPASS.EQ.2)                                                     SC3PLT 
     1 WRITE(TAPE17) XPT(IDEX),YPT(IDEX),XQ,CP(JDEX),ZPT(IDEX)           SC3PLT 
700   CONTINUE                                                           SC3PLT 
710   CONTINUE                                                           SC3PLT 
C                                                                        FORMOM 
C     PUT OUT PRESSURES IN SPANWISE DIRECTION                            FORMOM 
C                                                                        FORMOM 
      TANLES=TAN(XLAMDA)                                                 FORMOM 
      IF(NXSTNS.EQ.0) GO TO 630                                          FORMOM 
      WRITE(TAPE6,350)                                                   FORMOM 
      WRITE(TAPE6,370) TITLE1,TITLE2                                     FORMOM 
      WRITE(TAPE6,680)                                                   FORMOM 
      IF(NPASS.EQ.1) WRITE(TAPE6,530)                                    FORMOM 
      IF(NPASS.EQ.2) WRITE(TAPE6,540)                                    FORMOM 
      DO 620 JSTN=1,NXSTNS                                               FORMOM 
      WRITE(6,682) JSTN,XSTN(JSTN)                                       FORMOM 
      JQ=0                                                               FORMOM 
      IMAX=0                                                             FORMOM 
      JMAX=0                                                             FORMOM 
      NTOT=0                                                             FORMOM 
      DO 615 N=1,NSEG                                                    FORMOM 
      NCC=NCOL(N)                                                        FORMOM 
      NRR=NROW(N)                                                        FORMOM 
      NR1=NRR+1                                                          FORMOM 
      NPTS=NR1                                                           FORMOM 
      IF(LOCPT(N).EQ.0) NPTS=NRR                                         FORMOM 
      DO 615 NN=1,NCC                                                    FORMOM 
      NTOT=NTOT+1                                                        FORMOM 
      IMIN=IMAX+1                                                        FORMOM 
      JMIN=JMAX+1                                                        FORMOM 
      IMAX=IMIN+NR1-1                                                    FORMOM 
      JMAX=JMIN+NPTS-1                                                   FORMOM 
      IF(XSTN(JSTN).LT.XLEW(NTOT).OR.XSTN(JSTN).GT.                      FORMOM 
     1 (XLEW(NTOT)+CHD(NTOT))) GO TO 615                                 FORMOM 
      IF(N.GT.NSEGW) GO TO 615                                           FORMOM 
      DO 610 NNN=1,NPTS                                                  FORMOM 
      IDEX=IMIN+(NNN-1)                                                  FORMOM 
      JDEX=JMIN+(NNN-1)                                                  FORMOM 
      XINTP(NNN)=XPT(IDEX)                                               FORMOM 
610   CPINTP(NNN)=CP(JDEX)                                               FORMOM 
      CALL INTERP(XSTN(JSTN),CPPRES,NPTS,XINTP,CPINTP)                   FORMOM 
      DO 612 NNN=1,NPTS                                                  FORMOM 
      JDEX=JMIN+(NNN-1)                                                  FORMOM 
612   CPINTP(NNN)=CPSTR(JDEX)                                            FORMOM 
      CALL INTERP(XSTN(JSTN),CPPSTR,NPTS,XINTP,CPINTP)                   FORMOM 
      JQ=JQ+1                                                            FORMOM 
      ETA=TANLES*(YPT(IMIN)-YAPEX)/(XSTN(JSTN)-XAPEX)                    FORMOM 
      WRITE(6,684) JQ,YPT(IMIN),ETA,CPPRES,CPPSTR                        FORMOM 
615   CONTINUE                                                           FORMOM 
620   CONTINUE                                                           FORMOM 
C                                                                        FORMOM 
680   FORMAT(/10X,31HSPANWISE PRESSURE DISTRIBUTION  /)                  FORMOM 
682   FORMAT(//10X,5HJSTN=,I2,5X,7HX(JST)=,F10.5//13X,2HJQ,              FORMOM 
     1 8X,1HY,10X,3HETA,9X,2HCP,7X,5HCPSTR,/)                            FORMOM 
684   FORMAT(10X,I5,5F12.5)                                              FORMOM 
C                                                                        FORMOM 
C     FOR THE PLANAR BOUNDARY CONDITION OPTION CALCULATE THE WING CAMBER FORMOM 
C     AND THICKNESS SLOPES AT CENTER OF PANELS, AND (X,Y,Z) COORDINATES  FORMOM 
C     OF CENTRAL POINT                                                   FORMOM 
C                                                                        FORMOM 
630   I=0                                                                FORMOM 
      J=0                                                                FORMOM 
      JJ = 0                                                             FORMOM 
      DO 80 N=1,NSEG                                                     FORMOM 
      NC=NCOL(N)                                                         FORMOM 
      NR=NROW(N)                                                         FORMOM 
      NR1=NR+1                                                           FORMOM 
      DO 80 M=1,NC                                                       FORMOM 
      NINIT=J+1                                                          FORMOM 
      NFINI=J+NR1                                                        FORMOM 
      DO 80 L=1,NR1                                                      FORMOM 
      J=J+1                                                              FORMOM 
      IF (L.EQ.NR1) GO TO 80                                             FORMOM 
      JJ = JJ  +  1                                                      FORMOM 
      I=I+1                                                              FORMOM 
      SGN(I)=1.0                                                         FORMOM 
      IF (NPASS.EQ.2) SGN(I)=-1.0                                        FORMOM 
      DELC=(DELTA(J)+DELTA(J+1))*0.5                                     FORMOM 
      IF(COMPT.EQ.3.OR.NOPT(4).EQ.0) GO TO 78                            NEWSHLC
      DELC=CAMMID(JJ)                                                    NEWSHLC
78    CONTINUE                                                           NEWSHLC
C*                                                                       FORMOM 
      DELZ=(DZTDX(J)+DZTDX(J+1))*0.5                                     FORMOM 
      IF (NPASS.EQ.1) TAND=DELC+DELZ                                     FORMOM 
      IF (NPASS.EQ.2) TAND=DELC-DELZ                                     FORMOM 
      SIND(I)=TAND/SQRT(1.+TAND*TAND)                                    FORMOM 
      COSD(I)=SQRT(1.-SIND(I)*SIND(I))                                   FORMOM 
      SINT(I)=SINS(N)                                                    FORMOM 
      COST(I)=COSS(N)                                                    FORMOM 
      XDUM=(XLE(J)+XLE(J+1))*0.5                                         FORMOM 
      IF(LOCPT(N) .EQ. 0) GO TO 76                                       FORMOM 
      NX=NINIT-1                                                         FORMOM 
      DO 72 NNX=NINIT,NFINI                                              FORMOM 
      IF(XDUM .GE. XPT(NNX)) GO TO 72                                    FORMOM 
      GO TO 74                                                           FORMOM 
72    NX=NX+1                                                            FORMOM 
74    XF=(XDUM-XPT(NX))/(XPT(NX+1)-XPT(NX))                              FORMOM 
      CP(I)=(1.-XF)*CP(NX)+XF*CP(NX+1)                                   FORMOM 
      IF(COMPT.EQ.3) GO TO 76                                            NEWSHLC
      CPSTR(I)=(1.-XF)*CPSTR(NX)+XF*CPSTR(NX+1)                          FORMOM 
76    XPT(I)=XDUM                                                        FORMOM 
      YPT(I)=YPT(J)                                                      FORMOM 
      ZPT(I)=ZPT(J)                                                      FORMOM 
      IF(COMPT.EQ.3.AND.N.LE.NSEGN) NPNAC=I                              NEWSHLC
      IF(COMPT.EQ.3.AND.N.GT.NSEGN) NPSHL=I-NPNAC                        NEWSHLC
80    CONTINUE                                                           FORMOM 
      IF(COMPT.GE.2) NP=I                                                NEWSHLC
90    CONTINUE                                                           FORMOM 
      IF(COMPT.EQ.1) GO TO 120                                           FORMOM 
      I=0                                                                FORMOM 
      J=0                                                                FORMOM 
C                                                                        FORMOM 
C     ASSOCIATE THE LEADING EDGE COORDINATES AND CHORD LENGTHS OF EACH   FORMOM 
C     COLUMN OF PANELS WITH THE INDIVIDUAL PANELS IN THE COLUMN          FORMOM 
C                                                                        FORMOM 
      DO 110 N=1,NSEG                                                    FORMOM 
      NC=NCOL(N)                                                         FORMOM 
      NR=NROW(N)                                                         FORMOM 
      DO 110 M=1,NC                                                      FORMOM 
      J=J+1                                                              FORMOM 
      KS=2                                                               FORMOM 
      IF (LBC) KS=1                                                      FORMOM 
      DO 110 K=1,KS                                                      FORMOM 
      DO 110 L=1,NR                                                      FORMOM 
      I=I+1                                                              FORMOM 
      ZLE(I)=ZLEW(J)                                                     FORMOM 
      XLE(I)=XLEW(J)                                                     FORMOM 
      CHORD(I)=CHD(J)                                                    FORMOM 
110   CONTINUE                                                           FORMOM 
120   CONTINUE                                                           FORMOM 
      IF (NPASS.EQ.2) GO TO 130                                          FORMOM 
      CN=0.                                                              FORMOM 
      CT=0.                                                              FORMOM 
      CM=0.                                                              FORMOM 
      CTFREE = 0.0                                                       FORMOM 
      CNFREE = 0.0                                                       FORMOM 
      CNSTR=0.                                                           FORMOM 
      CTSTR=0.                                                           FORMOM 
      CMSTR=0.                                                           FORMOM 
      CTFRST=0.                                                          FORMOM 
      CNFRST=0.                                                          FORMOM 
      GO TO 140                                                          FORMOM 
130   CN=CNW                                                             FORMOM 
      CT=CTW                                                             FORMOM 
      CM=CMW                                                             FORMOM 
      CNSTR=CNWSTR                                                       FORMOM 
      CTSTR=CTWSTR                                                       FORMOM 
      CMSTR=CMWSTR                                                       FORMOM 
140   IP=0                                                               FORMOM 
C                                                                        FORMOM 
C     CALCULATE THE FORCES AND MOMENT ACTING ON EACH PANEL AND SUM OVER  FORMOM 
C     THE ENTIRE COMPONENT                                               FORMOM 
C                                                                        FORMOM 
      IF(COMPT.EQ.1) GO TO 50                                            FORMOM 
      WRITE(TAPE6,350)                                                   FORMOM 
      WRITE(TAPE6,370) TITLE1,TITLE2                                     FORMOM 
      WRITE(TAPE6,360)                                                   FORMOM 
      IF(LBC.AND.NPASS.EQ.1.AND.COMPT.EQ.2) WRITE(TAPE6,530)             NEWSHLC
      IF(LBC.AND.NPASS.EQ.2.AND.COMPT.EQ.2) WRITE(TAPE6,540)             NEWSHLC
      IF(LBC.AND.NPASS.EQ.1.AND.COMPT.EQ.3) WRITE(TAPE6,535)             NEWSHLC
      IF(LBC.AND.NPASS.EQ.2.AND.COMPT.EQ.3) WRITE(TAPE6,545)             NEWSHLC
      IF(.NOT.LBC) WRITE(TAPE6,510)                                      FORMOM 
      WRITE(TAPE6,380) MACH,ALPHA                                        FORMOM 
      IF(.NOT.LBC) WRITE(TAPE6,390)                                      FORMOM 
      IF(LBC) WRITE(TAPE6,550)                                           FORMOM 
50    CONTINUE                                                           FORMOM 
      WRITE(TAPE12) NP,NPASS,COMPT                                       FORMOM 
      IF(COMPT.EQ.1) GO TO 146                                           FORMOM 
      KUK = 0                                                            FORMOM 
      LUK = 0                                                            FORMOM 
      I = 0                                                              FORMOM 
      DO 144 IK = 1,NSEG                                                 FORMOM 
      NWA = NCOL(IK)                                                     FORMOM 
      NWR = NROW(IK)                                                     FORMOM 
      NWAR = NWR                                                         FORMOM 
      IF(.NOT.LBC) NWAR = 2*NWR                                          FORMOM 
      DO 143 J = 1,NWA                                                   FORMOM 
      DO 143 K = 1,NWAR                                                  FORMOM 
      I = I + 1                                                          FORMOM 
      YP = YPT(I)                                                        FORMOM 
      XP = XPT(I)                                                        FORMOM 
      XQ = XP                                                            FORMOM 
      IF(CHORD(I).NE.0) XQ = (XP - XLE(I))/CHORD(I)                      FORMOM 
      IF(LBC) GO TO 142                                                  FORMOM 
      IF(LUK.NE.0) GO TO 141                                             FORMOM 
      KUK = KUK + 1                                                      FORMOM 
      IF(KUK.EQ.NWR) LUK = 1                                             FORMOM 
      WRITE(TAPE12) YP,XQ,CP(I)                                          FORMOM 
      IF(LUK.NE.0) KUK = 0                                               FORMOM 
      GO TO 143                                                          FORMOM 
  141 KUK = KUK + 1                                                      FORMOM 
      IF(KUK.EQ.NWR) LUK = 0                                             FORMOM 
      WRITE(TAPE13) YP,XQ,CP(I)                                          FORMOM 
      IF(LUK.EQ.0) KUK = 0                                               FORMOM 
      GO TO 143                                                          FORMOM 
  142 IF(NPASS.EQ.1) WRITE(TAPE12) YP,XQ,CP(I)                           FORMOM 
      IF(NPASS.EQ.2) WRITE(TAPE13) YP,XQ,CP(I)                           FORMOM 
  143 CONTINUE                                                           FORMOM 
  144 CONTINUE                                                           FORMOM 
146   IF(COMPT.EQ.3.AND.NPASS.EQ.2) GO TO 145                            NEWSHLC
      CNNN=0.0                                                           NEWSHLC
      CTTN=0.0                                                           NEWSHLC
      CMMN=0.0                                                           NEWSHLC
      CNNS=0.0                                                           NEWSHLC
      CTTS=0.0                                                           NEWSHLC
      CMMS=0.0                                                           NEWSHLC
145   DO 210 I=1,NP                                                      NEWSHLC
      IP=IP+1                                                            FORMOM 
      XP=XPT(I)                                                          FORMOM 
      YP=YPT(I)                                                          FORMOM 
      ZP=ZPT(I)                                                          FORMOM 
      F1=COSD(I)*COST(I)                                                 FORMOM 
      F2=SIND(I)                                                         FORMOM 
      FAK=AREA(I)*SGN(I)                                                 FORMOM 
      IF (LBC.AND.COMPT.GT.1.AND.COSD(I).NE.0.) FAK=FAK/COSD(I)          FORMOM 
      IF (ABS(YP).LT.EPSFM) FAK=0.5*FAK                                  FORMOM 
      DCN(I)=-CP(I)*F1*FAK                                               FORMOM 
      DCT(I)=CP(I)*F2*FAK                                                FORMOM 
      DCM(I)=DCN(I)*(REFX-XP)-DCT(I)*(REFZ-ZP)                           FORMOM 
      IF(.NOT.LBC.OR.COMPT.EQ.1) GO TO 147                               NEWSHLC
      DCNSTR(I)=-CPSTR(I)*F1*FAK                                         FORMOM 
      DCTSTR(I)=CPSTR(I)*F2*FAK                                          FORMOM 
      DCMSTR(I)=DCNSTR(I)*(REFX-XP)-DCTSTR(I)*(REFZ-ZP)                  FORMOM 
147   XQ=XP                                                              FORMOM 
      YQ=YP                                                              FORMOM 
      ZQ=ZP                                                              FORMOM 
      IF(COMPT.GE.2) GO TO 150                                           NEWSHLC
C                                                                        FORMOM 
C     NONDIMENSIONALIZE BODY PANEL CONTROL POINT COORDINATES             FORMOM 
C     X COORDINATES ARE DIVIDED BY THE BODY REFERENCE LENGTH             FORMOM 
C     Y AND Z COORDINATES ARE DIVIDED BY THE BODY REFERENCE DIAMETER     FORMOM 
C                                                                        FORMOM 
      XQ=(XP-XON)/REFL                                                   FORMOM 
      YQ=YP/REFD                                                         FORMOM 
      ZQ=ZP/REFD                                                         FORMOM 
      GO TO 160                                                          FORMOM 
C                                                                        FORMOM 
C     NONDIMENSIONALIZE WING PANEL CONTROL POINT COORDINATES             FORMOM 
C     X AND Z COORDINATES ARE DIVIDED BY THE REFERENCE CHORD             FORMOM 
C     Y COORDINATES ARE DIVIDED BY THE REFERENCE SEMISPAN                FORMOM 
C                                                                        FORMOM 
150   IF (CHORD(I).NE.0.) XQ=(XP-XLE(I))/CHORD(I)                        FORMOM 
      IF (REFB.NE.0.) YQ=YP/REFB                                         FORMOM 
      IF (CHORD(I).NE.0.) ZQ=(ZP-ZLE(I))/CHORD(I)                        FORMOM 
160   CONTINUE                                                           FORMOM 
      IF(.NOT.LBC.OR.COMPT.EQ.1) GO TO 170                               NEWSHLC
      IF(LBC.AND.COMPT.EQ.2)                                             NEWSHLC
     1 WRITE(TAPE6,560) IP,XP,YP,ZP,XQ,YQ,ZQ,CP(I),CPSTR(I),IP           NEWSHLC
      IF(LBC.AND.COMPT.EQ.3)                                             NEWSHLC
     1 WRITE(TAPE6,565) IP,XP,YP,ZP,XQ,YQ,ZQ,CP(I),IP                    NEWSHLC
      CNSTR=CNSTR+DCNSTR(I)                                              FORMOM 
      CTSTR=CTSTR+DCTSTR(I)                                              FORMOM 
      CTFRST=CTFRST+IFREE(I)*DCTSTR(I)                                   FORMOM 
      CNFRST=CNFRST+IFREE(I)*DCNSTR(I)                                   FORMOM 
      CMSTR=CMSTR+DCMSTR(I)                                              FORMOM 
      GO TO 180                                                          FORMOM 
170   CONTINUE                                                           FORMOM 
      WRITE (TAPE6,410) IP,XP,YP,ZP,XQ,YQ,ZQ,CP(I),DCN(I),DCT(I),DCM(I), FORMOM 
     1IP                                                                 FORMOM 
180   CONTINUE                                                           FORMOM 
      CN=CN+DCN(I)                                                       FORMOM 
      CT=CT+DCT(I)                                                       FORMOM 
      ATOTAL = ATOTAL + AREA(I)                                          FORMOM 
      AFREE  = AFREE  + IFREE(I) * AREA(I)                               FORMOM 
      IF( COMPT .EQ. 2 ) CTFREE = CTFREE + IFREE(I) * DCT(I)             FORMOM 
      IF( COMPT .EQ. 2 ) CNFREE = CNFREE + IFREE(I) * DCN(I)             FORMOM 
      CM=CM+DCM(I)                                                       FORMOM 
      IF(COMPT.EQ.2) GO TO 210                                           FORMOM 
      IF(COMPT.EQ.1) GO TO 195                                           NEWSHLC
      IF(I.GT.NPNAC) GO TO 190                                           NEWSHLC
      CNNN=CNNN+DCN(I)                                                   NEWSHLC
      CTTN=CTTN+DCT(I)                                                   NEWSHLC
      CMMN=CMMN+DCM(I)                                                   NEWSHLC
      GO TO 210                                                          NEWSHLC
190   CNNS=CNNS+DCN(I)                                                   NEWSHLC
      CTTS=CTTS+DCT(I)                                                   NEWSHLC
      CMMS=CMMS+DCM(I)                                                   NEWSHLC
      GO TO 210                                                          NEWSHLC
195   CONTINUE                                                           NEWSHLC
C                                                                        SC3PLT 
C          WRITE BODY PRESSURES ON TAPE 15                               SC3PLT 
C                                                                        SC3PLT 
      IF(KPLOT.NE.0)                                                     SC3PLT 
     1 WRITE(TAPE15) XP,YP,ZP,CP(I),XQ,YQ,ZQ                             SC3PLT 
      IF(PLOT.NE.0) WRITE(TAPE12) XP,YP,ZP,CP(I)                         FORMOM 
210   CONTINUE                                                           FORMOM 
      IF (COMPT.GT.1) GO TO 220                                          FORMOM 
C                                                                        FORMOM 
C     STORE BODY FORCES AND MOMENT                                       FORMOM 
C                                                                        FORMOM 
      CNB=CN                                                             FORMOM 
      CTB=CT                                                             FORMOM 
      CMB=CM                                                             FORMOM 
      GO TO 230                                                          FORMOM 
220   CONTINUE                                                           FORMOM 
C                                                                        FORMOM 
C     STORE WING FORCES AND MOMENT                                       FORMOM 
C                                                                        FORMOM 
      CNW=CN                                                             FORMOM 
      CTW=CT                                                             FORMOM 
      CMW=CM                                                             FORMOM 
      CNWSTR=CNSTR                                                       FORMOM 
      CTWSTR=CTSTR                                                       FORMOM 
      CMWSTR=CMSTR                                                       FORMOM 
      IF (LBC.AND.NPASS.EQ.1) GO TO 250                                  FORMOM 
230   CONTINUE                                                           FORMOM 
      WRITE (TAPE6,350)                                                  FORMOM 
      WRITE (TAPE6,420)                                                  FORMOM 
      IF (COMPT.EQ.1) WRITE (TAPE6,500)                                  FORMOM 
      IF (COMPT.EQ.2) WRITE (TAPE6,510)                                  FORMOM 
      IF(COMPT.EQ.3) WRITE(TAPE6,515)                                    NEWSHLC
C                                                                        FORMOM 
C     COMPUTE NORMAL AND TANGENTIAL (AXIAL) FORCE COEFFICIENTS, PITCHING FORMOM 
C     MOMENT COEFFICIENT, LIFT AND DRAG COEFFICIENT, AND CENTER OF       FORMOM 
C     PRESSURE OF COMPONENT                                              FORMOM 
C                                                                        FORMOM 
      IT=0                                                               FORMOM 
  240 CONTINUE                                                           FORMOM 
C*                                                                       FORMOM 
C*          USE HALF-WING REFERENCE AREA                                 FORMOM 
C*                                                                       FORMOM 
      FACTOR = 1.0                                                       FORMOM 
      CN = FACTOR * CN / REFA                                            FORMOM 
      CT = FACTOR * CT / REFA                                            FORMOM 
      CM = FACTOR * CM / ( REFA * REFC )                                 FORMOM 
      CNNAC=FACTOR*CNNN/REFA                                             NEWSHLC
      CTNAC=FACTOR*CTTN/REFA                                             NEWSHLC
      CMNAC=FACTOR*CMMN/(REFA*REFC)                                      NEWSHLC
      CNSHL=FACTOR*CNNS/REFA                                             NEWSHLC
      CTSHL=FACTOR*CTTS/REFA                                             NEWSHLC
      CMSHL=FACTOR*CMMS/(REFA*REFC)                                      NEWSHLC
      IF(COMPT.EQ.2.AND.IT.EQ.0) CTFREE=FACTOR*CTFREE/REFA               NEWSHLC
      IF(COMPT.EQ.2.AND.IT.EQ.0) CNFREE=FACTOR*CNFREE/REFA               NEWSHLC
      CL=CN*COAL-CT*SIAL                                                 FORMOM 
      CD=CN*SIAL+CT*COAL                                                 FORMOM 
C*                                                                       FORMOM 
      BETA = SQRT( ABS( MACH * MACH - 1.0 ) )                            FORMOM 
      CDCL = CD / ( BETA * CL * CL )                                     FORMOM 
C*                                                                       FORMOM 
      CDF = CNFREE * SIAL + CTFREE * COAL                                FORMOM 
      CNF = CNFREE * COAL - CTFREE * SIAL                                FORMOM 
      DXN=0.                                                             FORMOM 
      IF (CN.NE.0.) DXN=-CM/CN                                           FORMOM 
      IF (COMPT.EQ.1) WRITE (TAPE6,440) REFA,REFD,REFL                   FORMOM 
      IF(COMPT.GE.2) WRITE(TAPE6,430) REFA,REFB,REFC                     NEWSHLC
      WRITE (TAPE6,450) REFX,REFZ                                        FORMOM 
      WRITE (TAPE6,460) MACH,ALPHA,CN,CT,CM,CL,CD,DXN                    FORMOM 
      IF(NCASE.EQ.0) GO TO 242                                           SC3PLT 
      MACHP(NCASE)=MACH                                                  SC3PLT 
      ALPHAP(NCASE)=ALPHA                                                SC3PLT 
      IF(COMPT.GT.1) GO TO 241                                           SC3PLT 
      CLBP(NCASE)=CL                                                     SC3PLT 
      CDBP(NCASE)=CD                                                     SC3PLT 
      CMBP(NCASE)=CM                                                     SC3PLT 
      GO TO 242                                                          SC3PLT 
 241  CONTINUE                                                           SC3PLT 
      CLWP(NCASE)=CL                                                     SC3PLT 
      CDWP(NCASE)=CD                                                     SC3PLT 
      CMWP(NCASE)=CM                                                     SC3PLT 
 242  CONTINUE                                                           SC3PLT 
C*                                                                       FORMOM 
      WRITE(TAPE6,461) CDCL                                              FORMOM 
      IF(.NOT.LBC.OR.COMPT.EQ.1) GO TO 245                               NEWSHLC
      CNSTR=FACTOR*CNSTR/REFA                                            FORMOM 
      CTSTR=FACTOR*CTSTR/REFA                                            FORMOM 
      CMSTR=FACTOR*CMSTR/(REFA*REFC)                                     FORMOM 
      IF(COMPT.EQ.2.AND.IT.EQ.0) CTFRST=FACTOR*CTFRST/REFA               NEWSHLC
      IF(COMPT.EQ.2.AND.IT.EQ.0) CNFRST=FACTOR*CNFRST/REFA               NEWSHLC
      CLSTR=CNSTR*COAL-CTSTR*SIAL                                        FORMOM 
      CDSTR=CNSTR*SIAL+CTSTR*COAL                                        FORMOM 
      CDCLST=0.                                                          FORMOM 
      IF(CLSTR.NE.0.) CDCLST=CDSTR/(BETA*CLSTR*CLSTR)                    FORMOM 
      CDFSTR=CNFRST*SIAL+CTFRST*COAL                                     FORMOM 
      CNFSTR=CNFRST*COAL-CTFRST*SIAL                                     FORMOM 
      DXNSTR=0.                                                          FORMOM 
      IF(CNSTR.NE.0.) DXNSTR=-CMSTR/CNSTR                                FORMOM 
      IF(COMPT.EQ.3.AND.IT.EQ.0) GO TO 245                               NEWSHLC
      WRITE(TAPE6,466)                                                   FORMOM 
466   FORMAT(/,10X,32HBASED ON THE CARLSON CORRECTION )                  FORMOM 
      WRITE(TAPE6,460) MACH,ALPHA,CNSTR,CTSTR,CMSTR,CLSTR,CDSTR,DXNSTR   FORMOM 
      WRITE(TAPE6,461) CDCLST                                            FORMOM 
245   CONTINUE                                                           FORMOM 
  461 FORMAT(/8X,5HCDCL=,F15.5)                                          FORMOM 
      IF(COMPT.EQ.1) GO TO 464                                           NEWSHLC
      IF(COMPT.EQ.3.AND.IT.EQ.0) GO TO 464                               NEWSHLC
      IF(NOPT(1).EQ.1.AND.NOPT(2).LE.1) GO TO 464                        NEWSHLC
      IF(NOPT(1).EQ.1.AND.NOPT(2).EQ.3) GO TO 464                        NEWSHLC
      IF(NOPT(1).EQ.2.AND.NOPT(2).GE.0) GO TO 464                        NEWSHLC
      WRITE(TAPE6,458) ATOTAL                                            FORMOM 
      WRITE(TAPE6,459) AFREE                                             FORMOM 
  458 FORMAT(/8X,5HAREA=,F15.5,4X,12H(TOTAL-AREA))                       FORMOM 
  459 FORMAT(/8X,5HAREA=,F15.5,4X,14H(EXPOSED-AREA))                     FORMOM 
      EPSCL = 1.0E-10                                                    FORMOM 
      CDFCL = 1.0E+20                                                    FORMOM 
      IF( ABS(CL) .GT. EPSCL ) CDFCL = CDF / ( BETA * CL * CL )          FORMOM 
      WRITE(TAPE6,465) CNF                                               FORMOM 
  465 FORMAT(/9X,4HCNF=,F15.5,4X,14H(EXPOSED-LIFT))                      FORMOM 
      WRITE(TAPE6,462) CDF                                               FORMOM 
  462 FORMAT(/9X,4HCDF=,F15.5,4X,14H(EXPOSED-DRAG))                      FORMOM 
      WRITE(TAPE6,463) CDFCL                                             FORMOM 
  463 FORMAT(/7X,6HCDFCL=,F15.5,4X,25H(EXPOSED DRAG-TOTAL LIFT))         FORMOM 
      CDFCLS=1.0E+20                                                     NEWSHLC
      IF(ABS(CLSTR).GT.EPSCL) CDFCLS=CDFSTR/(BETA*CLSTR*CLSTR)           NEWSHLC
      WRITE(TAPE6,466)                                                   FORMOM 
      WRITE(TAPE6,465) CNFSTR                                            FORMOM 
      WRITE(TAPE6,462) CDFSTR                                            FORMOM 
      WRITE(TAPE6,463) CDFCLS                                            FORMOM 
246   CONTINUE                                                           FORMOM 
  464 CONTINUE                                                           FORMOM 
C*                                                                       FORMOM 
250   CONTINUE                                                           FORMOM 
      IF(COMPT.NE.3) GO TO 254                                           NEWSHLC
      IF(NPASS.NE.2) GO TO 254                                           NEWSHLC
      IF(IT.GT.0) GO TO 254                                              NEWSHLC
      DXNNAC=0.0                                                         NEWSHLC
      CLNAC=CNNAC*COAL-CTNAC*SIAL                                        NEWSHLC
      CDNAC=CNNAC*SIAL+CTNAC*COAL                                        NEWSHLC
      IF(CNNAC.NE.0) DXNNAC=-CMNAC/CNNAC                                 NEWSHLC
      WRITE(TAPE6,800)                                                   NEWSHLC
      WRITE(TAPE6,460) MACH,ALPHA,CNNAC,CTNAC,CMNAC,CLNAC,CDNAC,DXNNAC   NEWSHLC
      DXNSHL=0.0                                                         NEWSHLC
      CLSHL=CNSHL*COAL-CTSHL*SIAL                                        NEWSHLC
      CDSHL=CNSHL*SIAL+CTSHL*COAL                                        NEWSHLC
      IF(CNSHL.NE.0) DXNSHL=-CMSHL/CNSHL                                 NEWSHLC
      WRITE(TAPE6,810)                                                   NEWSHLC
      WRITE(TAPE6,460) MACH,ALPHA,CNSHL,CTSHL,CMSHL,CLSHL,CDSHL,DXNSHL   NEWSHLC
254   CONTINUE                                                           NEWSHLC
      IF (COMPT.EQ.1) GO TO 340                                          FORMOM 
      IF (LBC.AND.NPASS.EQ.1) GO TO 260                                  FORMOM 
      IF(COMPT.EQ.2.AND.NPTSNS.NE.0) GO TO 256                           NEWSHLC
      IF(COMPT.EQ.2.AND.NPTSNS.EQ.0.AND.NBODY.EQ.0) GO TO 260            NEWSHLC
      IF(COMPT.EQ.3.AND.NPTSWT.EQ.0.AND.NBODY.EQ.0) GO TO 260            NEWSHLC
      IF(IT.GT.0) GO TO 260                                              NEWSHLC
      IT=IT+1                                                            NEWSHLC
      IF(COMPT.EQ.3) GO TO 255                                           NEWSHLC
      CN=CNB+CNW                                                         FORMOM 
      CT=CTB+CTW                                                         FORMOM 
      CM=CMB+CMW                                                         FORMOM 
      CNSTR=CNB+CNWSTR                                                   FORMOM 
      CTSTR=CTB+CTWSTR                                                   FORMOM 
      CMSTR=CMB+CMWSTR                                                   FORMOM 
255   WRITE (TAPE6,350)                                                  NEWSHLC
      WRITE (TAPE6,420)                                                  FORMOM 
      WRITE (TAPE6,520)                                                  FORMOM 
      IF(COMPT.EQ.2) GO TO 240                                           NEWSHLC
      CN=CNW+REGCN                                                       NEWSHLC
      CT=CTW+REGCT                                                       NEWSHLC
      CM=CMW+REGCM                                                       NEWSHLC
      CNSTR=CNWSTR+STRCN                                                 NEWSHLC
      CTSTR=CTWSTR+STRCT                                                 NEWSHLC
      CMSTR=CMWSTR+STRCM                                                 NEWSHLC
      GO TO 240                                                          FORMOM 
256   REGCN=CNB+CNW                                                      NEWSHLC
      REGCT=CTB+CTW                                                      NEWSHLC
      REGCM=CMB+CMW                                                      NEWSHLC
      STRCN=CNB+CNWSTR                                                   NEWSHLC
      STRCT=CTB+CTWSTR                                                   NEWSHLC
      STRCM=CMB+CMWSTR                                                   NEWSHLC
260   IF (PRINT.EQ.0) GO TO 340                                          FORMOM 
      IF(COMPT.NE.2) GO TO 340                                           NEWSHLC
      CAVE=REFA/REFB                                                     FORMOM 
      KSEC=1                                                             FORMOM 
      IF (LBC) KSEC=2                                                    FORMOM 
      DO 330 KSTAR=1,KSEC                                                FORMOM 
      IF(LBC.AND.NPASS.EQ.1) GO TO 270                                   FORMOM 
      WRITE(TAPE6,350)                                                   FORMOM 
      WRITE(TAPE6,480)                                                   FORMOM 
      IF(COMPT.EQ.2) WRITE(TAPE6,510)                                    NEWSHLC
      IF(COMPT.EQ.3) WRITE(TAPE6,515)                                    NEWSHLC
      IF(KSTAR.EQ.2) WRITE(TAPE6,570)                                    FORMOM 
      WRITE(TAPE6,580)                                                   FORMOM 
270   CONTINUE                                                           FORMOM 
      K=0                                                                FORMOM 
      I2=0                                                               FORMOM 
C                                                                        FORMOM 
C     COMPUTE SECTION FORCES AND MOMENTS                                 FORMOM 
C                                                                        FORMOM 
      DO 330 N=1,NSEG                                                    FORMOM 
      NR=NROW(N)                                                         FORMOM 
      NR2=NR*2                                                           FORMOM 
      NC=NCOL(N)                                                         FORMOM 
      DO 330 M=1,NC                                                      FORMOM 
      K=K+1                                                              FORMOM 
      I1=I2+1                                                            FORMOM 
      YSTN=YPT(I1)                                                       FORMOM 
      ETA=YSTN/REFB                                                      FORMOM 
      COCA=CHD(K)/CAVE                                                   FORMOM 
      IF(LBC) I2=I2+NR                                                   FORMOM 
      IF(.NOT.LBC) I2=I2+NR2                                             FORMOM 
      IF(LBC.AND.NPASS.EQ.2) GO TO 280                                   FORMOM 
      IF(KSTAR.EQ.2) GO TO 275                                           FORMOM 
      CN=0.                                                              FORMOM 
      CT=0.                                                              FORMOM 
      CM=0.                                                              FORMOM 
      GO TO 290                                                          FORMOM 
275   CNSTR=0.                                                           FORMOM 
      CTSTR=0.                                                           FORMOM 
      CMSTR=0.                                                           FORMOM 
      GO TO 290                                                          FORMOM 
280   IF(KSTAR.EQ.2) GO TO 285                                           FORMOM 
      CN=CNS(K)                                                          FORMOM 
      CT=CTS(K)                                                          FORMOM 
      CM=CMS(K)                                                          FORMOM 
      GO TO 290                                                          FORMOM 
285   CNSTR=CNSSTR(K)                                                    FORMOM 
      CTSTR=CTSSTR(K)                                                    FORMOM 
      CMSTR=CMSSTR(K)                                                    FORMOM 
290   CONTINUE                                                           FORMOM 
C                                                                        FORMOM 
C     SUM THE FORCES AND MOMENT ACTING ON EACH SECTION                   FORMOM 
C                                                                        FORMOM 
      DO 300 I=I1,I2                                                     FORMOM 
      IF(KSTAR.EQ.2) GO TO 295                                           FORMOM 
      CN=CN+DCN(I)                                                       FORMOM 
      CT=CT+DCT(I)                                                       FORMOM 
      CM=CM+DCM(I)                                                       FORMOM 
      GO TO 300                                                          FORMOM 
295   CNSTR=CNSTR+DCNSTR(I)                                              FORMOM 
      CTSTR=CTSTR+DCTSTR(I)                                              FORMOM 
      CMSTR=CMSTR+DCMSTR(I)                                              FORMOM 
300   CONTINUE                                                           FORMOM 
      IF(KSTAR.EQ.2) GO TO 305                                           FORMOM 
      CNS(K)=CN                                                          FORMOM 
      CTS(K)=CT                                                          FORMOM 
      CMS(K)=CM                                                          FORMOM 
      GO TO 310                                                          FORMOM 
305   CNSSTR(K)=CNSTR                                                    FORMOM 
      CTSSTR(K)=CTSTR                                                    FORMOM 
      CMSSTR(K)=CMSTR                                                    FORMOM 
310   IF(LBC.AND.NPASS.EQ.1) GO TO 330                                   FORMOM 
C                                                                        FORMOM 
C     COMPUTE SECTION CN,CA,CL,CD,CM,XCP                                 FORMOM 
C                                                                        FORMOM 
      H1=1./(SPNW(K)*CHD(K))                                             FORMOM 
      H2=H1/REFC                                                         FORMOM 
      IF(KSTAR.EQ.2) GO TO 315                                           FORMOM 
      CN=CN*H1                                                           FORMOM 
      CT=CT*H1                                                           FORMOM 
      CM=CM*H2                                                           FORMOM 
      GO TO 320                                                          FORMOM 
315   CN=CNSTR*H1                                                        FORMOM 
      CT=CTSTR*H1                                                        FORMOM 
      CM=CMSTR*H2                                                        FORMOM 
320   CL=CN*COAL-CT*SIAL                                                 FORMOM 
      CD=CN*SIAL+CT*COAL                                                 FORMOM 
      CCLCA=COCA*CL                                                      FORMOM 
      CCDCA=COCA*CD                                                      FORMOM 
      DXN=0.                                                             FORMOM 
      IF(CN.NE.0.) DXN=-CM/CN                                            FORMOM 
      WRITE(TAPE6,590) K,YSTN,ETA,COCA,CCLCA,CCDCA,CN,CT,CL,CD,CM,DXN,K  FORMOM 
330   CONTINUE                                                           FORMOM 
340   CONTINUE                                                           FORMOM 
      RETURN                                                             FORMOM 
C                                                                        FORMOM 
C                                                                        FORMOM 
350   FORMAT (1H1)                                                       FORMOM 
360   FORMAT (//,10X,40HINTEGRATION OF THE PRESSURE DISTRIBUTION,/)      FORMOM 
370   FORMAT (10X,13A6,A2/10X,13A6,A2)                                   FORMOM 
380   FORMAT (/,10X,6HMACH= ,F8.4,4X,6HALPHA=,F8.4/)                     FORMOM 
390   FORMAT (3X,5HPOINT,7X,1HX,10X,1HY,10X,1HZ,9X,3HX/C,7X,4H2Y/B,8X,3H FORMOM 
     1Z/C,8X,2HCP,9X,2HCN,9X,2HCA,9X,2HCM,4X,5HPOINT/)                   FORMOM 
400   FORMAT (3X,5HPOINT,7X,1HX,10X,1HY,10X,1HZ,9X,3HX/L,8X,3HY/D,8X,3HZ FORMOM 
     1/D,8X,2HCP,9X,2HCN,9X,2HCA,9X,2HCM,4X,5HPOINT/)                    FORMOM 
410   FORMAT (1X,I6,10F11.5,I6)                                          FORMOM 
420   FORMAT (///,10X,18HTOTAL COEFFICIENTS,/,10X,18(1H-))               FORMOM 
430   FORMAT (10X,5HREFA=,F14.4,3X,5HREFB=,F14.4,3X,5HREFC=,F14.4)       FORMOM 
440   FORMAT (10X,5HREFA=,F14.4,3X,5HREFD=,F14.4,3X,5HREFL=,F14.4)       FORMOM 
450   FORMAT (/,10X,5HREFX=,F14.4,3X,5HREFZ=,F14.4)                      FORMOM 
460   FORMAT (/8X,5HMACH=,F15.5/7X,6HALPHA=,F15.5/10X,3HCN=,F15.5/10X,3H FORMOM 
     1CA=,F15.5/10X,3HCM=,F15.5/10X,3HCL=,F15.5/10X,3HCD=,F15.5/9X,4HXCP FORMOM 
     2=,F15.5)                                                           FORMOM 
470   FORMAT (//)                                                        FORMOM 
480   FORMAT (10X,20HSECTION COEFFICIENTS,/,10X,20(1H-))                 FORMOM 
490   FORMAT (10X,5HDELY=,F14.4,3X,5HREFL=,F14.4,3X,4HXLE=,F14.4)        FORMOM 
500   FORMAT (10X,11HON THE BODY,//)                                     FORMOM 
510   FORMAT (10X,11HON THE WING,//)                                     FORMOM 
515   FORMAT (10X,20HON THE NACELLE/SHELL,//)                            NEWSHLC
520   FORMAT (10X,29HON THE COMPLETE CONFIGURATION,//)                   FORMOM 
530   FORMAT (10X,25HON THE WING UPPER SURFACE,//)                       FORMOM 
535   FORMAT (10X,34HON THE NACELLE/SHELL UPPER SURFACE,//)              NEWSHLC
540   FORMAT (10X,25HON THE WING LOWER SURFACE,//)                       FORMOM 
545   FORMAT (10X,34HON THE NACELLE/SHELL LOWER SURFACE,//)              NEWSHLC
550   FORMAT(3X,5HPOINT,4X,1HX,9X,1HY,9X,1HZ,8X,3HX/C,6X,4H2Y/B,7X,      FORMOM 
     1 3HZ/C,7X,2HCP,7X,5HCPSTR,3X,5HPOINT,/)                            FORMOM 
560   FORMAT(1X,I6,8F10.5,I6)                                            FORMOM 
565   FORMAT(1X,I6,7F10.5,10X,I6)                                        NEWSHLC
570   FORMAT(10X,32HBASED ON THE CARLSON CORRECTION ,/)                  FORMOM 
580   FORMAT(5X,1HK,6X,1HY,8X,3HETA,5X,6HC/CAVE,3X,9HC*CL/CAVE,1X,       FORMOM 
     1 9HC*CD/CAVE,4X,2HCN,8X,2HCA,8X,2HCL,8X,2HCD,8X,2HCM,8X,           FORMOM 
     2 3HXCP,4X,1HK,/)                                                   FORMOM 
590   FORMAT(1X,I6,11F10.5,I6)                                           FORMOM 
800   FORMAT (///,30H NACELLE FORCES AND AND MOMENT)                     NEWSHLC
810   FORMAT (///,28H SHELL FORCES AND AND MOMENT)                       NEWSHLC
      END                                                                FORMOM 
      SUBROUTINE CARLSN(XMINF,ALP,THET,DC,DT,U,V,W,EPS,DSTR,CPSTR,MODE)  NEWSHLC
C                                                                        CARLSN 
C      HARRY CARLSON@S CORRECTION , NASA TP 1406 , FEB. 1979             CARLSN 
C                                                                        CARLSN 
C      MODE = 1        ORIGINAL                                          CARLSN 
C             2      + IMPROVED M*(NU*)                                  CARLSN 
C             3      + IMPROVED M(U,V)                                   CARLSN 
C             4      + EXACT M(U,V,W)                                    CARLSN 
C                                                                        CARLSN 
      IF(XMINF .LE. 1.0) GO TO 350                                       CARLSN 
      BETA=SQRT(XMINF**2-1.0)                                            CARLSN 
      DEL=TAN(DC)+TAN(DT)                                                NEWSHLC
      XLAM=COS(ALP)*DEL-SIN(ALP)*COS(THET)                               NEWSHLC
      UBO=-XLAM/BETA                                                     NEWSHLC
      WBO=XLAM                                                           NEWSHLC
      UO=UBO*COS(ALP)+WBO*SIN(ALP)                                       NEWSHLC
      WO=WBO*COS(ALP)-UBO*SIN(ALP)                                       NEWSHLC
      UCUT=0.0                                                           CARLSN 
      IF(UO .GE. UCUT) GO TO 210                                         CARLSN 
      ULIM=-.9999                                                        CARLSN 
      ETAU=(UCUT-UO)/(UCUT-ULIM)                                         CARLSN 
      ETAU=2./(1./(1.+ETAU)**2+1.)-1.                                    CARLSN 
      UO=(1.-ETAU)*UCUT+ETAU*ULIM                                        CARLSN 
210   CONTINUE                                                           CARLSN 
      IF(MODE .LT. 4) WO=0.                                              CARLSN 
      UI=U*COS(ALP)+W*SIN(ALP)                                           NEWSHLC
      VI=V                                                               NEWSHLC
      WI=W*COS(ALP)-U*SIN(ALP)                                           NEWSHLC
      UCUT=0.0                                                           CARLSN 
      IF(UI .GE. UCUT) GO TO 220                                         CARLSN 
      ULIM=-.9999                                                        CARLSN 
      ETAU=(UCUT-UI)/(UCUT-ULIM)                                         CARLSN 
      ETAU=2./(1./(1.+ETAU)**2+1.)-1.                                    CARLSN 
      UI=(1.-ETAU)*UCUT+ETAU*ULIM                                        CARLSN 
220   CONTINUE                                                           CARLSN 
      IF(MODE .LT. 4) WI=0.                                              CARLSN 
      NMACH=0                                                            CARLSN 
      IF(MODE .GE. 3) NMACH=1                                            CARLSN 
      CALL MACH(UO,0.,WO,XMINF,XMO,EPSO,NMACH)                           CARLSN 
      CALL MACH(UI,VI,WI,XMINF,XMI,EPS,NMACH)                            CARLSN 
      IF(XMO .LT. 1.0) GO TO 310                                         CARLSN 
      CALL PMA(XMO,XNUO,0)                                               CARLSN 
      GO TO 320                                                          CARLSN 
310   CALL PMA(XMINF,XNUINF,0)                                           CARLSN 
      XNUO=(XNUINF-1.570796)*(1.0-XMO)**2                                CARLSN 
320   IF(XMI .LT. 1.0) GO TO 330                                         CARLSN 
      CALL PMA(XMI,XNUI,0)                                               CARLSN 
      GO TO 340                                                          CARLSN 
330   CALL PMA(XMINF,XNUINF,0)                                           CARLSN 
      XNUI=(XNUINF-1.570796)*(1.0-XMI)**2                                CARLSN 
340   CONTINUE                                                           CARLSN 
      DEL=DC+DT                                                          NEWSHLC
      XLAM=ASIN(COS(ALP)*SIN(DEL)-SIN(ALP)*COS(THET))                    NEWSHLC
      DSTR=XLAM+XNUO-XNUI                                                CARLSN 
      CALL SHEXRE(XMINF,DSTR,CPSTR,MODE)                                 CARLSN 
      RETURN                                                             CARLSN 
350   CPSTR=0.0                                                          CARLSN 
      RETURN                                                             CARLSN 
C                                                                        CARLSN 
800   FORMAT(/,1X,I2,5X,F16.7,/)                                         CARLSN 
C                                                                        CARLSN 
      END                                                                CARLSN 
C                                                                        CARLSN 
      SUBROUTINE SHEXRE(XM,DSTR,CPSTR,MODE)                              CARLSN 
C                                                                        CARLSN 
C      SHOCK-EXPANSION RELATIONS                                         CARLSN 
C                                                                        CARLSN 
C      MODE = 1     ORIGINAL M*(NU*)                                     CARLSN 
C           # 1     REFINED  M*(NU*)                                     CARLSN 
C                                                                        CARLSN 
C                                                                        CARLSN 
      PPT(XMD,XNUD)=((1.0+COS(2.0*(XNUD+ACOS(1.0/XMD))/SQRT(6.0))        CARLSN 
     1              )/2.4)**3.5                                          CARLSN 
      PI=3.141592654                                                     CARLSN 
      IF(XM .LE. 1.0) GO TO 210                                          CARLSN 
      IF(DSTR.GE.0.0) GO TO 100                                          CARLSN 
C                                                                        CARLSN 
      CALL PMA(XM,XNUI,0)                                                CARLSN 
      XNUSTR=XNUI-DSTR                                                   CARLSN 
      CALL PMA(XMSTR,XNUSTR,1)                                           CARLSN 
      CPSTR=(PPT(XMSTR,XNUSTR)/PPT(XM,XNUI)-1.0)/0.7/XM**2               CARLSN 
      RETURN                                                             CARLSN 
C                                                                        CARLSN 
100   SINTD2=(3.*XM**2-2.+SQRT(3.*(3.*XM**4-4.*XM**2+13.)))              CARLSN 
     1 /7./XM**2                                                         CARLSN 
      THETD=ASIN(SQRT(SINTD2))                                           CARLSN 
      TANDD=5.*(XM**2*SIN(2.*THETD)-2./TAN(THETD))/                      CARLSN 
     1 (10.+XM**2*(7.+5.*COS(2.*THETD)))                                 CARLSN 
      DD=ATAN(TANDD)                                                     CARLSN 
      IF(DSTR.GE.DD) GO TO 200                                           CARLSN 
      B=-(XM**2+2.0)/XM**2-1.4*SIN(DSTR)**2                              CARLSN 
      C=(2.0*XM**2+1.0)/XM**4+(1.44+.4/XM**2)*SIN(DSTR)**2               CARLSN 
      D=-COS(DSTR)**2/XM**4                                              CARLSN 
      TERM=B*B-3.*C                                                      CARLSN 
      TERM2=(4.5*B*C-B**3-13.5*D)/TERM**1.5                              CARLSN 
      IF(ABS(TERM2) .GT. 1.) TERM2=TERM2/ABS(TERM2)                      CARLSN 
      PHI=ACOS(TERM2)                                                    CARLSN 
      ARG=-B/3.+2./3.*SQRT(TERM)*COS((PHI+4.*PI)/3.)                     CARLSN 
      THET=ASIN(SQRT(ARG))                                               CARLSN 
      CPSTR=5./3.*(XM**2*SIN(THET)**2-1.)/XM**2                          CARLSN 
      RETURN                                                             CARLSN 
C                                                                        CARLSN 
200   CONTINUE                                                           CARLSN 
      CPDD=5./3.*(XM**2*SIN(THETD)**2-1.0)/XM**2                         CARLSN 
      CP90=((1.2*XM**2)**3.5*(6./(7.*XM**2-1.))**2.5-1.0)/.7/XM**2       CARLSN 
      CPSTR=CPDD+(CP90-CPDD)*(DSTR-DD)/(PI/2.-DD)                        CARLSN 
      RETURN                                                             CARLSN 
210   CPSTR=0.                                                           CARLSN 
      RETURN                                                             CARLSN 
C                                                                        CARLSN 
  250 FORMAT(/10X,25HANGLE GT DETACHMENT ANGLE  ,6X,                     CARLSN 
     1 5HDSTR=,F10.5,10X,3HDD=,F10.5/)                                   CARLSN 
C                                                                        CARLSN 
800   FORMAT(/,1X,I2,5X,F16.7,/)                                         CARLSN 
C                                                                        CARLSN 
      END                                                                CARLSN 
      SUBROUTINE MACH(U,V,W,XMINF,XM,EPS,MODE)                           CARLSN 
C                                                                        CARLSN 
C          MACH NUMBER AS A FUNCTION OF                                  CARLSN 
C          PERTUBATION VELOCITIES                                        CARLSN 
C                                                                        CARLSN 
C          MODE = 0 ... CARLSON@S FORMULATION                            CARLSN 
C                 1 ... EXACT ISENTROPIC RELATIONSHIP                    CARLSN 
C                                                                        CARLSN 
      ARG=(V*V+W*W)/(1.+U)**2                                            CARLSN 
      EPS=ATAN(SQRT(ARG))                                                CARLSN 
      VHAT=SQRT((1.+U)**2+V**2+W**2)                                     CARLSN 
      VLIM=SQRT((1.0+0.2*XMINF**2)/(0.2*XMINF**2))                       CARLSN 
      VLIM=VLIM-.0001                                                    CARLSN 
      VCUT=1.+(VLIM-1.)/2.                                               CARLSN 
      IF(VHAT .LE. VCUT) GO TO 300                                       CARLSN 
      ETAV=(VCUT-VHAT)/(VCUT-VLIM)                                       CARLSN 
      ETAV=2./(1./(1.+ETAV)**2+1.)-1.                                    CARLSN 
      VHAT=(1.-ETAV)*VCUT+ETAV*VLIM                                      CARLSN 
300   CONTINUE                                                           CARLSN 
      XNUM=XMINF*VHAT                                                    CARLSN 
      ARG=1.+0.2*XMINF**2*(1.-VHAT**2)                                   CARLSN 
      DEN=SQRT(ARG)                                                      CARLSN 
      XM=XNUM                                                            CARLSN 
      IF(MODE .EQ. 1) XM=XNUM/DEN                                        CARLSN 
      RETURN                                                             CARLSN 
C                                                                        CARLSN 
800   FORMAT(/,1X,I2,5X,F16.7,/)                                         CARLSN 
C                                                                        CARLSN 
      END                                                                CARLSN 
C                                                                        CARLSN 
      SUBROUTINE PMA(XM,XNU,MODE)                                        CARLSN 
C                                                                        CARLSN 
C      PRANDTL-MEYER ANGLE                                               CARLSN 
C                                                                        CARLSN 
C      MODE=0  GIVE MACH  - GET ANGLE                                    CARLSN 
C           1  GIVE ANGLE - GET MACH                                     CARLSN 
C                                                                        CARLSN 
      EPS=0.1E-5                                                         CARLSN 
      G=1.4                                                              CARLSN 
      PIO2=1.570796327                                                   CARLSN 
      ARG=(G+1.0)/(G-1.0)                                                CARLSN 
      A=SQRT(ARG)                                                        CARLSN 
      XNUMAX=PIO2*(A-1.0)                                                CARLSN 
      IF(MODE .EQ. 1) GO TO 100                                          CARLSN 
C                                                                        CARLSN 
      IF(XM .LE. 1.0) GO TO 90                                           CARLSN 
      Q=SQRT(XM**2-1.0)                                                  CARLSN 
      XNU=A*ATAN(Q/A)-ATAN(Q)                                            CARLSN 
      RETURN                                                             CARLSN 
90    XNU=0.0                                                            CARLSN 
      RETURN                                                             CARLSN 
C                                                                        CARLSN 
  100 CONTINUE                                                           CARLSN 
      IF(XNU.GE.XNUMAX) GO TO 120                                        CARLSN 
      IF(XNU .LE. 0.0) GO TO 130                                         CARLSN 
      I=0                                                                CARLSN 
      C1=XNU/XNUMAX                                                      CARLSN 
      XN=0.56+0.313*C1-0.42*SQRT(C1)                                     CARLSN 
      XM=1.0/(1.0-C1**XN)                                                CARLSN 
      Q=SQRT(XM**2-1.0)                                                  CARLSN 
C                                                                        CARLSN 
C                                                                        CARLSN 
   50 I=I+1                                                              CARLSN 
      IF(I.GT.20) GO TO 60                                               CARLSN 
      FQ=XNU-A*ATAN(Q/A)+ATAN(Q)                                         CARLSN 
      FPQ=-A*A/(A*A+Q*Q)+1.0/(1.0+Q*Q)                                   CARLSN 
      QP=Q                                                               CARLSN 
      Q=Q-FQ/FPQ                                                         CARLSN 
      DELTA=ABS(Q-QP)                                                    CARLSN 
      IF(DELTA.GT.EPS) GO TO 50                                          CARLSN 
60    ARG=Q*Q+1.0                                                        CARLSN 
      XM=SQRT(ARG)                                                       CARLSN 
      RETURN                                                             CARLSN 
120   XM=100.                                                            CARLSN 
      RETURN                                                             CARLSN 
130   XM=1.0                                                             CARLSN 
      RETURN                                                             CARLSN 
C                                                                        CARLSN 
800   FORMAT(/,1X,I2,5X,F16.7,/)                                         CARLSN 
C                                                                        CARLSN 
      END                                                                CARLSN 
      SUBROUTINE INTERP(XIN,YOUT,NMAX,X,Y)                               INTERP 
C                                                                        INTERP 
C      LINEAR INTERPOLATION/EXTRAPLOLATION                               INTERP 
C                                                                        INTERP 
      DIMENSION X(1),Y(1)                                                INTERP 
      N=2                                                                INTERP 
      IF(XIN.LT.X(1)) GO TO 12                                           INTERP 
      N=NMAX                                                             INTERP 
      IF(XIN.GT.X(NMAX)) GO TO 12                                        INTERP 
      DO 10 I=2,NMAX                                                     INTERP 
      N=I                                                                INTERP 
      IF(X(N-1).LE.XIN.AND.X(N).GE.XIN) GO TO 12                         INTERP 
   10 CONTINUE                                                           INTERP 
   12 YOUT=Y(N-1)+(Y(N)-Y(N-1))*(XIN-X(N-1))/(X(N)-X(N-1))               INTERP 
      RETURN                                                             INTERP 
      END                                                                INTERP 
      SUBROUTINE MIXED                                                   MIXED
      COMMON/ PI / PI, RADEG, DEGRAD                                     MIXED
      COMMON/ DESIGN / CAMBER(600)                                       MIXED
      COMMON / PARAM / NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA         MIXED
      COMMON/ POINT / ARRAY(6000)                                        MIXED
      COMMON / TAPES / ITAPES(20)                                        MIXED
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP MIXED
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16                NEWSHLC
      INTEGER COMPT,PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE MIXED
     18,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,FFILE     NEWSHLC
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON/ SCRAT / BLOCK(7500)                                        MIXED
      COMMON/NEWCOM/KDUM(9),KFUS,KRADX(4),KFORX(4),KDUMX(27),            MIXED
     1              NCPT,LOCPT(20),XCPT(20)                              MIXED
      COMMON/SEG/NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),               MIXED
     1           BT(20),DUM(20),BL(20)                                   MIXED
      DIMENSION XP(600),YP(600),ZP(600),ETAC(80),DCPC(80),ATITL(20)      MIXED
      DIMENSION P1(600),P2(600),A(600),B(600),GW(600),GB(600)            MIXED
      DIMENSION BCW(600),BCB(600),DEL(600),COSTH(600)                    MIXED
      DIMENSION SLOPES(600),IPERM(600),IFREE(600),PRESS(600)             MIXED
      EQUIVALENCE (BLOCK(1),BCW(1)),(BLOCK(601),BCB(1))                  MIXED
     1,(BLOCK(5701),GW(1)),(BLOCK(6301),GB(1)),(BLOCK(1201),P1(1))       MIXED
     2,(BLOCK(1801),P2(1)),(BLOCK(2401),A(1)),(BLOCK(3001),B(1))         MIXED
     3,(BLOCK(1201),DEL(1)),(BLOCK(1801),COSTH(1)),(BLOCK(4801),SLOPES(1 MIXED
     4)),(BLOCK(3601),IPERM(1)),(BLOCK(4201),IFREE(1))                   MIXED
     5,(BLOCK(6901),PRESS(1)),(ARRAY(1),XP(1)),(ARRAY(601),YP(1)),       MIXED
     6 (ARRAY(1201),ZP(1))                                               MIXED
C                                                                        MIXED
      COMMON/STAR/XSTAR(3600),NSEGW                                      MIXED
      DIMENSION ZCSTR(600),ZTSTR(600),CPSTR(600),                        MIXED
     1          DCNSTR(600),DCTSTR(600),DCMSTR(600)                      MIXED
      EQUIVALENCE (XSTAR(1)   , ZCSTR(1)),(XSTAR(601) , ZTSTR(1)),       MIXED
     1            (XSTAR(1201), CPSTR(1)),(XSTAR(1801),DCNSTR(1)),       MIXED
     2            (XSTAR(2401),DCTSTR(1)),(XSTAR(3001),DCMSTR(1))        MIXED
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ                        NEWSHLC
      LOGICAL THK                                                        NEWSHLC
C                                                                        MIXED
C     ASSIGN SCRATCH UNITS                                               MIXED
C                                                                        MIXED
      N1 = ITAPES(1)                                                     MIXED
      N2 = ITAPES(2)                                                     MIXED
      N3 = ITAPES(3)                                                     MIXED
      N4 = ITAPES(4)                                                     MIXED
      N5 = ITAPES(5)                                                     MIXED
      N6 = ITAPES(6)                                                     MIXED
      N7 = ITAPES(7)                                                     MIXED
      N8 = ITAPES(8)                                                     MIXED
      N9 = ITAPES(9)                                                     MIXED
      N10 = ITAPES(10)                                                   MIXED
C                                                                        MIXED
C     MIXED ANALYSIS OPTION, NOPT(2) = 2                                 MIXED
C     FULL INVERSE ANALYSIS, NOPT(2) = 3                                 MIXED
C                                                                        MIXED
C     NFIX = NUMBER OF PRESSURE CONSTRAINTS                              MIXED
C     IFREE(I) = 1, ITH BOX PRESSURE IS FIXED                            MIXED
C     IFREE(I) = 0, ITH BOX SLOPE IS FIXED                               MIXED
C                                                                        MIXED
      ALP = ALPHA * DEGRAD                                               MIXED
      SINAL = SIN( ALP )                                                 MIXED
      COSAL = COS( ALP )                                                 MIXED
      DO 1 I = 1, NWING                                                  MIXED
    1 IPERM(I) = I                                                       MIXED
      NFIX = NWING                                                       MIXED
      NSLOPE = NWING                                                     MIXED
      IF( NOPT(2) .EQ. 3 ) GO TO 9                                       MIXED
      IF(NOPT(2).EQ.4) GO TO 180                                         MIXED
      READ(TAPE5,5) NFIX                                                 MIXED
      NSLOPE = NWING - NFIX                                              MIXED
      READ(TAPE5,5) ( IPERM(I), I = 1, NFIX )                            MIXED
    5 FORMAT(10I5)                                                       MIXED
    9 CONTINUE                                                           MIXED
      READ(TAPE5,10) ( PRESS(I), I = 1, NFIX )                           MIXED
      IF(NOPT(2).EQ.2) READ(TAPE5,10)(SLOPES(I),I=1,NSLOPE)              MIXED
   10 FORMAT(7E10.2)                                                     MIXED
      GO TO 210                                                          MIXED
  180 READ(TAPE5,224) ATITL                                              MIXED
      WRITE(TAPE6,226) ATITL                                             MIXED
      READ(TAPE5,228) FCCC,XLAMLE,ETADR,XORIGC,YORIGC                    MIXED
      WRITE(TAPE6,230)FCCC,XLAMLE,ETADR,XORIGC,YORIGC                    MIXED
      IFCCC=FCCC                                                         MIXED
      DO 170 I=1,IFCCC                                                   MIXED
      READ(TAPE5,228) ETAC(I),DCPC(I)                                    MIXED
  170 WRITE(TAPE6,232)ETAC(I),DCPC(I)                                    MIXED
      WRITE(TAPE6,222)                                                   MIXED
      REWIND 7                                                           MIXED
      READ(TAPE7) ARRAY                                                  MIXED
      XLAMLE=0.0174533*XLAMLE                                            MIXED
      XLAMLE=TAN(XLAMLE)                                                 MIXED
      NSLOPE=0                                                           MIXED
      NFIX=0                                                             MIXED
      NNWG=0                                                             MIXED
      NNCPT=0                                                            MIXED
      WRITE(TAPE6,231)                                                   MIXED
      DO 200 N=1,NSEG                                                    MIXED
      NC=NCOL(N)                                                         MIXED
      DO 200 NN=1,NC                                                     MIXED
      NR=NROW(N)                                                         MIXED
      NR1=NR+1                                                           MIXED
      DO 200 NNN=1,NR1                                                   MIXED
      NNWG=NNWG+1                                                        MIXED
      IF(NNN.EQ.NR1.AND.LOCPT(N).EQ.0) GO TO 195                         MIXED
      NNCPT=NNCPT+1                                                      MIXED
      ETA=1.E10                                                          MIXED
      IF(N.GT.NSEGW) GO TO 190                                           MIXED
      ETA=XLAMLE*(YP(NNWG)-YORIGC)/(XP(NNWG)-XORIGC)                     MIXED
      IF(ETA.LT.0.0.OR.ETA.GT.1.0) ETA=1.0                               MIXED
      IF(ETA.LE.ETADR) GO TO 190                                         MIXED
      NFIX=NFIX+1                                                        MIXED
      IPERM(NFIX)=NNCPT                                                  MIXED
      CALL INTERP(ETA,CPPRES,IFCCC,ETAC,DCPC)                            MIXED
      PRESS(NFIX)=CPPRES                                                 MIXED
      WRITE(TAPE6,234) NNCPT,XP(NNWG),YP(NNWG),ETA,CPPRES                MIXED
      GO TO 195                                                          MIXED
  190 NSLOPE=NSLOPE+1                                                    MIXED
      SLOPES(NSLOPE)=CAMBER(NNCPT)                                       MIXED
      WRITE(TAPE6,236) NNCPT,XP(NNWG),YP(NNWG),ETA,SLOPES(NSLOPE)        MIXED
  195 CONTINUE                                                           MIXED
      IF(NNN.EQ.NR1) WRITE(6,238)                                        MIXED
  200 CONTINUE                                                           MIXED
  208 CONTINUE                                                           MIXED
      IF(NSLOPE.EQ.0) NOPT(2)=3                                          MIXED
      IF(NSLOPE.GT.0) NOPT(2)=2                                          MIXED
      IF(NSLOPE.EQ.0) NSLOPE=NWING                                       NEWSHLC
  220 FORMAT(2X,2I5,2E14.5)                                              MIXED
  222 FORMAT(///)                                                        MIXED
  224 FORMAT(20A4)                                                       MIXED
  226 FORMAT(//10X,29HCONICAL CAMBER PANEL ANALYSIS //10X,               MIXED
     1 5HINPUT ,2X,20A4/)                                                MIXED
  228 FORMAT(8F10.5)                                                     MIXED
  230 FORMAT(/9X,5HFCCCC,9X,6HXLAMLE,11X,5HETADR,9X,                     MIXED
     1 6HXORIGC,9X,6HYORIGC/5F15.5//16X,3HETA,17X,3HDCP)                 MIXED
  231 FORMAT(//2X,5HPANEL,9X,1HX,15X,1HY,13X,3HETA,9X,8HPRESSURE,        MIXED
     1       9X,5HSLOPE)                                                 MIXED
  232 FORMAT(10X,F10.5,10X,F10.5)                                        MIXED
  234 FORMAT(I5,5(2X,F13.5))                                             MIXED
  236 FORMAT(I5,3(2X,F13.5),15X,1(2X,F13.5))                             MIXED
  238 FORMAT(/)                                                          MIXED
C                                                                        MIXED
  210 CONTINUE                                                           MIXED
C                                                                        MIXED
C                                                                        MIXED
C     SET UP IFREE AND IPERM VECTORS                                     MIXED
C                                                                        MIXED
      DO 15 I = 1, NWING                                                 MIXED
   15 IFREE(I) = 0                                                       MIXED
      DO 20 I = 1, NFIX                                                  MIXED
      J = IPERM(I)                                                       MIXED
   20 IFREE(J) = 1                                                       MIXED
      IF( NOPT(2) .EQ. 3 ) GO TO 49                                      MIXED
C                                                                        MIXED
C     MIXED ANALYSIS FOR WING ALONE OR WING/BODY CASES                   MIXED
C     --  LINEAR BOUNDARY CONDITIONS --                                  MIXED
C                                                                        MIXED
      IF( NWING .EQ. 0 ) GO TO 999                                       MIXED
      REWIND TAPE11                                                      MIXED
      READ(TAPE11) DEL, COSTH                                            MIXED
C                                                                        MIXED
C     SAVE FIXED BOUNDARY CONDITIONS                                     MIXED
C     IN VECTOR  BCW                                                     MIXED
C                                                                        MIXED
      ICT = 0                                                            MIXED
      DO 16 I = 1, NWING                                                 MIXED
      IF( IFREE(I) .EQ. 1 ) GO TO 16                                     MIXED
      ICT = ICT + 1                                                      MIXED
      BCW(I) = COSAL * SLOPES( ICT ) - SINAL * COSTH(I)                  MIXED
   16 CONTINUE                                                           MIXED
C                                                                        FIXOPT 
C         ADD EFFECTS OF WING AND NACELLE THICKNESS                      FIXOPT 
C         AND EFFECTS OF BODY (WHEN NACELLE OR SHELL IS PRESENT)         FIXOPT 
C                                                                        FIXOPT 
      REWIND TAPE16                                                      FIXOPT 
      NCPTS=NWING                                                        FIXOPT 
      DO 410 JP=1,2                                                      FIXOPT 
      JPART=JP                                                           FIXOPT 
      CALL WINGS(JPART)                                                  FIXOPT 
      IF(.NOT.THK) GO TO 410                                             FIXOPT 
      IF(NWING.EQ.0) GO TO 410                                           FIXOPT 
      READ(TAPE16) A                                                     FIXOPT 
      DO 400 I=1,NCPTS                                                   FIXOPT 
      IF(IFREE(I).EQ.1) GO TO 400                                        FIXOPT 
      BCW(I)=BCW(I)-A(I)                                                 FIXOPT 
400   CONTINUE                                                           FIXOPT 
410   CONTINUE                                                           FIXOPT 
      CALL WINGS(1)                                                      FIXOPT 
      IF(NBODY.EQ.0.OR.NPTSNS.EQ.0) GO TO 430                            FIXOPT 
      READ(TAPE16) A                                                     FIXOPT 
      DO 420 I=1,NCPTS                                                   FIXOPT 
      IF(IFREE(I).EQ.1) GO TO 420                                        FIXOPT 
      BCW(I)=BCW(I)-A(I)                                                 FIXOPT 
420   CONTINUE                                                           FIXOPT 
430   IF(NPTSNS.NE.0) CALL WINGS(3)                                      FIXOPT 
      I1 = 0                                                             MIXED
      I2 = NFIX                                                          MIXED
      DO 30 I = 1, NWING                                                 MIXED
      IF( IFREE(I) .EQ. 0 ) GO TO 25                                     MIXED
      I1 = I1 + 1                                                        MIXED
      IPERM(I1) = I                                                      MIXED
      GO TO 30                                                           MIXED
   25 I2 = I2 + 1                                                        MIXED
      IPERM(I2) = I                                                      MIXED
   30 CONTINUE                                                           MIXED
C                                                                        MIXED
C     IPERM VECTOR ORDERS REDUCED MATRIX, CONSTRAINED BOXES FIRST        MIXED
C                                                                        MIXED
      NF1 = NFIX + 1                                                     MIXED
   49 CONTINUE                                                           MIXED
      REWIND N5                                                          MIXED
      REWIND N3                                                          MIXED
      REWIND N4                                                          MIXED
      DO 60 I = 1, NWING                                                 MIXED
      READ(N5) ( A(J), J = 1, NWING )                                    MIXED
      IF(NOPT(2).EQ.2 .AND. IFREE(I).EQ.1) GO TO 60                      MIXED
      DO 50 J = 1, NWING                                                 MIXED
      IP = IPERM(J)                                                      MIXED
   50 B(J)=A(IP)/2.0                                                     NEWSHLC
      WRITE(N3) ( B(J), J = 1, NFIX )                                    MIXED
      IF(NOPT(2).EQ.2) WRITE(N4)(B(J),J=NF1,NWING)                       MIXED
   60 CONTINUE                                                           MIXED
      IF( NOPT(2) .EQ. 3 ) GO TO 64                                      MIXED
C                                                                        MIXED
C     CALCULATE UNCONSTRAINED PRESSURES FOR FREE WING BOXES              MIXED
C                                                                        MIXED
      REWIND N4                                                          MIXED
      CALL INV(NSLOPE,N4,N1,N2,N6,N7,N8,N9,N10,600,A,B,1)                MIXED
C                                                                        MIXED
C     INV( A22) IN ROW SORT ON UNIT N1                                   MIXED
C                                                                        MIXED
   64 CONTINUE                                                           MIXED
      DO 65 I = 1, NWING                                                 MIXED
   65 GW(I) = 0.0                                                        MIXED
C                                                                        MIXED
C     FORM AWB * INV(ABB) * ( BOUNDARY CONDITIONS )                      MIXED
C                                                                        MIXED
C     TRANSFER AWB * INV(ABB) TO UNIT N2 IN COLUMN SORT                  MIXED
C                                                                        MIXED
      IF( NBODY .EQ. 0 ) GO TO 66                                        MIXED
      CALL XFER(N5,N2,NBODY, NWING , A )                                 MIXED
      REWIND N6                                                          MIXED
      WRITE(N6) ( BCB(J), J = 1, NBODY )                                 MIXED
      REWIND N6                                                          MIXED
      REWIND N4                                                          MIXED
      CALL TRIXY(N2,N6,N4,NWING,NBODY,1,A,B,P1,600,IRET)                 MIXED
      REWIND N4                                                          MIXED
      READ(N4) ( GW(J), J = 1, NWING )                                   MIXED
   66 CONTINUE                                                           MIXED
C                                                                        MIXED
C     FOR MIXED ANALYSIS FORM COLUMN VECTOR (B) = - ( AR21 ) * (PRESS)   MIXED
C     FOR FULL INVERSE ANALYSIS FORM  AR * PRESS + GW = GW               MIXED
C                                                                        MIXED
      REWIND N3                                                          MIXED
      DO 85 I = 1, NSLOPE                                                MIXED
      READ(N3) (A(J) , J = 1, NFIX )                                     MIXED
      SUM = 0.00                                                         MIXED
   85 B(I)=-SOSCAP(A,PRESS,SUM,NFIX,1,1,1,1)                             NEWSHLC
      IF( NOPT(2) .EQ. 2 ) GO TO 84                                      MIXED
      DO 67 I = 1, NWING                                                 MIXED
   67 BCW(I) = - B(I) + GW(I)                                            MIXED
      GO TO 94                                                           MIXED
   84 CONTINUE                                                           MIXED
      ICT = NFIX                                                         MIXED
      DO 87 I = 1, NSLOPE                                                MIXED
      ICT = ICT + 1                                                      MIXED
      J = IPERM(ICT)                                                     MIXED
   87 B(I) = B(I) + BCW(J) - GW(J)                                       MIXED
   88 CONTINUE                                                           MIXED
C                                                                        MIXED
C     FORM INV( A22) * ( B )                                             MIXED
C                                                                        MIXED
      REWIND N1                                                          MIXED
      DO 90 I = 1,  NSLOPE                                               MIXED
      READ(N1) ( A(J) , J = 1,  NSLOPE )                                 MIXED
      SUM = 0.00                                                         MIXED
   90 P2(I) = SOSCAP(A,B,SUM, NSLOPE,1,1,1,1)                            MIXED
C                                                                        MIXED
C     CALCULATE BOUNDARY CONDITIONS ON WING BOXES WHERE                  MIXED
C     PRESSURES ARE PRESCRIBED                                           MIXED
C                                                                        MIXED
C     DETERMINE AR11 AND AR12 PARTITIONS OF REDUCED MATRIX               MIXED
C                                                                        MIXED
      REWIND N5                                                          MIXED
      REWIND N3                                                          MIXED
      REWIND N4                                                          MIXED
      DO 92 I = 1, NWING                                                 MIXED
      READ(N5) ( A(J) , J = 1, NWING )                                   MIXED
      IF( IFREE(I) .EQ. 0 ) GO TO 92                                     MIXED
      DO 91 J = 1, NWING                                                 MIXED
      IP = IPERM(J)                                                      MIXED
   91 B(J)=A(IP)/2.0                                                     NEWSHLC
      WRITE(N3) ( B(J), J = 1, NFIX )                                    MIXED
      WRITE(N4) ( B(J), J = NF1, NWING )                                 MIXED
   92 CONTINUE                                                           MIXED
      REWIND N3                                                          MIXED
      REWIND N4                                                          MIXED
      DO 93 I = 1, NFIX                                                  MIXED
      K = IPERM(I)                                                       MIXED
      READ(N3) ( A(J), J = 1, NFIX )                                     MIXED
      SUM = 0.00                                                         MIXED
      X = SOSCAP(A,PRESS,SUM,NFIX,1,1,1,1)                               MIXED
      BCW(K)=X                                                           NEWSHLC
      READ(N4) ( A(J) , J = 1, NSLOPE )                                  MIXED
      SUM = 0.00                                                         MIXED
      X = SOSCAP(A,P2,SUM,NSLOPE,1,1,1,1)                                MIXED
      BCW(K) = BCW(K) + X + GW(K)                                        MIXED
   93 CONTINUE                                                           MIXED
   94 CONTINUE                                                           MIXED
C                                                                        MIXED
C     REORDER WING PRESSURES                                             MIXED
C                                                                        MIXED
      I1 = 0                                                             MIXED
      I2 = 0                                                             MIXED
      DO 105 I = 1, NWING                                                MIXED
      IF( IFREE(I) .EQ. 1 ) GO TO 95                                     MIXED
      I1 = I1 + 1                                                        MIXED
      GW(I)=P2(I1)/2.0                                                   NEWSHLC
      GO TO 105                                                          MIXED
   95 CONTINUE                                                           MIXED
      I2 = I2 + 1                                                        MIXED
      GW(I)=PRESS(I2)/2.0                                                NEWSHLC
  105 CONTINUE                                                           MIXED
C                                                                        NEWSHLC
C          ADD EFFECTS OF WING AND NACELLE THICKNESS                     NEWSHLC
C          AND EFFECTS OF BODY (WHEN NACELLE OR SHELL IS PRESENT)        NEWSHLC
C          TO WING CAMBERS                                               NEWSHLC
C                                                                        NEWSHLC
      REWIND TAPE16                                                      NEWSHLC
      NCPTS=NWING                                                        NEWSHLC
      DO 310 JP=1,2                                                      NEWSHLC
      JPART=JP                                                           NEWSHLC
      CALL WINGS(JPART)                                                  NEWSHLC
      IF(.NOT.THK) GO TO 310                                             NEWSHLC
      IF(NWING.EQ.0) GO TO 310                                           NEWSHLC
      READ(TAPE16) A                                                     NEWSHLC
      DO 300 I=1,NCPTS                                                   NEWSHLC
300   BCW(I)=BCW(I)+A(I)                                                 NEWSHLC
310   CONTINUE                                                           NEWSHLC
      CALL WINGS(1)                                                      NEWSHLC
      IF(NBODY.EQ.0.OR.NPTSNS.EQ.0) GO TO 330                            NEWSHLC
      READ(TAPE16) A                                                     NEWSHLC
      DO 320 I=1,NCPTS                                                   NEWSHLC
320   BCW(I)=BCW(I)+A(I)                                                 NEWSHLC
330   IF(NPTSNS.NE.0) CALL WINGS(3)                                      NEWSHLC
C                                                                        MIXED
C      DETERMINE CAMBER SLOPES FOR ALL WING BOXES                        MIXED
C                                                                        MIXED
  110 CONTINUE                                                           MIXED
      REWIND TAPE11                                                      MIXED
      READ(TAPE11) DEL, COSTH                                            MIXED
      DO 120 I = 1, NWING                                                MIXED
  120 CAMBER(I) = ( BCW(I) + SINAL * COSTH(I) ) / COSAL                  MIXED
C                                                                        MIXED
C     PRINT CAMBER SLOPES FOR ALL WING BOXES                             MIXED
C                                                                        MIXED
      IF( NOPT(2) .EQ. 2 ) WRITE(TAPE6,130)                              MIXED
      IF( NOPT(2) .EQ. 3 ) WRITE(TAPE6,135)                              MIXED
  130 FORMAT(1H1,/2X,24H***  MIXED ANALYSIS  ***)                        MIXED
  135 FORMAT(1H1,/2X,31H***  FULL INVERSE ANALYSIS  ***)                 MIXED
  140 FORMAT(1H ,/2X,37HCAMBER SLOPES AT PANEL CONTROL POINTS,//)        MIXED
      WRITE(TAPE6,140)                                                   MIXED
      CALL OUTW(TAPE6,CAMBER)                                            MIXED
C                                                                        MIXED
C     DETERMINE BODY PANEL SINGULARITY STRENGTHS                         MIXED
C                                                                        MIXED
      IF( NBODY .EQ. 0 ) GO TO 999                                       MIXED
      REWIND N5                                                          MIXED
C                                                                        MIXED
C     DUMMY READS TO LOCATE ABW                                          MIXED
C                                                                        MIXED
      CALL XFER(N5,N1,NWING,NWING,A)                                     MIXED
      CALL XFER(N5,N1,NBODY,NWING,A)                                     MIXED
      CALL XFER(N5,N1,NWING,NBODY,A)                                     MIXED
C                                                                        MIXED
C     TRANSFER WING SINGULARITY STRENGTH VECTOR TO N2                    MIXED
C                                                                        MIXED
      REWIND N2                                                          MIXED
      WRITE(N2) ( GW(J), J = 1, NWING )                                  MIXED
      REWIND N2                                                          MIXED
      REWIND N3                                                          MIXED
C                                                                        MIXED
C     FORM VECTOR BCB - ABW * GW                                         MIXED
C                                                                        MIXED
      CALL TRIXY(N1,N2,N3,NBODY,NWING,1,A,B,P1,600,IRET)                 MIXED
      REWIND N3                                                          MIXED
      READ(N3) ( A(J), J = 1, NBODY )                                    MIXED
      DO 145 I = 1, NBODY                                                MIXED
  145 B(I) = BCB(I) - A(I)                                               MIXED
      REWIND N2                                                          MIXED
      WRITE(N2) ( B(J), J = 1, NBODY )                                   MIXED
C                                                                        MIXED
C     CALCULATE BODY PANEL SINGULARITY STRENGTHS                         MIXED
C     AND STORE IN VECTOR,  GB                                           MIXED
C                                                                        MIXED
      CALL XFER(N5,N1,NBODY,NBODY,A)                                     MIXED
      REWIND N2                                                          MIXED
      REWIND N3                                                          MIXED
      CALL TRIXY(N1,N2,N3,NBODY,NBODY,1,A,B,P1,600,IRET)                 MIXED
      REWIND N3                                                          MIXED
      READ(N3) ( GB(J), J = 1, NBODY )                                   MIXED
  999 CONTINUE                                                           MIXED
      RETURN                                                             MIXED
      END                                                                MIXED
      SUBROUTINE DRAG                                                    DRAG 
      COMMON / PI / PI,RADEG,DEGRAD                                      NEWSHLC
      COMMON/ DESIGN / CAMBER(600)                                       DRAG 
      COMMON / PARAM / NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA         DRAG 
      COMMON/ POINT / ARRAY(6000)                                        DRAG 
      COMMON/ SCRAT/ BLOCK(7500)                                         DRAG 
      COMMON/ ROWS / NWCOL, NWRPC(20)                                    DRAG 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),BTE(20),NWT( DRAG 
     120),SPNW(20),XLEW(20),BLE(20),ZLEW(20)                             DRAG 
      DIMENSION AREA(600), XBAR(600), BCB(600)                           DRAG 
      DIMENSION A(1202), B(1202), C(1202)                                DRAG 
      DIMENSION CHORD(600), DELTA(600), DZTDX(600)                       DRAG 
      EQUIVALENCE ( ARRAY(4801),AREA(1)), ( ARRAY(1), XBAR(1) )          DRAG 
     1, ( BLOCK(1201), A(1)), ( BLOCK(2403),B(1)), ( BLOCK(3605),C(1))   DRAG 
     2, ( ARRAY(2401),DELTA(1)), ( ARRAY(3601), CHORD(1))                DRAG 
     3, ( BLOCK(6901), DZTDX(1)), (BLOCK(601),BCB(1))                    DRAG 
      COMMON / TAPES / ITAPES(20)                                        DRAG 
      COMMON/ DES / CLBAR, CMBAR                                         DRAG 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP DRAG 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16                NEWSHLC
      INTEGER COMPT,PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE DRAG 
     18,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,TAPE16,FFILE     NEWSHLC
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON/ CYCLE / NEWAIC, IPREP, NDRAG1, NDRAG2, IDIR                DRAG 
      COMMON/ PSAVE / IFREE(600), CTFREE, CNFREE                         DRAG 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ                        NEWSHLC
      DIMENSION DEL(600),COSTH(600),DPART(600),DTOT(600)                 NEWSHLC
      EQUIVALENCE (ARRAY(1801),DEL(1)),(ARRAY(3001),COSTH(1)),           NEWSHLC
     1            (ARRAY(4201),DPART(1)),(BLOCK(1),DTOT(1))              FIXOPT 
      DIMENSION GW(600),GB(600)                                          NEWSHLC
      EQUIVALENCE (BLOCK(5701),GW(1)),(BLOCK(6301),GB(1))                NEWSHLC
C                                                                        NEWSHLC
      LOGICAL THK                                                        NEWSHLC
      DO 1 I = 1, NWING                                                  DRAG 
    1 IFREE(I) = 0                                                       DRAG 
C                                                                        DRAG 
C     ASSIGN SCRATCH UNITS                                               DRAG 
C                                                                        DRAG 
      N1 = ITAPES(1)                                                     DRAG 
      N2 = ITAPES(2)                                                     DRAG 
      N3 = ITAPES(3)                                                     DRAG 
      N4 = ITAPES(4)                                                     DRAG 
      N5 = ITAPES(5)                                                     DRAG 
      N6 = ITAPES(6)                                                     DRAG 
      N7 = ITAPES(7)                                                     DRAG 
      N8 = ITAPES(8)                                                     DRAG 
      N9 = ITAPES(9)                                                     DRAG 
      N10 = ITAPES(10)                                                   DRAG 
      IN = ITAPES(11)                                                    DRAG 
      IUNIT = N5                                                         DRAG 
      REWIND IUNIT                                                       DRAG 
      REWIND IN                                                          DRAG 
      READ(IN) ARRAY                                                     DRAG 
      READ(IN) XBAR                                                      DRAG 
      REWIND TAPE11                                                      NEWSHLC
      READ(TAPE11) DEL,COSTH                                             NEWSHLC
      REWIND TAPE16                                                      NEWSHLC
      NCPTS=NWING                                                        NEWSHLC
      DO 300 I=1,NCPTS                                                   NEWSHLC
300   DTOT(I)=0.0                                                        NEWSHLC
      DO 320 JP=1,2                                                      NEWSHLC
      JPART=JP                                                           NEWSHLC
      CALL WINGS(JPART)                                                  NEWSHLC
      IF(.NOT.THK) GO TO 320                                             NEWSHLC
      IF(NWING.EQ.0) GO TO 320                                           NEWSHLC
      READ(TAPE16) DPART                                                 NEWSHLC
      DO 310 I=1,NCPTS                                                   NEWSHLC
310   DTOT(I)=DTOT(I)+DPART(I)                                           NEWSHLC
320   CONTINUE                                                           NEWSHLC
      CALL WINGS(1)                                                      NEWSHLC
      IF(NBODY.EQ.0.OR.NPTSNS.EQ.0) GO TO 340                            NEWSHLC
      READ(TAPE16) DPART                                                 NEWSHLC
      DO 330 I=1,NCPTS                                                   NEWSHLC
330   DTOT(I)=DTOT(I)+DPART(I)                                           NEWSHLC
340   IF(NPTSNS.NE.0) CALL WINGS(3)                                      NEWSHLC
      NN = NWING + 1                                                     DRAG 
      NNN = NWING + 2                                                    DRAG 
C                                                                        DRAG 
C                                                                        DRAG 
C     SET STORAGE FOR SUBROUTINE TRIXY                                   DRAG 
C                                                                        DRAG 
      NMAX = 1202                                                        DRAG 
      IGEN = 1                                                           DRAG 
C                                                                        DRAG 
C     IF MIXED DESIGN CASE, MUST READ REDUCED ARRAY FROM N5              DRAG 
C                                                                        DRAG 
      IF( NOPT(2) .LT. 0 ) GO TO 55                                      DRAG 
C                                                                        DRAG 
C     IF FULL DESIGN CASE, DETERMINE IF DRAG MATRIX FOR CURRENT          DRAG 
C     MACH NUMBER IS ON ITAPES(11)                                       DRAG 
C                                                                        DRAG 
      NCASE = NOPT(2)                                                    DRAG 
      NSUM = NDRAG1 + NDRAG2                                             DRAG 
      IF( NSUM .EQ. 0 ) GO TO 55                                         DRAG 
      IF( NCASE .EQ. 1 .AND. NDRAG1 .EQ. 0 ) GO TO 55                    DRAG 
      IF( NCASE .EQ. 2 .AND. NDRAG2 .EQ. 0 ) GO TO 55                    DRAG 
      IGEN = 0                                                           DRAG 
      READ(IN) ICASE, ISIZE                                              DRAG 
      CALL XFER(IN, N1, ISIZE, ISIZE, A )                                DRAG 
      IF( ICASE .EQ. NCASE ) GO TO 129                                   DRAG 
      READ(IN) ICASE, ISIZE                                              DRAG 
      CALL XFER(IN, N1, ISIZE, ISIZE, A )                                DRAG 
      GO TO 129                                                          DRAG 
   55 CONTINUE                                                           DRAG 
C                                                                        DRAG 
C     FOR WING ALONE, (AWW) IS FIRST FILE ON N5                          DRAG 
C     FOR WING/BODY, REDUCED MATRIX,(AR) IS FIRST FILE ON N5             DRAG 
C                                                                        DRAG 
C     FORM DRAG MINIMIZATION MATRIX                                      DRAG 
C                                                                        DRAG 
      IUNIT = N5                                                         DRAG 
      REWIND N1                                                          DRAG 
      REWIND IUNIT                                                       DRAG 
      DO 70 I = 1, NWING                                                 DRAG 
      READ(IUNIT) ( A(J), J = 1, NWING )                                 DRAG 
      DO 60 J = 1, NWING                                                 DRAG 
   60 A(J)=A(J)*AREA(I)/2.0                                              NEWSHLC
      WRITE(N1) ( A(J), J = 1, NWING )                                   DRAG 
   70 CONTINUE                                                           DRAG 
C                                                                        DRAG 
C     TAKE TRANSPOSE OF MATRIX ON N1                                     DRAG 
C                                                                        DRAG 
      REWIND N1                                                          DRAG 
      REWIND N8                                                          DRAG 
      REWIND N7                                                          DRAG 
      CALL TRPOSE(N1,A,B,NWING,NWING,N8,N7,NMAX)                         DRAG 
C                                                                        DRAG 
C     PARTIAL PRESSURE OPTION                                            DRAG 
C                                                                        DRAG 
      IF( NOPT(1) .EQ. 2 .AND. NOPT(2) .LT. 0 ) GO TO 129                DRAG 
C                                                                        DRAG 
C     ADD ELEMENTS OF MATRICES ON N1 AND N8                              DRAG 
C                                                                        DRAG 
      REWIND N1                                                          DRAG 
      REWIND N2                                                          DRAG 
      DO 90 I = 1, NWING                                                 DRAG 
      READ(N1) ( A(J), J = 1, NWING )                                    DRAG 
      READ(N8) ( B(J) , J = 1, NWING )                                   DRAG 
      DO 80 J = 1, NWING                                                 DRAG 
   80 C(J) = A(J) + B(J)                                                 DRAG 
C                                                                        DRAG 
C     NOPT(2) .EQ. 1 , CL CONSTRAINT ONLY                                DRAG 
C     NOPT(2) .EQ. 2 , CL AND CM CONSTRAINT                              DRAG 
C                                                                        DRAG 
      C(NN) = AREA(I) * COSTH(I)                                         NEWSHLC
      NUM = NN                                                           DRAG 
      IF( NOPT(2) .EQ. 1 ) GO TO 90                                      DRAG 
      C(NNN) = AREA(I) * COSTH(I) * XBAR(I)                              NEWSHLC
      NUM = NNN                                                          DRAG 
   90 WRITE(N2) (C(J), J = 1, NUM )                                      DRAG 
      DO 110 I = 1, NWING                                                DRAG 
  110 A(I) = AREA(I) * COSTH(I)                                          NEWSHLC
      A(NN) = 0.0                                                        DRAG 
      A(NNN)  = 0.0                                                      DRAG 
      WRITE(N2) ( A(J), J = 1, NUM )                                     DRAG 
      DO 120 I = 1, NWING                                                DRAG 
  120 A(I) = AREA(I) * COSTH(I) * XBAR(I)                                NEWSHLC
      A(NN) = 0.0                                                        DRAG 
      A(NNN) = 0.0                                                       DRAG 
      WRITE(N2) ( A(J) , J = 1, NUM )                                    DRAG 
      REWIND N2                                                          DRAG 
C                                                                        DRAG 
C     INVERT DRAG MINIMIZATION MATRIX. PLACE ON N1 IN ROW SORT           DRAG 
C                                                                        DRAG 
      CALL INV(NUM,N2,N1,N3,N4,N6,N7,N8,N9,NMAX,A,B,1)                   DRAG 
C                                                                        DRAG 
C     WRITE DRAG MINIMIZATION MATRIX ON UNIT IN                          DRAG 
C                                                                        DRAG 
      IF( NSUM .EQ. 0 ) GO TO 123                                        DRAG 
      READ(IN) ICASE, ISIZE                                              DRAG 
      DO 122 I = 1, ISIZE                                                DRAG 
  122 READ(IN)                                                           DRAG 
  123 WRITE(IN) NCASE, NUM                                               DRAG 
      REWIND N1                                                          DRAG 
      DO 124 I = 1, NUM                                                  DRAG 
      READ(N1) ( A(J), J = 1, NUM )                                      DRAG 
  124 WRITE(IN) ( A(J), J = 1, NUM )                                     DRAG 
      IF( NCASE .EQ. 1 ) NDRAG1 = 1                                      DRAG 
      IF( NCASE .EQ. 2 ) NDRAG2 = 1                                      DRAG 
      REWIND N1                                                          DRAG 
  129 CONTINUE                                                           DRAG 
C                                                                        DRAG 
C     FORM RIGHT HAND SIDE VECTOR FOR OPTIMIZATION                       DRAG 
C                                                                        DRAG 
      DO 130 I = 1, NWING                                                DRAG 
      CAMBER(I) = 0.0                                                    DRAG 
  130 B(I) = 0.0                                                         DRAG 
      IF( NBODY .EQ. 0 ) GO TO 134                                       DRAG 
C                                                                        DRAG 
C      FORM AWB * INV(ABB) * C                                           DRAG 
C                                                                        DRAG 
      REWIND N2                                                          DRAG 
      WRITE(N2) ( BCB(J), J = 1, NBODY )                                 DRAG 
      REWIND N2                                                          DRAG 
      REWIND N3                                                          DRAG 
      IF( IGEN .EQ. 1 ) GO TO 131                                        DRAG 
      CALL XFER( IUNIT, N10, NWING, NWING, A )                           DRAG 
C                                                                        DRAG 
C     TRANSFER AWB*INV(ABB) IN COLUMN SORT TO UNIT N10                   DRAG 
C                                                                        DRAG 
  131 CALL XFER(IUNIT,N10,NBODY,NWING,A)                                 DRAG 
      CALL TRIXY(N10,N2,N3,NWING,NBODY,1,A,B,C,NMAX,IRET )               DRAG 
      REWIND N10                                                         DRAG 
      REWIND N3                                                          DRAG 
      READ(N3) ( CAMBER(J), J = 1, NWING )                               DRAG 
      DO 133 I = 1, NWING                                                DRAG 
  133 B(I) = - AREA(I) * ( CAMBER(I) + DTOT(I) )                         FIXOPT 
  134 CONTINUE                                                           DRAG 
      B(NN) = CLBAR * REFA                                               DRAG 
      B(NNN) = CLBAR * CMBAR * REFA                                      DRAG 
      IF( NOPT(2) .GT. 0 ) GO TO 135                                     DRAG 
      REWIND N10                                                         DRAG 
      WRITE(N10) ( B(J), J = 1, NWING )                                  DRAG 
      CALL PCONST                                                        DRAG 
C                                                                        DRAG 
C     SINGULARITY STRENGTHS ARE STORED IN ARRAY  C                       DRAG 
C     BY SUBROUTINE PCONST                                               DRAG 
C                                                                        DRAG 
      GO TO 150                                                          DRAG 
  135 CONTINUE                                                           DRAG 
C                                                                        DRAG 
C     DOUBLE PRECISION WING PRESSURES FOR OPTIMUM DRAG                   DRAG 
C     ARE STORED IN ARRAY @ C @                                          DRAG 
C                                                                        DRAG 
      REWIND N1                                                          DRAG 
      DO 140 I = 1, NUM                                                  DRAG 
      SUM = 0.00                                                         DRAG 
      READ(N1) ( A(J), J = 1, NUM )                                      DRAG 
  140 C(I) = SOSCAP(A,B,SUM,NUM,1,1,1,1)                                 DRAG 
  150 CONTINUE                                                           DRAG 
C                                                                        DRAG 
C     CALCULATE UPPER SURFACE PRESSURE                                   DRAG 
C                                                                        DRAG 
      DO 155 I = 1, NWING                                                DRAG 
  155 C(I) = C(I) * .5                                                   DRAG 
C                                                                        DRAG 
C     CALCULATE WING CAMBER FOR OPTIMUM DRAG                             DRAG 
C                                                                        DRAG 
      IUNIT = N5                                                         DRAG 
      REWIND IUNIT                                                       DRAG 
      DO 160 I = 1, NWING                                                DRAG 
      READ(N5) ( A(J), J = 1, NWING )                                    DRAG 
      SUM = 0.00                                                         DRAG 
  160 B(I) = SOSCAP(A,C,SUM,NWING,1,1,1,1)                               DRAG 
      IF( NBODY .EQ. 0 ) GO TO 170                                       DRAG 
      DO 165 I = 1, NWING                                                DRAG 
  165 B(I) = B(I) + CAMBER(I)                                            DRAG 
  170 CONTINUE                                                           DRAG 
C                                                                        NEWSHLC
C          ADD EFFECTS OF WING AND NACELLE THICKNESS                     NEWSHLC
C          AND EFFECTS OF BODY (WHEN NACELLE OR SHELL IS PRESENT)        NEWSHLC
C          TO WING CAMBERS                                               NEWSHLC
C                                                                        NEWSHLC
      ALP=ALPHA*DEGRAD                                                   NEWSHLC
      SINAL=SIN(ALP)                                                     NEWSHLC
      COSAL=COS(ALP)                                                     NEWSHLC
      DO 175 I=1,NWING                                                   NEWSHLC
      B(I)=B(I)+DTOT(I)                                                  NEWSHLC
175   B(I)=(B(I)+SINAL*COSTH(I))/COSAL                                   NEWSHLC
C                                                                        DRAG 
C      PRINT CAMBER SLOPES                                               DRAG 
C                                                                        DRAG 
      WRITE(TAPE6,200)                                                   DRAG 
      IF(IABS(NOPT(2)).EQ.1) WRITE(TAPE6,400) CLBAR                      DRAG 
      IF(IABS(NOPT(2)).EQ.2) WRITE(TAPE6,401) CLBAR,CMBAR                DRAG 
  400 FORMAT(1H ,23HWING DESIGNED FOR CL = ,1F10.5,/)                    DRAG 
  401 FORMAT(1H ,23HWING DESIGNED FOR CL = ,1F10.5,5X,6HXCP = ,1F10.5,/) DRAG 
      WRITE(TAPE6,422)                                                   DRAG 
      CALL OUTW(TAPE6,B)                                                 DRAG 
  422 FORMAT(1H ,/2X,37HCAMBER SLOPES AT PANEL CONTROL POINTS,//)        DRAG 
C                                                                        DRAG 
C     TRANSFER CAMBER SLOPES TO COMMON/ DESIGN /                         DRAG 
C                                                                        DRAG 
      DO 195 I = 1, NWING                                                DRAG 
  195 CAMBER(I) = B(I)                                                   DRAG 
  199 CONTINUE                                                           DRAG 
  200 FORMAT(1H1)                                                        DRAG 
      DO 600 I = 1, NWING                                                DRAG 
      NSAVE = IFREE(I)                                                   DRAG 
      IF( NSAVE .EQ. 0 ) IFREE(I) = 1                                    DRAG 
      IF( NSAVE .EQ. 1 ) IFREE(I) = 0                                    DRAG 
  600 CONTINUE                                                           DRAG 
C                                                                        NEWSHLC
C          STORE WING SINGULARITY STRENGTHS IN ARRAY GW                  NEWSHLC
C                                                                        NEWSHLC
      DO 350 I=1,NWING                                                   NEWSHLC
350   GW(I)=C(I)                                                         NEWSHLC
C                                                                        NEWSHLC
C          CALCULATE BODY SINGULARITY STRENGTHS                          NEWSHLC
C          AND STORE IN ARRAY GB                                         NEWSHLC
C                                                                        NEWSHLC
      IF(NBODY.EQ.0) GO TO 370                                           NEWSHLC
      REWIND N5                                                          NEWSHLC
      CALL XFER(N5,N1,NWING,NWING,DEL)                                   NEWSHLC
      CALL XFER(N5,N1,NBODY,NWING,DEL)                                   NEWSHLC
      CALL XFER(N5,N1,NWING,NBODY,DEL)                                   NEWSHLC
      REWIND N2                                                          NEWSHLC
      WRITE(N2) (GW(I),I=1,NWING)                                        NEWSHLC
      REWIND N2                                                          NEWSHLC
      REWIND N3                                                          NEWSHLC
      CALL TRIXY(N1,N2,N3,NBODY,NWING,1,A,B,C,600,IRET)                  NEWSHLC
      REWIND N3                                                          NEWSHLC
      READ(N3) (A(I),I=1,NBODY)                                          NEWSHLC
      DO 360 I=1,NBODY                                                   NEWSHLC
360   B(I)=BCB(I)-A(I)                                                   NEWSHLC
      REWIND N2                                                          NEWSHLC
      WRITE(N2) (B(I),I=1,NBODY)                                         NEWSHLC
      CALL XFER(N5,N1,NBODY,NBODY,DEL)                                   NEWSHLC
      REWIND N2                                                          NEWSHLC
      REWIND N3                                                          NEWSHLC
      CALL TRIXY(N1,N2,N3,NBODY,NBODY,1,A,B,C,600,IRET)                  NEWSHLC
      REWIND N3                                                          NEWSHLC
      READ(N3) (GB(I),I=1,NBODY)                                         NEWSHLC
370   CONTINUE                                                           NEWSHLC
      RETURN                                                             DRAG 
      END                                                                DRAG 
      SUBROUTINE DIRECT                                                  DIRECT 
      COMMON/ PI / PI, RADEG, DEGRAD                                     DIRECT 
      COMMON/ DESIGN / CAMBER(600)                                       DIRECT 
      COMMON / PARAM / NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA         DIRECT 
      COMMON/ POINT / ARRAY(6000)                                        DIRECT 
      COMMON / TAPES / ITAPES(20)                                        DIRECT 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP DIRECT 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       DIRECT 
      INTEGER COMPT,PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE DIRECT 
     18,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,FFILE            DIRECT 
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON/ SCRAT / BLOCK(7500)                                        DIRECT 
      COMMON/ CYCLE / NEWAIC,IPREP,NDRAG1,NDRAG2,IDIR                    DIRECT 
      DIMENSION P1(600),P2(600),A(600),B(600),GW(600),GB(600)            DIRECT 
      DIMENSION BCW(600),BCB(600),DEL(600),COSTH(600)                    DIRECT 
      DIMENSION SLOPES(600),IPERM(600),IFREE(600),PRESS(600)             DIRECT 
      EQUIVALENCE (BLOCK(1),BCW(1)),(BLOCK(601),BCB(1))                  DIRECT 
     1,(BLOCK(5701),GW(1)),(BLOCK(6301),GB(1)),(BLOCK(1201),P1(1))       DIRECT 
     2,(BLOCK(1801),P2(1)),(BLOCK(2401),A(1)),(BLOCK(3001),B(1))         DIRECT 
     3,(BLOCK(1201),DEL(1)),(BLOCK(1801),COSTH(1)),(BLOCK(4801),SLOPES(1 DIRECT 
     4)),(BLOCK(3601),IPERM(1)),(BLOCK(4201),IFREE(1))                   DIRECT 
     5,(BLOCK(6901),PRESS(1))                                            DIRECT 
      COMMON /SHELL/ NPTSB,NSEGWT,NPTSWT,NSEGN,NPTSN,NSEGS,NPTSS,        NEWSHLC
     1               NSEGNS,NPTSNS,NNAC,NSHELL,NQ,IPART                  NEWSHLC
C                                                                        DIRECT 
C     ASSIGN SCRATCH UNITS                                               DIRECT 
C                                                                        DIRECT 
      N1 = ITAPES(1)                                                     DIRECT 
      N2 = ITAPES(2)                                                     DIRECT 
      N3 = ITAPES(3)                                                     DIRECT 
      N4 = ITAPES(4)                                                     DIRECT 
      N5 = ITAPES(5)                                                     DIRECT 
      N6 = ITAPES(6)                                                     DIRECT 
      N7 = ITAPES(7)                                                     DIRECT 
      N8 = ITAPES(8)                                                     DIRECT 
      N9 = ITAPES(9)                                                     DIRECT 
      N10 = ITAPES(10)                                                   DIRECT 
C                                                                        DIRECT 
C     ****    BODY ALONE CASE    ****                                    DIRECT 
C                                                                        DIRECT 
      IF( NWING .NE. 0 ) GO TO 20                                        DIRECT 
      REWIND N5                                                          DIRECT 
      IF( IDIR .EQ. 0 ) GO TO 5                                          DIRECT 
      CALL XFER(N5,N10,NBODY,NBODY,A)                                    DIRECT 
      CALL XFER(N5,N10,NBODY,NBODY,A)                                    DIRECT 
      GO TO 10                                                           DIRECT 
    5 CONTINUE                                                           DIRECT 
C                                                                        DIRECT 
C     INVERT ABB MATRIX , PUT ON N10 IN COLUMN SORT                      DIRECT 
C                                                                        DIRECT 
      CALL INV(NBODY,N5,N1,N10,N2,N3,N4,N6,N7,600,A,B,0)                 DIRECT 
C                                                                        DIRECT 
C     CALCULATE BODY PANEL SINGULARITY STRENGTHS                         DIRECT 
C                                                                        DIRECT 
   10 CONTINUE                                                           DIRECT 
      REWIND N1                                                          DIRECT 
      WRITE(N1) ( BCB(J), J = 1, NBODY )                                 DIRECT 
      REWIND N1                                                          DIRECT 
      REWIND N2                                                          DIRECT 
      REWIND N10                                                         DIRECT 
      CALL TRIXY(N10,N1,N2,NBODY,NBODY,1,A,B,P1,600,IRET)                DIRECT 
C                                                                        DIRECT 
C     BODY PANEL STRENGTHS ON UNIT N2                                    DIRECT 
C                                                                        DIRECT 
      REWIND N2                                                          DIRECT 
      READ(N2) ( GB(J), J = 1, NBODY )                                   DIRECT 
      IF( IDIR .EQ. 1 ) GO TO 160                                        DIRECT 
      REWIND N10                                                         DIRECT 
      DO 15 I = 1, NBODY                                                 DIRECT 
      READ(N10) ( A(J), J = 1, NBODY )                                   DIRECT 
      WRITE(N5) ( A(J), J = 1, NBODY )                                   DIRECT 
   15 CONTINUE                                                           DIRECT 
      IF(IPART.NE.0) IDIR=1                                              NEWSHLC
      GO TO 160                                                          DIRECT 
   20 CONTINUE                                                           DIRECT 
C                                                                        DIRECT 
C     ****    WING ALONE OR WING/BODY CASES    ****                      DIRECT 
C                                                                        DIRECT 
      IF( IDIR .EQ. 0 ) GO TO 50                                         DIRECT 
      REWIND N5                                                          DIRECT 
C                                                                        DIRECT 
C     DUMMY READS TO LOCATE INV(AWW) OR INV(AR)                          DIRECT 
C                                                                        DIRECT 
      CALL XFER(N5,N10,NWING,NWING,A)                                    DIRECT 
      IF( NBODY .EQ. 0 ) GO TO 40                                        DIRECT 
      CALL XFER(N5,N10,NBODY,NWING,A)                                    DIRECT 
      CALL XFER(N5,N10,NWING,NBODY,A)                                    DIRECT 
      CALL XFER(N5,N10,NBODY,NBODY,A)                                    DIRECT 
   40 CONTINUE                                                           DIRECT 
      CALL XFER(N5,N10,NWING,NWING,A)                                    DIRECT 
      GO TO 64                                                           DIRECT 
   50 CONTINUE                                                           DIRECT 
      REWIND N5                                                          DIRECT 
      REWIND N3                                                          DIRECT 
      REWIND N4                                                          DIRECT 
      DO 60 I = 1, NWING                                                 DIRECT 
      READ(N5) ( A(J), J = 1, NWING )                                    DIRECT 
      WRITE(N3) ( A(J), J = 1, NWING )                                   DIRECT 
   60 CONTINUE                                                           DIRECT 
C                                                                        DIRECT 
C     INVERT AWW(WING ALONE) OR AR(WING/BODY) MATRIX IF IDIR = 0         DIRECT 
C                                                                        DIRECT 
      REWIND N3                                                          DIRECT 
      CALL INV(NWING,N3,N2,N10,N6,N7,N8,N9,N4,600,A,B,0)                 DIRECT 
C                                                                        DIRECT 
C     INV( AR) IN COLUMN SORT ON UNIT N10                                DIRECT 
C                                                                        DIRECT 
   64 CONTINUE                                                           DIRECT 
      DO 65 I = 1, NWING                                                 DIRECT 
   65 GW(I) = 0.0                                                        DIRECT 
C                                                                        DIRECT 
C     FORM AWB * INV(ABB) * ( BOUNDARY CONDITIONS )                      DIRECT 
C                                                                        DIRECT 
C     TRANSFER AWB * INV(ABB) TO UNIT N2 IN COLUMN SORT                  DIRECT 
C                                                                        DIRECT 
      IF( NBODY .EQ. 0 ) GO TO 66                                        DIRECT 
      REWIND N5                                                          DIRECT 
      CALL XFER(N5,N2,NWING,NWING,A)                                     DIRECT 
      CALL XFER(N5,N2,NBODY, NWING , A )                                 DIRECT 
      REWIND N6                                                          DIRECT 
      WRITE(N6) ( BCB(J), J = 1, NBODY )                                 DIRECT 
      REWIND N6                                                          DIRECT 
      REWIND N4                                                          DIRECT 
      CALL TRIXY(N2,N6,N4,NWING,NBODY,1,A,B,P1,600,IRET)                 DIRECT 
      REWIND N4                                                          DIRECT 
      READ(N4) ( GW(J), J = 1, NWING )                                   DIRECT 
   66 CONTINUE                                                           DIRECT 
C                                                                        DIRECT 
C     FORM RIGHT HAND SIDE, BCW - AWB * INV(ABB) * BCB                   DIRECT 
C                                                                        DIRECT 
      DO 85 I = 1, NWING                                                 DIRECT 
   85 GW(I) = BCW(I) - GW(I)                                             DIRECT 
C                                                                        DIRECT 
C     CALCULATE WING PRESSURES                                           DIRECT 
C                                                                        DIRECT 
      REWIND N10                                                         DIRECT 
      REWIND N2                                                          DIRECT 
      REWIND N3                                                          DIRECT 
      WRITE(N2) ( GW(J), J = 1, NWING )                                  DIRECT 
      REWIND N2                                                          DIRECT 
      CALL TRIXY(N10,N2,N3,NWING,NWING,1,A,B,P1,600,IRET)                DIRECT 
C                                                                        DIRECT 
C     WING SINGULARITY STRENGTHS N UNIT N3                               DIRECT 
C                                                                        DIRECT 
      REWIND N3                                                          DIRECT 
      READ(N3) ( GW(J), J = 1, NWING )                                   DIRECT 
C                                                                        DIRECT 
C     DETERMINE BODY PANEL SINGULARITY STRENGTHS                         DIRECT 
C                                                                        DIRECT 
      IF( NBODY .EQ. 0 ) GO TO 999                                       DIRECT 
      REWIND N5                                                          DIRECT 
C                                                                        DIRECT 
C     DUMMY READS TO LOCATE ABW                                          DIRECT 
C                                                                        DIRECT 
      CALL XFER(N5,N1,NWING,NWING,A)                                     DIRECT 
      CALL XFER(N5,N1,NBODY,NWING,A)                                     DIRECT 
      CALL XFER(N5,N1,NWING,NBODY,A)                                     DIRECT 
C                                                                        DIRECT 
C     TRANSFER WING SINGULARITY STRENGTH VECTOR TO N2                    DIRECT 
C                                                                        DIRECT 
      REWIND N2                                                          DIRECT 
      WRITE(N2) ( GW(J), J = 1, NWING )                                  DIRECT 
      REWIND N2                                                          DIRECT 
      REWIND N3                                                          DIRECT 
C                                                                        DIRECT 
C     FORM VECTOR BCB - ABW * GW                                         DIRECT 
C                                                                        DIRECT 
      CALL TRIXY(N1,N2,N3,NBODY,NWING,1,A,B,P1,600,IRET)                 DIRECT 
      REWIND N3                                                          DIRECT 
      READ(N3) ( A(J), J = 1, NBODY )                                    DIRECT 
      DO 145 I = 1, NBODY                                                DIRECT 
  145 B(I) = BCB(I) - A(I)                                               DIRECT 
      REWIND N2                                                          DIRECT 
      WRITE(N2) ( B(J), J = 1, NBODY )                                   DIRECT 
C                                                                        DIRECT 
C     CALCULATE BODY PANEL SINGULARITY STRENGTHS                         DIRECT 
C     AND STORE IN VECTOR,  GB                                           DIRECT 
C                                                                        DIRECT 
      CALL XFER(N5,N1,NBODY,NBODY,A)                                     DIRECT 
      REWIND N2                                                          DIRECT 
      REWIND N3                                                          DIRECT 
      CALL TRIXY(N1,N2,N3,NBODY,NBODY,1,A,B,P1,600,IRET)                 DIRECT 
      REWIND N3                                                          DIRECT 
      READ(N3) ( GB(J), J = 1, NBODY )                                   DIRECT 
  999 CONTINUE                                                           DIRECT 
C                                                                        DIRECT 
C     WRITE INV(AWW) OR INV(AR) ON UNIT N5 ( IN COLUMN SORT ) IF         DIRECT 
C     FIRST TIME THROUGH SUBROUTINE DIRECT FOR CURRENT MACH NUMBER       DIRECT 
C                                                                        DIRECT 
      IF( IDIR .EQ. 1 ) GO TO 160                                        DIRECT 
      REWIND N10                                                         DIRECT 
      DO 150 I = 1, NWING                                                DIRECT 
      READ(N10) ( A(J), J = 1, NWING )                                   DIRECT 
  150 WRITE(N5) ( A(J), J = 1, NWING )                                   DIRECT 
      IDIR = 1                                                           DIRECT 
  160 CONTINUE                                                           DIRECT 
      RETURN                                                             DIRECT 
      END                                                                DIRECT 
      SUBROUTINE PCONST                                                  PCONST 
      COMMON / PARAM / NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA         PCONST 
      COMMON/ POINT / ARRAY(6000)                                        PCONST 
      DIMENSION AREA(600), XBAR(600)                                     PCONST 
      DIMENSION RHS(600)                                                 PCONST 
      EQUIVALENCE ( ARRAY(4801),AREA(1)), ( ARRAY(1), XBAR(1) )          PCONST 
      COMMON / TAPES / ITAPES(20)                                        PCONST 
      COMMON/ DES / CLBAR, CMBAR                                         PCONST 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP PCONST 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       PCONST 
      INTEGER COMPT,PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE PCONST 
     18,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,FFILE            PCONST 
      COMMON /OPTION/ NOPT(10),NXSTNS,XSTN(20),XAPEX,YAPEX,XLAMDA        OPTION 
      COMMON/ SCRAT / BLOCK(7500)                                        PCONST 
      DIMENSION A(1202), B(1202), C(1202)                                PCONST 
      DIMENSION XP(600),YP(600),ZP(600),ETAC(80),DCPC(80),ATITL(20)      PCONST 
      COMMON/NEWCOM/KDUM(9),KFUS,KRADX(4),KFORX(4),KDUMX(27),            PCONST 
     1              NCPT,LOCPT(20),XCPT(20)                              PCONST 
      COMMON/SEG/NSEG,NROW(20),NCOL(20),COSS(20),SINS(20),               PCONST 
     1           BT(20),DUM(20),BL(20)                                   PCONST 
      COMMON/ PSAVE / IFREE(600), CTFREE, CNFREE                         PCONST 
      DIMENSION IPERM(600), PRESS(602)                                   PCONST 
      EQUIVALENCE (BLOCK(1201),A(1)),(BLOCK(2403),B(1))                  PCONST 
     1,(BLOCK(3605),C(1)),(BLOCK(4807),PRESS(1))                         PCONST 
     2,(ARRAY(1),XP(1)),(ARRAY(601),YP(1)),(ARRAY(1201),ZP(1))           PCONST 
      DIMENSION DEL(600),COSTH(600)                                      NEWSHLC
      EQUIVALENCE (ARRAY(1801),DEL(1)),(ARRAY(3001),COSTH(1))            NEWSHLC
C                                                                        PCONST 
      COMMON/STAR/XSTAR(3600),NSEGW                                      PCONST 
C     ASSIGN SCRATCH UNITS                                               PCONST 
C                                                                        PCONST 
      N1 = ITAPES(1)                                                     PCONST 
      N2 = ITAPES(2)                                                     PCONST 
      N3 = ITAPES(3)                                                     PCONST 
      N4 = ITAPES(4)                                                     PCONST 
      N5 = ITAPES(5)                                                     PCONST 
      N6 = ITAPES(6)                                                     PCONST 
      N7 = ITAPES(7)                                                     PCONST 
      N8 = ITAPES(8)                                                     PCONST 
      N9 = ITAPES(9)                                                     PCONST 
      N10 = ITAPES(10)                                                   PCONST 
      IN=ITAPES(11)                                                      FIXOPT 
C                                                                        PCONST 
C     READ IN RIGHT HAND SIDE VECTOR                                     PCONST 
C                                                                        PCONST 
      REWIND N10                                                         PCONST 
      READ(N10) ( RHS(J), J = 1, NWING )                                 PCONST 
C                                                                        PCONST 
C     PARTIAL PRESSURE OPTION                                            PCONST 
C                                                                        PCONST 
C     NFIX = NUMBER OF PRESSURE CONSTRAINTS                              PCONST 
C     IFREE(I) = 1, ITH BOX PRESSURE IS FIXED                            PCONST 
C     IFREE(I) = 0, ITH BOX PRESSURE IS VARIABLE                         PCONST 
C                                                                        PCONST 
      IF(NOPT(2).LE.-3) GO TO 180                                        PCONST 
      READ(TAPE5,5) NFIX                                                 PCONST 
      READ(TAPE5,5) ( IPERM(I), I = 1, NFIX )                            PCONST 
    5 FORMAT(10I5)                                                       PCONST 
      READ(TAPE5,10) ( PRESS(I), I = 1, NFIX )                           PCONST 
   10 FORMAT(7E10.2)                                                     PCONST 
      GO TO 210                                                          PCONST 
  180 READ(TAPE5,224) ATITL                                              PCONST 
      WRITE(TAPE6,226) ATITL                                             PCONST 
      READ(TAPE5,228) FCCC,XLAMLE,ETADR,XORIGC,YORIGC                    PCONST 
      WRITE(TAPE6,230)FCCC,XLAMLE,ETADR,XORIGC,YORIGC                    PCONST 
      IFCCC=FCCC                                                         PCONST 
      DO 170 I=1,IFCCC                                                   PCONST 
      READ(TAPE5,228) ETAC(I),DCPC(I)                                    PCONST 
  170 WRITE(TAPE6,232)ETAC(I),DCPC(I)                                    PCONST 
      WRITE(TAPE6,222)                                                   PCONST 
      REWIND TAPE7                                                       PCONST 
      READ(TAPE7) ARRAY                                                  PCONST 
      XLAMLE=0.0174533*XLAMLE                                            PCONST 
      XLAMLE=TAN(XLAMLE)                                                 PCONST 
      NSLOPE=0                                                           PCONST 
      NFIX=0                                                             PCONST 
      NNWG=0                                                             PCONST 
      NNCPT=0                                                            PCONST 
      WRITE(TAPE6,231)                                                   PCONST 
      DO 200 N=1,NSEG                                                    PCONST 
      NC=NCOL(N)                                                         PCONST 
      DO 200 NN=1,NC                                                     PCONST 
      NR=NROW(N)                                                         PCONST 
      NR1=NR+1                                                           PCONST 
      DO 200 NNN=1,NR1                                                   PCONST 
      NNWG=NNWG+1                                                        PCONST 
      IF(NNN.EQ.NR1.AND.LOCPT(N).EQ.0) GO TO 195                         PCONST 
      NNCPT=NNCPT+1                                                      PCONST 
      ETA=1.E10                                                          PCONST 
      IF(N.GT.NSEGW) GO TO 193                                           PCONST 
      ETA=XLAMLE*(YP(NNWG)-YORIGC)/(XP(NNWG)-XORIGC)                     PCONST 
      IF(ETA.LT.0.0.OR.ETA.GT.1.0) ETA=1.0                               PCONST 
      IF(ETA.LE.ETADR) GO TO 193                                         PCONST 
      NFIX=NFIX+1                                                        PCONST 
      IPERM(NFIX)=NNCPT                                                  PCONST 
      CALL INTERP(ETA,CPPRES,IFCCC,ETAC,DCPC)                            PCONST 
      PRESS(NFIX)=CPPRES                                                 PCONST 
      WRITE(TAPE6,234) NNCPT,XP(NNWG),YP(NNWG),ETA,CPPRES                PCONST 
      GO TO 195                                                          PCONST 
  193 CONTINUE                                                           PCONST 
      WRITE(TAPE6,236) NNCPT,XP(NNWG),YP(NNWG),ETA                       PCONST 
  195 CONTINUE                                                           PCONST 
      IF(NNN.EQ.NR1) WRITE(6,238)                                        PCONST 
  200 CONTINUE                                                           PCONST 
  220 FORMAT(I5,2F10.5)                                                  PCONST 
  222 FORMAT(///)                                                        PCONST 
  224 FORMAT(20A4)                                                       PCONST 
  226 FORMAT(//10X,29HCONICAL CAMBER PANEL DESIGN   //10X,               PCONST 
     1 5HINPUT ,2X,20A4/)                                                PCONST 
  228 FORMAT(8F10.5)                                                     PCONST 
  230 FORMAT(/9X,5HFCCCC,9X,6HXLAMLE,11X,5HETADR,9X,                     PCONST 
     1 6HXORIGC,9X,6HYORIGC/5F15.5//16X,3HETA,17X,3HDCP)                 PCONST 
  231 FORMAT(//2X,5HPANEL,9X,1HX,15X,1HY,13X,3HETA,9X,8HPRESSURE)        PCONST 
  232 FORMAT(10X,F10.5,10X,F10.5)                                        PCONST 
  234 FORMAT(I5,5(2X,F13.5))                                             PCONST 
  236 FORMAT(I5,3(2X,F13.5),15X,1(2X,F13.5))                             PCONST 
  238 FORMAT(/)                                                          PCONST 
C                                                                        PCONST 
      REWIND IN                                                          FIXOPT 
      READ(IN) ARRAY                                                     FIXOPT 
      READ(IN) XBAR                                                      FIXOPT 
      REWIND TAPE11                                                      FIXOPT 
      READ(TAPE11) DEL,COSTH                                             FIXOPT 
  210 CONTINUE                                                           PCONST 
C                                                                        PCONST 
C                                                                        PCONST 
C     SET UP IFREE AND IPERM VECTORS                                     PCONST 
C                                                                        PCONST 
      DO 15 I = 1, NWING                                                 PCONST 
   15 IFREE(I) = 0                                                       PCONST 
      DO 20 I = 1, NFIX                                                  PCONST 
      J = IPERM(I)                                                       PCONST 
   20 IFREE(J) = 1                                                       PCONST 
      I1 = 0                                                             PCONST 
      I2 = NFIX                                                          PCONST 
      DO 30 I = 1, NWING                                                 PCONST 
      IF( IFREE(I) .EQ. 0 ) GO TO 25                                     PCONST 
      I1 = I1 + 1                                                        PCONST 
      IPERM(I1) = I                                                      PCONST 
      GO TO 30                                                           PCONST 
   25 I2 = I2 + 1                                                        PCONST 
      IPERM(I2) = I                                                      PCONST 
   30 CONTINUE                                                           PCONST 
C                                                                        PCONST 
C     IPERM VECTOR ORDERS DRAG MATRIX, CONSTRAINED BOXES FIRST           PCONST 
C                                                                        PCONST 
      IF(NOPT(2).EQ.-3) NOPT(2)=-1                                       NEWSHLC
      IF(NOPT(2).EQ.-4) NOPT(2)=-2                                       NEWSHLC
      NUM = NWING + IABS( NOPT(2))                                       PCONST 
      NF1 = NFIX + 1                                                     PCONST 
      REWIND N1                                                          PCONST 
      REWIND N8                                                          PCONST 
      REWIND N3                                                          PCONST 
      REWIND N4                                                          PCONST 
      DO 60 I = 1, NWING                                                 PCONST 
      READ(N1) ( A(J), J = 1, NWING )                                    PCONST 
      READ(N8) ( B(J), J = 1, NWING )                                    PCONST 
      IF( IFREE(I) .NE. 0 ) GO TO 60                                     PCONST 
      DO 40 J = 1, NWING                                                 PCONST 
      IF( IFREE(J) .NE. 0 ) GO TO 35                                     PCONST 
      C(J) = A(J) + B(J)                                                 PCONST 
      GO TO 40                                                           PCONST 
   35 C(J) = A(J)                                                        PCONST 
      IF( NOPT(5) .EQ. 0 ) GO TO 40                                      PCONST 
      C(J) = C(J) + B(J)                                                 PCONST 
   40 CONTINUE                                                           PCONST 
      B(NWING+1) = AREA(I) * COSTH(I)                                    NEWSHLC
      B(NWING+2) = AREA(I) * COSTH(I) * XBAR(I)                          NEWSHLC
      DO 50 J = 1, NWING                                                 PCONST 
      IP = IPERM(J)                                                      PCONST 
   50 B(J) = C(IP)                                                       PCONST 
      WRITE(N3) ( B(J), J = 1, NFIX )                                    PCONST 
      WRITE(N4) ( B(J), J = NF1, NUM )                                   PCONST 
   60 CONTINUE                                                           PCONST 
      DO 70 I = 1, NWING                                                 PCONST 
      IP = IPERM(I)                                                      PCONST 
      A(I) = AREA(IP) * COSTH(IP)                                        NEWSHLC
   70 B(I) = AREA(IP) * COSTH(IP) * XBAR(IP)                             NEWSHLC
      A(NWING + 1) = 0.0                                                 PCONST 
      A(NWING + 2) = 0.0                                                 PCONST 
      B(NWING + 1) = 0.0                                                 PCONST 
      B(NWING + 2) = 0.0                                                 PCONST 
      WRITE(N3) ( A(J), J = 1, NFIX )                                    PCONST 
      WRITE(N4) ( A(J), J = NF1, NUM )                                   PCONST 
      WRITE(N3) ( B(J), J = 1, NFIX )                                    PCONST 
      WRITE(N4) ( B(J), J = NF1, NUM )                                   PCONST 
C                                                                        PCONST 
C     CALCULATE UNCONSTRAINED PRESSURES FOR OPTIMUM DRAG                 PCONST 
C     OF FREE WING BOXES                                                 PCONST 
C                                                                        PCONST 
      NFREE = NWING - NFIX                                               PCONST 
      NX = NFREE + IABS( NOPT(2))                                        PCONST 
      REWIND N4                                                          PCONST 
      CALL INV(NX,N4,N1,N2,N6,N7,N8,N9,N10,1202,A,B,1)                   PCONST 
C                                                                        PCONST 
C     INV( A22) IN ROW SORT ON UNIT N1                                   PCONST 
C                                                                        PCONST 
      NF = 0                                                             PCONST 
      DO 80 I = 1, NWING                                                 PCONST 
      IF( IFREE(I) .EQ. 1 ) GO TO 80                                     PCONST 
      NF = NF + 1                                                        PCONST 
      B(NF) = RHS(I)                                                     PCONST 
   80 CONTINUE                                                           PCONST 
      B( NFREE + 1 ) = CLBAR * REFA                                      PCONST 
      B( NFREE + 2 ) = CMBAR * CLBAR * REFA                              PCONST 
C                                                                        PCONST 
C     FORM COLUMN VECTOR (B) = ( (B) - ( A21) * (PRESS) )                PCONST 
C                                                                        PCONST 
      REWIND N3                                                          PCONST 
      DO 85 I = 1, NX                                                    PCONST 
      READ(N3) (A(J) , J = 1, NFIX )                                     PCONST 
      SUM = 0.0                                                          PCONST 
      C(I) = SOSCAP(A,PRESS,SUM,NFIX,1,1,1,1)                            PCONST 
   85 B(I) = B(I) - C(I)                                                 PCONST 
C                                                                        PCONST 
C     FORM INV( A22) * ( B )                                             PCONST 
C                                                                        PCONST 
      REWIND N1                                                          PCONST 
      DO 90 I = 1, NX                                                    PCONST 
      READ(N1) ( C(J) , J = 1, NX )                                      PCONST 
      SUM = 0.0                                                          PCONST 
   90 A(I) = SOSCAP(C,B,SUM,NX,1,1,1,1)                                  PCONST 
C                                                                        PCONST 
C     REORDER WING PRESSURES                                             PCONST 
C                                                                        PCONST 
      I1 = 0                                                             PCONST 
      I2 = 0                                                             PCONST 
      DO 105 I = 1, NWING                                                PCONST 
      IF( IFREE(I) .EQ. 1 ) GO TO 95                                     PCONST 
      I1 = I1 + 1                                                        PCONST 
      C(I) = A(I1)                                                       PCONST 
      GO TO 105                                                          PCONST 
   95 CONTINUE                                                           PCONST 
      I2 = I2 + 1                                                        PCONST 
  100 C(I) = PRESS(I2)                                                   PCONST 
  105 CONTINUE                                                           PCONST 
      RETURN                                                             PCONST 
      END                                                                PCONST 
      SUBROUTINE INTPOL(RATIOX,RATIOD)                                   INTPOL 
      COMMON/FILES/TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,      INTPOL 
     1TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                    INTPOL 
      INTEGER COMPT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,     INTPOL 
     1TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                    INTPOL 
      COMMON/ POINT/ ARRAY(6000)                                         INTPOL 
      COMMON/ ROWS / NWCOL, NWRPC(20)                                    INTPOL 
      COMMON/ DESIGN / CAMBER(600)                                       INTPOL 
      COMMON/ NEWCAM / CAMMID(600)                                       INTPOL 
      DIMENSION CHORD(600)                                               INTPOL 
      EQUIVALENCE ( ARRAY(3601),CHORD(1))                                INTPOL 
      R = RATIOD - RATIOX                                                INTPOL 
      RR = - R                                                           INTPOL 
      J = 0                                                              INTPOL 
      DO 400 M = 1, NWCOL                                                INTPOL 
      NR = NWRPC(M)                                                      INTPOL 
      J = J + 1                                                          INTPOL 
      CAMMID(J) = CAMBER(J)+R*(CAMBER(J+1)-CAMBER(J))/(1.+RATIOX         INTPOL 
     1*(CHORD(J+1)/CHORD(J)-1.))                                         INTPOL 
      DO 100 I = 2, NR                                                   INTPOL 
      J = J + 1                                                          INTPOL 
      CR = CHORD(J)/CHORD(J-1)                                           INTPOL 
      CAMMID(J) = CAMBER(J)+CR*R*(CAMBER(J)-CAMBER(J-1))/(1.+            INTPOL 
     1RATIOX*(CR-1.))                                                    INTPOL 
  100 CONTINUE                                                           INTPOL 
  400 CONTINUE                                                           INTPOL 
      WRITE(TAPE6,500)                                                   INTPOL 
500   FORMAT(1H1,/,45H WING CAMBER SLOPES AT 75 PERCENT PANEL CHORD,/)   NEWSHLC
      CALL OUTW(TAPE6,CAMMID)                                            INTPOL 
      RETURN                                                             INTPOL 
      END                                                                INTPOL 
      SUBROUTINE SHAPE                                                   SHAPE
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP SHAPE
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       SHAPE
      INTEGER COMPT,PRINT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE SHAPE
     18,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,FFILE            SHAPE
      COMMON /PARAM/ NBODY,NWING,NTAIL,LBC,THK,MACH,ALPHA,REFA           SHAPE
      COMMON/ DESIGN / CAMBER(600)                                       SHAPE
      COMMON/ ROWS / NWCOL, NWRPC(20)                                    SHAPE
      COMMON/ POINT / ARRAY(6000)                                        SHAPE
      DIMENSION ALPHAC(600), CHORD(600), CSHAPE(600)                     SHAPE
      DIMENSION TWIST(20), CHORDL(20)                                    SHAPE
      EQUIVALENCE ( ARRAY(1),ALPHAC(1)),(ARRAY(601),CSHAPE(1))           SHAPE
     1,(ARRAY(3601),CHORD(1)),(ARRAY(1201),TWIST(1))                     SHAPE
     2,(ARRAY(1221),CHORDL(1))                                           SHAPE
C                                                                        SHAPE
C     SUBROUTINE DETERMINES CAMBER SHAPE,TWIST,AND CHORD LENGTHS -       SHAPE
C     CORRESPONDES TO - CAMBER - IN A17 ( WOODWARD 1 PROGRAM )           SHAPE
C                                                                        SHAPE
      REWIND TAPE7                                                       SHAPE
      READ(TAPE7) ARRAY, CHORD                                           SHAPE
      KKK = 0                                                            SHAPE
      KK = 0                                                             SHAPE
      K = 0                                                              SHAPE
      DO 400 NCT = 1, NWCOL                                              SHAPE
      NR = NWRPC(NCT)                                                    SHAPE
      CHORDL(NCT) = 0.0                                                  SHAPE
      DO 200 I = 1, NR                                                   SHAPE
      K = K + 1                                                          SHAPE
  200 CHORDL(NCT) = CHORDL(NCT) + CHORD(K)                               SHAPE
      SUM = 0.0                                                          SHAPE
      DO 310 I = 1, NR                                                   SHAPE
      KK = KK + 1                                                        SHAPE
  310 SUM = SUM + CAMBER(KK) * CHORD(KK) / CHORDL(NCT)                   SHAPE
      TWIST(NCT) = - SUM                                                 SHAPE
      SUM = 0.0                                                          SHAPE
      DO 320 I = 1, NR                                                   SHAPE
      KKK = KKK + 1                                                      SHAPE
      ALPHAC(KKK) = CAMBER(KKK) + TWIST(NCT)                             SHAPE
      SUM = SUM + ALPHAC(KKK) * CHORD(KKK)/ CHORDL(NCT)                  SHAPE
  320 CSHAPE(KKK) = SUM                                                  SHAPE
  400 CONTINUE                                                           SHAPE
      WRITE(TAPE6,6055)                                                  SHAPE
      WRITE(TAPE6,6000)(CHORDL(I),I=1,NWCOL)                             SHAPE
      WRITE(TAPE6,6082)                                                  SHAPE
      WRITE(TAPE6,6000)(TWIST(I),I=1,NWCOL)                              SHAPE
      WRITE(TAPE6,6083)                                                  SHAPE
      CALL OUTW(TAPE6,ALPHAC)                                            SHAPE
      WRITE(TAPE6,6084)                                                  SHAPE
      CALL OUTW(TAPE6,CSHAPE)                                            SHAPE
 6000 FORMAT(1H ,F29.5,9F10.5)                                           SHAPE
 6055 FORMAT(1H0/23H  WING CHORD LENGTHS(C),/)                           SHAPE
 6082 FORMAT(1H0/T5,36HTANGENT OF THE LOCAL INCIDENCE ANGLE,/)           SHAPE
 6083 FORMAT(1H0/T5,12HCAMBER SLOPE)                                     SHAPE
 6084 FORMAT(1H0/T5,12HCAMBER SHAPE)                                     SHAPE
      RETURN                                                             SHAPE
      END                                                                SHAPE
      OVERLAY(LWB,4,0)                                                   CONPLT 
C     OVERLAY(LWB,4,0)                                                   CONPLT 
      PROGRAM CONPLT                                                     CONPLT 
C                                                                        CONPLT 
C     *******************************************VERSION B00************ CONPLT 
C                                                                        CONPLT 
C                                                                        CONPLT 
C     PROGRAM TO SELECT PROPER PLOT CONTROL PROGRAM                      CONPLT 
C                                                                        CONPLT 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP CONPLT 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       CONPLT 
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P CONPLT 
     1LOTSZ,TYPE,KODE                                                    CONPLT 
      COMMON /LWB/ LWB                                                   CONPLT 
      COMMON /GRAPH/ PLOT                                                CONPLT 
      COMMON /CONPLT/ KONPLT                                             CONPLT 
      COMMON /PTYPE/ ORT,VU3,STE,PER                                     CONPLT 
C                                                                        CONPLT 
      INTEGER PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9 CONPLT 
     1,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15,FFILE                   CONPLT 
C                                                                        CONPLT 
      IF (KONPLT.EQ.0) GO TO 10                                          CONPLT 
      IF (KONPLT.EQ.1) GO TO 60                                          CONPLT 
10    IF (PLOT) 20,70,40                                                 CONPLT 
C                                                                        CONPLT 
C     COMPUTE AND SAVE GEOMETRY PANEL PLOTTING INFORMATION               CONPLT 
C                                                                        CONPLT 
20    CALL OVERLAY (LWB,4,1)                                             CONPLT 
30    READ (TAPE13,80) HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG, CONPLT 
     1PLOTSZ,TYPE,KODE                                                   CONPLT 
C                                                                        CONPLT 
C     GENERATE ORTHOGRAPHIC AND THREE VIEW PLOTS                         CONPLT 
C                                                                        CONPLT 
      IF (TYPE.EQ.ORT.OR.TYPE.EQ.VU3) CALL OVERLAY (LWB,4,2)             CONPLT 
C                                                                        CONPLT 
C     GENERATE PERSPECTIVE AND STEREOSCOPIC PLOTS                        CONPLT 
C                                                                        CONPLT 
      IF (TYPE.EQ.STE.OR.TYPE.EQ.PER) CALL OVERLAY (LWB,4,3)             CONPLT 
      IF (KODE.EQ.0) GO TO 30                                            CONPLT 
40    IF (PLOT.LT.0) PLOT=-PLOT                                          CONPLT 
      REWIND TAPE12                                                      CONPLT 
C                                                                        CONPLT 
C     COMPUTE AND SAVE SINGULARITY PANEL PLOTTING INFORMATION            CONPLT 
C                                                                        CONPLT 
      CALL OVERLAY (LWB,4,4)                                             CONPLT 
50    READ (TAPE13,80) HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG, CONPLT 
     1PLOTSZ,TYPE,KODE                                                   CONPLT 
      REWIND TAPE11                                                      CONPLT 
      READ (TAPE11) J0,J1,J2,J3,J4,J5,J6                                 CONPLT 
C                                                                        CONPLT 
C     GENERATE ORTHOGRAPHIC AND THREE VIEW PLOTS                         CONPLT 
C                                                                        CONPLT 
      IF (TYPE.EQ.ORT.OR.TYPE.EQ.VU3) CALL OVERLAY (LWB,4,2)             CONPLT 
C                                                                        CONPLT 
C     GENERATE PERSPECTIVE AND STEREOSCOPIC PLOTS                        CONPLT 
C                                                                        CONPLT 
      IF (TYPE.EQ.STE.OR.TYPE.EQ.PER) CALL OVERLAY (LWB,4,3)             CONPLT 
      IF (KODE.EQ.0) GO TO 50                                            CONPLT 
      REWIND TAPE11                                                      CONPLT 
      GO TO 70                                                           CONPLT 
60    CONTINUE                                                           CONPLT 
C                                                                        CONPLT 
C     GENERATE PLOTS OF PRESSURE DISTRIBUTION                            CONPLT 
C                                                                        CONPLT 
      CALL OVERLAY (LWB,4,5)                                             CONPLT 
70    CONTINUE                                                           CONPLT 
C                                                                        CONPLT 
C                                                                        CONPLT 
C                                                                        CONPLT 
80    FORMAT (2(A1,1X),A3,9F5.0,A3,16X,I1)                               CONPLT 
      END                                                                CONPLT 
      SUBROUTINE AXES(XP,YP,ANG,AXLEN,FIRST,DELTAV,XDUM1,                AXES 
     1 XDUM2,IBCD,SIZE,NCHAR)                                            AXES 
      DIMENSION IBCD(1)                                                  AXES 
      CALL AXIS(XP,YP,IBCD,NCHAR,AXLEN,ANG,FIRST,DELTAV)                 AXES 
      RETURN                                                             AXES 
      END                                                                AXES 
      SUBROUTINE GRID(X1,Y1,X2,Y2,NX,NY)                                 GRID 
      RETURN                                                             GRID 
      END                                                                GRID 
      SUBROUTINE LINPLT(X,Y,N,INC,IDUM,ISYM,ICON,JDUM)                   LINPLT 
      DIMENSION X(1),Y(1)                                                LINPLT 
      CALL LINE(X,Y,N,INC,0,0)                                           LINPLT 
      RETURN                                                             LINPLT 
      END                                                                LINPLT 
      SUBROUTINE PNTPLT(X,Y,ISYM,ISIZE)                                  PNTPLT 
      HEIGHT=0.1*ISIZE                                                   PNTPLT 
      CALL SYMBOL(X,Y,HEIGHT,ISYM+2,0.,1)                                PNTPLT 
      RETURN                                                             PNTPLT 
      END                                                                PNTPLT 
      SUBROUTINE XYLINE(XVEC,YVEC,NPT,IA,IB,IC,ID)                       XYLINE 
      DIMENSION XVEC(1),YVEC(1)                                          XYLINE 
      CALL LINE(XVEC,YVEC,NPT,IA,0,0)                                    XYLINE 
      RETURN                                                             XYLINE 
      END                                                                XYLINE 
      OVERLAY(LWB,4,1)                                                   GPLTSV 
C     OVERLAY(LWB,4,1)                                                   GPLTSV 
      PROGRAM GPLTSV                                                     GPLTSV 
C                                                                        GPLTSV 
C     *******************************************VERSION B00************ GPLTSV 
C                                                                        GPLTSV 
C                                                                        GPLTSV 
C     SAVE GEOMETRY PANELING PLOT INFORMATION                            GPLTSV 
C                                                                        GPLTSV 
C     BASED ON PROGRAM START OF NASA TMX-2074.                           GPLTSV 
C                                                                        GPLTSV 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP GPLTSV 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       GPLTSV 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR GPLTSV 
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  GPLTSV 
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P GPLTSV 
     1LOTSZ,TYPE,KODE,XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,XMID,YMID,ZMID,BIGD, GPLTSV 
     2ISP                                                                GPLTSV 
      COMMON /ONE/ NAN2                                                  GPLTSV 
      COMMON /SCRAT/ BLOCK(7500)                                         GPLTSV 
      COMMON /PI/ PI,RADEG,DEGRAD                                        GPLTSV 
C                                                                        GPLTSV 
      DIMENSION XAF(30), WAFORG(20,4), WAFORD(20,3,30), TZORD(20,30), WA GPLTSV 
     1FOR(20,30), XFUS(30,4), ZFUS(30,4), FUSARD(30,4), FUSRAD(30,4), SF GPLTSV 
     2US(30,30,8), PODORG(9,3), XPOD(9,30), PODORD(9,30), XPOD1(9,30), F GPLTSV 
     3INORG(6,2,4), XFIN(6,10), FINORD(6,2,10), FINX2(6,2,10), FINX3(6,2 GPLTSV 
     4,10), FINOR(6,10), FINCR(6,10), CANORG(6,2,4), XCAN(6,10), CANORD( GPLTSV 
     56,2,10), CANOR1(6,2,10), CANORX(6,2,10), CANOR(6,10), CANCR(6,10), GPLTSV 
     6 ALRT(31,3,2), VECRT(30,3), ANSIN(30), ANCOS(30)                   GPLTSV 
C                                                                        GPLTSV 
      EQUIVALENCE (BLOCK(1),XFUS(1)), (BLOCK(121),ZFUS(1)), (BLOCK(241), GPLTSV 
     1FUSARD(1)), (BLOCK(361),FUSRAD(1)), (BLOCK(241),SFUS(1)), (BLOCK(1 GPLTSV 
     2),PODORG(1)), (BLOCK(28),XPOD(1)), (BLOCK(298),PODORD(1)), (BLOCK( GPLTSV 
     3568),XPOD1(1)), (BLOCK(1),XAF(1)), (BLOCK(31),WAFORG(1)), (BLOCK(1 GPLTSV 
     411),WAFORD(1)), (BLOCK(1911),TZORD(1)), (BLOCK(2511),WAFOR(1)), (B GPLTSV 
     5LOCK(1),FINORG(1)), (BLOCK(49),XFIN(1)), (BLOCK(109),FINORD(1)), ( GPLTSV 
     6BLOCK(229),FINX2(1)), (BLOCK(349),FINX3(1)), (BLOCK(469),FINOR(1)) GPLTSV 
     7, (BLOCK(529),FINCR(1)), (BLOCK(1),CANORG(1)), (BLOCK(49),XCAN(1)) GPLTSV 
     8, (BLOCK(109),CANORD(1)), (BLOCK(229),CANOR1(1)), (BLOCK(349),CANO GPLTSV 
     9RX(1)), (BLOCK(469),CANOR(1)), (BLOCK(529),CANCR(1))               GPLTSV 
C                                                                        GPLTSV 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE GPLTSV 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              GPLTSV 
C                                                                        GPLTSV 
      PI2=PI*2.                                                          GPLTSV 
      PI32=PI*(3./2.)                                                    GPLTSV 
C                                                                        GPLTSV 
C     WING                                                               GPLTSV 
C                                                                        GPLTSV 
      READ (TAPE11) J0,J1,J2,J3,J4,J5,J6                                 GPLTSV 
      IF (J1.EQ.0) GO TO 180                                             GPLTSV 
      READ (TAPE3) BLOCK                                                 GPLTSV 
      XMIN=WAFORG(1,1)                                                   GPLTSV 
      XMAX=WAFORG(1,1)                                                   GPLTSV 
      YMAX=WAFORG(1,2)                                                   GPLTSV 
      ZMIN=WAFORD(1,1,1)                                                 GPLTSV 
      ZMAX=WAFORD(1,1,1)                                                 GPLTSV 
      DO 20 N=1,NWAF                                                     GPLTSV 
      XMAX=AMAX1(XMAX,WAFORD(N,3,NW))                                    GPLTSV 
      XMIN=AMIN1(XMIN,WAFORD(N,3,1))                                     GPLTSV 
      YMAX=AMAX1(YMAX,WAFORG(N,2))                                       GPLTSV 
      DO 10 NN=1,NW                                                      GPLTSV 
      ZMAX=AMAX1(ZMAX,WAFORD(N,1,NN))                                    GPLTSV 
      ZMIN=AMIN1(ZMIN,WAFORD(N,2,NN))                                    GPLTSV 
10    CONTINUE                                                           GPLTSV 
20    CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     WRITE PLOT TAPE                                                    GPLTSV 
C                                                                        GPLTSV 
      NL1=NWAF-1                                                         GPLTSV 
      NE1=NW-1                                                           GPLTSV 
C                                                                        GPLTSV 
C     SETUP FIRST LINE IN STREAMWISE DIRECTION                           GPLTSV 
C                                                                        GPLTSV 
      DO 170 I=1,2                                                       GPLTSV 
      DO 30 N=1,NW                                                       GPLTSV 
      ALRT(N,1,2)=WAFORD(1,3,N)                                          GPLTSV 
      ALRT(N,2,2)=WAFORG(1,2)                                            GPLTSV 
      ALRT(N,3,2)=WAFORD(1,I,N)                                          GPLTSV 
30    CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NW),N3=1,3)                      GPLTSV 
      DO 90 NN=2,NWAF                                                    GPLTSV 
      DO 40 N=1,NW                                                       GPLTSV 
      DO 40 N3=1,3                                                       GPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          GPLTSV 
40    CONTINUE                                                           GPLTSV 
      DO 50 N=1,NW                                                       GPLTSV 
      ALRT(N,1,2)=WAFORD(NN,3,N)                                         GPLTSV 
      ALRT(N,2,2)=WAFORG(NN,2)                                           GPLTSV 
      ALRT(N,3,2)=WAFORD(NN,I,N)                                         GPLTSV 
50    CONTINUE                                                           GPLTSV 
      IF(I.EQ.2) GO TO 70                                                GPLTSV 
60    CALL SURCC (NW,ALRT,VECRT)                                         GPLTSV 
      GO TO 80                                                           GPLTSV 
70    CALL SURCL (NW,ALRT,VECRT)                                         GPLTSV 
80    CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NE1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NW),N3=1,3)                      GPLTSV 
90    CONTINUE                                                           GPLTSV 
      DO 100 N=1,NWAF                                                    GPLTSV 
C                                                                        GPLTSV 
C     SETUP FIRST LINE IN SPANWISE DIRECTION                             GPLTSV 
C                                                                        GPLTSV 
      ALRT(N,1,2)=WAFORD(N,3,1)                                          GPLTSV 
      ALRT(N,2,2)=WAFORG(N,2)                                            GPLTSV 
      ALRT(N,3,2)=WAFORD(N,I,1)                                          GPLTSV 
100   CONTINUE                                                           GPLTSV 
      WRITE(TAPE12)((ALRT(N,N3,2),N=1,NWAF),N3=1,3)                      GPLTSV 
      DO 160 NN=2,NW                                                     GPLTSV 
      DO 110 N=1,NWAF                                                    GPLTSV 
      DO 110 N3=1,3                                                      GPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          GPLTSV 
110   CONTINUE                                                           GPLTSV 
      DO 120 N=1,NWAF                                                    GPLTSV 
      ALRT(N,1,2)=WAFORD(N,3,NN)                                         GPLTSV 
      ALRT(N,2,2)=WAFORG(N,2)                                            GPLTSV 
      ALRT(N,3,2)=WAFORD(N,I,NN)                                         GPLTSV 
120   CONTINUE                                                           GPLTSV 
      IF(I.EQ.2) GO TO 140                                               GPLTSV 
130   CALL SURCL (NWAF,ALRT,VECRT)                                       GPLTSV 
      GO TO 150                                                          GPLTSV 
140   CALL SURCC (NWAF,ALRT,VECRT)                                       GPLTSV 
150   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NWAF),N3=1,3)                    GPLTSV 
160   CONTINUE                                                           GPLTSV 
170   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     FUSELAGE (BODY)                                                    GPLTSV 
C                                                                        GPLTSV 
180   IF (J2.EQ.0) GO TO 460                                             GPLTSV 
      READ (TAPE3) BLOCK                                                 GPLTSV 
C                                                                        GPLTSV 
C     MAXIMA AND MINIMA                                                  GPLTSV 
C                                                                        GPLTSV 
      IF (J1.NE.0) GO TO 200                                             GPLTSV 
      XMIN=XFUS(1,1)                                                     GPLTSV 
      XMAX=XFUS(1,1)                                                     GPLTSV 
      IF (J2TEST.EQ.3) GO TO 190                                         GPLTSV 
      YMAX=FUSRAD(1,1)                                                   GPLTSV 
      ZMIN=-FUSRAD(1,1)+ZFUS(1,1)                                        GPLTSV 
      ZMAX=FUSRAD(1,1)+ZFUS(1,1)                                         GPLTSV 
      GO TO 200                                                          GPLTSV 
190   YMAX=SFUS(1,1,1)                                                   GPLTSV 
      ZMIN=SFUS(1,1,2)                                                   GPLTSV 
      ZMAX=SFUS(1,1,2)                                                   GPLTSV 
200   DO 240 N=1,NFUS                                                    GPLTSV 
      NRAD=NRADX(N)                                                      GPLTSV 
      NFUSOR=NFORX(N)                                                    GPLTSV 
      XMIN=AMIN1(XMIN,XFUS(1,N))                                         GPLTSV 
      XMAX=AMAX1(XMAX,XFUS(NFUSOR,N))                                    GPLTSV 
      DO 230 NN=1,NFUSOR                                                 GPLTSV 
      IF (J2TEST.EQ.3) GO TO 210                                         GPLTSV 
      YMAX=AMAX1(YMAX,FUSRAD(NN,N))                                      GPLTSV 
      ZMAX=AMAX1(ZMAX,FUSRAD(NN,N)+ZFUS(NN,N))                           GPLTSV 
      ZMIN=AMIN1(ZMIN,-FUSRAD(NN,N)+ZFUS(NN,N))                          GPLTSV 
      GO TO 230                                                          GPLTSV 
210   KK=1+(N-1)*2                                                       GPLTSV 
      DO 220 NR=1,NRAD                                                   GPLTSV 
      YMAX=AMAX1(YMAX,SFUS(NR,NN,KK))                                    GPLTSV 
      ZMIN=AMIN1(ZMIN,SFUS(NR,NN,KK+1))                                  GPLTSV 
220   ZMAX=AMAX1(ZMAX,SFUS(NR,NN,KK+1))                                  GPLTSV 
230   CONTINUE                                                           GPLTSV 
240   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     WRITE PLOT TAPE                                                    GPLTSV 
C                                                                        GPLTSV 
C                                                                        GPLTSV 
C     SETUP FIRST LINE IN STREAMWISE DIRECTION                           GPLTSV 
C                                                                        GPLTSV 
      DO 450 NFU=1,NFUS                                                  GPLTSV 
      NRAD=NRADX(NFU)                                                    GPLTSV 
      NFUSOR=NFORX(NFU)                                                  GPLTSV 
      NL1=NFUSOR-1                                                       GPLTSV 
      NAN=NRAD                                                           GPLTSV 
      IF (J2TEST.EQ.3) GO TO 260                                         GPLTSV 
      FANG=(NRAD-1)*2                                                    GPLTSV 
      DELE=PI2/FANG                                                      GPLTSV 
      DO 250 N=1,NAN                                                     GPLTSV 
      E=N-1                                                              GPLTSV 
      ANSIN(N)=SIN(E*DELE+PI32)                                          GPLTSV 
250   ANCOS(N)=COS(E*DELE+PI32)                                          GPLTSV 
260   CONTINUE                                                           GPLTSV 
      KK=1+(NFU-1)*2                                                     GPLTSV 
      DO 290 N=1,NFUSOR                                                  GPLTSV 
      ALRT(N,1,2)=XFUS(N,NFU)                                            GPLTSV 
      IF (J2TEST.EQ.3) GO TO 270                                         GPLTSV 
      ALRT(N,2,2)=FUSRAD(N,NFU)*ANCOS(1)                                 GPLTSV 
      ALRT(N,3,2)=FUSRAD(N,NFU)*ANSIN(1)+ZFUS(N,NFU)                     GPLTSV 
      GO TO 280                                                          GPLTSV 
270   ALRT(N,2,2)=SFUS(1,N,KK)                                           GPLTSV 
      ALRT(N,3,2)=SFUS(1,N,KK+1)                                         GPLTSV 
280   CONTINUE                                                           GPLTSV 
290   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NFUSOR),N3=1,3)                  GPLTSV 
      DO 340 NN=2,NAN                                                    GPLTSV 
      DO 300 N=1,NFUSOR                                                  GPLTSV 
      DO 300 N3=1,3                                                      GPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          GPLTSV 
300   CONTINUE                                                           GPLTSV 
      DO 330 N=1,NFUSOR                                                  GPLTSV 
      IF (J2TEST.EQ.3) GO TO 310                                         GPLTSV 
      ALRT(N,2,2)=FUSRAD(N,NFU)*ANCOS(NN)                                GPLTSV 
      ALRT(N,3,2)=FUSRAD(N,NFU)*ANSIN(NN)+ZFUS(N,NFU)                    GPLTSV 
      GO TO 320                                                          GPLTSV 
310   ALRT(N,2,2)=SFUS(NN,N,KK)                                          GPLTSV 
      ALRT(N,3,2)=SFUS(NN,N,KK+1)                                        GPLTSV 
320   CONTINUE                                                           GPLTSV 
330   CONTINUE                                                           GPLTSV 
      CALL SURCL (NFUSOR,ALRT,VECRT)                                     GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NFUSOR),N3=1,3)                  GPLTSV 
340   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     SETUP FIRST LINE AROUND BODY (FUSELAGE)                            GPLTSV 
C                                                                        GPLTSV 
      NRAD=NRADX(NFU)                                                    GPLTSV 
      NFUSOR=NFORX(NFU)                                                  GPLTSV 
      NAN=NRAD                                                           GPLTSV 
      NL1=NAN-1                                                          GPLTSV 
      IF (J2TEST.EQ.3) GO TO 360                                         GPLTSV 
      FANG=(NRAD-1)*2                                                    GPLTSV 
      DELE = PI2/FANG                                                    GPLTSV 
      DO 350 N=1,NAN                                                     GPLTSV 
      E=N-1                                                              GPLTSV 
      ANSIN(N)=SIN(E*DELE+PI32)                                          GPLTSV 
350   ANCOS(N)=COS(E*DELE+PI32)                                          GPLTSV 
360   CONTINUE                                                           GPLTSV 
      KK=1+(NFU-1)*2                                                     GPLTSV 
      DO 390 N=1,NAN                                                     GPLTSV 
      ALRT(N,1,2)=XFUS(1,NFU)                                            GPLTSV 
      IF (J2TEST.EQ.3) GO TO 370                                         GPLTSV 
      ALRT(N,2,2)=FUSRAD(1,NFU)*ANCOS(N)                                 GPLTSV 
      ALRT(N,3,2)=FUSRAD(1,NFU)*ANSIN(N)+ZFUS(1,NFU)                     GPLTSV 
      GO TO 380                                                          GPLTSV 
370   ALRT(N,2,2)=SFUS(N,1,KK)                                           GPLTSV 
      ALRT(N,3,2)=SFUS(N,1,KK+1)                                         GPLTSV 
380   CONTINUE                                                           GPLTSV 
390   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NAN),N3=1,3)                     GPLTSV 
      DO 440 NN=2,NFUSOR                                                 GPLTSV 
      DO 400 N=1,NAN                                                     GPLTSV 
      DO 400 N3=1,3                                                      GPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          GPLTSV 
400   CONTINUE                                                           GPLTSV 
      DO 430 N=1,NAN                                                     GPLTSV 
      ALRT(N,1,2)=XFUS(NN,NFU)                                           GPLTSV 
      IF (J2TEST.EQ.3) GO TO 410                                         GPLTSV 
      ALRT(N,2,2)=FUSRAD(NN,NFU)*ANCOS(N)                                GPLTSV 
      ALRT(N,3,2)=FUSRAD(NN,NFU)*ANSIN(N)+ZFUS(NN,NFU)                   GPLTSV 
      GO TO 420                                                          GPLTSV 
410   ALRT(N,2,2)=SFUS(N,NN,KK)                                          GPLTSV 
      ALRT(N,3,2)=SFUS(N,NN,KK+1)                                        GPLTSV 
420   CONTINUE                                                           GPLTSV 
430   CONTINUE                                                           GPLTSV 
      CALL SURCC (NAN,ALRT,VECRT)                                        GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NAN),N3=1,3)                     GPLTSV 
440   CONTINUE                                                           GPLTSV 
450   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     POD (NACELLE)                                                      GPLTSV 
C                                                                        GPLTSV 
460   IF (J3.EQ.0) GO TO 620                                             GPLTSV 
      READ (TAPE3) BLOCK                                                 GPLTSV 
C                                                                        GPLTSV 
C     COMPUTE ACTUAL X, MINIMUM, MAXIMUM                                 GPLTSV 
C                                                                        GPLTSV 
      DO 470 N=1,NP                                                      GPLTSV 
      DO 470 NN=1,NPODOR                                                 GPLTSV 
470   XPOD1(N,NN)=XPOD(N,NN)+PODORG(N,1)                                 GPLTSV 
      IF (J1.NE.0.OR.J2.NE.0) GO TO 480                                  GPLTSV 
      XMIN=XPOD1(1,1)                                                    GPLTSV 
      XMAX=XPOD1(1,NPODOR)                                               GPLTSV 
      YMAX=PODORG(1,2)+PODORD(1,1)                                       GPLTSV 
      ZMIN=PODORG(1,3)-PODORD(1,1)                                       GPLTSV 
      ZMAX=PODORG(1,3)+PODORD(1,1)                                       GPLTSV 
480   DO 500 N=1,NP                                                      GPLTSV 
      XMIN=AMIN1(XMIN,XPOD1(N,1))                                        GPLTSV 
      XMAX=AMAX1(XMAX,XPOD1(N,NPODOR))                                   GPLTSV 
      DO 490 NN=1,NPODOR                                                 GPLTSV 
      YMAX=AMAX1(YMAX,PODORD(N,NN)+PODORG(N,2))                          GPLTSV 
      ZMIN=AMIN1(ZMIN,PODORG(N,3)-PODORD(N,NN))                          GPLTSV 
490   ZMAX=AMAX1(ZMAX,PODORG(N,3)+PODORD(N,NN))                          GPLTSV 
500   CONTINUE                                                           GPLTSV 
      NANG1=NAN2+1                                                       GPLTSV 
      FANG=NAN2                                                          GPLTSV 
      DELE=PI2/FANG                                                      GPLTSV 
      DO 510 N=1,NANG1                                                   GPLTSV 
      E=N-1                                                              GPLTSV 
      ANSIN(N)=SIN(E*DELE)                                               GPLTSV 
510   ANCOS(N)=COS(E*DELE)                                               GPLTSV 
C                                                                        GPLTSV 
C     WRITE PLOT TAPE                                                    GPLTSV 
C                                                                        GPLTSV 
      NL1=NPODOR-1                                                       GPLTSV 
C                                                                        GPLTSV 
C     SETUP FIRST LINE IN STREAMWISE DIRECTION                           GPLTSV 
C                                                                        GPLTSV 
      DO 560 NP1=1,NP                                                    GPLTSV 
      DO 520 N=1,NPODOR                                                  GPLTSV 
      ALRT(N,1,2)=XPOD(NP1,N)+PODORG(NP1,1)                              GPLTSV 
      ALRT(N,2,2)=PODORD(NP1,N)*ANCOS(1)+PODORG(NP1,2)                   GPLTSV 
      ALRT(N,3,2)=PODORD(NP1,N)*ANSIN(1)+PODORG(NP1,3)                   GPLTSV 
520   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NPODOR),N3=1,3)                  GPLTSV 
      DO 550 NN=2,NANG1                                                  GPLTSV 
      DO 530 N=1,NPODOR                                                  GPLTSV 
      DO 530 N3=1,3                                                      GPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          GPLTSV 
530   CONTINUE                                                           GPLTSV 
      DO 540 N=1,NPODOR                                                  GPLTSV 
      ALRT(N,2,2)=PODORD(NP1,N)*ANCOS(NN)+PODORG(NP1,2)                  GPLTSV 
      ALRT(N,3,2)=PODORD(NP1,N)*ANSIN(NN)+PODORG(NP1,3)                  GPLTSV 
540   CONTINUE                                                           GPLTSV 
      CALL SURCL (NPODOR,ALRT,VECRT)                                     GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NPODOR),N3=1,3)                  GPLTSV 
550   CONTINUE                                                           GPLTSV 
560   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     SETUP FIRST LINE AROUND POD (NACELLE)                              GPLTSV 
C                                                                        GPLTSV 
      NL1=NANG1-1                                                        GPLTSV 
      DO 610 NP1=1,NP                                                    GPLTSV 
      DO 570 N=1,NANG1                                                   GPLTSV 
      M=N                                                                GPLTSV 
      ALRT(M,1,2)=XPOD(NP1,1)+PODORG(NP1,1)                              GPLTSV 
      ALRT(M,2,2)=PODORD(NP1,1)*ANCOS(N)+PODORG(NP1,2)                   GPLTSV 
      ALRT(M,3,2)=PODORD(NP1,1)*ANSIN(N)+PODORG(NP1,3)                   GPLTSV 
570   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NANG1),N3=1,3)                   GPLTSV 
C                                                                        GPLTSV 
      DO 600 NN=2,NPODOR                                                 GPLTSV 
      DO 580 N=1,NANG1                                                   GPLTSV 
      DO 580 N3=1,3                                                      GPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          GPLTSV 
580   CONTINUE                                                           GPLTSV 
      DO 590 N=1,NANG1                                                   GPLTSV 
      M=N                                                                GPLTSV 
      ALRT(M,1,2)=XPOD(NP1,NN)+PODORG(NP1,1)                             GPLTSV 
      ALRT(M,2,2)=PODORD(NP1,NN)*ANCOS(N)+PODORG(NP1,2)                  GPLTSV 
      ALRT(M,3,2)=PODORD(NP1,NN)*ANSIN(N)+PODORG(NP1,3)                  GPLTSV 
590   CONTINUE                                                           GPLTSV 
      CALL SURCC (NANG1,ALRT,VECRT)                                      GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NANG1),N3=1,3)                   GPLTSV 
600   CONTINUE                                                           GPLTSV 
610   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     FIN (VERTICAL TAIL)                                                GPLTSV 
C                                                                        GPLTSV 
620   IF (J4.EQ.0) GO TO 890                                             GPLTSV 
      READ (TAPE3) BLOCK                                                 GPLTSV 
      IF (J1.NE.0.OR.J2.NE.0.OR.J3.NE.0) GO TO 630                       GPLTSV 
      XMIN=FINORG(1,1,1)                                                 GPLTSV 
      XMAX=FINORG(1,1,1)                                                 GPLTSV 
      YMAX=FINORG(1,1,2)                                                 GPLTSV 
      ZMIN=FINORG(1,1,3)                                                 GPLTSV 
      ZMAX=FINORG(1,1,3)                                                 GPLTSV 
630   DO 640 N=1,NF                                                      GPLTSV 
      ZMIN=AMIN1(ZMIN,FINORG(N,1,3))                                     GPLTSV 
      ZMAX=AMAX1(ZMAX,FINORG(N,2,3))                                     GPLTSV 
      DO 640 N2=1,2                                                      GPLTSV 
      XMIN=AMIN1(XMIN,FINORG(N,N2,1))                                    GPLTSV 
      XMAX=AMAX1(XMAX,FINX3(N,N2,NFINOR))                                GPLTSV 
      DO 640 NN=1,NFINOR                                                 GPLTSV 
      YMAX=AMAX1(YMAX,FINORD(N,N2,NN))                                   GPLTSV 
640   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     WRITE PLOT TAPE                                                    GPLTSV 
C                                                                        GPLTSV 
      NL1=NFINOR-1                                                       GPLTSV 
      NOR=2                                                              GPLTSV 
      DO 880 NF1=1,NF                                                    GPLTSV 
      DO 870 I=1,2                                                       GPLTSV 
      DO 670 N=1,NFINOR                                                  GPLTSV 
      ALRT(N,1,2)=FINX3(NF1,1,N)                                         GPLTSV 
      IF (I.EQ.2) GO TO 650                                              GPLTSV 
      ALRT(N,2,2)=FINORD(NF1,1,N)                                        GPLTSV 
      GO TO 660                                                          GPLTSV 
650   ALRT(N,2,2)=FINX2(NF1,1,N)                                         GPLTSV 
660   ALRT(N,3,2)=FINORG(NF1,1,3)                                        GPLTSV 
670   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NFINOR),N3=1,3)                  GPLTSV 
C                                                                        GPLTSV 
C     SETUP LOWER AND UPPER LINES IN STREAMWISE DIRECTION                GPLTSV 
C                                                                        GPLTSV 
      DO 750 NR=2,NOR                                                    GPLTSV 
      DO 680 N=1,NFINOR                                                  GPLTSV 
      DO 680 N3=1,3                                                      GPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          GPLTSV 
680   CONTINUE                                                           GPLTSV 
      DO 710 N=1,NFINOR                                                  GPLTSV 
      ALRT(N,1,2)=FINX3(NF1,NR,N)                                        GPLTSV 
      IF (I.EQ.2) GO TO 690                                              GPLTSV 
      ALRT(N,2,2)=FINORD(NF1,NR,N)                                       GPLTSV 
      GO TO 700                                                          GPLTSV 
690   ALRT(N,2,2)=FINX2(NF1,NR,N)                                        GPLTSV 
700   ALRT(N,3,2)=FINORG(NF1,NR,3)                                       GPLTSV 
710   CONTINUE                                                           GPLTSV 
      IF(I.EQ.2) GO TO 730                                               GPLTSV 
720   CALL SURCL(NFINOR,ALRT,VECRT)                                      GPLTSV 
      GO TO 740                                                          GPLTSV 
730   CALL SURCC(NFINOR,ALRT,VECRT)                                      GPLTSV 
740   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NFINOR),N3=1,3)                  GPLTSV 
750   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     SETUP LINES IN VERTICAL DIRECTION                                  GPLTSV 
C                                                                        GPLTSV 
      DO 780 N=1,NOR                                                     GPLTSV 
      ALRT(N,1,2)=FINX3(NF1,N,1)                                         GPLTSV 
      IF (I.EQ.2) GO TO 760                                              GPLTSV 
      ALRT(N,2,2)=FINORD(NF1,N,1)                                        GPLTSV 
      GO TO 770                                                          GPLTSV 
760   ALRT(N,2,2)=FINX2(NF1,N,1)                                         GPLTSV 
770   ALRT(N,3,2)=FINORG(NF1,N,3)                                        GPLTSV 
780   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NOR),N3=1,3)                     GPLTSV 
      DO 860 NN=2,NFINOR                                                 GPLTSV 
      DO 790 N3=1,3                                                      GPLTSV 
      DO 790 N=1,NOR                                                     GPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          GPLTSV 
790   CONTINUE                                                           GPLTSV 
      NE1=NOR-1                                                          GPLTSV 
      DO 820 N=1,NOR                                                     GPLTSV 
      ALRT(N,1,2)=FINX3(NF1,N,NN)                                        GPLTSV 
      IF (I.EQ.2) GO TO 800                                              GPLTSV 
      ALRT(N,2,2)=FINORD(NF1,N,NN)                                       GPLTSV 
      GO TO 810                                                          GPLTSV 
800   ALRT(N,2,2)=FINX2(NF1,N,NN)                                        GPLTSV 
810   ALRT(N,3,2)=FINORG(NF1,N,3)                                        GPLTSV 
820   CONTINUE                                                           GPLTSV 
      IF(I.EQ.2) GO TO 840                                               GPLTSV 
830   CALL SURCC (NOR,ALRT,VECRT)                                        GPLTSV 
      GO TO 850                                                          GPLTSV 
840   CALL SURCL (NOR,ALRT,VECRT)                                        GPLTSV 
850   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NE1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NOR),N3=1,3)                     GPLTSV 
860   CONTINUE                                                           GPLTSV 
870   CONTINUE                                                           GPLTSV 
880   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     CANARD (HORIZONTAL TAIL)                                           GPLTSV 
C                                                                        GPLTSV 
890   IF (J5.EQ.0) GO TO 1100                                            GPLTSV 
      READ (TAPE3) BLOCK                                                 GPLTSV 
      IF (J1.NE.0.OR.J2.NE.0.OR.J3.NE.0.OR.J4.NE.0) GO TO 900            GPLTSV 
      XMIN=CANORX(1,1,1)                                                 GPLTSV 
      XMAX=CANORX(1,1,NCANOR)                                            GPLTSV 
      YMAX=CANORG(1,2,2)                                                 GPLTSV 
      ZMIN=CANOR1(1,1,1)                                                 GPLTSV 
      ZMAX=CANORD(1,1,1)                                                 GPLTSV 
900   DO 930 NCA=1,NCAN                                                  GPLTSV 
      YMAX=AMAX1(YMAX,CANORG(NCA,2,2))                                   GPLTSV 
      DO 920 N2=1,2                                                      GPLTSV 
      XMIN=AMIN1(XMIN,CANORX(NCA,N2,1))                                  GPLTSV 
      XMAX=AMAX1(XMAX,CANORX(NCA,N2,NCANOR))                             GPLTSV 
      DO 910 NN=1,NCANOR                                                 GPLTSV 
      ZMIN=AMIN1(ZMIN,CANOR1(NCA,N2,NN))                                 GPLTSV 
910   ZMAX=AMAX1(ZMAX,CANORD(NCA,N2,NN))                                 GPLTSV 
920   CONTINUE                                                           GPLTSV 
930   CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     WRITE PLOT TAPE                                                    GPLTSV 
C                                                                        GPLTSV 
      NL1=NC-1                                                           GPLTSV 
C                                                                        GPLTSV 
C     SETUP LOWER AND UPPER LINES IN STREAMWISE DIRECTION                GPLTSV 
C                                                                        GPLTSV 
      DO 1090 NCA=1,NCAN                                                 GPLTSV 
      DO 1080 I=1,2                                                      GPLTSV 
      DO 950 N2=1,2                                                      GPLTSV 
      DO 950 N=1,NC                                                      GPLTSV 
      ALRT(N,1,N2)=CANORX(NCA,N2,N)                                      GPLTSV 
      ALRT(N,2,N2)=CANORG(NCA,N2,2)                                      GPLTSV 
      IF (I.EQ.2) GO TO 940                                              GPLTSV 
      ALRT(N,3,N2)=CANORD(NCA,N2,N)                                      GPLTSV 
      GO TO 950                                                          GPLTSV 
940   ALRT(N,3,N2)=CANOR1(NCA,N2,N)                                      GPLTSV 
950   CONTINUE                                                           GPLTSV 
      IF(I.EQ.2) GO TO 970                                               GPLTSV 
960   CALL SURCC (NC,ALRT,VECRT)                                         GPLTSV 
      GO TO 980                                                          GPLTSV 
970   CALL SURCL (NC,ALRT,VECRT)                                         GPLTSV 
980   CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,1),N=1,NC),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      GPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NC),N3=1,3)                      GPLTSV 
C                                                                        GPLTSV 
C     SETUP LINES IN SPANWISE DIRECTION                                  GPLTSV 
C                                                                        GPLTSV 
      DO 1000 N2=1,2                                                     GPLTSV 
      ALRT(N2,1,2)=CANORX(NCA,N2,1)                                      GPLTSV 
      ALRT(N2,2,2)=CANORG(NCA,N2,2)                                      GPLTSV 
      IF (I.EQ.2) GO TO 990                                              GPLTSV 
      ALRT(N2,3,2)=CANORD(NCA,N2,1)                                      GPLTSV 
      GO TO 1000                                                         GPLTSV 
990   ALRT(N2,3,2)=CANOR1(NCA,N2,1)                                      GPLTSV 
1000  CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) ((ALRT(N2,N3,2),N2=1,2),N3=1,3)                     GPLTSV 
      DO 1070 NN=2,NC                                                    GPLTSV 
      DO 1010 N3=1,3                                                     GPLTSV 
      DO 1010 N2=1,2                                                     GPLTSV 
      ALRT(N2,N3,1)=ALRT(N2,N3,2)                                        GPLTSV 
1010  CONTINUE                                                           GPLTSV 
      DO 1030 N2=1,2                                                     GPLTSV 
      ALRT(N2,1,2)=CANORX(NCA,N2,NN)                                     GPLTSV 
      ALRT(N2,2,2)=CANORG(NCA,N2,2)                                      GPLTSV 
      IF (I.EQ.2) GO TO 1020                                             GPLTSV 
      ALRT(N2,3,2)=CANORD(NCA,N2,NN)                                     GPLTSV 
      GO TO 1030                                                         GPLTSV 
1020  ALRT(N2,3,2)=CANOR1(NCA,N2,NN)                                     GPLTSV 
1030  CONTINUE                                                           GPLTSV 
      IF(I.EQ.2) GO TO 1050                                              GPLTSV 
1040  CALL SURCL (2,ALRT,VECRT)                                          GPLTSV 
      GO TO 1060                                                         GPLTSV 
1050  CALL SURCC (2,ALRT,VECRT)                                          GPLTSV 
1060  CONTINUE                                                           GPLTSV 
      WRITE (TAPE12) (VECRT(1,N3),N3=1,3)                                GPLTSV 
      WRITE (TAPE12) ((ALRT(N2,N3,2),N2=1,2),N3=1,3)                     GPLTSV 
1070  CONTINUE                                                           GPLTSV 
1080  CONTINUE                                                           GPLTSV 
1090  CONTINUE                                                           GPLTSV 
C                                                                        GPLTSV 
C     FIND MAXIMUM DISTANCE AND MIDPOINT                                 GPLTSV 
C                                                                        GPLTSV 
1100  CONTINUE                                                           GPLTSV 
      YMIN=-YMAX                                                         GPLTSV 
      XDIS=XMAX-XMIN                                                     GPLTSV 
      YDIS=YMAX-YMIN                                                     GPLTSV 
      ZDIS=ZMAX-ZMIN                                                     GPLTSV 
      BIGD=AMAX1(XDIS,YDIS,ZDIS)                                         GPLTSV 
      XMID=.5*(XMAX-XMIN)+XMIN                                           GPLTSV 
      YMID=0.                                                            GPLTSV 
      ZMID=.5*(ZMAX-ZMIN)+ZMIN                                           GPLTSV 
C                                                                        GPLTSV 
C                                                                        GPLTSV 
      END                                                                GPLTSV 
      SUBROUTINE SURCL (NPT,FLINE,FVEC)                                  SURCL
C                                                                        SURCL
C     *******************************************VERSION B00************ SURCL
C                                                                        SURCL
C                                                                        SURCL
C     COMPUTE OUTWARD NORMAL VECTORS WITH FOUR ADJOINING INPUT POINTS    SURCL
C     USED IN A CLOCKWISE DIRECTION                                      SURCL
C                                                                        SURCL
C     BASED ON SUBROUTINE SURCL OF NASA TMX-2074.                        SURCL
C                                                                        SURCL
      DIMENSION FLINE(31,3,2), FVEC(30,3)                                SURCL
C                                                                        SURCL
C                                                                        SURCL
      DO 20 N=2,NPT                                                      SURCL
      T1X=FLINE(N,1,2)-FLINE(N-1,1,1)                                    SURCL
      T2X=FLINE(N-1,1,2)-FLINE(N,1,1)                                    SURCL
      T1Y=FLINE(N,2,2)-FLINE(N-1,2,1)                                    SURCL
      T2Y=FLINE(N-1,2,2)-FLINE(N,2,1)                                    SURCL
      T1Z=FLINE(N,3,2)-FLINE(N-1,3,1)                                    SURCL
      T2Z=FLINE(N-1,3,2)-FLINE(N,3,1)                                    SURCL
      XNX=T2Y*T1Z-T1Y*T2Z                                                SURCL
      YNY=T1X*T2Z-T2X*T1Z                                                SURCL
      ZNZ=T2X*T1Y-T1X*T2Y                                                SURCL
      FN=SQRT(XNX**2+YNY**2+ZNZ**2)                                      SURCL
      IF (FN.EQ.0.) GO TO 10                                             SURCL
      FVEC(N-1,1)=XNX/FN                                                 SURCL
      FVEC(N-1,2)=YNY/FN                                                 SURCL
      FVEC(N-1,3)=ZNZ/FN                                                 SURCL
      GO TO 20                                                           SURCL
10    FVEC(N-1,1)=0.                                                     SURCL
      FVEC(N-1,2)=0.                                                     SURCL
      FVEC(N-1,3)=0.                                                     SURCL
20    CONTINUE                                                           SURCL
      RETURN                                                             SURCL
      END                                                                SURCL
      SUBROUTINE SURCC (NPT,FLINE,FVEC)                                  SURCC
C                                                                        SURCC
C     *******************************************VERSION B00************ SURCC
C                                                                        SURCC
C                                                                        SURCC
C     COMPUTE OUTWARD NORMAL VECTORS WITH FOUR ADJOINING INPUT POINTS    SURCC
C     USED IN A COUNTERCLOCKWISE DIRECTION                               SURCC
C                                                                        SURCC
C     BASED ON SUBROUTINE SURCC OF NASA TMX-2074.                        SURCC
C                                                                        SURCC
      DIMENSION FLINE(31,3,2), FVEC(30,3)                                SURCC
C                                                                        SURCC
C                                                                        SURCC
      DO 20 N=2,NPT                                                      SURCC
      T1X=FLINE(N,1,2)-FLINE(N-1,1,1)                                    SURCC
      T2X=FLINE(N,1,1)-FLINE(N-1,1,2)                                    SURCC
      T1Y=FLINE(N,2,2)-FLINE(N-1,2,1)                                    SURCC
      T2Y=FLINE(N,2,1)-FLINE(N-1,2,2)                                    SURCC
      T1Z=FLINE(N,3,2)-FLINE(N-1,3,1)                                    SURCC
      T2Z=FLINE(N,3,1)-FLINE(N-1,3,2)                                    SURCC
      XNX=T2Y*T1Z-T1Y*T2Z                                                SURCC
      YNY=T1X*T2Z-T2X*T1Z                                                SURCC
      ZNZ=T2X*T1Y-T1X*T2Y                                                SURCC
      FN=SQRT(XNX**2+YNY**2+ZNZ**2)                                      SURCC
      IF (FN.EQ.0.) GO TO 10                                             SURCC
      FVEC(N-1,1)=XNX/FN                                                 SURCC
      FVEC(N-1,2)=YNY/FN                                                 SURCC
      FVEC(N-1,3)=ZNZ/FN                                                 SURCC
      GO TO 20                                                           SURCC
10    FVEC(N-1,1)=0.                                                     SURCC
      FVEC(N-1,2)=0.                                                     SURCC
      FVEC(N-1,3)=0.                                                     SURCC
20    CONTINUE                                                           SURCC
      RETURN                                                             SURCC
      END                                                                SURCC
      OVERLAY(LWB,4,2)                                                   PLTORT 
C     OVERLAY(LWB,4,2)                                                   PLTORT 
      PROGRAM PLTORT                                                     PLTORT 
C                                                                        PLTORT 
C     *******************************************VERSION B00************ PLTORT 
C                                                                        PLTORT 
C                                                                        PLTORT 
C     CONTROL ROUTINE FOR ORTHOGRAPHIC AND THREE-VIEW PLOTS              PLTORT 
C                                                                        PLTORT 
C     BASED ON PROGRAM PLTCON OF NASA TMX-2074.                          PLTORT 
C                                                                        PLTORT 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP PLTORT 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       PLTORT 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR PLTORT 
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  PLTORT 
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P PLTORT 
     1LOTSZ,TYPE,KODE,XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,XMID,YMID,ZMID,BIGD, PLTORT 
     2ISP                                                                PLTORT 
      COMMON/NEWCOM/K0,K1,K2,K3,K4,K5,K6                                 PLTORT 
      COMMON /HEAD/ TITLE1(14),TITLE2(14)                                PLTORT 
      COMMON /GRAPH/ PLOT                                                PLTORT 
      COMMON /PTYPE/ ORT,VU3,STE,PER                                     PLTORT 
C                                                                        PLTORT 
      DIMENSION ORG(3), ABC(8), ABCDE(8)                                 PLTORT 
C                                                                        PLTORT 
      INTEGER PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9 PLTORT 
     1,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                         PLTORT 
C                                                                        PLTORT 
      HX=1HX                                                             PLTORT 
      HY=1HY                                                             PLTORT 
      HZ=1HZ                                                             PLTORT 
      REWIND TAPE12                                                      PLTORT 
      REWIND TAPE14                                                      PLTORT 
      IF (PLOT.LT.0) GO TO 10                                            PLTORT 
      IF (PLOT.GE.0) GO TO 20                                            PLTORT 
10    CONTINUE                                                           PLTORT 
      WRITE (TAPE14,120) TITLE1                                          PLTORT 
      REWIND TAPE14                                                      PLTORT 
      READ (TAPE14,130) ABC                                              PLTORT 
      GO TO 30                                                           PLTORT 
20    CONTINUE                                                           PLTORT 
      WRITE (TAPE14,120) TITLE2                                          PLTORT 
      REWIND TAPE14                                                      PLTORT 
      READ (TAPE14,130) ABC                                              PLTORT 
30    REWIND TAPE14                                                      PLTORT 
      WRITE (TAPE14,110) HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMA PLTORT 
     1G,PLOTSZ,TYPE,KODE                                                 PLTORT 
      REWIND TAPE14                                                      PLTORT 
      READ (TAPE14,130) ABCDE                                            PLTORT 
      REWIND TAPE14                                                      PLTORT 
C                                                                        PLTORT 
C     SAVE MIN AND MAX                                                   PLTORT 
C                                                                        PLTORT 
      XSAV=XMIN                                                          PLTORT 
      YSAV=YMIN                                                          PLTORT 
      ZSAV=ZMIN                                                          PLTORT 
      XMSAV=XMAX                                                         PLTORT 
      YMSAV=YMAX                                                         PLTORT 
      ZMSAV=ZMAX                                                         PLTORT 
      IF (TYPE.NE.VU3) GO TO 80                                          PLTORT 
      SCALE=BIGD/PLOTSZ                                                  PLTORT 
      ORG(1)=PHI                                                         PLTORT 
      ORG(2)=THETA                                                       PLTORT 
      ORG(3)=PSI                                                         PLTORT 
      PHI=0.                                                             PLTORT 
      THETA=0.                                                           PLTORT 
      PSI=0.                                                             PLTORT 
      YBIG=ORG(1)                                                        PLTORT 
      YORG=FLOAT(IFIX(YMAX/SCALE))+ORG(1)                                PLTORT 
      IF (YBIG.GT.ORG(2)) GO TO 40                                       PLTORT 
      YBIG=ORG(2)                                                        PLTORT 
      YORG=FLOAT(IFIX(ZMAX/SCALE))+ORG(2)                                PLTORT 
40    IF (YBIG.GT.ORG(3)) GO TO 50                                       PLTORT 
      YBIG=ORG(3)                                                        PLTORT 
      YORG=FLOAT(IFIX(ZMAX/SCALE))+ORG(3)                                PLTORT 
50    CALL CALPLT (1.0,YORG,-3)                                          PLTORT 
C                                                                        PLTORT 
C     NOTATE ON THREE VIEW PLOTS                                         PLTORT 
C                                                                        PLTORT 
      NCHAR=IFIX(6.*PLOTSZ)                                              PLTORT 
      IF (NCHAR.GT.80) GO TO 60                                          PLTORT 
      X=0.                                                               PLTORT 
      GO TO 70                                                           PLTORT 
60    CONTINUE                                                           PLTORT 
      NDIF=(NCHAR-80)/2                                                  PLTORT 
      X=FLOAT(NDIF)/6.                                                   PLTORT 
      NCHAR=80                                                           PLTORT 
70    CALL NOTATE (X,0.,.2,ABC,0.,NCHAR)                                 PLTORT 
      XMIN=0.                                                            PLTORT 
      YMIN=0.                                                            PLTORT 
      ZMIN=0.                                                            PLTORT 
      HORZ=HX                                                            PLTORT 
      VERT=HY                                                            PLTORT 
      YORG=ORG(1)-YORG-1.                                                PLTORT 
      CALL CALPLT (0.,YORG,-3)                                           PLTORT 
      CALL OTHPLT                                                        PLTORT 
      REWIND TAPE12                                                      PLTORT 
      VERT=HZ                                                            PLTORT 
      YORG=ORG(2)-ORG(1)                                                 PLTORT 
      CALL CALPLT (0.,YORG,-3)                                           PLTORT 
      CALL OTHPLT                                                        PLTORT 
      REWIND TAPE12                                                      PLTORT 
      HORZ=HY                                                            PLTORT 
      YORG=ORG(3)-ORG(2)                                                 PLTORT 
      YMIN=FLOAT(IFIX(YSAV/SCALE))*SCALE                                 PLTORT 
      CALL CALPLT (0.,YORG,-3)                                           PLTORT 
      CALL OTHPLT                                                        PLTORT 
      X=FLOAT(IFIX(PLOTSZ+6.))                                           PLTORT 
      Y=1.-ORG(3)                                                        PLTORT 
      GO TO 100                                                          PLTORT 
80    CONTINUE                                                           PLTORT 
C                                                                        PLTORT 
C     NOTATE IDENTIFICATION ON PLOTS                                     PLTORT 
C                                                                        PLTORT 
      X=0.                                                               PLTORT 
      NCHAR=IFIX(11.*PLOTSZ)+3                                           PLTORT 
      IF (NCHAR.LE.80) GO TO 90                                          PLTORT 
      NDIF=(NCHAR-80)/2                                                  PLTORT 
      X=FLOAT(NDIF)/11.                                                  PLTORT 
      NCHAR=80                                                           PLTORT 
90    CALL NOTATE (X,1.5,0.1,ABC,0.0,NCHAR)                              PLTORT 
      CALL NOTATE (X,0.5,0.1,ABCDE,0.0,NCHAR)                            PLTORT 
      CALL CALPLT (0.,2.,-3)                                             PLTORT 
C                                                                        PLTORT 
C     ORTHOGRAPHIC                                                       PLTORT 
C                                                                        PLTORT 
      CALL OTHPLT                                                        PLTORT 
      X=FLOAT(IFIX(PLOTSZ+2.))                                           PLTORT 
      Y=-2.                                                              PLTORT 
100   CONTINUE                                                           PLTORT 
C                                                                        PLTORT 
C     RESTORE MIN AND MAX                                                PLTORT 
C                                                                        PLTORT 
      IF (PLOT.NE.0) CALL NFRAME                                         PLTORT 
      XMIN=XSAV                                                          PLTORT 
      YMIN=YSAV                                                          PLTORT 
      ZMIN=ZSAV                                                          PLTORT 
      XMAX=XMSAV                                                         PLTORT 
      YMAX=YMSAV                                                         PLTORT 
      ZMAX=ZMSAV                                                         PLTORT 
C                                                                        PLTORT 
C                                                                        PLTORT 
C                                                                        PLTORT 
110   FORMAT (2(A1,1X),A3,9F5.0,A3,16X,I1)                               PLTORT 
120   FORMAT (13A6,A2)                                                   PLTORT 
130   FORMAT (8A10)                                                      PLTORT 
      END                                                                PLTORT 
      SUBROUTINE OTHPLT                                                  OTHPLT 
C                                                                        OTHPLT 
C     *******************************************VERSION B00************ OTHPLT 
C                                                                        OTHPLT 
C                                                                        OTHPLT 
C     CONTROL ROUTINE FOR ORTHOGRAPHIC PROJECTIONS                       OTHPLT 
C                                                                        OTHPLT 
C                                                                        OTHPLT 
C     DETERMINE THE SPECIFIED AXIS SYSTEM AND PAPER PLANE, SET UP THE    OTHPLT 
C     ROTATION MATRIX AND THE EQUATION OF TRANSFORMATION OF THE OUTWARD  OTHPLT 
C     NORMAL VECTORS, AND ESTABLISH THE NECESSARY OFFSETS FOR PLACEMENT  OTHPLT 
C     OF THE PLOT                                                        OTHPLT 
C                                                                        OTHPLT 
C     BASED ON PROGRAM OTHPLT OF NASA TMX-2074.                          OTHPLT 
C                                                                        OTHPLT 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR OTHPLT 
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  OTHPLT 
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P OTHPLT 
     1LOTSZ,TYPE,KODE,XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,XMID,YMID,ZMID,BIGD, OTHPLT 
     2ISP                                                                OTHPLT 
      COMMON/NEWCOM/K0,K1,K2,K3,K4,K5,K6,KWAF,KWAFOR,KFUS,KRADX(4),      OTHPLT 
     X              KFORX(4),KF(6),KFINOR(6),KAN(6),KANOR(6)             OTHPLT 
      COMMON /GRAPH/ PLOT                                                OTHPLT 
      COMMON /PTYPE/ ORT,VU3,STE,PER                                     OTHPLT 
      COMMON /ONE/ NAN2                                                  OTHPLT 
      COMMON /PI/ PI,RADEG,DEGRAD                                        OTHPLT 
C                                                                        OTHPLT 
      DIMENSION A(2,3), C(3)                                             OTHPLT 
C                                                                        OTHPLT 
      INTEGER PLOT                                                       OTHPLT 
C                                                                        OTHPLT 
      XSEE=2HX                                                           OTHPLT 
      YSEE=2HY                                                           OTHPLT 
      ZSEE=2HZ                                                           OTHPLT 
      XINTST=3HOUT                                                       OTHPLT 
      CONV=DEGRAD                                                        OTHPLT 
      NUM2=2                                                             OTHPLT 
C                                                                        OTHPLT 
C     INITIALIZE                                                         OTHPLT 
C                                                                        OTHPLT 
      DMAX=BIGD                                                          OTHPLT 
      ITEST1=1                                                           OTHPLT 
      ITEST2=1                                                           OTHPLT 
      IF (XINTST.NE.TEST1) ITEST1=0                                      OTHPLT 
      IF (PSI.EQ.0..AND.THETA.EQ.0..AND.PHI.EQ.0.) ITEST2=0              OTHPLT 
      SCALE=DMAX/PLOTSZ                                                  OTHPLT 
      PHI=CONV*PHI                                                       OTHPLT 
      THETA=CONV*THETA                                                   OTHPLT 
      PSI=CONV*PSI                                                       OTHPLT 
      IF (TYPE.EQ.VU3) GO TO 10                                          OTHPLT 
      XDIS=XMAX-XMIN                                                     OTHPLT 
      YDIS=YMAX-YMIN                                                     OTHPLT 
      ZDIS=ZMAX-ZMIN                                                     OTHPLT 
      XFIX=.5*(DMAX-XDIS)                                                OTHPLT 
      XMIN=XMIN-XFIX                                                     OTHPLT 
      XMAX=XMAX+XFIX                                                     OTHPLT 
      YFIX=.5*(DMAX-YDIS)                                                OTHPLT 
      YMIN=YMIN-YFIX                                                     OTHPLT 
      YMAX=YMAX+YFIX                                                     OTHPLT 
      ZFIX=.5*(DMAX-ZDIS)                                                OTHPLT 
      ZMIN=ZMIN-ZFIX                                                     OTHPLT 
      ZMAX=ZMAX+ZFIX                                                     OTHPLT 
C                                                                        OTHPLT 
C     ADJUST MINIMUMS FOR GRID LINES                                     OTHPLT 
C                                                                        OTHPLT 
      XMIN=FLOAT(IFIX(XMIN/SCALE))*SCALE                                 OTHPLT 
      YMIN=FLOAT(IFIX(YMIN/SCALE))*SCALE                                 OTHPLT 
      ZMIN=FLOAT(IFIX(ZMIN/SCALE))*SCALE                                 OTHPLT 
10    CONTINUE                                                           OTHPLT 
C                                                                        OTHPLT 
C     SETUP AXIS                                                         OTHPLT 
C                                                                        OTHPLT 
      SINPSI=SIN(PSI)                                                    OTHPLT 
      SINTHE=SIN(THETA)                                                  OTHPLT 
      SINPHI=SIN(PHI)                                                    OTHPLT 
      COSPSI=COS(PSI)                                                    OTHPLT 
      COSTHE=COS(THETA)                                                  OTHPLT 
      COSPHI=COS(PHI)                                                    OTHPLT 
      IF (XSEE.NE.HORZ) GO TO 30                                         OTHPLT 
C                                                                        OTHPLT 
C     USE X FOR HORIZONTAL VARIABLE                                      OTHPLT 
C                                                                        OTHPLT 
      IF (ITEST2.EQ.0) GO TO 20                                          OTHPLT 
      A(1,1)=COSTHE*COSPSI                                               OTHPLT 
      A(1,2)=-SINPSI*COSPHI+SINTHE*COSPSI*SINPHI                         OTHPLT 
      A(1,3)=SINPSI*SINPHI+SINTHE*COSPSI*COSPHI                          OTHPLT 
20    HMIN=XMIN                                                          OTHPLT 
      HMAX=XMAX                                                          OTHPLT 
      HMID=XMID                                                          OTHPLT 
      IHORZ=1                                                            OTHPLT 
      GO TO 70                                                           OTHPLT 
30    IF (YSEE.NE.HORZ) GO TO 50                                         OTHPLT 
C                                                                        OTHPLT 
C     USE Y FOR HORIZONTAL VARIABLE                                      OTHPLT 
C                                                                        OTHPLT 
      IF (ITEST2.EQ.0) GO TO 40                                          OTHPLT 
      A(1,1)=COSTHE*SINPSI                                               OTHPLT 
      A(1,2)=COSPSI*COSPHI+SINTHE*SINPSI*SINPHI                          OTHPLT 
      A(1,3)=-COSPSI*SINPHI+SINTHE*SINPSI*COSPHI                         OTHPLT 
40    HMIN=YMIN                                                          OTHPLT 
      HMAX=YMAX                                                          OTHPLT 
      HMID=YMID                                                          OTHPLT 
      IHORZ=2                                                            OTHPLT 
      GO TO 70                                                           OTHPLT 
C                                                                        OTHPLT 
C     USE Z FOR HORIZONTAL VARIABLE                                      OTHPLT 
C                                                                        OTHPLT 
50    CONTINUE                                                           OTHPLT 
      IF (ITEST2.EQ.0) GO TO 60                                          OTHPLT 
      A(1,1)=-SINTHE                                                     OTHPLT 
      A(1,2)=COSTHE*SINPHI                                               OTHPLT 
      A(1,3)=COSTHE*COSPHI                                               OTHPLT 
60    HMIN=ZMIN                                                          OTHPLT 
      HMAX=ZMAX                                                          OTHPLT 
      HMID=ZMID                                                          OTHPLT 
      IHORZ=3                                                            OTHPLT 
70    IF (XSEE.NE.VERT) GO TO 90                                         OTHPLT 
C                                                                        OTHPLT 
C     USE X FOR VERTICAL VARIABLE                                        OTHPLT 
C                                                                        OTHPLT 
      IF (ITEST2.EQ.0) GO TO 80                                          OTHPLT 
      A(2,1)=COSTHE*COSPSI                                               OTHPLT 
      A(2,2)=-SINPSI*COSPHI+SINTHE*COSPSI*SINPHI                         OTHPLT 
      A(2,3)=SINPSI*SINPHI+SINTHE*COSPSI*COSPHI                          OTHPLT 
80    VMIN=XMIN                                                          OTHPLT 
      VMAX=XMAX                                                          OTHPLT 
      VMID=XMID                                                          OTHPLT 
      IVERT=1                                                            OTHPLT 
      GO TO 130                                                          OTHPLT 
90    IF (YSEE.NE.VERT) GO TO 110                                        OTHPLT 
C                                                                        OTHPLT 
C     USE Y FOR VERTICAL VARIABLE                                        OTHPLT 
C                                                                        OTHPLT 
      IF (ITEST2.EQ.0) GO TO 100                                         OTHPLT 
      A(2,1)=COSTHE*SINPSI                                               OTHPLT 
      A(2,2)=COSPSI*COSPHI+SINTHE*SINPSI*SINPHI                          OTHPLT 
      A(2,3)=-COSPSI*SINPHI+SINTHE*SINPSI*COSPHI                         OTHPLT 
100   VMIN=YMIN                                                          OTHPLT 
      VMAX=YMAX                                                          OTHPLT 
      VMID=YMID                                                          OTHPLT 
      IVERT=2                                                            OTHPLT 
      GO TO 130                                                          OTHPLT 
C                                                                        OTHPLT 
C     USE Z FOR VERTICAL VARIABLE                                        OTHPLT 
C                                                                        OTHPLT 
110   CONTINUE                                                           OTHPLT 
      IF (ITEST2.EQ.0) GO TO 120                                         OTHPLT 
      A(2,1)=-SINTHE                                                     OTHPLT 
      A(2,2)=COSTHE*SINPHI                                               OTHPLT 
      A(2,3)=COSTHE*COSPHI                                               OTHPLT 
120   VMIN=ZMIN                                                          OTHPLT 
      VMAX=ZMAX                                                          OTHPLT 
      VMID=ZMID                                                          OTHPLT 
      IVERT=3                                                            OTHPLT 
C                                                                        OTHPLT 
C     CHECK PAPER PLANE                                                  OTHPLT 
C                                                                        OTHPLT 
130   IF (.NOT.((IHORZ.EQ.1.AND.IVERT.EQ.2).OR.(IVERT.EQ.1.AND.IHORZ.EQ. OTHPLT 
     12))) GO TO 140                                                     OTHPLT 
      ITEST=3                                                            OTHPLT 
      C(1)=-SINTHE                                                       OTHPLT 
      C(2)=COSTHE*SINPHI                                                 OTHPLT 
      C(3)=COSTHE*COSPHI                                                 OTHPLT 
      GO TO 160                                                          OTHPLT 
140   IF (.NOT.((IHORZ.EQ.1.AND.IVERT.EQ.3).OR.(IVERT.EQ.1.AND.IHORZ.EQ. OTHPLT 
     13))) GO TO 150                                                     OTHPLT 
      ITEST=2                                                            OTHPLT 
      C(1)=COSTHE*SINPSI                                                 OTHPLT 
      C(2)=COSPSI*COSPHI+SINTHE*SINPSI*SINPHI                            OTHPLT 
      C(3)=-COSPSI*SINPHI+SINTHE*SINPSI*COSPHI                           OTHPLT 
      GO TO 160                                                          OTHPLT 
150   ITEST=1                                                            OTHPLT 
      C(1)=COSTHE*COSPSI                                                 OTHPLT 
      C(2)=-SINPSI*COSPHI+SINTHE*COSPSI*SINPHI                           OTHPLT 
      C(3)=SINPSI*SINPHI+SINTHE*COSPSI*COSPHI                            OTHPLT 
160   CONTINUE                                                           OTHPLT 
C                                                                        OTHPLT 
C     CENTER WITHIN PAGE SIZE IF SIZE GREATER THAN 28 INCHES             OTHPLT 
C                                                                        OTHPLT 
      IF (PLOTSZ.GT.28..AND.TYPE.NE.VU3) VMIN=-13.*SCALE+FLOAT(IFIX(VMID OTHPLT 
     1/SCALE))*SCALE                                                     OTHPLT 
C                                                                        OTHPLT 
C     ROTATE MIDPOINT TO PLACE ROTATED VIEW CORRECTLY                    OTHPLT 
C                                                                        OTHPLT 
      IF (ITEST2.EQ.0) GO TO 170                                         OTHPLT 
      AMID1=A(1,1)*XMID+A(1,2)*YMID+A(1,3)*ZMID                          OTHPLT 
      AMID2=A(2,1)*XMID+A(2,2)*YMID+A(2,3)*ZMID                          OTHPLT 
      HMIN=HMIN-HMID+AMID1                                               OTHPLT 
      VMIN=VMIN-VMID+AMID2                                               OTHPLT 
170   CONTINUE                                                           OTHPLT 
      IF (PLOT.LT.0) GO TO 190                                           OTHPLT 
      J1=K1                                                              OTHPLT 
      NW=NWAFOR                                                          OTHPLT 
      IF (KWAF.NE.0) NWAF=KWAF                                           OTHPLT 
      IF (KWAFOR.NE.0) NW=KWAFOR                                         OTHPLT 
      J2=K2                                                              OTHPLT 
      DO 180 I=1,NFUS                                                    OTHPLT 
      IF (KRADX(I).NE.0) NRADX(I)=KRADX(I)                               OTHPLT 
      IF (KFORX(I).NE.0) NFORX(I)=KFORX(I)                               OTHPLT 
180   CONTINUE                                                           OTHPLT 
      J4=K4                                                              OTHPLT 
      J5=K5                                                              OTHPLT 
C                                                                        OTHPLT 
C     BEGIN PLOTTING LINES                                               OTHPLT 
C                                                                        OTHPLT 
C                                                                        OTHPLT 
C     WING                                                               OTHPLT 
C                                                                        OTHPLT 
190   IF (J1.EQ.0) GO TO 210                                             OTHPLT 
      DO 200 I=1,2                                                       OTHPLT 
      CALL PLOTIT (NWAF,NW,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMIN,SCA OTHPLT 
     1LE,A,C)                                                            OTHPLT 
      CALL PLOTIT (NW,NWAF,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMIN,SCA OTHPLT 
     1LE,A,C)                                                            OTHPLT 
200   CONTINUE                                                           OTHPLT 
C                                                                        OTHPLT 
C     FUSELAGE (BODY)                                                    OTHPLT 
C                                                                        OTHPLT 
210   IF (J2.EQ.0) GO TO 230                                             OTHPLT 
      DO 220 NFU=1,NFUS                                                  OTHPLT 
      NANG1=NRADX(NFU)                                                   OTHPLT 
      NFUSOR=NFORX(NFU)                                                  OTHPLT 
      CALL PLOTIT (NANG1,NFUSOR,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMI OTHPLT 
     1N,SCALE,A,C)                                                       OTHPLT 
      CALL PLOTIT (NFUSOR,NANG1,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMI OTHPLT 
     1N,SCALE,A,C)                                                       OTHPLT 
220   CONTINUE                                                           OTHPLT 
C                                                                        OTHPLT 
C     POD (NACELLE)                                                      OTHPLT 
C                                                                        OTHPLT 
230   IF (J3.EQ.0.OR.PLOT.GT.0) GO TO 260                                OTHPLT 
      NANG1=NAN2+1                                                       OTHPLT 
      DO 240 NP1=1,NP                                                    OTHPLT 
      CALL PLOTIT (NANG1,NPODOR,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMI OTHPLT 
     1N,SCALE,A,C)                                                       OTHPLT 
240   CONTINUE                                                           OTHPLT 
      DO 250 NP1=1,NP                                                    OTHPLT 
      CALL PLOTIT (NPODOR,NANG1,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMI OTHPLT 
     1N,SCALE,A,C)                                                       OTHPLT 
250   CONTINUE                                                           OTHPLT 
C                                                                        OTHPLT 
C     FIN (VERTICAL TAIL)                                                OTHPLT 
C                                                                        OTHPLT 
260   IF (J4.EQ.0) GO TO 300                                             OTHPLT 
      DO 290 NF1=1,NF                                                    OTHPLT 
      DO 290 I=1,2                                                       OTHPLT 
      NFOR=NFINOR                                                        OTHPLT 
      IF (PLOT.LT.0) GO TO 270                                           OTHPLT 
      IA=KF(NF1)                                                         OTHPLT 
      IF (IA.EQ.0) IA=2                                                  OTHPLT 
      IF (KFINOR(NF1).NE.0) NFOR=KFINOR(NF1)                             OTHPLT 
      GO TO 280                                                          OTHPLT 
270   IA=2                                                               OTHPLT 
280   CONTINUE                                                           OTHPLT 
      NUM2=IA                                                            OTHPLT 
      CALL PLOTIT (NUM2,NFOR,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMIN,S OTHPLT 
     1CALE,A,C)                                                          OTHPLT 
      CALL PLOTIT (NFOR,NUM2,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMIN,S OTHPLT 
     1CALE,A,C)                                                          OTHPLT 
290   CONTINUE                                                           OTHPLT 
C                                                                        OTHPLT 
C     CANARD (HORIZONTAL TAIL)                                           OTHPLT 
C                                                                        OTHPLT 
300   IF (J5.EQ.0) GO TO 350                                             OTHPLT 
      DO 340 NCA=1,NCAN                                                  OTHPLT 
      DO 330 I=1,2                                                       OTHPLT 
      NCOR=NCANOR                                                        OTHPLT 
      IF (PLOT.LT.0) GO TO 310                                           OTHPLT 
      IA=KAN(NCA)                                                        OTHPLT 
      IF (IA.EQ.0) IA=2                                                  OTHPLT 
      IF (KANOR(NCA).NE.0) NCOR=KANOR(NCA)                               OTHPLT 
      GO TO 320                                                          OTHPLT 
310   IA=2                                                               OTHPLT 
320   CONTINUE                                                           OTHPLT 
      NUM2=IA                                                            OTHPLT 
      CALL PLOTIT (NUM2,NCOR,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMIN,S OTHPLT 
     1CALE,A,C)                                                          OTHPLT 
      CALL PLOTIT (NCOR,NUM2,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMIN,S OTHPLT 
     1CALE,A,C)                                                          OTHPLT 
330   CONTINUE                                                           OTHPLT 
340   CONTINUE                                                           OTHPLT 
350   CONTINUE                                                           OTHPLT 
      RETURN                                                             OTHPLT 
      END                                                                OTHPLT 
      SUBROUTINE PLOTIT (NL,NPT,ITEST,ITEST1,ITEST2,IHORZ,IVERT,HMIN,VMI PLOTIT 
     1N,SCALE,A,C)                                                       PLOTIT 
C                                                                        PLOTIT 
C     *******************************************VERSION B00************ PLOTIT 
C                                                                        PLOTIT 
C                                                                        PLOTIT 
C     READS LINES OF POINTS DEFINING A SURFACE FROM A FILE, MANIPULATES  PLOTIT 
C     IN THE MANNER SPECIFIED, AND PLOTS IT                              PLOTIT 
C                                                                        PLOTIT 
C     BASED ON SUBROUTINE PLOTIT OF NASA TMX-2074.                       PLOTIT 
C                                                                        PLOTIT 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP PLOTIT 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       PLOTIT 
C                                                                        PLOTIT 
      DIMENSION VECRT(30,3,2), VECLF(30,3,2), ALINE(31,3), RLINE(31,2),  PLOTIT 
     1RVEC(30,2), XLINE(33,2), NNUM(4), PLINE(31,2), A(2,3), C(3)        PLOTIT 
C                                                                        PLOTIT 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE PLOTIT 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              PLOTIT 
C                                                                        PLOTIT 
      NVEC=NPT-1                                                         PLOTIT 
      DO 310 N=1,NL                                                      PLOTIT 
      IF (N.GT.1) GO TO 10                                               PLOTIT 
      KODE=3                                                             PLOTIT 
      K1=2                                                               PLOTIT 
      K2=2                                                               PLOTIT 
      GO TO 40                                                           PLOTIT 
10    KODE=1                                                             PLOTIT 
      K1=1                                                               PLOTIT 
      K2=2                                                               PLOTIT 
      DO 30 NV=1,NVEC                                                    PLOTIT 
      DO 20 N3=1,3                                                       PLOTIT 
      VECRT(NV,N3,1)=VECRT(NV,N3,2)                                      PLOTIT 
      VECLF(NV,N3,1)=VECLF(NV,N3,2)                                      PLOTIT 
20    CONTINUE                                                           PLOTIT 
30    CONTINUE                                                           PLOTIT 
40    CONTINUE                                                           PLOTIT 
      READ (TAPE12) ((ALINE(NN,N3),NN=1,NPT),N3=1,3)                     PLOTIT 
      IF (N.NE.NL) GO TO 50                                              PLOTIT 
      KODE=2                                                             PLOTIT 
      K1=1                                                               PLOTIT 
      K2=1                                                               PLOTIT 
      GO TO 70                                                           PLOTIT 
50    CONTINUE                                                           PLOTIT 
      READ (TAPE12) ((VECRT(NN,N3,2),NN=1,NVEC),N3=1,3)                  PLOTIT 
      DO 60 NN=1,NVEC                                                    PLOTIT 
      VECLF(NN,1,2)=VECRT(NN,1,2)                                        PLOTIT 
      VECLF(NN,2,2)=-VECRT(NN,2,2)                                       PLOTIT 
60    VECLF(NN,3,2)=VECRT(NN,3,2)                                        PLOTIT 
C                                                                        PLOTIT 
C     LOOP FOR RIGHT AND LEFT SIDE OF CONFIGURATION                      PLOTIT 
C                                                                        PLOTIT 
70    DO 300 NN2=1,2                                                     PLOTIT 
      IF (NN2.EQ.1) GO TO 90                                             PLOTIT 
      DO 80 NN=1,NPT                                                     PLOTIT 
80    ALINE(NN,2)=-ALINE(NN,2)                                           PLOTIT 
90    IF (ITEST1.EQ.1) GO TO 140                                         PLOTIT 
      IF (ITEST2.EQ.1) GO TO 110                                         PLOTIT 
C                                                                        PLOTIT 
C     NO ROTATION OR VISIBILITY TEST                                     PLOTIT 
C                                                                        PLOTIT 
      DO 100 NN=1,NPT                                                    PLOTIT 
      XLINE(NN,1)=ALINE(NN,IHORZ)                                        PLOTIT 
100   XLINE(NN,2)=ALINE(NN,IVERT)                                        PLOTIT 
      GO TO 130                                                          PLOTIT 
C                                                                        PLOTIT 
C     ROTATE BUT NO VISIBILITY TEST                                      PLOTIT 
C                                                                        PLOTIT 
110   CALL PTROT (NPT,A,ALINE,RLINE)                                     PLOTIT 
      DO 120 NN=1,NPT                                                    PLOTIT 
      DO 120 N2=1,2                                                      PLOTIT 
      XLINE(NN,N2)=RLINE(NN,N2)                                          PLOTIT 
120   CONTINUE                                                           PLOTIT 
C                                                                        PLOTIT 
C     SCALE AND PLOT                                                     PLOTIT 
C                                                                        PLOTIT 
130   XLINE(NPT+1,1)=HMIN                                                PLOTIT 
      XLINE(NPT+1,2)=VMIN                                                PLOTIT 
      XLINE(NPT+2,1)=SCALE                                               PLOTIT 
      XLINE(NPT+2,2)=SCALE                                               PLOTIT 
      CALL XYLINE(XLINE(1,1),XLINE(1,2),NPT,1,0,0)                       PLOTIT 
      GO TO 300                                                          PLOTIT 
140   IF (ITEST2.EQ.1) GO TO 190                                         PLOTIT 
C                                                                        PLOTIT 
C     CHECK VISIBILITY BUT NO ROTATION                                   PLOTIT 
C                                                                        PLOTIT 
      DO 150 NN=1,NPT                                                    PLOTIT 
      RLINE(NN,1)=ALINE(NN,IHORZ)                                        PLOTIT 
      RLINE(NN,2)=ALINE(NN,IVERT)                                        PLOTIT 
150   CONTINUE                                                           PLOTIT 
      DO 180 NN=1,NVEC                                                   PLOTIT 
      DO 170 N2=1,2                                                      PLOTIT 
      IF (NN2.EQ.2) GO TO 160                                            PLOTIT 
      RVEC(NN,N2)=VECRT(NN,ITEST,N2)                                     PLOTIT 
      GO TO 170                                                          PLOTIT 
160   RVEC(NN,N2)=VECLF(NN,ITEST,N2)                                     PLOTIT 
170   CONTINUE                                                           PLOTIT 
180   CONTINUE                                                           PLOTIT 
      GO TO 230                                                          PLOTIT 
C                                                                        PLOTIT 
C     ROTATE AND CHECK VISIBILITY                                        PLOTIT 
C                                                                        PLOTIT 
190   CALL PTROT (NPT,A,ALINE,RLINE)                                     PLOTIT 
      IF (NN2.EQ.2) GO TO 210                                            PLOTIT 
      DO 200 N2=K1,K2                                                    PLOTIT 
      CALL VECROT (NVEC,C,VECRT(1,1,N2),RVEC(1,N2))                      PLOTIT 
200   CONTINUE                                                           PLOTIT 
      GO TO 230                                                          PLOTIT 
210   DO 220 N2=K1,K2                                                    PLOTIT 
      CALL VECROT (NVEC,C,VECLF(1,1,N2),RVEC(1,N2))                      PLOTIT 
220   CONTINUE                                                           PLOTIT 
C                                                                        PLOTIT 
C     FIND VISIBLE LINES                                                 PLOTIT 
C                                                                        PLOTIT 
230   IF (ITEST.NE.2) GO TO 250                                          PLOTIT 
      DO 240 N2=K1,K2                                                    PLOTIT 
      DO 240 M=1,NVEC                                                    PLOTIT 
240   RVEC(M,N2)=-RVEC(M,N2)                                             PLOTIT 
250   CALL VISTST (KODE,NPT,NSET,NNUM,RLINE,RVEC,PLINE)                  PLOTIT 
      IF (ITEST.NE.2) GO TO 270                                          PLOTIT 
      DO 260 N2=K1,K2                                                    PLOTIT 
      DO 260 M=1,NVEC                                                    PLOTIT 
260   RVEC(M,N2)=-RVEC(M,N2)                                             PLOTIT 
270   CONTINUE                                                           PLOTIT 
      IF (NSET.EQ.0) GO TO 300                                           PLOTIT 
C                                                                        PLOTIT 
C     SCALE AND PLOT                                                     PLOTIT 
C                                                                        PLOTIT 
      NIT=0                                                              PLOTIT 
      DO 290 N1=1,NSET                                                   PLOTIT 
      NN=NNUM(N1)                                                        PLOTIT 
      DO 280 NN1=1,NN                                                    PLOTIT 
      NIT=NIT+1                                                          PLOTIT 
      XLINE(NN1,1)=PLINE(NIT,1)                                          PLOTIT 
      XLINE(NN1,2)=PLINE(NIT,2)                                          PLOTIT 
280   CONTINUE                                                           PLOTIT 
      XLINE(NN+1,1)=HMIN                                                 PLOTIT 
      XLINE(NN+1,2)=VMIN                                                 PLOTIT 
      XLINE(NN+2,1)=SCALE                                                PLOTIT 
      XLINE(NN+2,2)=SCALE                                                PLOTIT 
      CALL XYLINE(XLINE(1,1),XLINE(1,2),NN,1,0,0)                        PLOTIT 
290   CONTINUE                                                           PLOTIT 
300   CONTINUE                                                           PLOTIT 
310   CONTINUE                                                           PLOTIT 
      RETURN                                                             PLOTIT 
      END                                                                PLOTIT 
      SUBROUTINE VISTST (KODE,NPT,NSET,NNUM,RLINE,RVEC,PLINE)            PLOTIT 
C                                                                        PLOTIT 
C     *******************************************VERSION B00************ PLOTIT 
C                                                                        PLOTIT 
C                                                                        PLOTIT 
C     TESTS A LINE OF POINTS FOR VISIBILITY                              PLOTIT 
C                                                                        PLOTIT 
C     BASED ON SUBROUTINE VISTST OF NASA TMX-2074.                       PLOTIT 
C                                                                        PLOTIT 
      DIMENSION NNUM(4), RLINE(31,2), RVEC(30,2), PLINE(31,2)            PLOTIT 
C                                                                        PLOTIT 
      NVEC=NPT-1                                                         PLOTIT 
      NPLT=0                                                             PLOTIT 
      NSET=0                                                             PLOTIT 
      ICOUNT=0                                                           PLOTIT 
      IF(KODE.EQ.2) GO TO 20                                             PLOTIT 
      IF(KODE.EQ.3) GO TO 30                                             PLOTIT 
10    N1=1                                                               PLOTIT 
      N2=2                                                               PLOTIT 
      GO TO 40                                                           PLOTIT 
20    N1=1                                                               PLOTIT 
      N2=1                                                               PLOTIT 
      GO TO 40                                                           PLOTIT 
30    N1=2                                                               PLOTIT 
      N2=2                                                               PLOTIT 
40    DO 130 N=1,NPT                                                     PLOTIT 
      IF (N.EQ.1) GO TO 60                                               PLOTIT 
      IF (N.EQ.NPT) GO TO 80                                             PLOTIT 
      DO 50 NN=N1,N2                                                     PLOTIT 
      IF ((RVEC(N-1,NN).GT.0.).OR.(RVEC(N,NN).GT.0.)) GO TO 120          PLOTIT 
50    CONTINUE                                                           PLOTIT 
      GO TO 100                                                          PLOTIT 
60    DO 70 NN=N1,N2                                                     PLOTIT 
      IF (RVEC(1,NN).GT.0.) GO TO 120                                    PLOTIT 
70    CONTINUE                                                           PLOTIT 
      GO TO 100                                                          PLOTIT 
80    DO 90 NN=N1,N2                                                     PLOTIT 
      IF (RVEC(NVEC,NN).GT.0.) GO TO 120                                 PLOTIT 
90    CONTINUE                                                           PLOTIT 
C                                                                        PLOTIT 
C     POINT IS NOT VISIBLE                                               PLOTIT 
C                                                                        PLOTIT 
100   IF (ICOUNT.LE.1) GO TO 110                                         PLOTIT 
      NSET=NSET+1                                                        PLOTIT 
      NNUM(NSET)=ICOUNT                                                  PLOTIT 
110   ICOUNT=0                                                           PLOTIT 
      GO TO 130                                                          PLOTIT 
C                                                                        PLOTIT 
C     POINT IS VISIBLE                                                   PLOTIT 
C                                                                        PLOTIT 
120   NPLT=NPLT+1                                                        PLOTIT 
      ICOUNT=ICOUNT+1                                                    PLOTIT 
      PLINE(NPLT,1)=RLINE(N,1)                                           PLOTIT 
      PLINE(NPLT,2)=RLINE(N,2)                                           PLOTIT 
130   CONTINUE                                                           PLOTIT 
      IF (ICOUNT.LE.1) GO TO 140                                         PLOTIT 
      NSET=NSET+1                                                        PLOTIT 
      NNUM(NSET)=ICOUNT                                                  PLOTIT 
140   RETURN                                                             PLOTIT 
      END                                                                PLOTIT 
      SUBROUTINE PTROT (NPT,A,ALINE,RLINE)                               PTROT
C                                                                        PTROT
C     *******************************************VERSION B00************ PTROT
C                                                                        PTROT
C                                                                        PTROT
C     ROTATES AND PROJECTS A SET OF THREE DIMENSIONAL POINTS             PTROT
C                                                                        PTROT
C     BASED ON SUBROUTINE PTROT OF NASA TMX-2074.                        PTROT
C                                                                        PTROT
      DIMENSION A(2,3), ALINE(31,3), RLINE(31,2)                         PTROT
C                                                                        PTROT
      DO 20 N=1,NPT                                                      PTROT
      RLINE(N,1)=0.                                                      PTROT
      RLINE(N,2)=0.                                                      PTROT
      DO 10 I=1,2                                                        PTROT
      DO 10 J=1,3                                                        PTROT
10    RLINE(N,I)=RLINE(N,I)+A(I,J)*ALINE(N,J)                            PTROT
20    CONTINUE                                                           PTROT
      RETURN                                                             PTROT
      END                                                                PTROT
      SUBROUTINE VECROT (NVEC,C,FVEC,RVEC)                               VECROT 
C                                                                        VECROT 
C     *******************************************VERSION B00************ VECROT 
C                                                                        VECROT 
C                                                                        VECROT 
C     TRANSFORMS VECTORS                                                 VECROT 
C                                                                        VECROT 
C     BASED ON SUBROUTINE VECROT OF NASA TMX-2074.                       VECROT 
C                                                                        VECROT 
      DIMENSION C(3), FVEC(30,3), RVEC(30)                               VECROT 
C                                                                        VECROT 
      DO 20 N=1,NVEC                                                     VECROT 
      SUM=0.                                                             VECROT 
      DO 10 NN=1,3                                                       VECROT 
10    SUM=SUM+C(NN)*FVEC(N,NN)                                           VECROT 
20    RVEC(N)=SUM                                                        VECROT 
      RETURN                                                             VECROT 
      END                                                                VECROT 
      OVERLAY(LWB,4,3)                                                   PLTSTE 
C     OVERLAY(LWB,4,3)                                                   PLTSTE 
      PROGRAM PLTSTE                                                     PLTSTE 
C                                                                        PLTSTE 
C     *******************************************VERSION B00************ PLTSTE 
C                                                                        PLTSTE 
C     CONTROL ROUTINE FOR STEREOSCOPIC AND PERSPECTIVE PLOTS             PLTSTE 
C                                                                        PLTSTE 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP PLTSTE 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       PLTSTE 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR PLTSTE 
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  PLTSTE 
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P PLTSTE 
     1LOTSZ,TYPE,KODE,XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,XMID,YMID,ZMID,BIGD, PLTSTE 
     2ISP                                                                PLTSTE 
      COMMON /HEAD/ TITLE1(14),TITLE2(14)                                PLTSTE 
      COMMON /GRAPH/ PLOT                                                PLTSTE 
      COMMON /PTYPE/ ORT,VU3,STE,PER                                     PLTSTE 
C                                                                        PLTSTE 
      DIMENSION ABC(8), ABCDE(8)                                         PLTSTE 
C                                                                        PLTSTE 
      INTEGER PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9 PLTSTE 
     1,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                         PLTSTE 
C                                                                        PLTSTE 
      REWIND TAPE12                                                      PLTSTE 
      XSAV=XMIN                                                          PLTSTE 
      YSAV=YMIN                                                          PLTSTE 
      ZSAV=ZMIN                                                          PLTSTE 
      XMSAV=XMAX                                                         PLTSTE 
      YMSAV=YMAX                                                         PLTSTE 
      ZMSAV=ZMAX                                                         PLTSTE 
      REWIND TAPE14                                                      PLTSTE 
      IF (PLOT.LT.0) GO TO 10                                            PLTSTE 
      IF (PLOT.GE.0) GO TO 20                                            PLTSTE 
10    CONTINUE                                                           PLTSTE 
      WRITE (TAPE14,70) TITLE1                                           PLTSTE 
      REWIND TAPE14                                                      PLTSTE 
      READ (TAPE14,80) ABC                                               PLTSTE 
      GO TO 30                                                           PLTSTE 
20    CONTINUE                                                           PLTSTE 
      WRITE (TAPE14,70) TITLE2                                           PLTSTE 
      REWIND TAPE14                                                      PLTSTE 
      READ (TAPE14,80) ABC                                               PLTSTE 
30    REWIND TAPE14                                                      PLTSTE 
      WRITE (TAPE14,60) HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG PLTSTE 
     1,PLOTSZ,TYPE,KODE                                                  PLTSTE 
      REWIND TAPE14                                                      PLTSTE 
      READ (TAPE14,80) ABCDE                                             PLTSTE 
      REWIND TAPE14                                                      PLTSTE 
      IF (TYPE.EQ.STE) GO TO 50                                          PLTSTE 
      X=0.                                                               PLTSTE 
      NCHAR=IFIX(11.*PLOTSZ)+3                                           PLTSTE 
      IF (NCHAR.LE.80) GO TO 40                                          PLTSTE 
      NDIF=(NCHAR-80)/2                                                  PLTSTE 
      X=FLOAT(NDIF)/11.                                                  PLTSTE 
      NCHAR=80                                                           PLTSTE 
40    CALL NOTATE (X,1.5,0.1,ABC,0.0,NCHAR)                              PLTSTE 
      CALL NOTATE (X,0.5,0.1,ABCDE,0.0,NCHAR)                            PLTSTE 
      CALL CALPLT (0.,2.,-3)                                             PLTSTE 
50    CONTINUE                                                           PLTSTE 
      ISP=1                                                              PLTSTE 
      IF (TYPE.EQ.STE) ISP=2                                             PLTSTE 
C                                                                        PLTSTE 
C     PERSPECTIVE OR STEREO                                              PLTSTE 
C                                                                        PLTSTE 
      CALL SPPLT                                                         PLTSTE 
      X=PLOTSZ+2.                                                        PLTSTE 
      IF (TYPE.EQ.STE) X=X+PLOTSZ                                        PLTSTE 
      Y=-2.                                                              PLTSTE 
C                                                                        PLTSTE 
C     END OF COMPLETE PLOT                                               PLTSTE 
C                                                                        PLTSTE 
      IF (PLOT.NE.0) CALL NFRAME (X,Y)                                   PLTSTE 
      XMIN=XSAV                                                          PLTSTE 
      YMIN=YSAV                                                          PLTSTE 
      ZMIN=ZSAV                                                          PLTSTE 
      XMAX=XMSAV                                                         PLTSTE 
      YMAX=YMSAV                                                         PLTSTE 
      ZMAX=ZMSAV                                                         PLTSTE 
C                                                                        PLTSTE 
C                                                                        PLTSTE 
C                                                                        PLTSTE 
60    FORMAT (2(A1,1X),A3,9F5.0,A3,16X,I1)                               PLTSTE 
70    FORMAT (13A6,A2)                                                   PLTSTE 
80    FORMAT (8A10)                                                      PLTSTE 
      END                                                                PLTSTE 
      SUBROUTINE SPPLT                                                   SPPLT
C                                                                        SPPLT
C     *******************************************VERSION B00************ SPPLT
C                                                                        SPPLT
C     CONTROL ROUTINE FOR PERSPECTIVE OR STEREO PLOTS                    SPPLT
C                                                                        SPPLT
C     BASED ON PROGRAM SPPLT OF NASA TMX-2074.                           SPPLT
C                                                                        SPPLT
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP SPPLT
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       SPPLT
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR SPPLT
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  SPPLT
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P SPPLT
     1LOTSZ,TYPE,KODE,XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,XMID,YMID,ZMID,BIGD, SPPLT
     2ISP                                                                SPPLT
      COMMON/NEWCOM/K0,K1,K2,K3,K4,K5,K6,KWAF,KWAFOR,KFUS,KRADX(4),      SPPLT
     X              KFORX(4),KF(6),KFINOR(6),KAN(6),KANOR(6)             SPPLT
      COMMON /GRAPH/ PLOT                                                SPPLT
      COMMON /ONE/ NAN2                                                  SPPLT
C                                                                        SPPLT
      DIMENSION XINIT(2), YINIT(2), ZINIT(2)                             SPPLT
C                                                                        SPPLT
      INTEGER PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9 SPPLT
     1,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                         SPPLT
C                                                                        SPPLT
      XINIT(1)=PHI                                                       SPPLT
      XINIT(2)=XF                                                        SPPLT
      YINIT(1)=THETA                                                     SPPLT
      YINIT(2)=YF                                                        SPPLT
      ZINIT(1)=PSI                                                       SPPLT
      ZINIT(2)=ZF                                                        SPPLT
      CALL STERPT (XINIT,YINIT,ZINIT,0,1,0,3,PLOTSZ,DIST,FMAG)           SPPLT
C                                                                        SPPLT
C     LOOP FOR RIGHT AND LEFT FRAMES                                     SPPLT
C                                                                        SPPLT
      DO 180 IC=1,ISP                                                    SPPLT
      REWIND TAPE12                                                      SPPLT
      NCI=-IC                                                            SPPLT
      IF (PLOT.LT.0) GO TO 20                                            SPPLT
      J1=K1                                                              SPPLT
      NWAF=KWAF                                                          SPPLT
      NW=KWAFOR                                                          SPPLT
      J2=K2                                                              SPPLT
      DO 10 I=1,NFUS                                                     SPPLT
      NRADX(I)=KRADX(I)                                                  SPPLT
10    NFORX(I)=KFORX(I)                                                  SPPLT
      J4=K4                                                              SPPLT
      J5=K5                                                              SPPLT
C                                                                        SPPLT
C     BEGIN PLOTTING LINES                                               SPPLT
C                                                                        SPPLT
C                                                                        SPPLT
C     WING                                                               SPPLT
C                                                                        SPPLT
20    IF (J1.EQ.0) GO TO 40                                              SPPLT
      DO 30 I=1,2                                                        SPPLT
      CALL PLTIT3 (NWAF,NW,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG,NCI)  SPPLT
30    CALL PLTIT3 (NW,NWAF,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG,NCI)  SPPLT
C                                                                        SPPLT
C     FUSELAGE (BODY)                                                    SPPLT
C                                                                        SPPLT
40    IF (J2.EQ.0) GO TO 60                                              SPPLT
      DO 50 NFU=1,NFUS                                                   SPPLT
      NANG1=NRADX(NFU)                                                   SPPLT
      NFUSOR=NFORX(NFU)                                                  SPPLT
      CALL PLTIT3 (NANG1,NFUSOR,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG, SPPLT
     1NCI)                                                               SPPLT
      CALL PLTIT3 (NFUSOR,NANG1,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG, SPPLT
     1NCI)                                                               SPPLT
50    CONTINUE                                                           SPPLT
C                                                                        SPPLT
C     POD (NACELLE)                                                      SPPLT
C                                                                        SPPLT
60    IF (J3.EQ.0.OR.PLOT.GT.0) GO TO 80                                 SPPLT
      NANG1=NAN2+1                                                       SPPLT
      DO 70 NP1=1,NP                                                     SPPLT
      CALL PLTIT3 (NANG1,NPODOR,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG, SPPLT
     1NCI)                                                               SPPLT
      CALL PLTIT3 (NPODOR,NANG1,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG, SPPLT
     1NCI)                                                               SPPLT
70    CONTINUE                                                           SPPLT
C                                                                        SPPLT
C     FIN (VERTICAL TAIL)                                                SPPLT
C                                                                        SPPLT
80    IF (J4.EQ.0) GO TO 120                                             SPPLT
      DO 110 NF1=1,NF                                                    SPPLT
      NFOR=NFINOR                                                        SPPLT
      IF (PLOT.LT.0) GO TO 90                                            SPPLT
      IA=KF(NF1)                                                         SPPLT
      IF (IA.EQ.0) IA=2                                                  SPPLT
      IF (KFINOR(NF1).NE.0) NFOR=KFINOR(NF1)                             SPPLT
      GO TO 100                                                          SPPLT
90    IA=2                                                               SPPLT
100   CONTINUE                                                           SPPLT
      DO 110 I=1,2                                                       SPPLT
      CALL PLTIT3 (IA,NFOR,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG,NCI)  SPPLT
      CALL PLTIT3 (NFOR,IA,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG,NCI)  SPPLT
110   CONTINUE                                                           SPPLT
C                                                                        SPPLT
C     CANARD (HORIZONTAL TAIL)                                           SPPLT
C                                                                        SPPLT
120   IF (J5.EQ.0) GO TO 170                                             SPPLT
      DO 160 NCA=1,NCAN                                                  SPPLT
      NCOR=NCANOR                                                        SPPLT
      IF (PLOT.LT.0) GO TO 130                                           SPPLT
      IA=KAN(NCA)                                                        SPPLT
      IF (IA.EQ.0) IA=2                                                  SPPLT
      IKANOR=KANOR(NCA)                                                  SPPLT
      IF (IKANOR.NE.0) NCOR=KANOR(NCA)                                   SPPLT
      GO TO 140                                                          SPPLT
130   IA=2                                                               SPPLT
140   CONTINUE                                                           SPPLT
      DO 150 I=1,2                                                       SPPLT
      CALL PLTIT3 (IA,NCOR,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG,NCI)  SPPLT
      CALL PLTIT3 (NCOR,IA,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG,NCI)  SPPLT
150   CONTINUE                                                           SPPLT
160   CONTINUE                                                           SPPLT
170   CONTINUE                                                           SPPLT
180   CONTINUE                                                           SPPLT
      RETURN                                                             SPPLT
      END                                                                SPPLT
      SUBROUTINE PLTIT3 (NL,NPT,PHI,THETA,PSI,XF,YF,ZF,PLOTSZ,DIST,FMAG, PLTIT3 
     1NCI)                                                               PLTIT3 
C                                                                        PLTIT3 
C     *******************************************VERSION B00************ PLTIT3 
C                                                                        PLTIT3 
C                                                                        PLTIT3 
C     READS LINES OF POINTS DEFINING A SURFACE FROM A FILE AND PLOTS     PLTIT3 
C     PERSPECTIVE VIEWS OR STEREO FRAMES                                 PLTIT3 
C                                                                        PLTIT3 
C     BASED ON SUBROUTINE PLTIT3 OF NASA TMX-2074.                       PLTIT3 
C                                                                        PLTIT3 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP PLTIT3 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       PLTIT3 
C                                                                        PLTIT3 
      DIMENSION ALINE(33,3)                                              PLTIT3 
C                                                                        PLTIT3 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE PLTIT3 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              PLTIT3 
C                                                                        PLTIT3 
      ALINE(NPT+1,1)=PHI                                                 PLTIT3 
      ALINE(NPT+2,1)=XF                                                  PLTIT3 
      ALINE(NPT+1,2)=THETA                                               PLTIT3 
      ALINE(NPT+2,2)=YF                                                  PLTIT3 
      ALINE(NPT+1,3)=PSI                                                 PLTIT3 
      ALINE(NPT+2,3)=ZF                                                  PLTIT3 
      DO 50 N=1,NL                                                       PLTIT3 
      READ (TAPE12) ((ALINE(NN,N3),NN=1,NPT),N3=1,3)                     PLTIT3 
      IF (N.EQ.NL) GO TO 10                                              PLTIT3 
C                                                                        PLTIT3 
C     SKIP VECTORS                                                       PLTIT3 
C                                                                        PLTIT3 
      READ (TAPE12) VEC                                                  PLTIT3 
C                                                                        PLTIT3 
C     LOOP FOR RIGHT AND LEFT SIDE OF CONFIGURATION                      PLTIT3 
C                                                                        PLTIT3 
10    DO 40 NN2=1,2                                                      PLTIT3 
      IF (NN2.EQ.1) GO TO 30                                             PLTIT3 
      DO 20 NN=1,NPT                                                     PLTIT3 
20    ALINE(NN,2)=-ALINE(NN,2)                                           PLTIT3 
30    CALL STERPT (ALINE(1,1),ALINE(1,2),ALINE(1,3),NPT,1,NCI,3,PLOTSZ,D PLTIT3 
     1IST,FMAG)                                                          PLTIT3 
40    CONTINUE                                                           PLTIT3 
50    CONTINUE                                                           PLTIT3 
      RETURN                                                             PLTIT3 
      END                                                                PLTIT3 
      SUBROUTINE STERPT (X,Y,Z,N,K,NC,IP,PAG,PLA,XPR)                    STERPT 
C                                                                        STERPT 
C     *******************************************VERSION B00************ STERPT 
C                                                                        STERPT 
C                                                                        STERPT 
C     PLOTS THE PERSPECTIVE PROJECTION OF DATA FOR A GIVEN THREE         STERPT 
C     DIMENSIONAL ARRAY. TWO PASSES THROUGH THIS ROUTINE WILL GENERATE A STERPT 
C     PAIR OF STEREO FRAMES.                                             STERPT 
C                                                                        STERPT 
C     BASED ON SUBROUTINE STERPT OF NASA TMX-2074.                       STERPT 
C                                                                        STERPT 
      COMMON /PI/ PI,RADEG,DEGRAD                                        STERPT 
C                                                                        STERPT 
      DIMENSION VP(3), TRAN(3), SANG(3), CANG(3), ADJ(3), PT(4), XLP(2), STERPT 
     1 ZLP(2), X(1), Y(1), Z(1), PLX(4), PLY(4), PLZ(2), PIX(4), PIY(4), STERPT 
     2 PIZ(2), ILP(4), IPL(4)                                            STERPT 
C                                                                        STERPT 
      PI2=PI/2.                                                          STERPT 
      PI32=PI*(3./2.)                                                    STERPT 
      PI42=2.*PI                                                         STERPT 
      PAR=1.125                                                          STERPT 
      NPG=0                                                              STERPT 
      NPT=1                                                              STERPT 
      FRAME=9.80                                                         STERPT 
      TURN=11.01                                                         STERPT 
      NO=1                                                               STERPT 
      KK=K                                                               STERPT 
      II=IP                                                              STERPT 
      IF (NC) 160,10,220                                                 STERPT 
10    NP=N*K+1                                                           STERPT 
      NR=NP+K                                                            STERPT 
      PLIM=PAG/2.                                                        STERPT 
      SF=XPR                                                             STERPT 
      VPL=PLA                                                            STERPT 
      DO 20 I=1,4                                                        STERPT 
      PLX(I)=0.                                                          STERPT 
      PLY(I)=0.                                                          STERPT 
      PIX(I)=0.                                                          STERPT 
      PIY(I)=0.                                                          STERPT 
      IPL(I)=0                                                           STERPT 
20    ILP(I)=0                                                           STERPT 
      DO 30 I=1,2                                                        STERPT 
      PLZ(I)=0.                                                          STERPT 
30    PIZ(I)=0.                                                          STERPT 
      VPX=X(NP)                                                          STERPT 
      VPY=Y(NP)                                                          STERPT 
      VPZ=Z(NP)                                                          STERPT 
      FPX=X(NR)                                                          STERPT 
      FPY=Y(NR)                                                          STERPT 
      FPZ=Z(NR)                                                          STERPT 
      VX=VPX-FPX                                                         STERPT 
      VY=VPY-FPY                                                         STERPT 
      VZ=VPZ-FPZ                                                         STERPT 
      VP(2)=SQRT((VX**2)+(VY**2))                                        STERPT 
      VP(3)=SQRT((VZ**2)+(VP(2)**2))                                     STERPT 
      TRAN(1)=VPX-(VPL*(VX/VP(2)))                                       STERPT 
      TRAN(2)=VPY-(VPL*(VY/VP(2)))                                       STERPT 
      TRAN(3)=VPZ-(VPL*(VZ/VP(3)))                                       STERPT 
      VANG=ATAN((PAR/VP(3)))                                             STERPT 
      IF (VX) 110,40,70                                                  STERPT 
40    IF (VY) 60,600,50                                                  STERPT 
50    PANG=PI2                                                           STERPT 
      GO TO 150                                                          STERPT 
60    PANG=PI32                                                          STERPT 
      GO TO 150                                                          STERPT 
70    IF (VY) 100,80,90                                                  STERPT 
80    PANG=0.                                                            STERPT 
      GO TO 150                                                          STERPT 
90    PANG=ATAN((VY/VX))                                                 STERPT 
      GO TO 150                                                          STERPT 
100   PANG=PI42-ATAN(((ABS(VY))/VX))                                     STERPT 
      GO TO 150                                                          STERPT 
110   IF (VY) 140,120,130                                                STERPT 
120   PANG=PI                                                            STERPT 
      GO TO 150                                                          STERPT 
130   PANG=PI-ATAN((VY/(ABS(VX))))                                       STERPT 
      GO TO 150                                                          STERPT 
140   PANG=PI+ATAN(((ABS(VY))/(ABS(VX))))                                STERPT 
150   PANG=PI32-PANG                                                     STERPT 
      UANG=PANG-VANG                                                     STERPT 
      RANG=UANG+(2.*VANG)                                                STERPT 
      SANG(1)=SIN(UANG)                                                  STERPT 
      SANG(2)=SIN(RANG)                                                  STERPT 
      CANG(1)=COS(UANG)                                                  STERPT 
      CANG(2)=COS(RANG)                                                  STERPT 
      SANG(3)=VZ/VP(3)                                                   STERPT 
      CANG(3)=VP(2)/VP(3)                                                STERPT 
      VP(3)=VPL                                                          STERPT 
      XLP(1)=0.                                                          STERPT 
      ZLP(1)=0.                                                          STERPT 
      XLP(2)=FRAME                                                       STERPT 
      ZLP(2)=0.                                                          STERPT 
      ADJ(1)=PLIM                                                        STERPT 
      ADJ(2)=PLIM                                                        STERPT 
      ADJ(3)=ADJ(2)+FRAME                                                STERPT 
      IF (N) 600,600,220                                                 STERPT 
160   M=IABS(NC)                                                         STERPT 
      L=M                                                                STERPT 
      IF (NPG+NC) 230,170,230                                            STERPT 
170   IF (2+NC) 600,190,180                                              STERPT 
180   NPG=2                                                              STERPT 
      GO TO 200                                                          STERPT 
190   NPG=1                                                              STERPT 
200   CONTINUE                                                           STERPT 
      DO 210 I=1,L                                                       STERPT 
      CALL CALPLT (TURN,0.,-3)                                           STERPT 
210   CONTINUE                                                           STERPT 
      CALL CALPLT (XLP(M),ZLP(M),3)                                      STERPT 
220   M=1                                                                STERPT 
      L=2                                                                STERPT 
230   DO 590 I=M,L                                                       STERPT 
      IF (NPG) 600,240,300                                               STERPT 
240   IF (NC) 250,290,290                                                STERPT 
250   IF (NPT+NC) 300,260,300                                            STERPT 
260   IF (2+NC) 600,280,270                                              STERPT 
270   NPT=2                                                              STERPT 
      GO TO 290                                                          STERPT 
280   NPT=1                                                              STERPT 
290   CONTINUE                                                           STERPT 
      CALL CALPLT (XLP(I),ZLP(I),3)                                      STERPT 
300   DO 580 J=1,N                                                       STERPT 
      PT(1)=((X(NO)-TRAN(1))*CANG(I))-((Y(NO)-TRAN(2))*SANG(I))          STERPT 
      PT(4)=((X(NO)-TRAN(1))*SANG(I))+((Y(NO)-TRAN(2))*CANG(I))          STERPT 
      PT(2)=((PT(4)*CANG(3))-((Z(NO)-TRAN(3))*SANG(3)))                  STERPT 
      PT(3)=((PT(4)*SANG(3))+((Z(NO)-TRAN(3))*CANG(3)))                  STERPT 
      IF (PT(2)) 310,360,360                                             STERPT 
310   IF (ILP(I)) 600,320,350                                            STERPT 
320   IF (II-3) 330,340,600                                              STERPT 
330   VX=PLX(I)-PT(1)                                                    STERPT 
      VY=PLY(I)-PT(2)                                                    STERPT 
      VZ=PLZ(I)-PT(3)                                                    STERPT 
      VP(1)=SQRT((VX**2)+(VY**2))                                        STERPT 
      VP(2)=SQRT((VZ**2)+(VP(1)**2))                                     STERPT 
      VPL=PLY(I)/(VY/VP(1))                                              STERPT 
      PT(4)=PLX(I)-((VX/VP(1))*VPL)                                      STERPT 
      PLX(I)=PT(1)                                                       STERPT 
      PT(1)=PT(4)                                                        STERPT 
      PLY(I)=PT(2)                                                       STERPT 
      PT(2)=0.                                                           STERPT 
      PT(4)=PLZ(I)-((VZ/VP(2))*VPL)                                      STERPT 
      PLZ(I)=PT(3)                                                       STERPT 
      PT(3)=PT(4)                                                        STERPT 
      ILP(I)=1                                                           STERPT 
      GO TO 410                                                          STERPT 
340   ILP(I)=1                                                           STERPT 
350   PLX(I)=PT(1)                                                       STERPT 
      PLY(I)=PT(2)                                                       STERPT 
      PLZ(I)=PT(3)                                                       STERPT 
      GO TO 540                                                          STERPT 
360   IF (ILP(I)) 600,400,370                                            STERPT 
370   IF (II-3) 380,390,600                                              VISTST 
380   II=3                                                               VISTST 
      IPL(I)=1                                                           VISTST 
      PIX(I)=PT(1)                                                       VISTST 
      PIY(I)=PT(2)                                                       VISTST 
      PIZ(I)=PT(3)                                                       VISTST 
      VX=PT(1)-PLX(I)                                                    VISTST 
      VX=PT(1)-PLX(I)                                                    VISTST 
      VY=PT(2)-PLY(I)                                                    VISTST 
      VZ=PT(3)-PLZ(I)                                                    VISTST 
      VP(1)=SQRT((VX**2)+(VY**2))                                        VISTST 
      VP(2)=SQRT((VZ**2)+(VP(1)**2))                                     VISTST 
      VPL=PT(2)/(VY/VP(1))                                               VISTST 
      PT(2)=0.                                                           VISTST 
      PT(1)=PT(1)-((VX/VP(1))*VPL)                                       VISTST 
      PT(3)=PT(3)-((VZ/VP(2))*VPL)                                       VISTST 
390   ILP(I)=0                                                           VISTST 
400   PLX(I)=PT(1)                                                       VISTST 
      PLY(I)=PT(2)                                                       VISTST 
      PLZ(I)=PT(3)                                                       VISTST 
410   XP=(PT(1)+(PT(2)*(-PT(1))/(PT(2)+VP(3))))*SF                       VISTST 
      ZP=(PT(3)+(PT(2)*(-PT(3))/(PT(2)+VP(3))))*SF                       VISTST 
      VPL=SQRT((XP**2)+(ZP**2))                                          VISTST 
      IF (VPL-PLIM) 470,470,420                                          VISTST 
420   IF (ILP(I+2)) 600,430,460                                          VISTST 
430   IF (II-3) 440,450,600                                              VISTST 
440   PLX(I+2)=XP                                                        VISTST 
      PLY(I+2)=ZP                                                        VISTST 
      XP=PLIM*(XP/VPL)                                                   VISTST 
      ZP=PLIM*(ZP/VPL)                                                   VISTST 
      ILP(I+2)=1                                                         VISTST 
      GO TO 530                                                          VISTST 
450   ILP(I+2)=1                                                         VISTST 
460   PLX(I+2)=XP                                                        VISTST 
      PLY(I+2)=ZP                                                        VISTST 
      GO TO 540                                                          VISTST 
470   IF (ILP(I+2)) 600,510,480                                          VISTST 
480   IF (II-3) 490,500,600                                              VISTST 
490   II=3                                                               VISTST 
      IPL(I+2)=1                                                         VISTST 
      PIX(I+2)=XP                                                        VISTST 
      PIY(I+2)=ZP                                                        VISTST 
      VPL=SQRT((PLX(I+2)**2)+(PLY(I+2)**2))                              VISTST 
      XP=PLIM*(PLX(I+2)/VPL)                                             VISTST 
      ZP=PLIM*(PLY(I+2)/VPL)                                             VISTST 
500   ILP(I+2)=0                                                         VISTST 
      GO TO 520                                                          VISTST 
510   IF ((SQRT(((PLX(I+2))**2)+((PLY(I+2))**2)))-PLIM) 520,520,480      VISTST 
520   PLX(I+2)=XP                                                        VISTST 
      PLY(I+2)=ZP                                                        VISTST 
530   XPT=XP+ADJ(I+1)                                                    VISTST 
      YPT=ZP+ADJ(1)                                                      VISTST 
      CALL CALPLT (XPT,YPT,II)                                           VISTST 
540   II=2                                                               VISTST 
      IF (IPL(I+2)) 600,560,550                                          VISTST 
550   IPL(I+2)=0                                                         VISTST 
      XP=PIX(I+2)                                                        VISTST 
      ZP=PIY(I+2)                                                        VISTST 
      GO TO 510                                                          VISTST 
560   IF (IPL(I)) 600,580,570                                            VISTST 
570   IPL(I)=0                                                           VISTST 
      PT(1)=PIX(I)                                                       VISTST 
      PT(2)=PIY(I)                                                       VISTST 
      PT(3)=PIZ(I)                                                       VISTST 
      GO TO 400                                                          VISTST 
580   NO=NO+KK                                                           VISTST 
      XLP(I)=XPT                                                         VISTST 
      ZLP(I)=YPT                                                         VISTST 
      NO=1                                                               VISTST 
590   II=IP                                                              VISTST 
600   CONTINUE                                                           VISTST 
      RETURN                                                             VISTST 
      END                                                                VISTST 
      OVERLAY(LWB,4,4)                                                   SPLTSV 
C     OVERLAY(LWB,4,4)                                                   SPLTSV 
      PROGRAM SPLTSV                                                     SPLTSV 
C                                                                        SPLTSV 
C     *******************************************VERSION B00************ SPLTSV 
C                                                                        SPLTSV 
C                                                                        SPLTSV 
C     SAVE SINGULARITY PANELING PLOT INFORMATION                         SPLTSV 
C                                                                        SPLTSV 
C     BASED ON PROGRAM START OF NASA TMX-2074.                           SPLTSV 
C                                                                        SPLTSV 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP SPLTSV 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       SPLTSV 
      COMMON /BLANK/ J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,NRADX(4),NFOR SPLTSV 
     1X(4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR,J2TEST,NW,NC                  SPLTSV 
      COMMON /BLANK2/ HORZ,VERT,TEST1,PHI,THETA,PSI,XF,YF,ZF,DIST,FMAG,P SPLTSV 
     1LOTSZ,TYPE,KODE,XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,XMID,YMID,ZMID,BIGD, SPLTSV 
     2ISP                                                                SPLTSV 
      COMMON/NEWCOM/K0,K1,K2,K3,K4,K5,K6,KWAF,KWAFOR,KFUS,KRADX(4),      SPLTSV 
     X              KFORX(4),KF(6),KFINOR(6),KAN(6),KANOR(6)             SPLTSV 
C                                                                        SPLTSV 
      DIMENSION XC(30,20), YC(30,20), ZC(30,20), ALRT(31,3,2), VECRT(30, SPLTSV 
     13), KWFR(6), KWF(6), NWF(6), NCANR(6)                              SPLTSV 
C                                                                        SPLTSV 
      INTEGER TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAPE9,TAPE SPLTSV 
     110,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                              SPLTSV 
C                                                                        SPLTSV 
      READ (TAPE11) K0,K1,K2,K3,K4,K5,K6                                 SPLTSV 
      IF (K1.EQ.0) GO TO 190                                             SPLTSV 
C                                                                        SPLTSV 
C     WING                                                               SPLTSV 
C                                                                        SPLTSV 
      PRINT 5                                                            SPLTSV 
    5 FORMAT(10X,*  SPLTSV   - COMMON/NEWCOM/  *,//)                     SPLTSV 
      CALL PDUMP(K0,KANOR(6),2)                                          SPLTSV 
      KKF = KWAF                                                         SPLTSV 
      IF (KKF.EQ.0) KKF=2                                                SPLTSV 
      KWAF=KKF                                                           SPLTSV 
      IF (KWAFOR.EQ.0) KWAFOR=NWAFOR                                     SPLTSV 
      DO 180 I=1,2                                                       SPLTSV 
      READ (TAPE3) ((XC(J,K),YC(J,K),ZC(J,K),J=1,KWAFOR),K=1,KKF)        SPLTSV 
C                                                                        SPLTSV 
C     MAXIMA AND MINIMA                                                  SPLTSV 
C                                                                        SPLTSV 
      IF (I.EQ.2) GO TO 10                                               SPLTSV 
      XMIN=XC(1,1)                                                       SPLTSV 
      XMAX=XC(1,1)                                                       SPLTSV 
      YMIN=YC(1,1)                                                       SPLTSV 
      YMAX=YC(1,1)                                                       SPLTSV 
      ZMIN=ZC(1,1)                                                       SPLTSV 
      ZMAX=ZC(1,1)                                                       SPLTSV 
10    DO 30 N=1,KKF                                                      SPLTSV 
      DO 20 NN=1,KWAFOR                                                  SPLTSV 
      XMIN=AMIN1(XMIN,XC(NN,N))                                          SPLTSV 
      XMAX=AMAX1(XMAX,XC(NN,N))                                          SPLTSV 
      YMIN=AMIN1(YMIN,YC(NN,N))                                          SPLTSV 
      YMAX=AMAX1(YMAX,YC(NN,N))                                          SPLTSV 
      ZMIN=AMIN1(ZMIN,ZC(NN,N))                                          SPLTSV 
      ZMAX=AMAX1(ZMAX,ZC(NN,N))                                          SPLTSV 
20    CONTINUE                                                           SPLTSV 
30    CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     WRITE PLOT TAPE                                                    SPLTSV 
C                                                                        SPLTSV 
      NL1=KWAFOR-1                                                       SPLTSV 
C                                                                        SPLTSV 
C     SETUP FIRST LINE IN STREAMWISE DIRECTION                           SPLTSV 
C                                                                        SPLTSV 
      DO 40 N=1,KWAFOR                                                   SPLTSV 
      ALRT(N,1,2)=XC(N,1)                                                SPLTSV 
      ALRT(N,2,2)=YC(N,1)                                                SPLTSV 
      ALRT(N,3,2)=ZC(N,1)                                                SPLTSV 
40    CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,KWAFOR),N3=1,3)                  SPLTSV 
      DO 100 NN=2,KKF                                                    SPLTSV 
      DO 50 N=1,KWAFOR                                                   SPLTSV 
      DO 50 N3=1,3                                                       SPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          SPLTSV 
50    CONTINUE                                                           SPLTSV 
      DO 60 N=1,KWAFOR                                                   SPLTSV 
      ALRT(N,1,2)=XC(N,NN)                                               SPLTSV 
      ALRT(N,2,2)=YC(N,NN)                                               SPLTSV 
      ALRT(N,3,2)=ZC(N,NN)                                               SPLTSV 
60    CONTINUE                                                           SPLTSV 
      IF(I.EQ.2) GO TO 80                                                SPLTSV 
70    CALL SURCC (KWAFOR,ALRT,VECRT)                                     SPLTSV 
      GO TO 90                                                           SPLTSV 
80    CALL SURCL (KWAFOR,ALRT,VECRT)                                     SPLTSV 
90    CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,KWAFOR),N3=1,3)                  SPLTSV 
100   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     SETUP FIRST LINE IN SPANWISE DIRECTION                             SPLTSV 
C                                                                        SPLTSV 
      NL1=KKF-1                                                          SPLTSV 
      DO 110 N=1,KKF                                                     SPLTSV 
      ALRT(N,1,2)=XC(1,N)                                                SPLTSV 
      ALRT(N,2,2)=YC(1,N)                                                SPLTSV 
      ALRT(N,3,2)=ZC(1,N)                                                SPLTSV 
110   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,KKF),N3=1,3)                     SPLTSV 
      DO 170 NN=2,KWAFOR                                                 SPLTSV 
      DO 120 N=1,KKF                                                     SPLTSV 
      DO 120 N3=1,3                                                      SPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          SPLTSV 
120   CONTINUE                                                           SPLTSV 
      DO 130 N=1,KKF                                                     SPLTSV 
      ALRT(N,1,2)=XC(NN,N)                                               SPLTSV 
      ALRT(N,2,2)=YC(NN,N)                                               SPLTSV 
      ALRT(N,3,2)=ZC(NN,N)                                               SPLTSV 
130   CONTINUE                                                           SPLTSV 
      IF(I.EQ.2) GO TO 150                                               SPLTSV 
140   CALL SURCL (KKF,ALRT,VECRT)                                        SPLTSV 
      GO TO 160                                                          SPLTSV 
150   CALL SURCC (KKF,ALRT,VECRT)                                        SPLTSV 
160   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,KKF),N3=1,3)                     SPLTSV 
170   CONTINUE                                                           SPLTSV 
180   CONTINUE                                                           SPLTSV 
190   IF (K2.EQ.0) GO TO 310                                             SPLTSV 
C                                                                        SPLTSV 
C     FUSELAGE (BODY)                                                    SPLTSV 
C                                                                        SPLTSV 
      NFUS = KFUS                                                        SPLTSV 
      DO 300 NFU=1,NFUS                                                  SPLTSV 
      NRAD=KRADX(NFU)                                                    SPLTSV 
      NFUSOR=KFORX(NFU)                                                  SPLTSV 
      IF (NRAD.EQ.0) NRAD=NRADX(NFU)                                     SPLTSV 
      IF (NFUSOR.EQ.0) NFUSOR=NFORX(NFU)                                 SPLTSV 
      NL1=NFUSOR-1                                                       SPLTSV 
      READ (TAPE3) ((XC(J,K),YC(J,K),ZC(J,K),J=1,NFUSOR),K=1,NRAD)       SPLTSV 
      IF (NFU.EQ.1.AND.K1.NE.0) GO TO 200                                SPLTSV 
      IF (NFU.NE.1) GO TO 200                                            SPLTSV 
C                                                                        SPLTSV 
C     MAXIMA AND MINIMA                                                  SPLTSV 
C                                                                        SPLTSV 
      XMIN=XC(1,1)                                                       SPLTSV 
      XMAX=XC(1,1)                                                       SPLTSV 
      YMIN=YC(1,1)                                                       SPLTSV 
      YMAX=YC(1,1)                                                       SPLTSV 
      ZMIN=ZC(1,1)                                                       SPLTSV 
      ZMAX=ZC(1,1)                                                       SPLTSV 
200   DO 210 NN=1,NFUSOR                                                 SPLTSV 
      XMIN=AMIN1(XMIN,XC(NN,1))                                          SPLTSV 
      XMAX=AMAX1(XMAX,XC(NN,1))                                          SPLTSV 
      DO 210 K=1,NRAD                                                    SPLTSV 
      YMIN=AMIN1(YMIN,YC(NN,K))                                          SPLTSV 
      YMAX=AMAX1(YMAX,YC(NN,K))                                          SPLTSV 
      ZMIN=AMIN1(ZMIN,ZC(NN,K))                                          SPLTSV 
      ZMAX=AMAX1(ZMAX,ZC(NN,K))                                          SPLTSV 
210   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     SETUP FIRST LINE IN STREAMWISE DIRECTION                           SPLTSV 
C                                                                        SPLTSV 
      DO 220 N=1,NFUSOR                                                  SPLTSV 
      ALRT(N,1,2)=XC(N,1)                                                SPLTSV 
      ALRT(N,2,2)=YC(N,1)                                                SPLTSV 
      ALRT(N,3,2)=ZC(N,1)                                                SPLTSV 
220   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NFUSOR),N3=1,3)                  SPLTSV 
      DO 250 NN=2,NRAD                                                   SPLTSV 
      DO 230 N=1,NFUSOR                                                  SPLTSV 
      DO 230 N3=1,3                                                      SPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          SPLTSV 
230   CONTINUE                                                           SPLTSV 
      DO 240 N=1,NFUSOR                                                  SPLTSV 
      ALRT(N,1,2)=XC(N,NN)                                               SPLTSV 
      ALRT(N,2,2)=YC(N,NN)                                               SPLTSV 
      ALRT(N,3,2)=ZC(N,NN)                                               SPLTSV 
240   CONTINUE                                                           SPLTSV 
      CALL SURCL (NFUSOR,ALRT,VECRT)                                     SPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NFUSOR),N3=1,3)                  SPLTSV 
250   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     SETUP FIRST LINE AROUND BODY (FUSELAGE)                            SPLTSV 
C                                                                        SPLTSV 
      NL1=NRAD-1                                                         SPLTSV 
      DO 260 N=1,NRAD                                                    SPLTSV 
      ALRT(N,1,2)=XC(1,N)                                                SPLTSV 
      ALRT(N,2,2)=YC(1,N)                                                SPLTSV 
      ALRT(N,3,2)=ZC(1,N)                                                SPLTSV 
260   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NRAD),N3=1,3)                    SPLTSV 
      DO 290 NN=2,NFUSOR                                                 SPLTSV 
      DO 270 N=1,NRAD                                                    SPLTSV 
      DO 270 N3=1,3                                                      SPLTSV 
      ALRT(N,N3,1)=ALRT(N,N3,2)                                          SPLTSV 
270   CONTINUE                                                           SPLTSV 
      DO 280 N=1,NRAD                                                    SPLTSV 
      ALRT(N,1,2)=XC(NN,N)                                               SPLTSV 
      ALRT(N,2,2)=YC(NN,N)                                               SPLTSV 
      ALRT(N,3,2)=ZC(NN,N)                                               SPLTSV 
280   CONTINUE                                                           SPLTSV 
      CALL SURCC (NRAD,ALRT,VECRT)                                       SPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NL1),N3=1,3)                      SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NRAD),N3=1,3)                    SPLTSV 
290   CONTINUE                                                           SPLTSV 
300   CONTINUE                                                           SPLTSV 
310   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     FIN (VERTICAL TAIL)                                                SPLTSV 
C                                                                        SPLTSV 
      IF (K4.EQ.0) GO TO 490                                             SPLTSV 
      DO 312 I = 1,NF                                                    SPLTSV 
      KWF(I) = KF(I)                                                     SPLTSV 
  312 KWFR(I) = KFINOR(I)                                                SPLTSV 
      DO 480 NT=1,NF                                                     SPLTSV 
      KW=KWFR(NT)                                                        SPLTSV 
      KK=KWF(NT)                                                         SPLTSV 
      IF (KK.EQ.0) KK=2                                                  SPLTSV 
      IF (KW.EQ.0) KW=NFINOR                                             SPLTSV 
      DO 470 I=1,2                                                       SPLTSV 
      READ (TAPE3) ((XC(J,L),YC(J,L),ZC(J,L),J=1,KW),L=1,KK)             SPLTSV 
      IF (NT.EQ.1.AND.(K1.NE.0.OR.K2.NE.0)) GO TO 320                    SPLTSV 
      IF (NT.NE.1) GO TO 320                                             SPLTSV 
C                                                                        SPLTSV 
C     MAXIMA AND MINIMA                                                  SPLTSV 
C                                                                        SPLTSV 
      XMIN=XC(1,1)                                                       SPLTSV 
      XMAX=XC(1,1)                                                       SPLTSV 
      YMIN=YC(1,1)                                                       SPLTSV 
      YMAX=YC(1,1)                                                       SPLTSV 
      ZMIN=ZC(1,1)                                                       SPLTSV 
      ZMAX=ZC(1,1)                                                       SPLTSV 
320   DO 330 IK=1,KK                                                     SPLTSV 
      DO 330 K=1,KW                                                      SPLTSV 
      XMIN=AMIN1(XMIN,XC(K,IK))                                          SPLTSV 
      XMAX=AMAX1(XMAX,XC(K,IK))                                          SPLTSV 
      YMAX=AMAX1(YMAX,YC(K,IK))                                          SPLTSV 
      ZMIN=AMIN1(ZMIN,ZC(K,IK))                                          SPLTSV 
      ZMAX=AMAX1(ZMAX,ZC(K,IK))                                          SPLTSV 
330   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     WRITE PLOT TAPE                                                    SPLTSV 
C                                                                        SPLTSV 
      NN1=KW-1                                                           SPLTSV 
C                                                                        SPLTSV 
C     SETUP LINES IN STREAMWISE DIRECTION                                SPLTSV 
C                                                                        SPLTSV 
      DO 340 J=1,KW                                                      SPLTSV 
      ALRT(J,1,2)=XC(J,1)                                                SPLTSV 
      ALRT(J,2,2)=YC(J,1)                                                SPLTSV 
      ALRT(J,3,2)=ZC(J,1)                                                SPLTSV 
340   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,KW),N3=1,3)                      SPLTSV 
      DO 400 K=2,KK                                                      SPLTSV 
      DO 350 J=1,KW                                                      SPLTSV 
      ALRT(J,1,1)=ALRT(J,1,2)                                            SPLTSV 
      ALRT(J,2,1)=ALRT(J,2,2)                                            SPLTSV 
      ALRT(J,3,1)=ALRT(J,3,2)                                            SPLTSV 
350   CONTINUE                                                           SPLTSV 
      DO 360 J=1,KW                                                      SPLTSV 
      ALRT(J,1,2)=XC(J,K)                                                SPLTSV 
      ALRT(J,2,2)=YC(J,K)                                                SPLTSV 
      ALRT(J,3,2)=ZC(J,K)                                                SPLTSV 
360   CONTINUE                                                           SPLTSV 
      IF(I.EQ.2) GO TO 380                                               SPLTSV 
370   CALL SURCL (KW,ALRT,VECRT)                                         SPLTSV 
      GO TO 390                                                          SPLTSV 
380   CALL SURCC (KW,ALRT,VECRT)                                         SPLTSV 
390   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NN1),N3=1,3)                      SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,KW),N3=1,3)                      SPLTSV 
400   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     SETUP LINES IN SPANWISE DIRECTION                                  SPLTSV 
C                                                                        SPLTSV 
      KK1=KK-1                                                           SPLTSV 
      DO 410 II=1,KK                                                     SPLTSV 
      ALRT(II,1,2)=XC(1,II)                                              SPLTSV 
      ALRT(II,2,2)=YC(1,II)                                              SPLTSV 
      ALRT(II,3,2)=ZC(1,II)                                              SPLTSV 
410   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,KK),N3=1,3)                      SPLTSV 
      DO 470 K=2,KW                                                      SPLTSV 
      DO 420 J=1,KK                                                      SPLTSV 
      ALRT(J,1,1)=ALRT(J,1,2)                                            SPLTSV 
      ALRT(J,2,1)=ALRT(J,2,2)                                            SPLTSV 
      ALRT(J,3,1)=ALRT(J,3,2)                                            SPLTSV 
420   CONTINUE                                                           SPLTSV 
      DO 430 J=1,KK                                                      SPLTSV 
      ALRT(J,1,2)=XC(K,J)                                                SPLTSV 
      ALRT(J,2,2)=YC(K,J)                                                SPLTSV 
      ALRT(J,3,2)=ZC(K,J)                                                SPLTSV 
430   CONTINUE                                                           SPLTSV 
      IF(I.EQ.2) GO TO 450                                               SPLTSV 
440   CALL SURCC (KK,ALRT,VECRT)                                         SPLTSV 
      GO TO 460                                                          SPLTSV 
450   CALL SURCL (KK,ALRT,VECRT)                                         SPLTSV 
460   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,KK1),N3=1,3)                      SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,KK),N3=1,3)                      SPLTSV 
470   CONTINUE                                                           SPLTSV 
480   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     CANARD (HORIZONTAL TAIL)                                           SPLTSV 
C                                                                        SPLTSV 
490   IF (K5.EQ.0) GO TO 680                                             SPLTSV 
      DO 495 I = 1,NCAN                                                  SPLTSV 
      NWF(I) = KAN(I)                                                    SPLTSV 
  495 NCANR(I) = KANOR(I)                                                SPLTSV 
      DO 670 KAC=1,NCAN                                                  SPLTSV 
      NCN=NWF(KAC)                                                       SPLTSV 
      NC=NCANR(KAC)                                                      SPLTSV 
      IF (NCN.EQ.0) NCN=2                                                SPLTSV 
      IF (NC.EQ.0) NC=NCANOR                                             SPLTSV 
      DO 660 I=1,2                                                       SPLTSV 
      READ (TAPE3) ((XC(J,L),YC(J,L),ZC(J,L),J=1,NC),L=1,NCN)            SPLTSV 
      IF (KAC.EQ.1.AND.(K1.NE.0.OR.K2.NE.0.OR.K4.NE.0)) GO TO 500        SPLTSV 
      IF (KAC.NE.1) GO TO 500                                            SPLTSV 
C                                                                        SPLTSV 
C     MAXIMA AND MINIMA                                                  SPLTSV 
C                                                                        SPLTSV 
      XMIN=XC(1,1)                                                       SPLTSV 
      XMAX=XC(1,1)                                                       SPLTSV 
      YMAX=YC(1,NCN)                                                     SPLTSV 
      ZMIN=ZC(1,1)                                                       SPLTSV 
      ZMAX=ZC(1,1)                                                       SPLTSV 
500   DO 510 IK=1,NCN                                                    SPLTSV 
      DO 510 K=1,NC                                                      SPLTSV 
      XMIN=AMIN1(XMIN,XC(K,IK))                                          SPLTSV 
      XMAX=AMAX1(XMAX,XC(K,IK))                                          SPLTSV 
      YMAX=AMAX1(YMAX,YC(K,IK))                                          SPLTSV 
      ZMIN=AMIN1(ZMIN,ZC(K,IK))                                          SPLTSV 
      ZMAX=AMAX1(ZMAX,ZC(K,IK))                                          SPLTSV 
510   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     WRITE PLOT TAPE                                                    SPLTSV 
C                                                                        SPLTSV 
      NN1=NC-1                                                           SPLTSV 
C                                                                        SPLTSV 
C     SETUP LINES IN STREAMWISE DIRECTION                                SPLTSV 
C                                                                        SPLTSV 
      DO 520 J=1,NC                                                      SPLTSV 
      ALRT(J,1,2)=XC(J,1)                                                SPLTSV 
      ALRT(J,2,2)=YC(J,1)                                                SPLTSV 
      ALRT(J,3,2)=ZC(J,1)                                                SPLTSV 
520   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NC),N3=1,3)                      SPLTSV 
      DO 580 K=2,NCN                                                     SPLTSV 
      DO 530 J=1,NC                                                      SPLTSV 
      ALRT(J,1,1)=ALRT(J,1,2)                                            SPLTSV 
      ALRT(J,2,1)=ALRT(J,2,2)                                            SPLTSV 
      ALRT(J,3,1)=ALRT(J,3,2)                                            SPLTSV 
530   CONTINUE                                                           SPLTSV 
      DO 540 J=1,NC                                                      SPLTSV 
      ALRT(J,1,2)=XC(J,K)                                                SPLTSV 
      ALRT(J,2,2)=YC(J,K)                                                SPLTSV 
      ALRT(J,3,2)=ZC(J,K)                                                SPLTSV 
540   CONTINUE                                                           SPLTSV 
      GO TO (550,560), I                                                 SPLTSV 
550   CALL SURCC (NC,ALRT,VECRT)                                         SPLTSV 
      GO TO 570                                                          SPLTSV 
560   CALL SURCL (NC,ALRT,VECRT)                                         SPLTSV 
570   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,NN1),N3=1,3)                      SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NC),N3=1,3)                      SPLTSV 
580   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     SETUP LINES IN SPANWISE DIRECTION                                  SPLTSV 
C                                                                        SPLTSV 
      KK1=NCN-1                                                          SPLTSV 
      DO 590 II=1,NCN                                                    SPLTSV 
      ALRT(II,1,2)=XC(1,II)                                              SPLTSV 
      ALRT(II,2,2)=YC(1,II)                                              SPLTSV 
      ALRT(II,3,2)=ZC(1,II)                                              SPLTSV 
590   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NCN),N3=1,3)                     SPLTSV 
      DO 650 K=2,NC                                                      SPLTSV 
      DO 600 J=1,NCN                                                     SPLTSV 
      ALRT(J,1,1)=ALRT(J,1,2)                                            SPLTSV 
      ALRT(J,2,1)=ALRT(J,2,2)                                            SPLTSV 
      ALRT(J,3,1)=ALRT(J,3,2)                                            SPLTSV 
600   CONTINUE                                                           SPLTSV 
      DO 610 J=1,NCN                                                     SPLTSV 
      ALRT(J,1,2)=XC(K,J)                                                SPLTSV 
      ALRT(J,2,2)=YC(K,J)                                                SPLTSV 
      ALRT(J,3,2)=ZC(K,J)                                                SPLTSV 
610   CONTINUE                                                           SPLTSV 
      IF(I.EQ.2) GO TO 630                                               SPLTSV 
620   CALL SURCL (NCN,ALRT,VECRT)                                        SPLTSV 
      GO TO 640                                                          SPLTSV 
630   CALL SURCC (NCN,ALRT,VECRT)                                        SPLTSV 
640   CONTINUE                                                           SPLTSV 
      WRITE (TAPE12) ((VECRT(N,N3),N=1,KK1),N3=1,3)                      SPLTSV 
      WRITE (TAPE12) ((ALRT(N,N3,2),N=1,NCN),N3=1,3)                     SPLTSV 
650   CONTINUE                                                           SPLTSV 
660   CONTINUE                                                           SPLTSV 
670   CONTINUE                                                           SPLTSV 
680   CONTINUE                                                           SPLTSV 
C                                                                        SPLTSV 
C     FIND MAXIMUM DISTANCE AND MIDPOINT                                 SPLTSV 
C                                                                        SPLTSV 
      YMIN=-YMAX                                                         SPLTSV 
      XDIS=XMAX-XMIN                                                     SPLTSV 
      YDIS=YMAX-YMIN                                                     SPLTSV 
      ZDIS=ZMAX-ZMIN                                                     SPLTSV 
      BIGD=AMAX1(XDIS,YDIS,ZDIS)                                         SPLTSV 
      XMID=(XMIN+XMAX)*0.5                                               SPLTSV 
      YMID=0.0                                                           SPLTSV 
      ZMID=(ZMIN+ZMAX)*0.5                                               SPLTSV 
C                                                                        SPLTSV 
C                                                                        SPLTSV 
      END                                                                SPLTSV 
      SUBROUTINE SURCL (NPT,FLINE,FVEC)                                  SURCL2 
C                                                                        SURCL2 
C     *******************************************VERSION B00************ SURCL2 
C                                                                        SURCL2 
C                                                                        SURCL2 
C     COMPUTE OUTWARD NORMAL VECTORS WITH FOUR ADJOINING INPUT POINTS    SURCL2 
C     USED IN A CLOCKWISE DIRECTION                                      SURCL2 
C                                                                        SURCL2 
C     BASED ON SUBROUTINE SURCL OF NASA TMX-2074.                        SURCL2 
C                                                                        SURCL2 
      DIMENSION FLINE(31,3,2), FVEC(30,3)                                SURCL2 
C                                                                        SURCL2 
C                                                                        SURCL2 
      DO 20 N=2,NPT                                                      SURCL2 
      T1X=FLINE(N,1,2)-FLINE(N-1,1,1)                                    SURCL2 
      T2X=FLINE(N-1,1,2)-FLINE(N,1,1)                                    SURCL2 
      T1Y=FLINE(N,2,2)-FLINE(N-1,2,1)                                    SURCL2 
      T2Y=FLINE(N-1,2,2)-FLINE(N,2,1)                                    SURCL2 
      T1Z=FLINE(N,3,2)-FLINE(N-1,3,1)                                    SURCL2 
      T2Z=FLINE(N-1,3,2)-FLINE(N,3,1)                                    SURCL2 
      XNX=T2Y*T1Z-T1Y*T2Z                                                SURCL2 
      YNY=T1X*T2Z-T2X*T1Z                                                SURCL2 
      ZNZ=T2X*T1Y-T1X*T2Y                                                SURCL2 
      FN=SQRT(XNX**2+YNY**2+ZNZ**2)                                      SURCL2 
      IF (FN.EQ.0.) GO TO 10                                             SURCL2 
      FVEC(N-1,1)=XNX/FN                                                 SURCL2 
      FVEC(N-1,2)=YNY/FN                                                 SURCL2 
      FVEC(N-1,3)=ZNZ/FN                                                 SURCL2 
      GO TO 20                                                           SURCL2 
10    FVEC(N-1,1)=0.                                                     SURCL2 
      FVEC(N-1,2)=0.                                                     SURCL2 
      FVEC(N-1,3)=0.                                                     SURCL2 
20    CONTINUE                                                           SURCL2 
      RETURN                                                             SURCL2 
      END                                                                SURCL2 
      SUBROUTINE SURCC (NPT,FLINE,FVEC)                                  SURCC2 
C                                                                        SURCC2 
C     *******************************************VERSION B00************ SURCC2 
C                                                                        SURCC2 
C                                                                        SURCC2 
C     COMPUTE OUTWARD NORMAL VECTORS WITH FOUR ADJOINING INPUT POINTS    SURCC2 
C     USED IN A COUNTERCLOCKWISE DIRECTION                               SURCC2 
C                                                                        SURCC2 
C     BASED ON SUBROUTINE SURCC OF NASA TMX-2074.                        SURCC2 
C                                                                        SURCC2 
      DIMENSION FLINE(31,3,2), FVEC(30,3)                                SURCC2 
C                                                                        SURCC2 
C                                                                        SURCC2 
      DO 20 N=2,NPT                                                      SURCC2 
      T1X=FLINE(N,1,2)-FLINE(N-1,1,1)                                    SURCC2 
      T2X=FLINE(N,1,1)-FLINE(N-1,1,2)                                    SURCC2 
      T1Y=FLINE(N,2,2)-FLINE(N-1,2,1)                                    SURCC2 
      T2Y=FLINE(N,2,1)-FLINE(N-1,2,2)                                    SURCC2 
      T1Z=FLINE(N,3,2)-FLINE(N-1,3,1)                                    SURCC2 
      T2Z=FLINE(N,3,1)-FLINE(N-1,3,2)                                    SURCC2 
      XNX=T2Y*T1Z-T1Y*T2Z                                                SURCC2 
      YNY=T1X*T2Z-T2X*T1Z                                                SURCC2 
      ZNZ=T2X*T1Y-T1X*T2Y                                                SURCC2 
      FN=SQRT(XNX**2+YNY**2+ZNZ**2)                                      SURCC2 
      IF (FN.EQ.0.) GO TO 10                                             SURCC2 
      FVEC(N-1,1)=XNX/FN                                                 SURCC2 
      FVEC(N-1,2)=YNY/FN                                                 SURCC2 
      FVEC(N-1,3)=ZNZ/FN                                                 SURCC2 
      GO TO 20                                                           SURCC2 
10    FVEC(N-1,1)=0.                                                     SURCC2 
      FVEC(N-1,2)=0.                                                     SURCC2 
      FVEC(N-1,3)=0.                                                     SURCC2 
20    CONTINUE                                                           SURCC2 
      RETURN                                                             SURCC2 
      END                                                                SURCC2 
      OVERLAY(LWB,4,5)                                                   PLPRES 
C     OVERLAY(LWB,4,5)                                                   PLPRES 
      PROGRAM PLPRES                                                     PLPRES 
C                                                                        PLPRES 
C     *******************************************VERSION B00************ PLPRES 
C                                                                        PLPRES 
C                                                                        PLPRES 
C     CONTROL ROUTINE FOR PRESSURE DISTRIBUTION PLOTS                    PLPRES 
C                                                                        PLPRES 
C                                                                        PLPRES 
C     THIS PROGRAM PLOTS THE COMPUTED PRESSURE COEFFICIENTS FOR THE WING PLPRES 
C     AND FOR THE FUSELAGE                                               PLPRES 
C                                                                        PLPRES 
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP PLPRES 
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       PLPRES 
      COMMON /PARAM/ DUM1(3),LBC,THK,MACH,ALPHA                          PLPRES 
      COMMON /SEG/ NSEG,NROW(20),NCOL(20),DUM(60),NWT(20)                PLPRES 
      COMMON /PRESS/ KRADX(4),NRADX(4),KFORX(4),NFORX(4),KWAF,NWAF,KWAFO PLPRES 
     1R,NWAFOR,NFUS                                                      PLPRES 
      COMMON /GRAPH/ PLOT                                                PLPRES 
      COMMON /SCALE/ CSCALE,CPMIN,KK,AMA(4),IS                           PLPRES 
      COMMON /PI/ PI,RADEG,DEGRAD                                        PLPRES 
      COMMON/NEWCOM/DUMW(2),K2                                           PLPRES 
      COMMON/CLINE/CCL(30),XL(30)                                        PLPRES 
C                                                                        PLPRES 
      DIMENSION PHI(23),CP(33),XQ(33),XX(63),YY(23),ZC(4,30)             PLPRES 
C                                                                        PLPRES 
      LOGICAL LBC                                                        PLPRES 
      INTEGER COMPT,PLOT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8 PLPRES 
     1,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                   PLPRES 
C                                                                        PLPRES 
C     IN LINE FUNCTION DEFINITION                                        PLPRES 
C                                                                        PLPRES 
      XIN(X1,Y1,X2,Y2,Y)=X1 + (X2-X1)*(Y-Y1)/(Y2-Y1)                     PLPRES 
C                                                                        PLPRES 
C                                                                        PLPRES 
C                                                                        PLPRES 
C                                                                        PLPRES 
      HMACH=10HMACH NO. =                                                PLPRES 
      HALPHA=10H  ALPHA =                                                PLPRES 
      PLOT=IABS(PLOT)                                                    PLPRES 
      PIO2=90.                                                           PLPRES 
      REWIND TAPE12                                                      PLPRES 
      REWIND TAPE13                                                      PLPRES 
      REWIND TAPE14                                                      PLPRES 
      WRITE (TAPE14,230) HMACH,MACH,HALPHA,ALPHA                         PLPRES 
      REWIND TAPE14                                                      PLPRES 
      READ (TAPE14,230) AMA                                              PLPRES 
      REWIND TAPE14                                                      PLPRES 
C                                                                        PLPRES 
C     START INPUT                                                        PLPRES 
C                                                                        PLPRES 
10    CONTINUE                                                           PLPRES 
      READ (TAPE12) NP,NPASS,COMPT                                       PLPRES 
C                                                                        PLPRES 
C     END OF FILE TEST ON TAPE12                                         PLPRES 
      IF(EOF(TAPE12)) 220,20                                             PLPRES 
C                                                                        PLPRES 
20    CONTINUE                                                           PLPRES 
      IF (COMPT.EQ.2) GO TO 120                                          PLPRES 
C                                                                        PLPRES 
C     COMPUTE MAXIMUM AND MINIMUM VALUES OF CP-ARRAY FOR FUSELAGE AND    PLPRES 
C     COMPUTE SCALE FACTORS                                              PLPRES 
C                                                                        PLPRES 
      NP1=NP                                                             PLPRES 
      CPMAX=0.0                                                          PLPRES 
      CPMIN=0.0                                                          PLPRES 
      KL=0                                                               PLPRES 
      DO 50 I=1,NFUS                                                     PLPRES 
      NR=NRADX(I)-1                                                      PLPRES 
      NF=NFORX(I)-1                                                      PLPRES 
      DO 40 J=1,NF                                                       PLPRES 
      KL=KL+1                                                            PLPRES 
      DO 30 K=1,NR                                                       PLPRES 
      READ (TAPE12) X,Y,Z,CPP                                            PLPRES 
      CPMIN=AMAX1(CPMIN,CPP)                                             PLPRES 
      CPMAX=AMIN1(CPMAX,CPP)                                             PLPRES 
      IF(K.NE.NR) GO TO 30                                               PLPRES 
      IF(X.GT.XL(KL)) ZC(I,J)=XIN(CCL(KL),XL(KL),CCL(KL+1),XL(KL+1),X)   PLPRES 
30    CONTINUE                                                           PLPRES 
      XX(KL)=X                                                           PLPRES 
40    CONTINUE                                                           PLPRES 
50    CONTINUE                                                           PLPRES 
      REWIND TAPE12                                                      PLPRES 
      READ (TAPE12)                                                      PLPRES 
      CSCALE=(CPMAX-CPMIN)/10.                                           PLPRES 
      ICS=CSCALE*130.                                                    PLPRES 
      CSC=ICS                                                            PLPRES 
      CSCALE=CSC/100.                                                    PLPRES 
      ICPMIN=CPMIN*100.                                                  PLPRES 
      CMIN=ICPMIN                                                        PLPRES 
      CPMIN=CMIN/100.                                                    PLPRES 
      YSCALE=CSCALE                                                      PLPRES 
      AA=0.00                                                            PLPRES 
      DO 60 I=1,10                                                       PLPRES 
      AA=AA-YSCALE                                                       PLPRES 
      IF (CPMIN.LE.AA) GO TO 70                                          PLPRES 
60    CONTINUE                                                           PLPRES 
70    CPMIN=AA                                                           PLPRES 
C                                                                        PLPRES 
C     READ IN FUSELAGE PRESSURE COEFFICIENTS                             PLPRES 
C                                                                        PLPRES 
      LL=0                                                               PLPRES 
      L=0                                                                PLPRES 
      DO 110 I=1,NFUS                                                    PLPRES 
      NR=NRADX(I)-1                                                      PLPRES 
      NF=NFORX(I)-1                                                      PLPRES 
      DO 100 J=1,NF                                                      PLPRES 
      L=L+1                                                              PLPRES 
      LL=LL+1                                                            PLPRES 
      DO 80 K=1,NR                                                       PLPRES 
      READ (TAPE12) X,Y,Z,CP(K)                                          PLPRES 
      DZ = Z - ZC(I,J)                                                   PLPRES 
      PHI(K) = ATAN2(DZ,Y)*RADEG + PIO2                                  PLPRES 
80    CONTINUE                                                           PLPRES 
      XX(L)=X                                                            PLPRES 
      IF (L.NE.1) GO TO 90                                               PLPRES 
      CALL AXLES(COMPT,MACH,ALPHA)                                       PLPRES 
90    KK=L                                                               PLPRES 
      CALL PRESBO (X,NR,PHI,CP)                                          PLPRES 
      IF (L.EQ.10.OR.LL.EQ.KL) CALL LABEL (LL,XX,KL,L,COMPT)             PLPRES 
100   CONTINUE                                                           PLPRES 
110   CONTINUE                                                           PLPRES 
      GO TO 10                                                           PLPRES 
C                                                                        PLPRES 
C     WING                                                               PLPRES 
C                                                                        PLPRES 
C                                                                        PLPRES 
C     COMPUTE MAXIMUM AND MINIMUM VALUES OF CP-ARRAY AND COMPUTE SCALE   PLPRES 
C     FACTORS                                                            PLPRES 
C                                                                        PLPRES 
120   CONTINUE                                                           PLPRES 
      CPMAX=0.0                                                          PLPRES 
      CPMIN=0.0                                                          PLPRES 
      IF (.NOT.LBC) NP=NP/2                                              PLPRES 
      DO 130 I=1,NP                                                      PLPRES 
      READ (TAPE12) Y,XQ1,CP1                                            PLPRES 
      READ (TAPE13) Y,XQ2,CP2                                            PLPRES 
      CPMAX=AMIN1(CPMAX,CP1,CP2)                                         PLPRES 
      CPMIN=AMAX1(CPMIN,CP1,CP2)                                         PLPRES 
130   CONTINUE                                                           PLPRES 
      REWIND TAPE12                                                      PLPRES 
      REWIND TAPE13                                                      PLPRES 
      CSCALE=(CPMAX-CPMIN)/10.                                           PLPRES 
      ISKIP = 1                                                          PLPRES 
      IF( ISKIP .EQ. 1 ) GO TO 150                                       PLPRES 
      ICS=CSCALE*120.                                                    PLPRES 
      IC = IABS(ICS)                                                     PLPRES 
      ITEST = 0                                                          PLPRES 
  300 IF(ITEST.GE.IC) GO TO 310                                          PLPRES 
      ITEST = ITEST + 10                                                 PLPRES 
      GO TO 300                                                          PLPRES 
  310 IF(ICS) 320,340,340                                                PLPRES 
  320 ICS = -ITEST                                                       PLPRES 
      GO TO 350                                                          PLPRES 
  340 ICS = ITEST                                                        PLPRES 
  350 CONTINUE                                                           PLPRES 
      CSC=ICS                                                            PLPRES 
      CSCALE=CSC/100.                                                    PLPRES 
      AB=0.00                                                            PLPRES 
      DO 140 I=1,10                                                      PLPRES 
      AB=AB-CSCALE                                                       PLPRES 
      IF (CPMIN.LE.AB) GO TO 150                                         PLPRES 
140   CONTINUE                                                           PLPRES 
150   CPMIN=AB                                                           PLPRES 
      NNN=NP1+2                                                          PLPRES 
      IF (K2.EQ.0) NNN=1                                                 PLPRES 
      DO 160 I=1,NNN                                                     PLPRES 
      READ (TAPE12)                                                      PLPRES 
160   CONTINUE                                                           PLPRES 
C                                                                        PLPRES 
C     PLOT WING PRESSURE DISTRIBUTION                                    PLPRES 
C                                                                        PLPRES 
      L=0                                                                PLPRES 
      DO 210 II=1,2                                                      PLPRES 
      IS=II                                                              PLPRES 
      DO 210 NS=1,NSEG                                                   PLPRES 
      NC=NCOL(NS)                                                        PLPRES 
      NR=NROW(NS)                                                        PLPRES 
      K=0                                                                PLPRES 
      DO 200 I=1,NC                                                      PLPRES 
      K=K+1                                                              PLPRES 
      DO 180 J=1,NR                                                      PLPRES 
      IF (IS.EQ.2) GO TO 170                                             PLPRES 
      READ (TAPE12) Y,XQ(J),CP(J)                                        PLPRES 
      GO TO 180                                                          PLPRES 
170   CONTINUE                                                           PLPRES 
      READ (TAPE13) Y,XQ(J),CP(J)                                        PLPRES 
180   CONTINUE                                                           PLPRES 
      YY(I)=Y                                                            PLPRES 
      L=L+1                                                              PLPRES 
      IF (L.NE.1) GO TO 190                                              PLPRES 
      CALL AXLES(COMPT,MACH,ALPHA)                                       PLPRES 
190   CALL PRSWNG (NR,L,XQ,CP)                                           PLPRES 
      IF (L.EQ.10.OR.K.EQ.NC) CALL LABEL (K,YY,NC,L,COMPT)               PLPRES 
200   CONTINUE                                                           PLPRES 
210   CONTINUE                                                           PLPRES 
220   CONTINUE                                                           PLPRES 
      REWIND TAPE12                                                      PLPRES 
      REWIND TAPE13                                                      PLPRES 
C                                                                        PLPRES 
C                                                                        PLPRES 
C                                                                        PLPRES 
230   FORMAT (A10,F10.5,A10,F10.5)                                       PLPRES 
      END                                                                PLPRES 
      SUBROUTINE PRSWNG (NR,L,XQ,CP)                                     PRSWNG 
C                                                                        PRSWNG 
C     *******************************************VERSION B00************ PRSWNG 
C                                                                        PRSWNG 
C                                                                        PRSWNG 
C     PLOT WING PRESSURES                                                PRSWNG 
C                                                                        PRSWNG 
      COMMON /SCALE/ CSCALE,CPMIN,KK,AMA(4),IS                           PRSWNG 
C                                                                        PRSWNG 
      DIMENSION XQ(52), CP(52)                                           PRSWNG 
C                                                                        PRSWNG 
C                                                                        PRSWNG 
      YORG=CPMIN                                                         PRSWNG 
      YSCALE=CSCALE                                                      PRSWNG 
      XORG=0.0                                                           PRSWNG 
      XSCALE=0.1                                                         PRSWNG 
      XQ(NR+1)=XORG                                                      PRSWNG 
      XQ(NR+2)=XSCALE                                                    PRSWNG 
      CP(NR+1)=YORG                                                      PRSWNG 
      CP(NR+2)=YSCALE                                                    PRSWNG 
C                                                                        PRSWNG 
C     PLOT PRESSURE COEFFICIENTS VS XQ                                   PRSWNG 
C                                                                        PRSWNG 
      CALL PLOT((XQ(1)-XORG)/XSCALE,(CP(1)-CPMIN)/CSCALE,3)              PRSWNG 
      DO 10 I = 1, NR                                                    PRSWNG 
      CALL PLOT((XQ(I)-XORG)/XSCALE,(CP(I)-CPMIN)/CSCALE,2)              PRSWNG 
10    CONTINUE                                                           PRSWNG 
      RETURN                                                             PRSWNG 
      END                                                                PRSWNG 
      SUBROUTINE AXLES(COMPT,MACH,ALPHA)                                 AXLES
C                                                                        AXLES
C     *******************************************VERSION B00************ AXLES
C                                                                        AXLES
C                                                                        AXLES
C     COMPUTE AXES FOR PLOTTING FUSELAGE PRESSURE COEFFICIENTS           AXLES
C                                                                        AXLES
      COMMON /GRAPH/ PLOT                                                AXLES
      COMMON /SCALE/ CSCALE,CPMIN,KK,AMA(4),IS                           AXLES
C                                                                        AXLES
      INTEGER PLOT,COMPT                                                 AXLES
C                                                                        AXLES
      CALL CALPLT(1.0,1.0,-3)                                            AXLES
      XORG=0.0                                                           AXLES
      XSCALE=18.                                                         AXLES
      TMIN = 9.0                                                         AXLES
      IF(COMPT.EQ.2) TMIN = 10.0                                         AXLES
      IF (COMPT.EQ.2) XSCALE=0.10                                        AXLES
      YORG=CPMIN                                                         AXLES
      YSCALE=CSCALE                                                      AXLES
      IF (PLOT.EQ.1) GO TO 10                                            AXLES
      CALL AXES(0.0,11.0,0.0,10.0,XORG,XSCALE,1.0,TMIN,1H ,0.0,1)        AXLES
      CALL AXES(10.0,0.0,90.0,11.0,YORG,YSCALE,1.0,10.0,1H ,0.0,-1)      AXLES
      CALL GRID(0.0,0.0,1.0,1.0,10,11)                                   AXLES
10    IF (COMPT.EQ.2) GO TO 20                                           AXLES
      CALL AXES(0.0,0.0,0.0,10.0,XORG,XSCALE,1.0,9.0,3HPHI,0.125,-3)     AXLES
      GO TO 30                                                           AXLES
20    CALL AXES (0.0,0.0,0.0,10.0,XORG,XSCALE,1.0,10.0,3HX/C,0.125,-3)   AXLES
   30 CALL AXES(0.0,0.0,90.0,11.0,YORG,YSCALE,1.0,10.0,2HCP,0.125,2)     AXLES
      CALL NOTATE(3.8,10.7,.12,7HUSSAERO,0.0,7)                          AXLES
      IF (COMPT.EQ.2) GO TO 40                                           AXLES
      CALL NOTATE(2.9,10.45,.12,30HFUSELAGE PRESSURE COEFFICIENTS,0.,30) AXLES
      GO TO 50                                                           AXLES
   40 CALL NOTATE(2.9,10.45,.12,26HWING PRESSURE COEFFICIENTS,0.0,26)    AXLES
      IF(IS.EQ.1) CALL NOTATE(2.9,10.2,.12,13HUPPER SURFACE,0.0,13)      AXLES
      IF(IS.EQ.2) CALL NOTATE(2.9,10.2,.12,13HLOWER SURFACE,0.0,13)      AXLES
   50 X = 2.9                                                            AXLES
      Y = 9.95                                                           AXLES
      CALL NOTATE(X,Y,.12,10HMACH NO. =,0.0,10)                          AXLES
      Z = X + 1.13                                                       AXLES
      CALL NUMBER(Z,Y,.12,MACH,0.0,5)                                    AXLES
      Z = Z + 1.13                                                       AXLES
      CALL NOTATE(Z,Y,.12,10H   ALPHA =,0.0,10)                          AXLES
      Z = Z + 1.13                                                       AXLES
      CALL NUMBER(Z,Y,.12,ALPHA,0.0,5)                                   AXLES
      RETURN                                                             AXLES
      END                                                                AXLES
      SUBROUTINE PRESBO (X,KF,PHI,CP)                                    PRESBO 
C                                                                        PRESBO 
C     *******************************************VERSION B00************ PRESBO 
C                                                                        PRESBO 
C                                                                        PRESBO 
C     PLOT BODY PRESSURES                                                PRESBO 
C                                                                        PRESBO 
      COMMON /SCALE/ CSCALE,CPMIN,KK,DUB(5)                              PRESBO 
C                                                                        PRESBO 
      DIMENSION PHI(23), CP(33)                                          PRESBO 
C                                                                        PRESBO 
C                                                                        PRESBO 
C     SCALE FACTORS                                                      PRESBO 
C                                                                        PRESBO 
      YORG=CPMIN                                                         PRESBO 
      YSCALE=CSCALE                                                      PRESBO 
      XORG=0.0                                                           PRESBO 
      XSCALE=18.0                                                        PRESBO 
      CP(KF+1)=YORG                                                      PRESBO 
      CP(KF+2)=YSCALE                                                    PRESBO 
      PHI(KF+1)=XORG                                                     PRESBO 
      PHI(KF+2)=XSCALE                                                   PRESBO 
      CALL LINPLT (PHI,CP,KF,1,1,KK,1,0)                                 PRESBO 
10    CONTINUE                                                           PRESBO 
      RETURN                                                             PRESBO 
      END                                                                PRESBO 
      SUBROUTINE LABEL (LL,XX,KL,L,COMPT)                                LABEL
C                                                                        LABEL
C     *******************************************VERSION B00************ LABEL
C                                                                        LABEL
C                                                                        LABEL
C     THIS SUBROUTINE PLOTS LEGENDS TO THE GRAPHS OF THE FUSELAGE        LABEL
C     PRESSURE DISTRIBUTION OR THE WING PRESSURE DISTRIBUTION            LABEL
C                                                                        LABEL
      COMMON /FILES/ TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8,TAP LABEL
     1E9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                       LABEL
      COMMON /GRAPH/ PLOT                                                LABEL
      COMMON /SCALE/ CSCALE,CPMIN,KK,AMA(4),IS                           LABEL
      COMMON/PARAM/DUMMY(5),MACH,ALPHA                                   LABEL
C                                                                        LABEL
      DIMENSION AZ(2), XX(1)                                             LABEL
C                                                                        LABEL
      INTEGER PLOT,COMPT,TAPE1,TAPE2,TAPE3,TAPE4,TAPE5,TAPE6,TAPE7,TAPE8 LABEL
     1,TAPE9,TAPE10,TAPE11,TAPE12,TAPE13,TAPE14,TAPE15                   LABEL
C                                                                        LABEL
      HX=4HX =                                                           LABEL
      HY=4HY =                                                           LABEL
      IF (PLOT.NE.0) CALL NFRAME                                         LABEL
      CALL NOTATE (2.8,9.80,.12,6HLEGEND,0.0,6)                          LABEL
      IF (COMPT.EQ.2) GO TO 10                                           LABEL
      CALL NOTATE (2.8,9.55,.12,23HFUSELAGE PRESSURE PLOTS,0.0,23)       LABEL
      GO TO 20                                                           LABEL
10    CALL NOTATE (2.8,9.55,.12,19HWING PRESSURE PLOTS,0.0,19)           LABEL
      IF (IS.EQ.1) CALL NOTATE (2.8,9.30,.12,13HUPPER SURFACE,0.0,13)    LABEL
      IF (IS.EQ.2) CALL NOTATE (2.8,9.30,.12,13HLOWER SURFACE,0.0,13)    LABEL
20    CONTINUE                                                           LABEL
      X = 2.8                                                            LABEL
      YY = 9.00                                                          LABEL
      CALL NOTATE(X,YY,.12,10HMACH NO. =,0.0,10)                         LABEL
      Z = X + 1.13                                                       LABEL
      CALL NUMBER(Z,YY,.12,MACH,0.0,5)                                   LABEL
      Z = Z + 1.13                                                       LABEL
      CALL NOTATE(Z,YY,.12,10H   ALPHA =,0.0,10)                         LABEL
      Z = Z + 1.13                                                       LABEL
      CALL NUMBER(Z,YY,.12,ALPHA,0.0,5)                                  LABEL
      I1=0                                                               LABEL
      IF (LL.EQ.KL) I1=KL-L                                              LABEL
      X0=2.8                                                             LABEL
      Y=8.1                                                              LABEL
      DO 50 J=1,10                                                       LABEL
      I1=I1+1                                                            LABEL
      IF (I1.GT.KL) GO TO 60                                             LABEL
      XA=XX(I1)                                                          LABEL
      CALL PNTPLT(X0,Y,J,1)                                              LABEL
      IF (COMPT.EQ.2) GO TO 30                                           LABEL
      Z = X0 + 0.2                                                       LABEL
      CALL NOTATE(Z,Y,.12,4HX = ,0.0,4)                                  LABEL
      GO TO 40                                                           LABEL
   30 Z = X0 + 0.2                                                       LABEL
      CALL NOTATE(Z,Y,.12,4HY = ,0.0,4)                                  LABEL
   40 Z = Z + 0.411                                                      LABEL
      CALL NUMBER(Z,Y,.12,XA,0.0,5)                                      LABEL
      Y=Y-0.2                                                            LABEL
50    CONTINUE                                                           LABEL
60    CONTINUE                                                           LABEL
      IF (PLOT.NE.0) CALL NFRAME                                         LABEL
      L=0                                                                LABEL
      RETURN                                                             LABEL
C                                                                        LABEL
C                                                                        LABEL
70    FORMAT (A4,F10.5)                                                  LABEL
      END                                                                LABEL
