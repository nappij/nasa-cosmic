C     COREL II                                                           COREL
C     CONICAL RELAXATION                                                 COREL
C     BY BERNARD GROSSMAN -GRUMMAN AEROSPACE CORPORATION-(516) 575-2202  COREL
C     FOR THEORY DESCRIPTION - SEE AIAA PAPER NO. 78-1213                COREL
C                                                                        COREL
C      (PRESENTLY PROF. OF AERONAUTICS AT VPI, BLACKSBURG,VA.,           MOD2 
C       TELEPHONE (703) 961-6740                                         MOD2 
C                                                                        COREL
C    AERODYNAMIC APPLICATIONS ADAPTATION UNDER THE                       COREL
C    NASA LANGLEY CONTRACT @ A WING CONCEPT FOR SUPERSONIC               COREL
C                            MANEUVERING@                                COREL
C                                                                        COREL
C    GRUMMAN PROJECT ENGINEER - BILL MASON (516) 575-6019                MOD2 
C                                                                        COREL
C    LANGLEY CONTRACT MONITOR- DAVE MILLER (804) 827-3181                COREL
C                                                                        COREL
      OVERLAY (COREL,0,0)                                                COREL
      PROGRAM MAIN(INPUT=512,OUTPUT=512,TAPE7=512,TAPE8=512,TAPE10=512,  COREL
     1     TAPE14=512,TAPE32=512,TAPE99=512,TAPE20=512,                  COREL
     2     TAPE5=INPUT,TAPE6=OUTPUT)                                     COREL
      COMMON /MODS/ XU1,XU2,XU3,DTCU,XL1,XL2,XL3,DTCL                    MODS 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      COMMON/TITL/TI1(80),TI2(80)                                        TITL 
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON /DESGN/ CPP(120),EMST(120),CPPEX(120),XCP(120),             DESGN
     1 NCP,IDESIN,KDES,KDESMX,YYB1(120),CPP1(120),SUMDCP(50),            DESGN
     2 STARTC,BETAM(120),NSTART,WDES                                     DESGN
      COMMON /NEWCOM/ W(3),DMIN(3),KMAX(3),KREF                          NEWCOM 
      COMMON /GEOIN/ RRZ(201),THZ(201),X0,Y0,Y1,NM,NGH,NMH               GEOIN
      COMMON /WNGTE/ XROOT,YWNGRT,ZROOT                                  WNGTE
      REAL LGYRTM                                                        COREL
      NAMELIST/INPUT/IC,JC,KMAX,KREF,IPLOT,EMINF,ALP,GAMMA,W             COREL
     1,DMIN,AZ,BZ,LC,CC,LT,CT,LM,CM,NG,NS,EST,IOUT,IRPTS,IOUT2,IPUNCH    COREL
     1 ,IDESIN,KDESMX,NSHKR,KSHKR,JDRLX,WDES,ETADR,EPSHKI,TESWP,KCCC,    COREL
     2 XORIGC,YORIGC,IMOD,IEQV,XU1,XU2,XU3,DTCU,XL1,XL2,XL3,DTCL         COREL
     3 ,XSTN,IEQV3,XROOT,YWNGRT,ZROOT                                    MOD2 
 1000 FORMAT(80A1)                                                       COREL
 1001 FORMAT(/10X,35HCOREL 2   (VERSION OF SEPT.29,1978),                COREL
     A41X,29HGRUMMAN AEROSPACE CORPORATION,1X,14HBETHPAGE N.Y.           COREL
     1 //10X,7HCONICAL ,1X,19HRELAXATION SOLUTION,8X,                    COREL
     2)                                                                  COREL
 1005 FORMAT(//10X,39HBY B. GROSSMAN, PRESENTLY PROFESSOR OF  ,          COREL
     1 45HAERONAUTICS - VIRGINIA POLYTECHNIC INSTITUTE,                  MOD2 
     2 14HBLACKSBURG,VA.,2X,14H(703) 961-6740//                          MOD2 
     3 10X,12HAERODYNAMIC ,36HAPPLICATIONS ADAPTATION BY W. MASON  ,     COREL
     4 5X,31HGRUMMAN AEROSPACE CORPORATION ,,15HBETHPAGE, N.Y.           MOD2 
     5 1X,14H(516) 575-6019 //                                           MOD2 
     5 ///10X,5HMINF=,F5.3,5X,4HALP=,F6.3//4X,3HIC=,I3,8X,3HJC=,I3,7X,   COREL
     6 6HKMAX1=,I4,3X,6HKMAX2=,I4,4X,6HKMAX3=,I4,4X,5HKREF=,I1,4X,9X,    COREL
     7 6HIPLOT=,I2/4X,6HGAMMA=,F4.2,4X,4HWW1=,F5.3,4X,4HWW2=,F5.3,4X,    COREL
     8 4HWW3=,F5.3,5X,4HEST=,F5.2,5X,6HDMIN1=,E9.2,4X,6HDMIN2=,E9.2,4X,  COREL
     9 6HDMIN3=,E9.2//5X,80A1/5X,80A1//4X,3HAZ=,F6.3,7X,                 COREL
     Q 3HBZ=,F6.3,7X,3HNG=,I3,10X,                                       COREL
     A3HNS=I2,11X,3HLC=,I2,11X,3HLT=,I2,11X,3HLM=,I2/4X,6HCC(1)=,F7.3,   MOD2 
     B3X,6HCC(2)=,F6.3,4X,6HCC(3)=,F6.3,4X,6HCT(1)=,F6.3,4X,6HCT(2)=,    MOD2 
     C F6.3,4X,6HCT(3)=,F6.3,4X,6HCM(1)=,F6.3,4X,6HCM(2)=,F6.3/4X,5HIOUT COREL
     D=,I3,8X,7HIDESIN=,I2,7X,7HKDESMX=,I2,7X,6HIRPTS=,I2,8X,6HIOUT2=,   COREL
     E I1,9X,7HIPUNCH=,I1,8X,6HNSHKR=,I2,8X,6HKSHKR=,I2/4X,              COREL
     F 6HJDRLX=,I2,8X,5HWDES=,F5.3,6X,6HETADR=,F5.3,5X,7HEPSHKI=,F5.3,   COREL
     G 4X,6HTESWP=,F5.2,5X,5HKCCC=,I2,9X,7HXORIGC=,F7.4,                 MOD2 
     H 2X,7HYORIGC=,F7.4)                                                COREL
 1002 FORMAT(4X,5HIMOD=,I2,9X,5HIEQV=,I2,                                COREL
     I 9X,4HXU1=,F6.3,6X,4HXU2=,F6.3,6X,4HXU3=,F6.3,6X,                  COREL
     J 5HDCTU=,F6.3,5X,4HXL1=,F6.3,6X,4HXL2=,F6.3/4X,4HXL3=,             COREL
     K F6.3,6X,5HDTCL=,F6.3,5X,5HXSTN=,F8.3,3X,6HIEQV3=,I3,7X,           MOD2 
     L 6HXROOT=,F9.5,1X,6HZROOT=,F9.5,1X,7HYWNGRT=,F9.5/)                MOD2 
 1004 FORMAT(1H1/5X,A8/)                                                 COREL
      PI=4.*ATAN(1.)                                                     COREL
      PIO2=0.5*PI                                                        COREL
      RAD=PI/180.0                                                       COREL
C                                                                        COREL
C      DEFAULT VALUES                                                    COREL
C                                                                        COREL
      LIN=5                                                              COREL
      LOUT=6                                                             COREL
      IREAD=LIN                                                          COREL
      IWRIT=LOUT                                                         COREL
C                                                                        COREL
      READ(LIN,1000) (TI1(I),I=1,80)                                     COREL
      READ(LIN,1000)(TI2(I),I=1,80)                                      COREL
C                                                                        COREL
C      PARAMETER INPUTS                                                  COREL
C                                                                        COREL
      READ(LIN,INPUT)                                                    COREL
      XLGNO=LGYRTM(YRTM)                                                 COREL
      XROOTP=XROOT                                                       MOD2 
      IF(XROOT.GT.0.99E10) XROOTP=0.0                                    MOD2 
      NG=2*(NG/2)+1                                                      COREL
      WRITE(6,1004) XLGNO                                                COREL
      WRITE(LOUT,1001)                                                   COREL
      WRITE(LOUT,1005) EMINF,ALP,IC,JC,KMAX,KREF,IPLOT,GAMMA,W,EST,      COREL
     1 DMIN,TI1,TI2,AZ,BZ,NG,NS,LC,LT,LM                                 COREL
     2,CC(1),CC(2),CC(3),CT(1),CT(2),CT(3),CM(1),CM(2),IOUT,IDESIN,      COREL
     3 KDESMX,IRPTS,IOUT2,IPUNCH,NSHKR,KSHKR,JDRLX,WDES,ETADR,           COREL
     4 EPSHKI,TESWP,KCCC,XORIGC,YORIGC                                   COREL
      WRITE(LOUT,1002) IMOD,IEQV,XU1,XU2,XU3,DTCU,XL1,XL2,XL3,DTCL       COREL
     1 ,XSTN,IEQV3,XROOT,ZROOT,YWNGRT                                    MOD2 
      IF(KCCC.GT.1) GO TO 200                                            COREL
      PI=4.*ATAN(1.)                                                     COREL
      PIO2=.5*PI                                                         COREL
      RAD=PI/180                                                         COREL
      AZ=TAN(AZ*RAD)                                                     COREL
      BZ=TAN(BZ*RAD)                                                     COREL
      ALP=ALP*RAD                                                        COREL
      GA=(GAMMA-1.)*.5                                                   COREL
      A02=1./(EMINF*EMINF)+GA                                            COREL
C                                                                        COREL
C     GEOMETRY                                                           COREL
C                                                                        COREL
      CALL OVERLAY (5HCOREL,1,0)                                         COREL
C                                                                        COREL
C                                                                        COREL
C      GRID SEQUENCE LOOPS                                               COREL
C                                                                        COREL
      CALL OVERLAY (5HCOREL,2,0)                                         COREL
C                                                                        COREL
  200 CONTINUE                                                           COREL
      STOP                                                               COREL
      END                                                                COREL
      BLOCK DATA                                                         BLKDAT 
C                                                                        BLKDAT 
      COMMON /MODS/ XU1,XU2,XU3,DTCU,XL1,XL2,XL3,DTCL                    MODS 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON /DESGN/ CPP(120),EMST(120),CPPEX(120),XCP(120),             DESGN
     1 NCP,IDESIN,KDES,KDESMX,YYB1(120),CPP1(120),SUMDCP(50),            DESGN
     2 STARTC,BETAM(120),NSTART,WDES                                     DESGN
      COMMON /NEWCOM/ W(3),DMIN(3),KMAX(3),KREF                          NEWCOM 
      COMMON /WNGTE/ XROOT,YWNGRT,ZROOT                                  WNGTE
      DATA IOUT/1/,IOUT2/0/,IPUNCH/0/,IRPTS/0/,IPLOT/1/                  BLKDAT 
      DATA KCCC/0/,IMOD/0/,IEQV/0/,LC/0/,LT/1/,LM/0/                     BLKDAT 
      DATA XORIGC/0./,YORIGC/0./,XU1/0./,XU2/0./,XU3/0./,                BLKDAT 
     1     XL1/0./,XL2/0./,XL3/0./,DTCU/0./,DTCL/0./,TESWP/0./           BLKDAT 
      DATA WDES/0./,EST/-6./,ETADR/0./,W/1.,1.5,1.5/                     BLKDAT 
      DATA GAMMA/1.4/,EMINF/1.6/,ALP/5./,AZ/33./,BZ/1.5/                 BLKDAT 
      DATA IC/30/,JC/30/,KREF/2/,KMAX/300,150,150/,NS/4/,NG/199/         MOD2 
      DATA DMIN/3*1.E-6/,CC/5*0./,CT/5*0./,CM/5*0./                      BLKDAT 
      DATA IDESIN/0/,KDESMX/0/,KDES/1/,IEQV3/0/                          BLKDAT 
      DATA NSHKR/10/,KSHKR/8/,JDRLX/6/,EPSHKI/1.2/,XSTN/1./              BLKDAT 
      DATA XROOT/1.0E10/,YWNGRT/-1.0/,ZROOT/0.0/                         MOD2 
C                                                                        BLKDAT 
       END                                                               BLKDAT 
      REAL FUNCTION LGYRTM(YRTM)                                         LGYRTM 
      YRTM=79.0                                                          LGYRTM 
      LGYRTM=4HJOBN                                                      LGYRTM 
      RETURN                                                             LGYRTM 
      END                                                                LGYRTM 
      OVERLAY (COREL,1,0)                                                GEOM 
      PROGRAM GEOM                                                       GEOM 
C                                                                        GEOM 
C     CAMBERED ELLIPTIC WING                                             GEOM 
C     THICKNESS NORMAL TO CAMBER LINE                                    GEOM 
C     MODIFIED THICKNESS DISTRIBUTION                                    GEOM 
C     CAMBER,LC% 0-NONE, 1-CIRC.ARC, 2-ELLIPT.ARC, 3-CIRC.CAP, 4-OTHER   GEOM 
C     THICKNESS,LT% 0-CIRCULAR, 1-ELLIPTIC, 2-SUPER ELLIPSE              GEOM 
C                                                                        GEOM 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /MODS/ XU1,XU2,XU3,DTCU,XL1,XL2,XL3,DTCL                    MODS 
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      COMMON /GEOIN/ RRZ(201),THZ(201),X0,Y0,Y1,NM,NGH,NMH               GEOIN
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON /DESGN/ CPP(120),EMST(120),CPPEX(120),XCP(120),             DESGN
     1 NCP,IDESIN,KDES,KDESMX,YYB1(120),CPP1(120),SUMDCP(50),            DESGN
     2 STARTC,BETAM(120),NSTART,WDES                                     DESGN
      COMMON /WNGTE/ XROOT,YWNGRT,ZROOT                                  WNGTE
      DIMENSION TITL(20),XSURF(200),YSURF(200)                           GEOM 
 1001 FORMAT(20A4)                                                       GEOM 
 1002 FORMAT(/10X,20A4//12X,1HI,10X,1HX,12X,1HY/)                        GEOM 
 1003 FORMAT(8F10.5)                                                     GEOM 
 1004 FORMAT(/4X,5HZSYM=,F3.1,5X,6HTHICK=,F10.6,5X,4HFNU=,               GEOM 
     1 F5.1,5X,4HFNL=,F5.1,5X,7HXKSMTH=,F5.1,5X,6HXSING=,                GEOM 
     2 F10.6,5X,6HYSING=,F10.6)                                          GEOM 
 1008 FORMAT(/20X,20A4)                                                  GEOM 
 1005 FORMAT(10X,I3,2X,2F12.6)                                           GEOM 
 1006 FORMAT(/5X,6HXSING=,F10.5,10X,6HYSING=,F10.5,10X,6HXAREA=,F10.6/)  GEOM 
 1012 FORMAT(8F10.6)                                                     GEOM 
 1014 FORMAT(14H LOWER SURFACE)                                          GEOM 
 1016 FORMAT(14H UPPER SURFACE)                                          GEOM 
 1018 FORMAT(36H SPANWISE SECTION GENERATED BY COREL ,A8,4X,             GEOM 
     1 4HNO. ,I2)                                                        GEOM 
 1020 FORMAT(13HOFFLINE READ ,1HI,I2,5H SEC ,1X,A8)                      GEOM 
 1040 FORMAT(/5X,24HTHICKNESS ENVELOPE INPUT    /)                       GEOM 
 1050 FORMAT(/5X,5HFNUT=,F6.2,5X,6HTHICK=,F7.4//12X,1HI,10X,             GEOM 
     1 1HX,12X,1HY/)                                                     GEOM 
      DATA IQQQ /1/                                                      GEOM 
C                                                                        GEOM 
      RAD=PI/180.                                                        GEOM 
      XSING=0.0                                                          GEOM 
      YSING=0.0                                                          GEOM 
      NG=2*(NG/2)+1                                                      GEOM 
      NM=NG/2+1                                                          GEOM 
      DTH=PI/FLOAT(NG-2)                                                 GEOM 
      EX=2.+CT(3)                                                        GEOM 
      EX1=1.0/(2.0+CT(2))                                                GEOM 
      AA=1.0                                                             GEOM 
      BB=1.0                                                             GEOM 
      IF(IRPTS.EQ.1) GO TO 200                                           GEOM 
      IF(IEQV3.EQ.1) GO TO 240                                           GEOM 
      X0=BZ*SQRT((AZ/BZ)**2-1.)                                          GEOM 
      X0=X0+CT(1)*(AZ-X0)                                                GEOM 
      IF(LC.EQ.0) GO TO 10                                               GEOM 
      CR=CC(1)*RAD                                                       GEOM 
      IF(LC.EQ.3) GO TO 5                                                GEOM 
      IF(LC.EQ.4) GO TO 15                                               GEOM 
      IF(CR.EQ.0.0) CR=0.1E-6                                            GEOM 
      RR=AZ/SIN(CR)                                                      GEOM 
      AA=RR                                                              GEOM 
      BB=RR                                                              GEOM 
      IF(LC.EQ.1) GO TO 20                                               GEOM 
      CE=CC(2)*RAD                                                       GEOM 
      TCE=TAN(CE)                                                        GEOM 
      AA=AZ*RR*TCE/SQRT((RR*TCE)**2-AZ*AZ)                               GEOM 
      BB=AA*AA/RR                                                        GEOM 
      GO TO 20                                                           GEOM 
    5 XC=CC(3)*AZ                                                        GEOM 
      RR=(AZ-XC)/SIN(CR)                                                 GEOM 
      Y0=0.                                                              GEOM 
      IF(X0.GT.XC) Y0=SQRT(RR*RR-(X0-XC)**2)-RR                          GEOM 
      Y1=-Y0                                                             GEOM 
      GO TO 30                                                           GEOM 
   10 Y0=0.                                                              GEOM 
      Y1=0.                                                              GEOM 
      GO TO 30                                                           GEOM 
   15 XC=CC(3)*AZ                                                        GEOM 
      XC1=XC+.1*AZ                                                       GEOM 
      RR=(XC1-XC)/SIN(CR)                                                GEOM 
      IF(CR.LT.0.0) RR=-RR                                               MOD2 
      IF(CR.EQ.0.0) CR=0.1E-6                                            MOD2 
      TCR=TAN(CR)                                                        GEOM 
      YC1=SQRT(RR*RR-(XC1-XC)**2)-RR                                     GEOM 
      Y0=0.                                                              GEOM 
      IF(X0.LE.XC) GO TO 17                                              GEOM 
      IF(X0.GE.XC1) GO TO 16                                             GEOM 
      Y0=SQRT(RR*RR-(X0-XC)**2)-RR                                       GEOM 
      GO TO 17                                                           GEOM 
   16 Y0=-TCR*(X0-XC1)+YC1                                               GEOM 
   17 Y1=-Y0                                                             GEOM 
      GO TO 30                                                           GEOM 
   20 IF(CR.LT.1.E-5) Y0=0.0                                             GEOM 
      IF(CR.LT.1.E-5) GO TO 22                                           GEOM 
      Y0=BB*(SQRT(1.-(X0/AA)**2)-1.)                                     GEOM 
   22 Y1=-Y0                                                             GEOM 
   30 CONTINUE                                                           GEOM 
   40 CONTINUE                                                           GEOM 
C                                                                        GEOM 
C      GENERATE SPAN SECTION INTERNALLY                                  GEOM 
C                                                                        GEOM 
   50 DO 100 I=1,NG                                                      GEOM 
      TH=0.                                                              GEOM 
      IF(I.LT.NM) TH=(I-1)*DTH-PIO2                                      GEOM 
      IF(I.GT.NM) TH=(I-2)*DTH-PIO2                                      GEOM 
      STH=SIGN(1.,TH)                                                    GEOM 
      XP=AZ*COS(TH)                                                      GEOM 
      YT=STH*BZ*(1.0-ABS(COS(TH))**EX)**EX1                              GEOM 
      IF(IRPTS.NE.2) GO TO 56                                            GEOM 
      IF(I.LE.NM) II=NM-I+1                                              GEOM 
      IF(I.GT.NM) II=I-NM+2                                              GEOM 
   56 CONTINUE                                                           GEOM 
   60 IF(LC.EQ.0) GO TO 80                                               GEOM 
      IF(LC.EQ.3) GO TO 65                                               GEOM 
      IF(LC.EQ.4) GO TO 67                                               GEOM 
      YC=BB*SQRT(1.-(XP/AA)**2)                                          GEOM 
      YCP=-(BB/AA)**2*XP/YC                                              GEOM 
      YCC=YC-BB                                                          GEOM 
      GO TO 70                                                           GEOM 
   65 YCC=0.                                                             GEOM 
      YCP=0.                                                             GEOM 
      IF(XP.LE.XC) GO TO 70                                              GEOM 
      YCC=SQRT(RR*RR-(XP-XC)**2)-RR                                      GEOM 
      YCP=-(XP-XC)/(YCC+RR)                                              GEOM 
      GO TO 70                                                           GEOM 
   67 YCC=0.                                                             GEOM 
      YCP=0.                                                             GEOM 
      IF(XP.LE.XC) GO TO 70                                              GEOM 
      IF(XP.GE.XC1) GO TO 68                                             GEOM 
      YCC=SQRT(RR*RR-(XP-XC)**2)-RR                                      GEOM 
      YCP=-(XP-XC)/(YCC+RR)                                              GEOM 
      GO TO 70                                                           GEOM 
   68 YCC=-TCR*(XP-XC1)+YC1                                              GEOM 
      YCP=-TCR                                                           GEOM 
   70 THC=ATAN(YCP)                                                      GEOM 
      X=-YT*SIN(THC)+XP                                                  GEOM 
      Y=YT*COS(THC)+YCC                                                  GEOM 
      GO TO 98                                                           GEOM 
   80 X=XP                                                               GEOM 
      Y=YT                                                               GEOM 
   98 THZ(I)=ATAN2(Y,X)                                                  GEOM 
      RRZ(I)=SQRT(X*X+Y*Y)                                               GEOM 
      XSURF(I)=X                                                         GEOM 
      YSURF(I)=Y                                                         GEOM 
  100 CONTINUE                                                           GEOM 
      IF(IEQV.EQ.1) CALL GEOCUT(XSURF,YSURF)                             GEOM 
      CALL MAX(NG,XSURF,IXMAX,XMAX)                                      MOD2 
      IF(IMOD.GE.1) CALL ORDMOD(NG,IXMAX,XSURF,YSURF,RRZ,THZ)            MOD2 
      IF(IDESIN.EQ.1) CALL DESX(IREAD,IWRIT,STARTX,NCP,XCP,CPPEX)        GEOM 
C                                                                        GEOM 
      XAREA=AREA(NG,XSURF,YSURF)                                         GEOM 
C                                                                        GEOM 
      XSGR=X0/AZ                                                         GEOM 
      YSGR=Y0/AZ                                                         GEOM 
      WRITE(IWRIT,1006) XSGR,YSGR,XAREA                                  GEOM 
      IF(IPUNCH.EQ.1) GO TO 500                                          GEOM 
      GO TO 600                                                          GEOM 
C                                                                        GEOM 
C    INPUT GEOMETRY READ IN HERE IF IRPTS=1                              GEOM 
C                                                                        GEOM 
  200 CONTINUE                                                           GEOM 
C                                                                        GEOM 
      READ(IREAD,1001) TITL                                              GEOM 
      WRITE(IWRIT,1008) TITL                                             GEOM 
      READ(IREAD,1003) ZSYM,THICK,FNU,FNL,XKSMTH,XSING,YSING             GEOM 
      IF(THICK.EQ.0.0) THICK=1.0                                         MOD4 
      WRITE(IWRIT,1004)ZSYM,THICK,FNU,FNL,XKSMTH,XSING,YSING             GEOM 
      ISYM=ZSYM                                                          GEOM 
      XSING=AZ*XSING                                                     GEOM 
      YSING=AZ*YSING                                                     GEOM 
      READ(IREAD,1001) TITL                                              GEOM 
      WRITE(IWRIT,1002) TITL                                             GEOM 
      NU=FNU                                                             GEOM 
      NL=FNL                                                             GEOM 
      NM=NL                                                              GEOM 
      IF(ISYM.GE.1) NL=NU                                                GEOM 
      NG=NU+NL-1                                                         GEOM 
      DO 210 J=1,NU                                                      GEOM 
      JJ=NL+J-1                                                          GEOM 
      READ(IREAD,1003) XU,YU                                             GEOM 
      WRITE(IWRIT,1005) J,XU,YU                                          GEOM 
      XU=AZ*XU                                                           GEOM 
      YU=THICK*YU                                                        MOD4 
      YU=AZ*YU                                                           GEOM 
      XSURF(JJ)=XU                                                       GEOM 
      YSURF(JJ)=YU                                                       GEOM 
      THZ(JJ)=ATAN2(YU,XU)                                               GEOM 
  210 RRZ(JJ)=SQRT(XU*XU+YU*YU)                                          GEOM 
      IF(ISYM.GE.1) GO TO 230                                            GEOM 
      READ(IREAD,1001) TITL                                              GEOM 
      WRITE(IWRIT,1002) TITL                                             GEOM 
      DO 220 J=1,NL                                                      GEOM 
      JJ=NL-J+1                                                          GEOM 
      READ(IREAD,1003) XL,YL                                             GEOM 
      WRITE(IWRIT,1005) J,XL,YL                                          GEOM 
      XL=AZ*XL                                                           GEOM 
      YL=THICK*YL                                                        MOD4 
      YL=AZ*YL                                                           GEOM 
      XSURF(JJ)=XL                                                       GEOM 
      YSURF(JJ)=YL                                                       GEOM 
      THZ(JJ)=ATAN2(YL,XL)                                               GEOM 
  220 RRZ(JJ)=SQRT(XL*XL+YL*YL)                                          GEOM 
C                                                                        GEOM 
      GO TO 240                                                          GEOM 
  230 DO 235 J=1,NL                                                      GEOM 
      JJ=NL-J+1                                                          GEOM 
      JSYM=NL+J-1                                                        GEOM 
      XSURF(JJ)=XSURF(JSYM)                                              GEOM 
      YSURF(JJ)=-YSURF(JSYM)                                             GEOM 
      THZ(JJ)=-THZ(JSYM)                                                 GEOM 
  235 RRZ(JJ)=RRZ(JSYM)                                                  GEOM 
C                                                                        GEOM 
  240 CONTINUE                                                           GEOM 
      IF(IEQV.EQ.1) CALL GEOCUT(XSURF,YSURF)                             GEOM 
      CALL MAX(NG,XSURF,IXMAX,XMAX)                                      MOD2 
      IF(IMOD.GE.1) CALL ORDMOD(NG,IXMAX,XSURF,YSURF,RRZ,THZ)            MOD2 
      IF(IDESIN.EQ.1) CALL DESX(IREAD,IWRIT,STARTX,NCP,XCP,CPPEX)        GEOM 
  310 NIN=NM                                                             GEOM 
      IF(XSING.EQ.0.0) CALL PARM(XSURF,YSURF,NG,XSING,YSING,NIN)         GEOM 
      NM=NIN                                                             GEOM 
  320 IF(XSURF(NM).LT.XSING) GO TO 330                                   GEOM 
      NM=NM-1                                                            GEOM 
      GO TO 320                                                          GEOM 
  330 CONTINUE                                                           GEOM 
      X0=XSING                                                           GEOM 
      Y0=YSING                                                           GEOM 
      Y1=-Y0                                                             GEOM 
C                                                                        GEOM 
      XAREA=AREA(NG,XSURF,YSURF)                                         GEOM 
C                                                                        GEOM 
      XSGR=X0/AZ                                                         GEOM 
      YSGR=Y0/AZ                                                         GEOM 
      IF(XSGR.GE.1.0) X0=AZ*0.994                                        MOD2 
      IF(XSGR.GE.1.0) XSGR=0.994                                         MOD2 
      WRITE(IWRIT,1006) XSGR,YSGR,XAREA                                  GEOM 
C                                                                        GEOM 
C                                                                        GEOM 
      IF(IPUNCH.NE.1) GO TO 600                                          GEOM 
  500 CONTINUE                                                           GEOM 
C                                                                        GEOM 
C    OPTIONALLY PUNCH OUT GENERATED SECTION                              GEOM 
C                                                                        GEOM 
      IPUN=8                                                             GEOM 
      WRITE(IPUN,1020) IQQQ,XLGNO                                        GEOM 
      WRITE(IPUN,1018) XLGNO,IQQQ                                        GEOM 
      ZSYM=0.0                                                           GEOM 
      THICK=1.0                                                          GEOM 
      XKSMTH=0.0                                                         GEOM 
      XSING=X0/AZ                                                        GEOM 
      YSING=Y0/AZ                                                        GEOM 
      FNU=NG-IXMAX+1                                                     GEOM 
      FNL=IXMAX                                                          GEOM 
      WRITE(IPUN,1012) ZSYM,THICK,FNU,FNL,XKSMTH,XSING,YSING             GEOM 
      WRITE(IPUN,1016)                                                   GEOM 
      DO 110 I=IXMAX,NG                                                  GEOM 
      XXMAX=XSURF(I)/XMAX                                                GEOM 
      YXMAX=YSURF(I)/XMAX                                                GEOM 
  110 WRITE(IPUN,1012) XXMAX,YXMAX                                       GEOM 
      WRITE(IPUN,1014)                                                   GEOM 
      DO 120 I=1,IXMAX                                                   GEOM 
      II=IXMAX-I+1                                                       GEOM 
      XXMAX=XSURF(II)/XMAX                                               GEOM 
      YXMAX=YSURF(II)/XMAX                                               GEOM 
  120 WRITE(IPUN,1012) XXMAX,YXMAX                                       GEOM 
C                                                                        GEOM 
  600 CONTINUE                                                           GEOM 
      END                                                                GEOM 
      FUNCTION AREA(NG,X,Y)                                              GEOM 
C                                                                        GEOM 
C     COMPUTE THE CROSS-SECTIONAL AREA                                   GEOM 
C                                                                        GEOM 
      DIMENSION X(1),Y(1)                                                GEOM 
      X(NG+1)=X(1)                                                       GEOM 
      Y(NG+1)=Y(1)                                                       GEOM 
      XA=0.                                                              GEOM 
      DO 10 I=1,NG                                                       GEOM 
   10 XA=XA+(Y(I+1)+Y(I))*(X(I+1)-X(I))                                  GEOM 
      XA=-0.5*XA                                                         GEOM 
      AREA=XA                                                            GEOM 
      RETURN                                                             GEOM 
      END                                                                GEOM 
      SUBROUTINE MAX(NG,X,IXMAX,XMAX)                                    GEOM 
      DIMENSION X(1)                                                     GEOM 
      XMAX=0                                                             GEOM 
      IXMAX=0                                                            GEOM 
      DO 10 I=1,NG                                                       GEOM 
      IF(X(I).GT.XMAX) IXMAX=I                                           GEOM 
      IF(X(I).GT.XMAX) XMAX=X(I)                                         GEOM 
   10 CONTINUE                                                           GEOM 
C                                                                        GEOM 
      RETURN                                                             GEOM 
      END                                                                GEOM 
      SUBROUTINE DESX(IREAD,IWRIT,STARTX,NCP,XCP,CPPEX)                  GEOM 
      DIMENSION XCP(1),CPPEX(1)                                          GEOM 
      READ(IREAD,1003) CPPTS,STARTC                                      GEOM 
      WRITE(IWRIT,1001) CPPTS,SARTC                                      GEOM 
      NCP=CPPTS                                                          GEOM 
      DO 300 N=1,NCP                                                     GEOM 
      READ(IREAD,1003) XX,CPCP                                           GEOM 
      WRITE(IWRIT,1003) XX,CPCP                                          GEOM 
      XCP(N)=XX                                                          GEOM 
  300 CPPEX(N)=CPCP                                                      GEOM 
C                                                                        GEOM 
 1001 FORMAT(//5X,11HTARGET CP ,3X,6HCPPTS=,F10.5,4X,7HSTARTC=,F10.5/)   GEOM 
 1003 FORMAT(8F10.5)                                                     GEOM 
C                                                                        GEOM 
      RETURN                                                             GEOM 
      END                                                                GEOM 
      SUBROUTINE GEOCUT(XSURF,YSURF)                                     GEOCUT 
C                                                                        GEOCUT 
C      READ IN HARRIS DATA SET AND GENERATE NON-CONICAL INFO             GEOCUT 
C                                                                        GEOCUT 
C      IF IEQV3=1    USE FOR CONICAL SOLUTION ALSO                       GEOCUT 
C                                                                        GEOCUT 
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /GEOIN/ RRZ(201),THZ(201),X0,Y0,Y1,NM,NGH,NMH               GEOIN
      COMMON /WNGTE/ XROOT,YWNGRT,ZROOT                                  WNGTE
      DIMENSION XSURF(1),YSURF(1)                                        GEOCUT 
C                                                                        GEOCUT 
      CALL GEOMIN                                                        GEOCUT 
C                                                                        GEOCUT 
      CALL XPATCH(XSTN)                                                  GEOCUT 
C                                                                        GEOCUT 
C                                                                        GEOCUT 
      ZAVG=0.0                                                           MOD2 
      IF(XSTN.GT.XROOT) GO TO 20                                         MOD2 
      CALL XCUT(XSTN,0.0,1,ZOUTU,DNY,DNZ,DNX)                            GEOCUT 
      CALL XCUT(XSTN,0.0,2,ZOUTL,DNY,DNZ,DNX)                            GEOCUT 
C                                                                        GEOCUT 
      ZAVG=(ZOUTU+ZOUTL)/2.0                                             GEOCUT 
C                                                                        GEOCUT 
   20 CONTINUE                                                           MOD2 
C                                                                        GEOCUT 
      DALP=ATAN(-ZAVG/(XSTN-XORIGC))                                     GEOCUT 
      ALP=ALP+DALP                                                       GEOCUT 
      CALL TIPLE(XSTN,YLEH,ZLEH,XSIN,YSIN)                               GEOCUT 
C                                                                        GEOCUT 
      DALPD=57.29578*DALP                                                MOD2 
C                                                                        MOD2 
      IF(IOUT2.NE.2) WRITE(LOUT,1000) XSTN,ZAVG,DALPD                    MOD2 
      IF(IOUT2.NE.2) WRITE(LOUT,1001)                                    GEOCUT 
      IHAR=20                                                            GEOCUT 
      NGH=61                                                             MOD2 
      NGH=2*(NGH/2)+1                                                    GEOCUT 
      NMH=NGH/2+1                                                        GEOCUT 
      DTH=PI/FLOAT(NGH-2)                                                GEOCUT 
      DO 100 I=1,NGH                                                     GEOCUT 
      TH=0.0                                                             GEOCUT 
      NSFLG=2                                                            GEOCUT 
C                                                                        MOD2 
      DNY=0.0                                                            MOD2 
      DNZ=0.0                                                            MOD2 
      DNX=0.0                                                            MOD2 
      ZOUT=0.0                                                           MOD2 
C                                                                        MOD2 
      IF(I.LT.NMH) TH=(I-1)*DTH-PIO2                                     GEOCUT 
      IF(I.GT.NMH) TH=(I-2)*DTH-PIO2                                     GEOCUT 
      IF(I.GT.NMH) NSFLG=1                                               GEOCUT 
C                                                                        GEOCUT 
      YHARL=COS(TH)*YLEH                                                 GEOCUT 
      YHARL=YORIGC+YHARL                                                 GEOCUT 
      IF(YHARL.LT.YWNGRT) GO TO 40                                       MOD2 
      IF(YHARL.LT.0.0) YHARL=0.1E-6                                      GEOCUT 
      CALL XCUT(XSTN,YHARL,NSFLG,ZOUT,DNY,DNZ,DNX)                       GEOCUT 
C                                                                        MOD2 
   40 CONTINUE                                                           MOD2 
C                                                                        MOD2 
      YHARLD=YHARL                                                       MOD2 
      ZOUTD=ZOUT                                                         MOD2 
C                                                                        MOD2 
C                                                                        GEOCUT 
      YHARL=YHARL-YORIGC                                                 GEOCUT 
      ZOUT=ZOUT-ZAVG                                                     GEOCUT 
C                                                                        GEOCUT 
C                                                                        GEOCUT 
      WRITE(IHAR,1200) XSTN,YHARL,ZOUT,DNY,DNZ,DNX                       GEOCUT 
C                                                                        GEOCUT 
C                                                                        GEOCUT 
      ZOUT=ZOUT/(XSTN-XORIGC)                                            MOD1 
      YHARL=YHARL/(XSTN-XORIGC)                                          MOD1 
C                                                                        GEOCUT 
      IF(IEQV3.NE.1) GO TO 80                                            GEOCUT 
      THZ(I)=ATAN2(ZOUT,YHARL)                                           GEOCUT 
      RRZ(I)=SQRT(ZOUT**2+YHARL**2)                                      GEOCUT 
      XSURF(I)=YHARL                                                     GEOCUT 
      YSURF(I)=ZOUT                                                      GEOCUT 
C                                                                        GEOCUT 
   80 IF(IOUT2.EQ.2) GO TO 100                                           GEOCUT 
      WRITE(LOUT,1100) I,YHARL,ZOUT,DNY,DNZ,DNX,XSTN,YHARLD,ZOUTD        MOD2 
  100 CONTINUE                                                           GEOCUT 
      IF(IOUT2.NE.2) WRITE(LOUT,1001)                                    GEOCUT 
C                                                                        GEOCUT 
      IF(IEQV3.NE.1) RETURN                                              GEOCUT 
C                                                                        GEOCUT 
      NG=NGH                                                             GEOCUT 
      NM=NMH                                                             GEOCUT 
C                                                                        GEOCUT 
C                                                                        GEOCUT 
 1000 FORMAT(1H1/5X,26HSPANWISE SECTION GEOMETRY  ,                      GEOCUT 
     1 2X,30HFROM CRAIDON GEOMETRY PACKAGE   //                          GEOCUT 
     2 5X,5HXSTN=,F10.5,5X,5HZAVG=,F10.5,5X,5HDALP=,F6.2,8H DEGREES/)    MOD2 
 1001 FORMAT(/9X,1HI,9X,5HYHARL,12X,1HZ,14X,3HDNY,11X,3HDNZ,             GEOCUT 
     1 13X,3HDNX,11X,4HXSTN,12X,2HYD,12X,2HZD/)                          MOD2 
 1100 FORMAT(5X,I5,8F15.5)                                               MOD2 
 1200 FORMAT(6E14.7)                                                     GEOCUT 
 1300 FORMAT(1H1)                                                        GEOCUT 
C                                                                        GEOCUT 
      RETURN                                                             GEOCUT 
      END                                                                GEOCUT 
      SUBROUTINE ORDMOD(N,IXMAX,X,Y,R,THE)                               ORDMOD 
C                                                                        ORDMOD 
C    MODIFY  COORDINATES VIA BAVITZ NOTES                                ORDMOD 
C                                                                        ORDMOD 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /MODS/ XU1,XU2,XU3,DTCU,XL1,XL2,XL3,DTCL                    MODS 
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      DIMENSION X(1),Y(1),R(1),THE(1)                                    ORDMOD 
      WRITE(6,340)                                                       ORDMOD 
      IF(IMOD.EQ.1) GO TO 110                                            ORDMOD 
      WRITE(6,310)                                                       ORDMOD 
      DO 100 I=1,IXMAX                                                   ORDMOD 
      XX=X(I)/AZ                                                         ORDMOD 
      XD=0.0                                                             ORDMOD 
      IF(XX.GT.XL1.AND.XX.LE.XL2) XD=(XX-XL1)/2.0/(XL2-XL1)              ORDMOD 
      IF(XX.GT.XL2.AND.XX.LE.XL3) XD=(XX+XL3-2.0*XL2)/2.0/(XL3-XL2)      ORDMOD 
      DDY=-.64*DTCL*XD**3*(XD-1.0)**3                                    ORDMOD 
      YOLD=Y(I)/AZ                                                       ORDMOD 
      YNEW=YOLD+DDY                                                      ORDMOD 
      Y(I)=YNEW*AZ                                                       ORDMOD 
      R(I)=SQRT(X(I)**2+Y(I)**2)                                         ORDMOD 
      THE(I)=ATAN2(YNEW,XX)                                              ORDMOD 
  100 WRITE(6,300) I,XD,DDY,XX,YNEW,YOLD,R(I),THE(I)                     ORDMOD 
  110 IF(IMOD.EQ.2) GO TO 210                                            ORDMOD 
      WRITE(6,320)                                                       ORDMOD 
      WRITE(6,330)                                                       ORDMOD 
      I1=IXMAX+1                                                         ORDMOD 
      DO 200 I=I1,N                                                      ORDMOD 
      XX=X(I)/AZ                                                         ORDMOD 
      XD=0.0                                                             ORDMOD 
      IF(XX.GT.XU1.AND.XX.LE.XU2) XD=(XX-XU1)/2.0/(XU2-XU1)              ORDMOD 
      IF(XX.GT.XU2.AND.XX.LE.XU3) XD=(XX+XU3-2.0*XU2)/2.0/(XU3-XU2)      ORDMOD 
      DDY=-.64*DTCU*XD**3*(XD-1.0)**3                                    ORDMOD 
      YOLD=Y(I)/AZ                                                       ORDMOD 
      YNEW=YOLD+DDY                                                      ORDMOD 
      Y(I)=YNEW*AZ                                                       ORDMOD 
      R(I)=SQRT(X(I)**2+Y(I)**2)                                         ORDMOD 
      THE(I)=ATAN2(YNEW,XX)                                              ORDMOD 
  200 WRITE(6,300) I,XD,DDY,XX,YNEW,YOLD,R(I),THE(I)                     ORDMOD 
  210 CONTINUE                                                           ORDMOD 
C                                                                        ORDMOD 
  300 FORMAT(I5,7F10.5)                                                  ORDMOD 
  310 FORMAT(//10X,13HLOWER SURFACE   /)                                 ORDMOD 
  320 FORMAT(//10X,13HUPPER SURFACE  /)                                  ORDMOD 
  330 FORMAT(4X,1HI,6X,2HXD,7X,3HDDY,7X,3HXXX,7X,4HYNEW,6X,4HYOLD,       ORDMOD 
     1 8X,1HR,6X,5HTHETA/)                                               ORDMOD 
  340 FORMAT(1H1//10X, 39HSPANWISE SECTION MODIFICATION VIA BUMPS //)    ORDMOD 
C                                                                        ORDMOD 
      RETURN                                                             ORDMOD 
      END                                                                ORDMOD 
      SUBROUTINE PARM(X,Y,N,XSING,YSING,IN)                              PARM 
C                                                                        PARM 
C                                                                        PARM 
C     CALCULATES THE SINGULAR POINT                                      PARM 
C                                                                        PARM 
      DIMENSION X(1),Y(1)                                                PARM 
      RN=100000.                                                         PARM 
      IMIN=N/4                                                           PARM 
      IMAX=(3*N)/4                                                       PARM 
      DO 1 I=IMIN,IMAX                                                   PARM 
      X2=X(I+1)-X(I)                                                     PARM 
      Y2=Y(I+1)-Y(I)                                                     PARM 
      X3=X(I+2)-X(I)                                                     PARM 
      Y3=Y(I+2)-Y(I)                                                     PARM 
      R2=X2**2+Y2**2                                                     PARM 
      R3=X3**2+Y3**2                                                     PARM 
      D=(X3*Y2-X2*Y3)*2.                                                 PARM 
      IF(D.EQ.0.0) D=1.E-12                                              PARM 
      A=-(Y3*R2-Y2*R3)/D                                                 PARM 
      B= (X3*R2-X2*R3)/D                                                 PARM 
      RC=(A**2+B**2)**.5                                                 PARM 
      IF(RC-RN) 2,1,1                                                    PARM 
    2 RN=RC                                                              PARM 
      XC=X(I)+A                                                          PARM 
      YC=Y(I)+B                                                          PARM 
      IN=I+1                                                             PARM 
    1 CONTINUE                                                           PARM 
C                                                                        PARM 
      XSING=0.5*(XC+X(IN))                                               PARM 
      YSING=0.5*(YC+Y(IN))                                               PARM 
C                                                                        PARM 
      WRITE(6,1001)                                                      PARM 
      WRITE(6,1000) X(IN),Y(IN),IN,XC,YC,XSING,YSING                     PARM 
 1000 FORMAT(/5X,6HX(IN)=,F10.5,5X,6HY(IN)=,F10.5,5X,4H IN=,I3/          PARM 
     1 5X,3HXC=,3X,F10.5,5X,3HYC=,3X,F10.5/5X,6HXSING=,F10.5,5X,6HYSING= PARM 
     2 F10.5/)                                                           PARM 
 1001 FORMAT(1H1/5X,21HINTERNALLY GENERATED ,                            PARM 
     1 32HSINGULARITY LOCATION FOR MAPPING    /)                         PARM 
C                                                                        PARM 
      RETURN                                                             PARM 
      END                                                                PARM 
      SUBROUTINE XPATCH(X)                                               XPATCH 
C                                                                        XPATCH 
C     RETURN AND STORE PATCH MATRICES REQUIRED FOR XCUT                  MOD2 
C                                                                        XPATCH 
      COMMON /XSECT/ ABCDE(20),PPL1(3),PPL2(3),PPL3(3),                  XSECT
     1        PLOTSZ,HPAGE,VPAGE,INP,NOU,NOW,ISIDE,IPRIN,                XSECT
     2        KODE,XSTAT,THETR,XMACH                                     XSECT
      COMMON /PATBLK/ PATXY(4,600,2)                                     PATBLK 
      COMMON /XPAT/NLE,NXLE(5),NXPAT(5),PATCHX(14400),PATCOR(4,150,2)    MOD2 
      DIMENSION NAME(2),ABC(20),PATCH(4,4,3)                             XPATCH 
      DIMENSION PNT1(3),PNT2(3),PNT3(3)                                  XPATCH 
      EQUIVALENCE (PNT1(1),PPL1(1)),(PNT2(1),PPL2(1)),(PNT3(1),PPL3(1))  XPATCH 
C                                                                        XPATCH 
      REWIND 14                                                          XPATCH 
      READ(14)ABC                                                        XPATCH 
      READ(14)H1,H2,H3,H4,H5,H6,NOBJ                                     XPATCH 
      DO 70 J=1,NOBJ                                                     XPATCH 
      READ(14)NSURF,JJ,NAME(1),NAME(2),JJ,JJ                             XPATCH 
      DO 60 N=1,NSURF                                                    XPATCH 
      NX=0                                                               XPATCH 
      IF (N.EQ.1) NLE=0                                                  XPATCH 
      READ(14)ND1,NS1,J3,J4,J5                                           XPATCH 
C                                                                        MOD2 
C         READS PATCHES FROM TAPE,                                       XPATCH 
C         SOLVES FOR INTERSECTIONS BY SPECIFIED PLANE                    XPATCH 
C         AND PLOTS                                                      XPATCH 
C                                                                        XPATCH 
      NPAT=ND1*NS1                                                       XPATCH 
      NCOUNT=1                                                           XPATCH 
      DO 370 NNPAT=1,NPAT                                                XPATCH 
      READ(14)PATCH                                                      XPATCH 
      IF(X.GT.PATXY(2,NNPAT,N).OR.X.LT.PATXY(1,NNPAT,N)) GO TO 371       XPATCH 
      NX=NX+1                                                            XPATCH 
      IF (NNPAT.EQ.NCOUNT.AND.N.EQ.1) NLE=NLE+1                          XPATCH 
      IF (NNPAT.EQ.NCOUNT.AND.N.EQ.1) NXLE(NLE)=NX                       XPATCH 
      IF (NNPAT.EQ.NCOUNT.AND.N.EQ.1) WRITE (6,557) NXLE(NLE),N          XPATCH 
  557 FORMAT (10X,36HLEADING EDGE PANEL DETECTED AT NXLE=,I5,11H ON SURF XPATCH 
     1ACE,I5)                                                            XPATCH 
      DO 778 II=1,4                                                      XPATCH 
      DO 778 JJ=1,4                                                      XPATCH 
      DO 778 KK=1,3                                                      XPATCH 
      PATCHX(II+4*(JJ-1)+16*(KK-1)+48*(NX-1)+7200*(N-1))=PATCH(II,JJ,KK) MOD2 
  778 CONTINUE                                                           XPATCH 
      DO 780 IJK=1,4                                                     XPATCH 
      PATCOR(IJK,NX,N)=PATXY(IJK,NNPAT,N)                                XPATCH 
  780 CONTINUE                                                           XPATCH 
  371 IF (NNPAT.EQ.NCOUNT) NCOUNT=NCOUNT+NS1                             XPATCH 
  370 CONTINUE                                                           XPATCH 
      NXPAT(N)=NX                                                        XPATCH 
      WRITE (6,117) NXPAT(N),N                                           XPATCH 
  117 FORMAT (5X,4H*** ,I5,29H PATCHES FOR XCUT ON SURFACE ,I4,4H ***)   XPATCH 
60    CONTINUE                                                           XPATCH 
70    CONTINUE                                                           XPATCH 
      RETURN                                                             XPATCH 
      END                                                                XPATCH 
      SUBROUTINE XCUT (XIN,YIN,NS,Z,DUM1,DUM2,DUM3)                      XCUT 
C                                                                        XCUT 
C    FIND Z FOR A GIVEN X AND Y                                          MOD2 
C                                                                        XCUT 
      COMMON /XSECT/ ABCDE(20),PPL1(3),PPL2(3),PPL3(3),                  XSECT
     1        PLOTSZ,HPAGE,VPAGE,INP,NOU,NOW,ISIDE,IPRIN,                XSECT
     2        KODE,XSTAT,THETR,XMACH                                     XSECT
      COMMON /XPAT/NLE,NXLE(5),NXPAT(5),PATCHX(14400),PATCOR(4,150,2)    MOD2 
      COMMON /ERROR/ IERR                                                ERROR
      DIMENSION PATCH(4,4,3)                                             XCUT 
      DIMENSION PNT1(3),PNT2(3),PNT3(3),PNT4(3)                          XCUT 
      EQUIVALENCE (PNT1(1),PPL1(1)),(PNT2(1),PPL2(1)),(PNT3(1),PPL3(1))  XCUT 
C                                                                        XCUT 
      DO 60 N=1,2                                                        XCUT 
      X=XIN                                                              XCUT 
      Y=YIN                                                              XCUT 
      IFLAG=0                                                            XCUT 
      NX=NXPAT(N)                                                        XCUT 
      DO 370 NNPAT=1,NX                                                  XCUT 
      IF (NS.EQ.2.AND.N.EQ.1) GO TO 60                                   XCUT 
      IF (NS.EQ.0.AND.IFLAG.EQ.1) GO TO 60                               XCUT 
      IF (X.GT.PATCOR(2,NNPAT,N).OR.X.LT.PATCOR(1,NNPAT,N)) GO TO 777    XCUT 
      IF (Y.GT.PATCOR(4,NNPAT,N).OR.Y.LT.PATCOR(3,NNPAT,N)) GO TO 777    XCUT 
      DO 800 II=1,4                                                      XCUT 
      DO 800 JJ=1,4                                                      XCUT 
      DO 800 KK=1,3                                                      XCUT 
      PATCH(II,JJ,KK)=PATCHX(II+4*(JJ-1)+16*(KK-1)+48*(NNPAT-1)+         MOD2 
     1 7200*(N-1))                                                       MOD2 
  800 CONTINUE                                                           XCUT 
      CALL VSOLV(X,Y,Z,U,W,PATCH,IFLAG,DNX,DNY,DNZ)                      XCUT 
  777 CONTINUE                                                           XCUT 
      IERR=IFLAG                                                         MOD2 
      IF (IFLAG.EQ.1.AND.NS.EQ.1) GO TO 500                              XCUT 
      IF (IFLAG.EQ.1.AND.NS.EQ.2) GO TO 500                              XCUT 
      IF (IFLAG.EQ.1.AND.NS.EQ.0.AND.N.EQ.1) ZUP=Z                       XCUT 
      IF (IFLAG.EQ.1.AND.NS.EQ.0.AND.N.EQ.2) ZLO=Z                       XCUT 
  370 CONTINUE                                                           XCUT 
      IF(IFLAG.EQ.0) WRITE(6,373) XIN,YIN                                MOD2 
  373 FORMAT(/10X,21H*** ERROR MESSAGE ***   ,4HXIN=,F10.6,3X,           MOD2 
     1    4HYIN=,F10.6,3X,7HIN XCUT//)                                   MOD2 
60    CONTINUE                                                           XCUT 
      IF(NS.NE.0) WRITE(6,378)                                           MOD2 
  378 FORMAT(/5X,22HERROR IN XCUT AFTER 60/)                             MOD2 
      B=.5*(ZUP-ZLO)                                                     XCUT 
      ZMEAN=.5*(ZUP+ZLO)                                                 XCUT 
      Z=ZMEAN                                                            XCUT 
      DUM1=B                                                             XCUT 
      DUM2=ZUP                                                           XCUT 
      DUM3=ZLO                                                           XCUT 
      GO TO 600                                                          XCUT 
  500 DUM1=DNY                                                           XCUT 
      DUM2=DNZ                                                           XCUT 
      DUM3=DNX                                                           XCUT 
  600 RETURN                                                             XCUT 
C                                                                        XCUT 
C         END OF XCUT                                                    XCUT 
C                                                                        XCUT 
      END                                                                XCUT 
      SUBROUTINE VSOLV (XIN,YIN,Z,U,W,PATCH,IFLAG,NX,NY,NZ)              VSOLV
C                                                                        VSOLV
C      USE NEWTONS METHOD TO GET U,W GIVEN X,Y                           MOD2 
C        AND THEN COMPUTE Z( SIMULTANEOUSLY)                             MOD2 
C                                                                        VSOLV
      REAL NX,NY,NZ                                                      VSOLV
      DIMENSION VEC(4,3),VECU(4,3),PATCH(4,4,3),V(3),VU(3),VW(3)         VSOLV
C                                                                        MOD2 
      ITMAX=400                                                          MOD2 
      RELAX=0.1                                                          MOD2 
      ITER=0                                                             VSOLV
      X=XIN                                                              VSOLV
      Y=YIN                                                              VSOLV
      U=.5                                                               VSOLV
      W=.5                                                               VSOLV
C                                                                        MOD2 
  200 DO 10 J4=1,4                                                       VSOLV
      DO 10 K3=1,3                                                       VSOLV
      VEC(J4,K3)=((U*PATCH(1,J4,K3)+PATCH(2,J4,K3))*U+PATCH(3,J4,K3))*U+ VSOLV
     1PATCH(4,J4,K3)                                                     VSOLV
      VECU(J4,K3)=3.*(U**2)*PATCH(1,J4,K3)+2.*U*PATCH(2,J4,K3)           VSOLV
     1+PATCH(3,J4,K3)                                                    VSOLV
10    CONTINUE                                                           VSOLV
C                                                                        MOD2 
      DO 20 K3=1,3                                                       VSOLV
      V(K3)=((W*VEC(1,K3)   +VEC(2,K3))*W+VEC(3,K3))*W+VEC(4,K3)         VSOLV
      VU(K3)=(W**3)*VECU(1,K3)+(W**2)*VECU(2,K3)+W*VECU(3,K3)+VECU(4,K3) VSOLV
      VW(K3)=3.*(W**2)*VEC(1,K3)+2.*W*VEC(2,K3)+VEC(3,K3)                VSOLV
20    CONTINUE                                                           VSOLV
      DET=VU(1)*VW(2)-VW(1)*VU(2)                                        VSOLV
      IF (ABS(DET).LT.1.E-10) IFLAG=0                                    VSOLV
      IF (ABS(DET).LT.1.E-10) RETURN                                     VSOLV
C                                                                        MOD2 
      DEL=((V(2)-Y)*VW(1)-(V(1)-X)*VW(2))/DET                            MOD2 
      EPS=((V(1)-X)*VU(2)-(V(2)-Y)*VU(1))/DET                            MOD2 
C                                                                        MOD2 
      UN=U+RELAX*DEL                                                     MOD2 
      WN=W+RELAX*EPS                                                     MOD2 
C                                                                        MOD2 
      IF (ABS(X-V(1)).LT.1.E-8.AND.ABS(Y-V(2)).LT.1.E-8.AND.ABS(U-UN).LT VSOLV
     1.1.E-8.AND.ABS(W-WN).LT.1.E-8) GO TO 100                           VSOLV
      U=UN                                                               VSOLV
      W=WN                                                               VSOLV
      ITER=ITER+1                                                        VSOLV
      IF(ITER.GT.ITMAX) ERRZ=ABS(X-V(1))                                 MOD2 
      IF(ITER.GT.ITMAX) ERRX=ABS(Y-V(2))                                 MOD2 
      IF(ITER.GT.ITMAX.AND.ABS(X-V(1)).LT.1.E-3.AND.ABS(Y-V(2)).LT.      MOD2 
     1 1.E-3) GO TO 100                                                  MOD2 
      IF(ITER.GT.ITMAX) IFLAG=0                                          MOD2 
      IF(ITER.GT.ITMAX) RETURN                                           MOD2 
      GO TO 200                                                          VSOLV
  100 IF (U.GT.1.0001.OR.U.LT.-1.E-4.OR.W.GT.1.0001.OR.W.LT.-1.E-4)      VSOLV
     1IFLAG=0                                                            VSOLV
      IF (U.GT.1.0001.OR.U.LT.-1.E-4.OR.W.GT.1.0001.OR.W.LT.-1.E-4)      VSOLV
     1RETURN                                                             VSOLV
C                                                                        MOD2 
      X=V(1)                                                             VSOLV
      Y=V(2)                                                             VSOLV
      Z=V(3)                                                             VSOLV
      NX=VU(2)*VW(3)-VW(2)*VU(3)                                         VSOLV
      NY=VU(3)*VW(1)-VW(3)*VU(1)                                         VSOLV
      NZ=VU(1)*VW(2)-VU(2)*VW(1)                                         VSOLV
      XMAG=SQRT(NX**2+NY**2+NZ**2)                                       VSOLV
      NX=NX/XMAG                                                         VSOLV
      NY=NY/XMAG                                                         VSOLV
      NZ=NZ/XMAG                                                         VSOLV
      IFLAG=1                                                            VSOLV
      RETURN                                                             VSOLV
      END                                                                VSOLV
C                                                                        GEOMIN 
C         D3400 (SPADE) - SURFACE PATCH DEFINITION EQUATIONS             GEOMIN 
C             (CONVERTS A SURFACE POINT DESCRIPTION                      GEOMIN 
C             TO THREE DIMENSIONAL SURFACE PATCH EQUATIONS)              GEOMIN 
C         PROGRAMER - CHARLOTTE B. CRAIDON                               GEOMIN 
C                                                                        GEOMIN 
      SUBROUTINE GEOMIN                                                  GEOMIN 
      COMMON /PATPLT/ XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,NOBJ                 PATPLT 
      COMMON /PATBLK/ PATXY(4,600,2)                                     PATBLK 
      COMMON /XSECT/ ABCDE(20),PPL1(3),PPL2(3),PPL3(3),                  XSECT
     1        PLOTSZ,HPAGE,VPAGE,INP,NOU,NOW,ISIDE,IPRIN,                XSECT
     2        KODE,XSTAT,THETR,XMACH                                     XSECT
      COMMON /XPAT/NLE,NXLE(5),NXPAT(5),PATCHX(14400),PATCOR(4,150,2)    MOD2 
      COMMON /ERROR/ IERR                                                ERROR
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      DIMENSION ADATA(19)                                                GEOMIN 
      DATA AEND/4HEND /,AER/4HAERO/                                      GEOMIN 
C                                                                        GEOMIN 
C                                                                        GEOMIN 
      WRITE (6,20)                                                       GEOMIN 
20    FORMAT (1H110X,24HPROGRAM 03400 (SPADE) - ,34HSURFACE PATCH DEFINI GEOMIN 
     1TION EQUATIONS///)                                                 GEOMIN 
C                                                                        GEOMIN 
C         INPUT SURFACE POINT DESCRIPTION AND PROCESS                    GEOMIN 
C         FOR TAPE 10 AND FOR LABLED COMMON PATPLT                       GEOMIN 
C                                                                        GEOMIN 
30    CONTINUE                                                           GEOMIN 
      CALL START                                                         GEOMIN 
      WRITE (6,99)                                                       GEOMIN 
   99 FORMAT (10X,50H*** INPUT DATA FOR AIRCRAFT HAS BEEN COMPLETED ***) GEOMIN 
C                                                                        GEOMIN 
C                                                                        MOD2 
C      SET UP THE REST OF THE DATA SET FOR W12SC3                        MOD2 
C                                                                        MOD2 
      ALPD=0.0                                                           GEOMIN 
      ITAPEX=32                                                          GEOMIN 
      IF(KCCC.EQ.1) GO TO 14                                             GEOMIN 
    4 READ(ITAPEX,80) AIN,ADATA                                          GEOMIN 
      IF(AIN.EQ.AER) GO TO 6                                             GEOMIN 
      GO TO 4                                                            GEOMIN 
    6 CONTINUE                                                           GEOMIN 
   10 READ(IREAD,60) AIN1,AIN2,ADATA                                     GEOMIN 
      WRITE(ITAPEX,60) AIN1,AIN2,ADATA                                   GEOMIN 
      IF(AIN2.EQ.AEND) GO TO 12                                          GEOMIN 
      GO TO 10                                                           GEOMIN 
   12 CONTINUE                                                           GEOMIN 
C                                                                        GEOMIN 
   60 FORMAT(A2,A4,A2,18A4)                                              GEOMIN 
   70 FORMAT(5F7.4)                                                      GEOMIN 
   80 FORMAT(20A4)                                                       GEOMIN 
C                                                                        GEOMIN 
      READ(IREAD,70) XDUM1,XDUM2,CLBAR,XCP                               GEOMIN 
      WRITE(ITAPEX,70) EMINF,ALPD,CLBAR,XCP                              GEOMIN 
C                                                                        GEOMIN 
   14 CONTINUE                                                           GEOMIN 
C                                                                        GEOMIN 
C                                                                        GEOMIN 
C         COMPUTE AND STORE PATCH EQUATIONS                              GEOMIN 
C                                                                        GEOMIN 
      CALL SURF                                                          GEOMIN 
      WRITE (6,101)                                                      GEOMIN 
  101 FORMAT(1X,53H*** SPLINE AND SURFACE PATCHES HAS BEEN COMPLETED *** GEOMIN 
     1)                                                                  GEOMIN 
C                                                                        GEOMIN 
      CALL PACHXY                                                        GEOMIN 
      WRITE(6,103)                                                       GEOMIN 
  103 FORMAT(1H1)                                                        GEOMIN 
C                                                                        GEOMIN 
      RETURN                                                             GEOMIN 
C                                                                        GEOMIN 
C         END OF 03400                                                   GEOMIN 
C                                                                        GEOMIN 
      END                                                                GEOMIN 
      SUBROUTINE SURF                                                    SURF 
C                                                                        SURF 
C         CALLS A SUBROUTINE TO COMPUTE PATCHES                          SURF 
C         AND CONTROLS WRITING OF PATCH TAPE                             SURF 
C                                                                        SURF 
      COMMON /PATPLT/ XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,NOBJ                 PATPLT 
      DIMENSION ABC(20)                                                  SURF 
      REWIND 14                                                          SURF 
      REWIND 10                                                          SURF 
      READ (10) ABC                                                      SURF 
      WRITE(14)ABC                                                       SURF 
      WRITE(14)XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,NOBJ                        SURF 
      DO 20 I=1,NOBJ                                                     SURF 
      READ (10) NSURF,J2,J3,J4,J5,J6                                     SURF 
      WRITE(14)NSURF,J2,J3,J4,J5,J6                                      SURF 
      DO 10 N=1,NSURF                                                    SURF 
      READ (10) NCOL,NROW,N3,N4,N5                                       SURF 
      CALL PACH (NCOL,NROW,N3,N4,N5)                                     SURF 
10    CONTINUE                                                           SURF 
20    CONTINUE                                                           SURF 
      END FILE 14                                                        SURF 
      RETURN                                                             SURF 
      END                                                                SURF 
      SUBROUTINE PACH (NLD,NLS,L1,L2,L3)                                 PACH 
C                                                                        PACH 
C         CONSTRUCTS SURFACE PATCHES WITH THE COMPONENTS                 PACH 
C         EXPRESSED AS CUBIC FUNCTIONS OF TWO PARAMETEKS (U AND W)       PACH 
C         AND WRITES ON TAPE                                             PACH 
C                                                                        PACH 
      DIMENSION PATCH(4,4,3),COEF1(31,4,3),COEF2(31,4,3)                 PACH 
      DIMENSION SLOPE(31,31,3),XMAT(4,4),ALINE(31,3),ELEN(31),PAT(4,4)   PACH 
C     DATA XMAT/2.,-2.,1.,1.,-3.,3.,-2.,-1.,0.,0.,1.,0.,1.,0.,0.,0./     PACH 
      DATA XMAT/2.,-3.,0.,1.,-2.,3.,0.,0.,1.,-2.,1.,0.,1.,-1.,0.,0./     PACH 
      DATA MAXN/31/,EPS/.0000001/                                        PACH 
      N1=NLD-1                                                           PACH 
      N2=NLS-1                                                           PACH 
      WRITE(14)N1,N2,L1,L2,L3                                            PACH 
C                                                                        PACH 
C         COMPUTE PARAMETRIC SLOPES IN W DIRECTION                       PACH 
C                                                                        PACH 
      DO 70 N=1,NLS                                                      PACH 
      READ (10) ((ALINE(NN,N3),NN=1,NLD),N3=1,3)                         PACH 
C                                                                        PACH 
C         CHECK IF CUBIC FAIRING POSSIBLE                                PACH 
C                                                                        PACH 
      IF (NLD.LT.3) GO TO 20                                             PACH 
C                                                                        PACH 
C         CHECK FOR A POINT                                              PACH 
C                                                                        PACH 
      NL=NLD-1                                                           PACH 
      DO 10 NN=1,NL                                                      PACH 
      E1=ABS(ALINE(NN,1)-ALINE(NN+1,1))                                  PACH 
      E2=ABS(ALINE(NN,2)-ALINE(NN+1,2))                                  PACH 
      E3=ABS(ALINE(NN,3)-ALINE(NN+1,3))                                  PACH 
      IF (E1+E2+E3.LE.EPS) GO TO 20                                      PACH 
10    CONTINUE                                                           PACH 
      GO TO 40                                                           PACH 
C                                                                        PACH 
C         COMPUTE LINEAR SLOPES                                          PACH 
C                                                                        PACH 
20    DO 30 NN=1,NLD                                                     PACH 
      DO 30 N3=1,3                                                       PACH 
      SLOPE(NN,N,N3)=ALINE(2,N3)-ALINE(1,N3)                             PACH 
30    CONTINUE                                                           PACH 
      GO TO 70                                                           PACH 
C                                                                        PACH 
C         COMPUTE CUBIC SPLINE SLOPES                                    PACH 
C                                                                        PACH 
   40 CONTINUE                                                           MOD2 
      CALL SPFIT (MAXN,NLD,ALINE,ELEN,COEF1,I1,0,I2,EK,CP,I3,I4)         PACH 
      NL=NLD-1                                                           PACH 
      DO 50 NN=1,NL                                                      PACH 
      DO 50 N3=1,3                                                       PACH 
      SLOPE(NN,N,N3)=COEF1(NN,3,N3)                                      PACH 
50    CONTINUE                                                           PACH 
      DO 60 N3=1,3                                                       PACH 
      SLOPE(NLD,N,N3)=3.*COEF1(NLD-1,1,N3)+2.*COEF1(NLD-1,2,N3)+COEF1(NL PACH 
     1D-1,3,N3)                                                          PACH 
60    CONTINUE                                                           PACH 
70    CONTINUE                                                           PACH 
C                                                                        PACH 
C         COMPUTE PARAMETRIC SLCPES IN U DIRECTION                       PACH 
C         FORM PATCHES AND WRITE TAPE                                    PACH 
C                                                                        PACH 
      READ (10) ((ALINE(NN,N3),NN=1,NLS),N3=1,3)                         PACH 
C                                                                        PACH 
C         CHECK IF CUBIC FAIRING POSSIBLE                                PACH 
C                                                                        PACH 
      IF (NLS.LT.3) GO TO 90                                             PACH 
C                                                                        PACH 
C         CHECK FOR A POINT                                              PACH 
C                                                                        PACH 
      NL=NLS-1                                                           PACH 
      DO 80 NN=1,NL                                                      PACH 
      E1=ABS(ALINE(NN,1)-ALINE(NN+1,1))                                  PACH 
      E2=ABS(ALINE(NN,2)-ALINE(NN+1,2))                                  PACH 
      E3=ABS(ALINE(NN,3)-ALINE(NN+1,3))                                  PACH 
      IF (E1+E2+E3.LE.EPS)GO TO 90                                       PACH 
80    CONTINUE                                                           PACH 
      GO TO 110                                                          PACH 
C                                                                        PACH 
C         COMPUTE LINEAR SLOPES                                          PACH 
C                                                                        PACH 
90    DO 100 NN=1,NLS                                                    PACH 
      DO 100 N3=1,3                                                      PACH 
      COEF1(NN,3,N3)=ALINE(2,N3)-ALINE(1,N3)                             PACH 
      COEF1(NN,4,N3)=ALINE(NN,N3)                                        PACH 
100   CONTINUE                                                           PACH 
      GO TO 130                                                          PACH 
110   CONTINUE                                                           PACH 
C                                                                        PACH 
C         COMPUTE CUBIC SPLINE SLOPES                                    PACH 
C                                                                        PACH 
      CALL SPFIT (MAXN,NLS,ALINE,ELEN,COEF1,K1,0,K2,EP,CP,K3,K4)         PACH 
      DO 120 N3=1,3                                                      PACH 
      COEF1(NLS,3,N3)=3.*COEF1(NLS-1,1,N3)+2*COEF1(NLS-1,2,N3)+COEF1(NL  PACH 
     1S-1,3,N3)                                                          PACH 
      COEF1(NLS,4,N3)=COEF1(NLS-1,1,N3)+COEF1(NLS-1,2,N3)+COEF1(NLS-1,3, PACH 
     1N3)+COEF1(NLS-1,4,N3)                                              PACH 
120   CONTINUE                                                           PACH 
130   CONTINUE                                                           PACH 
      DO 290 N=2,NLD                                                     PACH 
      READ (10) ((ALINE(NN,N3),NN=1,NLS),N3=1,3)                         PACH 
      IF (NLS.LT.3) GO TO 150                                            PACH 
      NL=NLS-1                                                           PACH 
      DO 140 NN=1,NL                                                     PACH 
      E1=ABS(ALINE(NN,1)-ALINE(NN+1,1))                                  PACH 
      E2=ABS(ALINE(NN,2)-ALINE(NN+1,2))                                  PACH 
      E3=ABS(ALINE(NN,3)-ALINE(NN+1,3))                                  PACH 
      IF (E1+E2+E3.LE.EPS) GO TO 150                                     PACH 
140   CONTINUE                                                           PACH 
      GO TO 170                                                          PACH 
150   DO 160 NN=1,NLS                                                    PACH 
      DO 160 N3=1,3                                                      PACH 
      COEF2(NN,3,N3)=ALINE(2,N3)-ALINE(1,N3)                             PACH 
      COEF2(NN,4,N3)=ALINE(NN,N3)                                        PACH 
160   CONTINUE                                                           PACH 
      GO TO 190                                                          PACH 
170   CALL SPFIT (MAXN,NLS,ALINE,ELEN,COEF2,K1,0,K2,EP,CP,K3,K4)         PACH 
      DO 180 N3=1,3                                                      PACH 
      COEF2(NLS,3,N3)=3.*COEF2(NLS-1,1,N3)+2.*COEF2(NLS-1,2,N3)+COEF2(NL PACH 
     1S-1,3,N3)                                                          PACH 
      COEF2(NLS,4,N3)=COEF2(NLS-1,1,N3)+COEF2(NLS-1,2,N3)+COEF2(NLS-1,3, PACH 
     1N3)+COEF2(NLS-1,4,N3)                                              PACH 
180   CONTINUE                                                           PACH 
C                                                                        PACH 
C         STORE PATCHES                                                  PACH 
C                                                                        PACH 
190   DO 270 L=2,NLS                                                     PACH 
      DO 210 N3=1,3                                                      PACH 
      DO 200 M=1,2                                                       PACH 
      MM=MOD(M,2)                                                        PACH 
      LL=L-MM                                                            PACH 
      PATCH(M,1,N3)=COEF1(LL,4,N3)                                       PACH 
      PATCH(M,2,N3)=COEF2(LL,4,N3)                                       PACH 
      PATCH(M,3,N3)=SLOPE(N-1,LL,N3)                                     PACH 
      PATCH(M,4,N3)=SLOPE(N,LL,N3)                                       PACH 
      PATCH(M+2,1,N3)=COEF1(LL,3,N3)                                     PACH 
      PATCH(M+2,2,N3)=COEF2(LL,3,N3)                                     PACH 
      PATCH(M+2,3,N3)=0.                                                 PACH 
      PATCH(M+2,4,N3)=0.                                                 PACH 
200   CONTINUE                                                           PACH 
210   CONTINUE                                                           PACH 
C                                                                        PACH 
C         COMPUTE PATCH IN FORM OF S=MBM(TRANSPOSE) AND WRITE ON TAPE    PACH 
C                                                                        PACH 
      DO 260 N3=1,3                                                      PACH 
      DO 230 I4=1,4                                                      PACH 
      DO 230 J4=1,4                                                      PACH 
      SUM=0.                                                             PACH 
      DO 220 K4=1,4                                                      PACH 
220   SUM=SUM+XMAT(I4,K4)*PATCH(K4,J4,N3)                                PACH 
230   PAT(I4,J4)=SUM                                                     PACH 
C                                                                        PACH 
      DO 250 I4=1,4                                                      PACH 
      DO 250 J4=1,4                                                      PACH 
      SUM=0.                                                             PACH 
      DO 240 K4=1,4                                                      PACH 
240   SUM=SUM+PAT(I4,K4)*XMAT(J4,K4)                                     PACH 
250   PATCH(I4,J4,N3)=SUM                                                PACH 
260   CONTINUE                                                           PACH 
      WRITE(14)PATCH                                                     PACH 
270   CONTINUE                                                           PACH 
C                                                                        PACH 
C         MOVE COEFFICIENTS                                              PACH 
C                                                                        PACH 
      DO 280 N3=1,3                                                      PACH 
      DO 280 N4=1,4                                                      PACH 
      DO 280 NN=1,NLS                                                    PACH 
      COEF1(NN,N4,N3)=COEF2(NN,N4,N3)                                    PACH 
280   CONTINUE                                                           PACH 
290   CONTINUE                                                           PACH 
      RETURN                                                             PACH 
      END                                                                PACH 
      SUBROUTINE SPFIT (MAXN,N,PNT,ELEN,COEF,NFIT,MAXSP,II,EPS,CPT,K1,K2 SPFIT
     1)                                                                  SPFIT
C                                                                        SPFIT
C         COMPUTES PARAMETRIC CUBIC SPLINE COEFICIENTS TO                SPFIT
C         APPROXIMATE A SMOOTH CURVE THROUGH A 30 SET OF INPUT           SPFIT
C         POINTS AND OPTIONALLY COMPUTES AN ENRICHED CURVE               SPFIT
C         MAXN IS THE MAXIMUM NUMBER OF INPUT POINTS ALLOWED             SPFIT
C         N IS THE ACTUAL NO. OF INPUT POINTS                            SPFIT
C         NFIT IS THE NUMBER OF DESIRED SPLINED POINTS BETWEEN GIVEN     SPFIT
C              POINTS                                                    SPFIT
C         MAXSP IS THE MAXIMUM NUMBER OF SPLINED POINTS ALLOWED,         SPFIT
C              MAXSP=(MAXN-1)*(MAX,NF1T+1)+1 FOR EPS OF 0.               SPFIT
C              MAXSP=0 OMITS COMPUTATION OF ENRICHED CURVE               SPFIT
C         11 IS THE NO. OF POINTS IN THE ENRICHED CURVE                  SPFIT
C         K1 IS AN INTEGER SUPPLIED BY THE USER                          SPFIT
C              K1=1,RETAIN ALL INPUT POINTS                              SPFIT
C              K1=2,INCLUDE INPUT POINTS IN SECOND DERIVATIVE TEST       SPFIT
C         K2 IS AN INTEGER SUPPLIED BY SPFIT AS AN ERROR CODE            SPFIT
C              K2=1,NORMAL RETURN                                        SPFIT
C              K2=2,INCUMPLETE FAIRED CURVE WHEN MAXSP IS EXCEEDED       SPFIT
C                                                                        SPFIT
C         PROGRAMER - CHARLUTTE CRAIDON   2-1-71                         SPFIT
C                                                                        SPFIT
      DIMENSION PNT(MAXN,3),ELEN(MAXN),COEF(MAXN,4,3),CPT(MAXSP,3)       SPFIT
      DIST(X1,Y1,Z1,X2,Y2,Z2)=SQRT((X2-X1)**2+(Y2-Y1)**2+(Z2-Z1)**2)     SPFIT
          N1=N-1                                                         SPFIT
C                                                                        SPFIT
C         COMPUTE CHORD LENGHTS                                          SPFIT
C                                                                        SPFIT
      DO 10 NN=2,N                                                       SPFIT
      ELEN(NN-1)=DIST(PNT(NN-1,1),PNT(NN-1,2),PNT(NN-1,3),PNT(NN,1),PNT( SPFIT
     1NN,2),PNT(NN,3))                                                   SPFIT
10    CONTINUE                                                           SPFIT
C                                                                        SPFIT
C         SETUP COEFFICIENT MATRIX WITH UNCLAMPED END POINTS             SPFIT
C         (NU DER=U. AT PL AND PN)                                       SPFIT
C                                                                        SPFIT
      COEF(1,1,1)=0.                                                     SPFIT
      COEF(1,1,2)=2.                                                     SPFIT
      COEF(1,1,3)=1.                                                     SPFIT
      COEF(N,1,1)=1.                                                     SPFIT
      COEF(N,1,2)=2.                                                     SPFIT
      COEF(N,1,3)=0.                                                     SPFIT
      DO 20 NN=2,N1                                                      SPFIT
      COEF(NN,1,1)=ELEN(NN)                                              SPFIT
      COEF(NN,1,2)=2.*(ELEN(NN-1)+ELEN(NN))                              SPFIT
      COEF(NN,1,3)=ELEN(NN-1)                                            SPFIT
20    CONTINUE                                                           SPFIT
C                                                                        SPFIT
C         SOLVE FOR SLOPES                                               SPFIT
C                                                                        SPFIT
      DO 60 I=1,3                                                        SPFIT
      COEF(1,4,1)=(3./ELEN(1))*(PNT(2,I)-PNT(1,I))                       SPFIT
      COEF(N,4,1)=(3./ELEN(N-1))*(PNT(N,I)-PNT(N-1,I))                   SPFIT
      DO 30 NN=2,N1                                                      SPFIT
      COEF(NN,4,1)=(3./(ELEN(NN-1)*ELEN(NN)))*(ELEN(NN-1)**2*(PNT(NN+1,I SPFIT
     1)-PNT(NN,I))+ELEN(NN)**2*(PNT(NN,I)-PNT(NN-1,I)))                  SPFIT
30    CONTINUE                                                           SPFIT
C                                                                        SPFIT
C         SOLVE TRIDIAGONAL MATRIX                                       SPFIT
C                                                                        SPFIT
      COEF(1,2,1)=COEF(1,1,3)/COEF(1,1,2)                                SPFIT
      COEF(1,3,I)=COEF(1,4,1)/COEF(1,1,2)                                SPFIT
      DO 40 K=2,N                                                        SPFIT
      KM1=K-1                                                            SPFIT
      TEMP=COEF(K,1,2)-COEF(K,1,1)*COEF(KM1,2,1)                         SPFIT
      COEF(K,2,1)=COEF(K,1,3)/TEMP                                       SPFIT
      COEF(K,3,I)=(COEF(K,4,1)-COEF(K,1,1)*COEF(KM1,3,I))/TEMP           SPFIT
40    CONTINUE                                                           SPFIT
      DO 50 K=1,N1                                                       SPFIT
      KK=N-K                                                             SPFIT
      COEF(KK,3,I)=COEF(KK,3,I)-COEF(KK,2,1)*COEF(KK+1,3,I)              SPFIT
50    CONTINUE                                                           SPFIT
60    CONTINUE                                                           SPFIT
C                                                                        SPFIT
C         COMPUTE CUBIC COEFFICIENTS FOR EACH SEGMENT                    SPFIT
C                                                                        SPFIT
      DO 70 NN=1,N1                                                      SPFIT
      EL=1./ELEN(NN)                                                     SPFIT
      EL2=EL*EL                                                          SPFIT
      EL3=EL*EL2                                                         SPFIT
      DO 70 I=1,3                                                        SPFIT
      COEF(NN,4,I)=PNT(NN,I)                                             SPFIT
      E=PNT(NN+1,I)-PNT(NN,I)                                            SPFIT
      COEF(NN,2,I)=E*EL2*3.-EL*(2.*COEF(NN,3,I)+COEF(NN+1,3,I))          SPFIT
      COEF(NN,1,I)=-E*EL3*2.+EL2*(COEF(NN,3,I)+COEF(NN+1,3,I))           SPFIT
C                                                                        SPFIT
C         REFERENCE LENGTH TO 1.                                         SPFIT
C                                                                        SPFIT
      COEF(NN,1,I)=COEF(NN,1,I)/EL3                                      SPFIT
      COEF(NN,2,I)=COEF(NN,2,I)/EL2                                      SPFIT
      COEF(NN,3,I)=COEF(NN,3,I)/EL                                       SPFIT
70    CONTINUE                                                           SPFIT
      IF (MAXSP.EQ.0) RETURN                                             SPFIT
      IF (K1.EQ.0) K1=1                                                  SPFIT
      II=0                                                               SPFIT
C                                                                        SPFIT
C         COMPUTE ENRICHED POINTS                                        SPFIT
C                                                                        SPFIT
      IFIT=NFIT+1                                                        SPFIT
      XFIT=IFIT                                                          SPFIT
      DELT=1./XFIT                                                       SPFIT
      DO 110 NN=1,N1                                                     SPFIT
      DO 100 NF=1,IFIT                                                   SPFIT
      E=NF-1                                                             SPFIT
      T=DELT*E                                                           SPFIT
      IF (NN.EQ.1.AND.NF.EQ.1) GO TO 80                                  SPFIT
      IF (NF.EQ.1.AND.K1.EQ.1) GO TO 80                                  SPFIT
      T6=6.*T                                                            SPFIT
      EX=ABS(T6*COEF(NN,1,1)+2.*COEF(NN,2,1))                            SPFIT
      EY=ABS(T6*COEF(NN,1,2)+2.*COEF(NN,2,2))                            SPFIT
      EZ=ABS(T6*COEF(NN,1,3)+2.*COEF(NN,2,3))                            SPFIT
      EE=(EX+EY+EZ)/(ELEN(NN)*ELEN(NN))                                  SPFIT
      IF (EE.LT.ESP) GO TO 100                                           SPFIT
80    II=II+1                                                            SPFIT
      IF (II.GT.MAXSP) GO TO 130                                         SPFIT
      T2=T*T                                                             SPFIT
      T3=T*T2                                                            SPFIT
      DO 90 I=1,3                                                        SPFIT
90    CPT(II,I)=T3*COEF(NN,1,I)+T2*COEF(NN,2,I)+T*COEF(NN,3,I)+COEF(NN,4 SPFIT
     1,I)                                                                SPFIT
100   CONTINUE                                                           SPFIT
110   CONTINUE                                                           SPFIT
      II=II+1                                                            SPFIT
      IF (II.GT.MAXSP) GO TO 130                                         SPFIT
      DO 120 I=1,3                                                       SPFIT
120   CPT(II,I)=PNT(N,I)                                                 SPFIT
      K2=1                                                               SPFIT
      RETURN                                                             SPFIT
130   K2=2                                                               SPFIT
      RETURN                                                             SPFIT
      END                                                                SPFIT
      SUBROUTINE START                                                   START
C                                                                        START
C         INPUTS AIRCRAFT SURFACE DESCRIPTION.                           START
C         FORMS INTO DESCRIPTIVE LINES WRITTEN ON TAPE 10,               START
C         AND COMPUTES MINIMUMS AND MAXIMUMS                             START
C                                                                        START
      COMMON /PATPLT/ XMIN,XMAX,YMIN,YMAX,ZMIN,ZMAX,NOBJ                 PATPLT 
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
C                                                                        START
      DIMENSION BLOCK(7500)                                              START
C                                                                        START
      DIMENSION XAF(30),WAFORG(20,4),WAFORD(20,3,30),TZORD(20,30)        START
      EQUIVALENCE (BLOCK(1),XAF(1)),(BLOCK(31),WAFORG(1,1)),             START
     1(BLOCK(111),WAFORD(1,1,1)),(BLOCK(1911),TZORD(1,1))                START
C                                                                        START
      DIMENSION XFUS(30,4),ZFUS(30,4),FUSARD(30,4),FUSRAD(30,4)          START
      DIMENSION SFUS(30,30,8)                                            START
      EQUIVALENCE (BLOCK(1),XFUS(1,1)),(BLOCK(121),ZFUS(1,1)),(BLOCK(241 START
     1),FUSARD(1,1)),(BLOCK(361),FUSRAD(1,1)),(BLOCK(241),SFUS(1,1,1))   START
C                                                                        START
      DIMENSION PODORG(9,3),XPOD(9,30),PODORD(9,30),XPOD1(9,30)          START
      EQUIVALENCE (BLOCK(1),PODORG(1,1)),(BLOCK(28),XPOD(1,1)),(BLOCK(29 START
     18),PODORD(1,1)),(BLOCK(568),XPOD1(1,1))                            START
C                                                                        START
      DIMENSION FINORG(6,2,4),XFIN(6,10),FINORD(6,2,10)                  START
      DIMENSION FINX2(6,2,10),FINX3(6,2,10)                              START
      EQUIVALENCE (BLOCK(1),FINORG(1,1,1)),(BLOCK(49),XFIN(1,1)),(BLOCK( START
     1109),FINORD(1,1,1)),(BLOCK(229),FINX2(1,1,1)),(BLOCK(349),FINX3(1, START
     *1,1))                                                              START
C                                                                        START
      DIMENSION CANORG(2,2,4),XCAN(2,10),CANORD(2,2,10)                  START
      DIMENSION CANOR1(2,2,10),CANORX(2,2,10)                            START
      EQUIVALENCE (BLOCK(1),CANORG(1,1,1)),(BLOCK(17),XCAN(1,1)),(BLOCK( START
     137),CANORD(1,1,1)),(BLOCK(77),CANOR1(1,1,1)),(BLOCK(117),CANORX(1, START
     *1,1))                                                              START
C                                                                        START
      DIMENSION ABC(20),ABCD(20),ANSIN(30),ANCOS(30),NAME(2)             START
      DIMENSION NRADX(4),NFORX(4)                                        START
      DIMENSION ALRT (31,3),ADATA(19)                                    START
      DATA PI/3.14159265/                                                START
      DATA NAME(1),NAME(2)/4HWING,4H    /,AER/4HAERO/,                   START
     *NAM2,NAM3,NAM4,NAM5/4HFUSE,4HPODS,4HFINS,4HCANA/                   START
C                                                                        START
      ITAPEX=32                                                          START
      REWIND ITAPEX                                                      START
    4 READ(IREAD,10) AIN,ADATA                                           START
      WRITE(ITAPEX,10) AIN,ADATA                                         START
      IF(EOF(IREAD)) 6,6666                                              MOD3 
 6666 CONTINUE                                                           MOD3 
      IF(AIN.EQ.AER) GO TO 6                                             START
      GO TO 4                                                            START
    6 CONTINUE                                                           START
      REWIND ITAPEX                                                      START
C                                                                        START
      REWIND 10                                                          START
10    FORMAT (20A4)                                                      START
20    FORMAT (1X,20A4)                                                   START
30    FORMAT (10F7.0)                                                    START
31    FORMAT (1X,10F7.3)                                                 START
   32 FORMAT(1X,10F7.4)                                                  MOD3 
C                                                                        START
C         READ ID CARD AND CARD OF CONTROL INTEGERS                      START
C                                                                        START
      READ (ITAPEX,10) ABC                                               START
      WRITE (IWRIT,50) ABC                                               START
50    FORMAT (23X,34HAIRCRAFT CONFIGURATION DESCRIPTION//1X,20A4/)       START
      READ(ITAPEX,70)          J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,    START
     1(NRADX(I),NFORX(I),I=1,4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR          START
      WRITE(IWRIT,71)         J0,J1,J2,J3,J4,J5,J6,NWAF,NWAFOR,NFUS,     START
     1(NRADX(I),NFORX(I),I=1,4),NP,NPODOR,NF,NFINOR,NCAN,NCANOR          START
70    FORMAT (24I3)                                                      START
71    FORMAT (24I3/)                                                     START
C                                                                        START
      WRITE (10) ABC                                                     START
      NOBJ=0                                                             START
C                                                                        START
C         REFERENCE AREA                                                 START
C                                                                        START
      IF (J0.NE.1) GO TO 80                                              START
      READ (ITAPEX,10) ABCD                                              START
      IF(IOUT2.NE.2) WRITE (IWRIT,20) ABCD                               START
C                                                                        START
C         WING                                                           START
C                                                                        START
80    JJ=IABS(J1)                                                        START
      IF (JJ.NE.1) GO TO 290                                             START
      N=IABS(NWAFOR)                                                     START
      NREC=(N+9)/10                                                      START
      I1=-9                                                              START
      I2=0                                                               START
      DO 90 NN=1,NREC                                                    START
      I1=I1+10                                                           START
      I2=I2+10                                                           START
      READ(ITAPEX,30)          (XAF(I),I=I1,I2)                          START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (XAF(I),I=I1,I2)            START
90    CONTINUE                                                           START
      DO 100 I=1,NWAF                                                    START
      READ(ITAPEX,30)          (WAFORG(I,J),J=1,4)                       START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (WAFORG(I,J),J=1,4)         START
100   CONTINUE                                                           START
      IF (J1.LT.0) GO TO 130                                             START
      DO 120 NN=1,NWAF                                                   START
      I1=-9                                                              START
      I2=0                                                               START
      DO 110 N1=1,NREC                                                   START
      I1=I1+10                                                           START
      I2=I2+10                                                           START
      READ(ITAPEX,30)          (TZORD(NN,I),I=I1,I2)                     START
      IF(IOUT2.NE.2) WRITE(IWRIT,32)(TZORD(NN,I),I=I1,I2)                MOD3 
110   CONTINUE                                                           START
120   CONTINUE                                                           START
      GO TO 150                                                          START
130   DO 140 I=1,NWAF                                                    START
      DO 140 K=1,N                                                       START
140   TZORD(I,K)=0.                                                      START
150   L=1                                                                START
      IF (NWAFOR.LT.0) L=2                                               START
      DO 170 NN=1,NWAF                                                   START
      DO 170 K=1,L                                                       START
      I1=-9                                                              START
      I2=0                                                               START
      DO 160 NI=1,NREC                                                   START
      I1=I1+10                                                           START
      I2=I2+10                                                           START
      READ(ITAPEX,30)          (WAFORD(NN,K,I),I=I1,I2)                  START
      IF(IOUT2.NE.2) WRITE(IWRIT,32)(WAFORD(NN,K,I),I=I1,I2)             MOD3 
160   CONTINUE                                                           START
170   CONTINUE                                                           START
      IF(IOUT2.NE.2) WRITE (IWRIT,17)                                    START
   17 FORMAT (10X,27H*** END OF AIRFOIL DATA ***)                        START
      IF (NWAFOR.LT.0) GO TO 190                                         START
      DO 180 NN=1,NWAF                                                   START
      DO 180 K=1,N                                                       START
180   WAFORD(NN,2,K)=WAFORD(NN,1,K)                                      START
190   CONTINUE                                                           START
      NWAFOR=IABS(NWAFOR)                                                START
      NW=NWAFOR                                                          START
      J1=IABS(J1)                                                        START
C                                                                        START
C         CHANGE TO ACTUAL UNITS,COMPUTE MINIMUMS AND MAXIMUMS           START
C                                                                        START
      DO 210 I=1,NWAF                                                    START
      E=.01*WAFORG(I,4)                                                  START
      E3=WAFORG(I,3)                                                     START
      DO 200 J=1,NWAFOR                                                  START
      WAFORD(I,1,J)=E*WAFORD(I,1,J)+E3+TZORD(I,J)                        START
      WAFORD(I,2,J)=-E*WAFORD(I,2,J)+E3+TZORD(I,J)                       START
      WAFORD(I,3,J)=WAFORG(I,1)+E*XAF(J)                                 START
  200 CONTINUE                                                           START
210   CONTINUE                                                           START
      XMIN=WAFORG(1,1)                                                   START
      XMAX=WAFORG(1,1)                                                   START
      YMAX=WAFORG(1,2)                                                   START
      YMIN=WAFORG(1,2)                                                   START
      ZMIN=WAFORD(1,1,1)                                                 START
      ZMAX=WAFORD(1,1,1)                                                 START
      DO 230 N=1,NWAF                                                    START
      XMAX=AMAX1(XMAX,WAFORD(N,3,NW))                                    START
      XMIN=AMIN1(XMIN,WAFORD(N,3,1))                                     START
      YMAX=AMAX1(YMAX,WAFORG(N,2))                                       START
      YMIN=AMIN1(YMIN,WAFORG(N,2))                                       START
      DO 220 NN=1,NW                                                     START
      ZMAX=AMAX1(ZMAX,WAFORD(N,1,NN))                                    START
      ZMIN=AMIN1(ZMIN,WAFORD(N,2,NN))                                    START
220   CONTINUE                                                           START
230   CONTINUE                                                           START
C                                                                        START
C         WRITE LINE TAPE                                                START
C                                                                        START
      NN=2                                                               START
      NCOMP=1                                                            START
      WRITE (10) NN,NCOMP,NAME,NN,NN                                     START
      NOBJ=NOBJ+1                                                        START
      DO 280 I=1,2                                                       START
      WRITE (10) NWAF,NWAFOR,NN,NN,NN                                    START
      KKK=0                                                              MOD2 
      KK=1                                                               MOD2 
C                                                                        START
C         SETUP SPANWISE LINES                                           START
C                                                                        START
      DO 250 K=1,NWAFOR                                                  START
      NN=KKK+KK*K                                                        START
      DO 240 N=1,NWAF                                                    START
      ALRT(N,1)=WAFORD(N,3,NN)                                           START
      ALRT(N,2)=WAFORG(N,2)                                              START
      ALRT(N,3)=WAFORD(N,I,NN)                                           START
240   CONTINUE                                                           START
      WRITE (10) ((ALRT(N,N3),N=1,NWAF),N3=1,3)                          START
250   CONTINUE                                                           START
C                                                                        START
C         SETUP STREAMWISE LINES                                         START
C                                                                        START
      DO 270 NN=1,NWAF                                                   START
      DO 260 K=1,NWAFOR                                                  START
      N=KKK+KK*K                                                         START
      ALRT(K,1)=WAFORD(NN,3,N)                                           START
      ALRT(K,2)=WAFORG(NN,2)                                             START
      ALRT(K,3)=WAFORD(NN,I,N)                                           START
260   CONTINUE                                                           START
      WRITE (10) ((ALRT(N,N3),N=1,NW),N3=1,3)                            START
270   CONTINUE                                                           START
280   CONTINUE                                                           START
C                                                                        START
C         FUSELAGE                                                       START
C                                                                        START
290   JJ=IABS(J2)                                                        START
      IF (JJ.NE.1) GO TO 590                                             START
      J2TEST=3                                                           START
      IF (J2.EQ.-1.AND.J6.EQ.-1) J2TEST=1                                START
      IF (J2.EQ.-1.AND.J6.EQ.0) J2TEST=2                                 START
      IF (J6.EQ.1) J2TEST=1                                              START
      J2=1                                                               START
      DO 410 NFU=1,NFUS                                                  START
      NRAD=NRADX(NFU)                                                    START
      NFUSOR=NFORX(NFU)                                                  START
      N=NFUSOR                                                           START
      NREC=(N+9)/10                                                      START
      I1=-9                                                              START
      I2=0                                                               START
      DO 300 N1=1,NREC                                                   START
      I1=I1+10                                                           START
      I2=I2+10                                                           START
      READ(ITAPEX,30)          (XFUS(I,NFU),I=I1,I2)                     START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (XFUS(I,NFU),I=I1,I2)       START
300   CONTINUE                                                           START
      IF (J2TEST.NE.2) GO TO 320                                         START
      I1=-9                                                              START
      I2=0                                                               START
      DO 310 N1=1,NREC                                                   START
      I1=I1+10                                                           START
      I2=I2+10                                                           START
      READ(ITAPEX,30)          (ZFUS(I,NFU),I=I1,I2)                     START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (ZFUS(I,NFU),I=I1,I2)       START
310   CONTINUE                                                           START
      GO TO 340                                                          START
320   DO 330 I=1,N                                                       START
330   ZFUS(I,NFU)=0.                                                     START
340   IF (J2TEST.NE.3) GO TO 380                                         START
      NCARD=(NRAD+9)/10                                                  START
      DO 370 LN=1,N                                                      START
      DO 360 K=1,2                                                       START
      KK=K+(NFU-1)*2                                                     START
      II=10                                                              START
      I1=-9                                                              START
      I2=0                                                               START
      DO 350 NN=1,NCARD                                                  START
      IF (NN.EQ.NCARD) II=MOD(NRAD,10)                                   START
      IF (II.EQ.0) II=10                                                 START
      I1=I1+10                                                           START
      I2=I2+II                                                           START
      READ(ITAPEX,30)          (SFUS(I,LN,KK),I=I1,I2)                   START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (SFUS(I,LN,KK),I=I1,I2)     START
350   CONTINUE                                                           START
360   CONTINUE                                                           START
370   CONTINUE                                                           START
      GO TO 410                                                          START
380   I1=-9                                                              START
      I2=0                                                               START
      DO 390 N1=1,NREC                                                   START
      I1=I1+10                                                           START
      I2=I2+10                                                           START
      READ(ITAPEX,30)          (FUSARD(I,NFU),I=I1,I2)                   START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (FUSARD(I,NFU),I=I1,I2)     START
390   CONTINUE                                                           START
      DO 400 I=1,N                                                       START
      FUSRAD(I,NFU)=SQRT(FUSARD(I,NFU)/PI)                               START
  400 CONTINUE                                                           START
C                                                                        START
410   CONTINUE                                                           START
C                                                                        START
C         FUSELAGE MIN AND MAX                                           START
C                                                                        START
      IF (J1.NE.0) GO TO 430                                             START
      XMIN=XFUS(1,1)                                                     START
      XMAX=XFUS(1,1)                                                     START
      IF (J2TEST.EQ.3) GO TO 420                                         START
      YMIN=FUSRAD(1,1)                                                   START
      YMAX=FUSRAD(1,1)                                                   START
      ZMIN=-FUSRAD(1,1)+ZFUS(1,1)                                        START
      ZMAX=FUSRAD(1,1)+ZFUS(1,1)                                         START
      GO TO 430                                                          START
420   YMAX=SFUS(1,1,1)                                                   START
      YMIN=SFUS(1,1,1)                                                   START
      ZMIN=SFUS(1,1,2)                                                   START
      ZMAX=SFUS(1,1,2)                                                   START
430   DO 470 N=1,NFUS                                                    START
      NRAD=NRADX(N)                                                      START
      NFUSOR=NFORX(N)                                                    START
      XMIN=AMIN1(XMIN,XFUS(1,N))                                         START
      XMAX=AMAX1(XMAX,XFUS(NFUSOR,N))                                    START
      DO 460 NN=1,NFUSOR                                                 START
      IF (J2TEST.EQ.3) GO TO 440                                         START
      YMAX=AMAX1(YMAX,FUSRAD(NN,N))                                      START
      YMIN=AMIN1(YMIN,FUSRAD(NN,N))                                      START
      ZMAX=AMAX1(ZMAX,FUSRAD(NN,N)+ZFUS(NN,N))                           START
      ZMIN=AMIN1(ZMIN,-FUSRAD(NN,N)+ZFUS(NN,N))                          START
      GO TO 460                                                          START
440   KK=1+(N-1)*2                                                       START
      DO 450 NR=1,NRAD                                                   START
      YMIN=AMIN1(YMIN,SFUS(NR,NN,KK))                                    START
      YMAX=AMAX1(YMAX,SFUS(NR,NN,KK))                                    START
      ZMIN=AMIN1(ZMIN,SFUS(NR,NN,KK+1))                                  START
450   ZMAX=AMAX1(ZMAX,SFUS(NR,NN,KK+1))                                  START
460   CONTINUE                                                           START
470   CONTINUE                                                           START
C                                                                        START
C         WRITE LINE TAPE                                                START
C                                                                        START
      JJN=2                                                              START
      N1=1                                                               START
      NAME(1)=NAM2                                                       START
      NOBJ=NOBJ+NFUS                                                     START
      DO 580 NFU=1,NFUS                                                  START
      NRAD=NRADX(NFU)                                                    START
      NFUSOR=NFORX(NFU)                                                  START
      WRITE (10) N1,JJN,NAME,N1,N1                                       START
      WRITE (10) NFUSOR,NRAD,N1,N1,N1                                    START
      NAN=NRAD                                                           START
      IF (J2TEST.EQ.3) GO TO 490                                         START
      FANG=(NRAD-1)*2                                                    START
      DELE=6.2831853/FANG                                                START
      DO 480 N=1,NAN                                                     START
      E=N-1                                                              START
      ANSIN(N)=SIN(E*DELE+4.712389)                                      START
      ANCOS(N)=COS(E*DELE+4.712389)                                      START
  480 CONTINUE                                                           START
490   CONTINUE                                                           START
      KK=1+(NFU-1)*2                                                     START
C                                                                        START
C         SETUP STRAMWISE LINES                                          START
C                                                                        START
      DO 530 N=1,NAN                                                     START
      DO 520 NN=1,NFUSOR                                                 START
      ALRT(NN,1)=XFUS(NN,NFU)                                            START
      IF (J2TEST.EQ.3) GO TO 500                                         START
      ALRT(NN,2)=FUSRAD(NN,NFU)*ANCOS(N)                                 START
      ALRT(NN,3)=FUSRAD(NN,NFU)*ANSIN(N)+ZFUS(NN,NFU)                    START
      GO TO 510                                                          START
500   ALRT(NN,2)=SFUS(N,NN,KK)                                           START
      ALRT(NN,3)=SFUS(N,NN,KK+1)                                         START
510   CONTINUE                                                           START
520   CONTINUE                                                           START
      WRITE (10) ((ALRT(M,N3),M=1,NFUSOR),N3=1,3)                        START
530   CONTINUE                                                           START
C                                                                        START
C         SETUP LINES AROUND BODY                                        START
C                                                                        START
      DO 570 N=1,NFUSOR                                                  START
      DO 560 NN=1,NAN                                                    START
      ALRT(NN,1)=XFUS(N,NFU)                                             START
      IF (J2TEST.EQ.3) GO TO 540                                         START
      ALRT(NN,2)=FUSRAD(N,NFU)*ANCOS(NN)                                 START
      ALRT(NN,3)=FUSRAD(N,NFU)*ANSIN(NN)+ZFUS(N,NFU)                     START
      GO TO 550                                                          START
540   ALRT(NN,2)=SFUS(NN,N,KK)                                           START
      ALRT(NN,3)=SFUS(NN,N,KK+1)                                         START
550   CONTINUE                                                           START
560   CONTINUE                                                           START
      WRITE (10) ((ALRT(M,N3),M=1,NAN),N3=1,3)                           START
570   CONTINUE                                                           START
580   CONTINUE                                                           START
C                                                                        START
C         NACELLES                                                       START
C                                                                        START
590   CONTINUE                                                           START
      IF(IOUT2.NE.2) WRITE (IWRIT,18)                                    START
   18 FORMAT (10X,28H*** END OF FUSELAGE DATA ***)                       START
      IF (J3.NE.1) GO TO 730                                             START
      N=NPODOR                                                           START
      NREC=(N+9)/10                                                      START
      DO 620 NN=1,NP                                                     START
      I1=-9                                                              START
      I2=0                                                               START
      READ(ITAPEX,30)          (PODORG(NN,I),I=1,3)                      START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (PODORG(NN,I),I=1,3)        START
      DO 600 N1=1,NREC                                                   START
      I1=I1+10                                                           START
      I2=I2+10                                                           START
      READ(ITAPEX,30)          (XPOD(NN,I),I=I1,I2)                      START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (XPOD(NN,I),I=I1,I2)        START
600   CONTINUE                                                           START
      I1=-9                                                              START
      I2=0                                                               START
      DO 610 N1=1,NREC                                                   START
      I1=I1+10                                                           START
      I2=I2+10                                                           START
      READ(ITAPEX,30)          (PODORD(NN,I),I=I1,I2)                    START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (PODORD(NN,I),I=I1,I2)      START
610   CONTINUE                                                           START
620   CONTINUE                                                           START
      IF(IOUT2.NE.2) WRITE (IWRIT,19)                                    START
   19 FORMAT (10X,25H***  END OF POD DATA  ***)                          START
C                                                                        START
C         COMPUTE ACTUAL X,MINIMUM,MAXIMUM                               START
C                                                                        START
      DO 630 N=1,NP                                                      START
      DO 630 NN=1,NPODOR                                                 START
630   XPOD1(N,NN)=XPOD(N,NN)+PODORG(N,1)                                 START
      IF (J1.NE.0.OR.J2.NE.0) GO TO 640                                  START
      XMIN=XPOD1(1,1)                                                    START
      XMAX=XPOD1(1,NPODOR)                                               START
      YMIN=PODORG(1,2)+PODORD(1,1)                                       START
      YMAX=PODORG(1,2)+PODORD(1,1)                                       START
      ZMIN=PODORG(1,3)-PODORD(1,1)                                       START
      ZMAX=PODORG(1,3)+PODORD(1,1)                                       START
640   DO 660 N=1,NP                                                      START
      XMIN=AMIN1(XMIN,XPOD1(N,1))                                        START
      XMAX=AMAX1(XMAX,XPOD1(N,NPODOR))                                   START
      DO 650 NN=1,NPODOR                                                 START
      YMIN=AMIN1(YMIN,PODORD(N,NN)+PODORG(N,2))                          START
      YMAX=AMAX1(YMAX,PODORD(N,NN)+PODORG(N,2))                          START
      ZMIN=AMIN1(ZMIN,PODORG(N,3)-PODORD(N,NN))                          START
650   ZMAX=AMAX1(ZMAX,PODORG(N,3)+PODORD(N,NN))                          START
660   CONTINUE                                                           START
      DATA NAN2/4/,PIPL/4.712389/                                        START
      NANG1=NAN2+1                                                       START
      NANG2=2*NAN2+1                                                     START
      FANG=NAN2*2                                                        START
      DELE=6.2831853/FANG                                                START
      DO 670 N=1,NANG2                                                   START
      E=N-1                                                              START
      EE=E*DELE                                                          START
      ANSIN(N)=SIN(EE+PIPL)                                              START
670   ANCOS(N)=COS(EE+PIPL)                                              START
C                                                                        START
C         WRITE LINE TAPE                                                START
C                                                                        START
      JJN=3                                                              START
      NAME(1)=NAM3                                                       START
      NOBJ=NOBJ+NP                                                       START
      DO 720 NP1=1,NP                                                    START
      I=2                                                                START
      IF (PODORG(NP1,2).EQ.0.) I=1                                       START
      WRITE (10) I,JJN,NAME,I,I                                          START
      DO 720 I=1,2                                                       START
      IF(I.EQ.2.AND.PODORG(NP1,2).EQ.0.) GO TO 720                       START
      WRITE(10) NPODOR,NANG1,I,I,I                                       START
C                                                                        START
C         SETUP STREAMWISE LINES                                         START
C                                                                        START
      DO 690 K=1,NANG1                                                   START
      NN=(I-1)*NAN2+K                                                    START
      DO 680 N=1,NPODOR                                                  START
      ALRT(N,1)=XPOD(NP1,N)+PODORG(NP1,1)                                START
      ALRT(N,2)=PODORD(NP1,N)*ANCOS(NN)+PODORG(NP1,2)                    START
      ALRT(N,3)=PODORD(NP1,N)*ANSIN(NN)+PODORG(NP1,3)                    START
680   CONTINUE                                                           START
      WRITE (10)((ALRT(N,N3),N=1,NPODOR),N3=1,3)                         START
690   CONTINUE                                                           START
C                                                                        START
C         SETUP LINES AROUND PODS                                        START
C                                                                        START
      DO 710 N=1,NPODOR                                                  START
      DO 700 K=1,NANG1                                                   START
      NN=(I-1)*NAN2+K                                                    START
      ALRT(K,1)=XPOD(NP1,N)+PODORG(NP1,1)                                START
      ALRT(K,2)=PODORD(NP1,N)*ANCOS(NN)+PODORG(NP1,2)                    START
      ALRT(K,3)=PODORD(NP1,N)*ANSIN(NN)+PODORG(NP1,3)                    START
700   CONTINUE                                                           START
      WRITE (10) ((ALRT(K,N3),K=1,NANG1),N3=1,3)                         START
710   CONTINUE                                                           START
720   CONTINUE                                                           START
C                                                                        START
C         FINS                                                           START
C                                                                        START
730   CONTINUE                                                           START
      IF (J4.NE.1) GO TO 890                                             START
      N=NFINOR                                                           START
      DO 740 NN=1,NF                                                     START
      READ(ITAPEX,30)          ((FINORG(NN,I,J),J=1,4),I=1,2)            START
      IF(IOUT2.NE.2) WRITE(IWRIT,31) ((FINORG(NN,I,J),J=1,4),I=1,2)      START
      READ(ITAPEX,30)          (XFIN(NN,I),I=1,N)                        START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (XFIN(NN,I),I=1,N)          START
      READ(ITAPEX,30)          (FINORD(NN,1,J),J=1,N)                    START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (FINORD(NN,1,J),J=1,N)      START
740   CONTINUE                                                           START
C                                                                        START
C         CHANGE TO ACTUAL UNITS, COMPUTE MININUMS AND MAXIMUMS          START
C                                                                        START
      DO 760 LQ=1,NF                                                     START
      DO 760 I=1,2                                                       START
      J=3-I                                                              START
      E=.01*FINORG(LQ,J,4)                                               START
      E2=FINORG(LQ,J,2)                                                  START
      DO 750 K=1,NFINOR                                                  START
      EE=FINORD(LQ,1,K)*E                                                START
      FINORD(LQ,J,K)=E2+EE                                               START
      FINX2(LQ,J,K)=E2-EE                                                START
750   FINX3(LQ,J,K)=FINORG(LQ,J,1)+E*XFIN(LQ,K)                          START
760   CONTINUE                                                           START
C                                                                        START
      IF (J1.NE.0.OR.J2.NE.0.OR.J3.NE.0) GO TO 770                       START
      XMIN=FINORG(1,1,1)                                                 START
      XMAX=FINORG(1,1,1)                                                 START
      YMIN=FINORG(1,1,2)                                                 START
      YMAX=FINORG(1,1,2)                                                 START
      ZMIN=FINORG(1,1,3)                                                 START
      ZMAX=FINORG(1,1,3)                                                 START
770   DO 780 N=1,NF                                                      START
      ZMIN=AMIN1(ZMIN,FINORG(N,1,3))                                     START
      ZMAX=AMAX1(ZMAX,FINORG(N,2,3))                                     START
      DO 780 N2=1,2                                                      START
      XMIN=AMIN1(XMIN,FINORG(N,N2,1))                                    START
      XMAX=AMAX1(XMAX,FINX3(N,N2,NFINOR))                                START
      DO 780 NN=1,NFINOR                                                 START
      YMIN=AMIN1(YMIN,FINX2(N,N2,NN))                                    START
      YMAX=AMAX1(YMAX,FINORD(N,N2,NN))                                   START
780   CONTINUE                                                           START
C                                                                        START
C         WRITE LINE TAPE                                                START
C                                                                        START
      JJN=4                                                              START
      NAME(1)=NAM4                                                       START
      NOBJ=NOBJ+NF                                                       START
      NK2=2                                                              START
      DO 880 NF1=1,NF                                                    START
      I=2                                                                START
      IF (FINORG(NF1,1,2).EQ.0.) I=1                                     START
      WRITE (10) I,JJN,NAME,I,I                                          START
      DO 870 NN2=1,2                                                     START
      IF (NN2.EQ.2.AND.FINORG(NF1,1,2).EQ.0.) GO TO 870                  START
      WRITE (10) NFINOR,NK2,I,I,I                                        START
      I1=1                                                               START
      I2=2                                                               START
      IF (NN2.EQ.1) GO TO 790                                            START
      I1=2                                                               START
      I2=1                                                               START
790   CONTINUE                                                           START
C                                                                        START
C         SETUP HORIZONTAL LINES                                         START
C                                                                        START
      DO 810 N=1,NFINOR                                                  START
      ALRT(N,1)=FINX3(NF1,I1,N)                                          START
      ALRT(N,3)=FINORG(NF1,I1,3)                                         START
      IF (NN2.EQ.2) GO TO 800                                            START
      ALRT(N,2)=FINORD(NF1,I1,N)                                         START
      GO TO 810                                                          START
800   ALRT(N,2)=FINX2(NF1,I1,N)                                          START
810   CONTINUE                                                           START
      WRITE (10) ((ALRT(N,N3),N=1,NFINOR),N3=1,3)                        START
      DO 830 N=1,NFINOR                                                  START
      ALRT(N,1)=FINX3(NF1,I2,N)                                          START
      ALRT(N,3)=FINORG(NF1,I2,3)                                         START
      IF (NN2.EQ.2) GO TO 820                                            START
      ALRT(N,2)=FINORD(NF1,I2,N)                                         START
      GO TO 830                                                          START
820   ALRT(N,2)=FINX2(NF1,I2,N)                                          START
830   CONTINUE                                                           START
      WRITE (10) ((ALRT(N,N3),N=1,NFINOR),N3=1,3)                        START
C                                                                        START
C         SETUP VERTICAL LINES                                           START
C                                                                        START
      DO 860 NN=1,NFINOR                                                 START
      ALRT(1,1)=FINX3(NF1,I1,NN)                                         START
      ALRT(2,1)=FINX3(NF1,I2,NN)                                         START
      ALRT(1,3)=FINORG(NF1,I1,3)                                         START
      ALRT(2,3)=FINORG(NF1,I2,3)                                         START
      IF (NN2.EQ.2) GO TO 840                                            START
      ALRT(1,2)=FINORD(NF1,I1,NN)                                        START
      ALRT(2,2)=FINORD(NF1,I2,NN)                                        START
      GO TO 850                                                          START
840   ALRT(1,2)=FINX2(NF1,I1,NN)                                         START
      ALRT(2,2)=FINX2(NF1,I2,NN)                                         START
850   WRITE (10) ((ALRT(N,N3),N=1,2),N3=1,3)                             START
860   CONTINUE                                                           START
870   CONTINUE                                                           START
880   CONTINUE                                                           START
      IF(IOUT2.NE.2) WRITE (IWRIT,22)                                    START
   22 FORMAT (10X,23H*** END OF FIN DATA ***)                            START
C                                                                        START
C         CANARDS                                                        START
C                                                                        START
890   CONTINUE                                                           START
      IF (J5.NE.1) GO TO 1080                                            START
      N=IABS(NCANOR)                                                     START
      DO 920 NN=1,NCAN                                                   START
      READ(ITAPEX,30)          ((CANORG(NN,I,J),J=1,4),I=1,2)            START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)   ((CANORG(NN,I,J),J=1,6),I=1,2)    START
      READ(ITAPEX,30)          (XCAN(NN,I),I=1,N)                        START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (XCAN(NN,I),I=1,N)          START
      READ(ITAPEX,30)          (CANORD(NN,1,J),J=1,N)                    START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (CANORD(NN,1,J),J=1,N)      START
      IF (NCANOR.LT.0) GO TO 910                                         START
      DO 900 J=1,N                                                       START
900   CANOR1(NN,1,J)=CANORD(NN,1,J)                                      START
      GO TO 920                                                          START
910   READ(ITAPEX,30)          (CANOR1(NN,1,J),J=1,N)                    START
      IF(IOUT2.NE.2) WRITE(IWRIT,31)         (CANOR1(NN,1,J),J=1,N)      START
920   CONTINUE                                                           START
      NCANOR=IABS(NCANOR)                                                START
      NC=NCANOR                                                          START
      IF(IOUT2.NE.2) WRITE (IWRIT,23)                                    START
   23 FORMAT (10X,26H*** END OF CANARD DATA ***)                         START
C                                                                        START
C         CHANGE TO ACTUAL UNITS, COMPUTE MINIMUMS AND MAXIMUMS          START
C                                                                        START
      DO 950 NN=1,NCAN                                                   START
      DO 940 K=1,2                                                       START
      I=3-K                                                              START
      E=.01*CANORG(NN,1,4)                                               START
      E3=CANORG(NN,I,3)                                                  START
      DO 930 J=1,NCANOR                                                  START
      CANORD(NN,I,J)=E*CANORD(NN,1,J)+E3                                 START
      CANOR1(NN,I,J)=-E*CANOR1(NN,1,J)+E3                                START
930   CANORX(NN,I,J)=CANORG(NN,I,1)+E*XCAN(NN,J)                         START
940   CONTINUE                                                           START
950   CONTINUE                                                           START
      IF (J1.NE.0.OR.J2.NE.0.OR.J3.NE.0.OR.J4.NE.0) GO TO 960            START
      XMIN=CANORX(1,1,1)                                                 START
      XMAX=CANORX(1,1,NCANOR)                                            START
      YMIN=CANORG(1,2,2)                                                 START
      YMAX=CANORG(1,2,2)                                                 START
      ZMIN=CANOR1(1,1,1)                                                 START
      ZMAX=CANORD(1,1,1)                                                 START
960   DO 990 NCA=1,NCAN                                                  START
      YMIN=AMIN1(YMIN,CANORG(NCA,1,2))                                   START
      YMAX=AMAX1(YMAX,CANORG(NCA,2,2))                                   START
      DO 980 N2=1,2                                                      START
      XMIN=AMIN1(XMIN,CANORX(NCA,N2,I))                                  START
      XMAX=AMAX1(XMAX,CANORX(NCA,N2,NCANOR))                             START
      DO 970 NN=1,NCANOR                                                 START
      ZMIN=AMIN1(ZMIN,CANOR1(NCA,N2,NN))                                 START
970   ZMAX=AMAX1(ZMAX,CANORD(NCA,N2,NN))                                 START
980   CONTINUE                                                           START
990   CONTINUE                                                           START
C                                                                        START
C         WRITE LINE TAPE                                                START
C                                                                        START
      JJN=5                                                              START
      NAME(1)=NAM5                                                       START
      NOBJ=NOBJ+NCAN                                                     START
      NK2=2                                                              START
      DO 1070 NCA=1,NCAN                                                 START
      WRITE (10) NK2,JJN,NAME,NK2,NK2                                    START
      DO 1060 I=1,2                                                      START
      WRITE (10) NK2,NC,NK2,NK2,NK2                                      START
      KKK=(I-1)*(NC+1)                                                   START
      KX=(-1)**(I+1)                                                     START
C                                                                        START
C         SETUP SPANWISE LINES                                           START
C                                                                        START
      DO 1020 K=1,NC                                                     START
      NN=KKK+KK*K                                                        START
      DO 1010 N2=1,2                                                     START
      ALRT(N2,1)=CANORX(NCA,N2,NN)                                       START
      ALRT(N2,2)=CANORG(NCA,N2,2)                                        START
      IF (I.EQ.2) GO TO 1000                                             START
      ALRT(N2,3)=CANORD(NCA,N2,NN)                                       START
      GO TO 1010                                                         START
1000  ALRT(N2,3)=CANOR1(NCA,N2,NN)                                       START
1010  CONTINUE                                                           START
      WRITE (10) ((ALRT(N2,N3),N2=1,2),N3=1,3)                           START
1020  CONTINUE                                                           START
C                                                                        START
C         SETUP TWO STREAMWISE LINES                                     START
C                                                                        START
      DO 1050 N2=1,2                                                     START
      DO 1040 N=1,NC                                                     START
      J=KKK+KK*N                                                         START
      ALRT(N,1)=CANORX(NCA,N2,J)                                         START
      ALRT(N,2)=CANORG(NCA,N2,2)                                         START
      IF (I.EQ.2) GO TO 1030                                             START
      ALRT(N,3)=CANORD(NCA,N2,J)                                         START
      GO TO 1040                                                         START
1030  ALRT(N,3)=CANOR1(NCA,N2,J)                                         START
1040  CONTINUE                                                           START
      WRITE (10) ((ALRT(N,N3),N=1,NC),N3=1,3)                            START
1050  CONTINUE                                                           START
1060  CONTINUE                                                           START
1070  CONTINUE                                                           START
1080  CONTINUE                                                           START
      RETURN                                                             START
C                                                                        START
C         END OF START                                                   START
C                                                                        START
      END                                                                START
      SUBROUTINE PACHXY                                                  PACHXY 
C                                                                        PACHXY 
C                                                                        MOD2 
C      COMPUTE CORNER POINTS OF ALL PATCHES ANND STORE                   MOD2 
C      MIN AND MAX VALUES OF EACH SET                                    MOD2 
C                                                                        MOD2 
C                                                                        PACHXY 
      COMMON /XSECT/ ABCDE(20),PPL1(3),PPL2(3),PPL3(3),                  XSECT
     1        PLOTSZ,HPAGE,VPAGE,INP,NOU,NOW,ISIDE,IPRIN,                XSECT
     2        KODE,XSTAT,THETR,XMACH                                     XSECT
      COMMON /PATBLK/ PATXY(4,600,2)                                     PATBLK 
      DIMENSION NAME(2),ABC(20),PATCH(4,4,3),VCOR(4,3),VEC(4,3)          PACHXY 
      DIMENSION PNT1(3),PNT2(3),PNT3(3)                                  PACHXY 
      EQUIVALENCE (PNT1(1),PPL1(1)),(PNT2(1),PPL2(1)),(PNT3(1),PPL3(1))  PACHXY 
C                                                                        PACHXY 
C                                                                        PACHXY 
C         BEGIN COMPUTING AND PLOTTING LINES OF INTERSECTION             PACHXY 
C                                                                        PACHXY 
      REWIND 14                                                          PACHXY 
      READ(14)ABC                                                        PACHXY 
      READ(14)H1,H2,H3,H4,H5,H6,NOBJ                                     PACHXY 
      WRITE (6,82) NOBJ                                                  PACHXY 
   82 FORMAT (10X,5HNOBJ=,I5)                                            PACHXY 
      DO 70 J=1,NOBJ                                                     PACHXY 
      READ(14)NSURF,JJ,NAME(1),NAME(2),JJ,JJ                             PACHXY 
      WRITE (6,50) NAME                                                  PACHXY 
50    FORMAT (1X5A4)                                                     PACHXY 
      WRITE (6,83) NSURF                                                 PACHXY 
   83 FORMAT (10X,6HNSURF=,I5)                                           PACHXY 
      DO 60 N=1,NSURF                                                    PACHXY 
      READ(14)ND1,NS1,J3,J4,J5                                           PACHXY 
C                                                                        MOD2 
C         READS PATCHES FROM TAPE,                                       PACHXY 
C         SOLVES FOR INTERSECTIONS BY SPECIFIED PLANE                    PACHXY 
C         AND PLOTS                                                      PACHXY 
C                                                                        PACHXY 
      NPAT=ND1*NS1                                                       PACHXY 
      WRITE (6,555) NPAT                                                 PACHXY 
  555 FORMAT (10X,18HNUMBER OF PATCHES=,I5)                              PACHXY 
      DO 370 NNPAT=1,NPAT                                                PACHXY 
      READ(14)PATCH                                                      PACHXY 
      U=0.                                                               PACHXY 
      W=0.                                                               PACHXY 
      DO 3 KC=1,4                                                        PACHXY 
      DO 1 J4=1,4                                                        PACHXY 
      DO 1 K3=1,3                                                        PACHXY 
      VEC(J4,K3)=((U*PATCH(1,J4,K3)+PATCH(2,J4,K3))*U+PATCH(3,J4,K3))*U+ PACHXY 
     1PATCH(4,J4,K3)                                                     PACHXY 
 1    CONTINUE                                                           PACHXY 
      DO 2 K3=1,3                                                        PACHXY 
      VCOR(KC,K3)=((W*VEC(1,K3)   +VEC(2,K3))*W+VEC(3,K3))*W+VEC(4,K3)   PACHXY 
 2    CONTINUE                                                           PACHXY 
      IF (KC.EQ.1) U=1.                                                  PACHXY 
      IF (KC.EQ.2) U=0.                                                  PACHXY 
      IF (KC.EQ.2) W=1.                                                  PACHXY 
      IF (KC.EQ.3) U=1.                                                  PACHXY 
    3 CONTINUE                                                           PACHXY 
      XMIN=VCOR(1,1)                                                     PACHXY 
      XMAX=VCOR(1,1)                                                     PACHXY 
      YMIN=VCOR(1,2)                                                     PACHXY 
      YMAX=VCOR(1,2)                                                     PACHXY 
      DO 4 KC=1,4                                                        PACHXY 
      IF (VCOR(KC,1).LT.XMIN) XMIN=VCOR(KC,1)                            PACHXY 
      IF (VCOR(KC,1).GT.XMAX) XMAX=VCOR(KC,1)                            PACHXY 
      IF (VCOR(KC,2).LT.YMIN) YMIN=VCOR(KC,2)                            PACHXY 
      IF (VCOR(KC,2).GT.YMAX) YMAX=VCOR(KC,2)                            PACHXY 
    4 CONTINUE                                                           PACHXY 
      PATXY(1,NNPAT,N)=XMIN                                              PACHXY 
      PATXY(2,NNPAT,N)= XMAX                                             PACHXY 
      PATXY(3,NNPAT,N)=YMIN                                              PACHXY 
      PATXY(4,NNPAT,N)=YMAX                                              PACHXY 
  370 CONTINUE                                                           PACHXY 
60    CONTINUE                                                           PACHXY 
70    CONTINUE                                                           PACHXY 
      WRITE (6,889)                                                      PACHXY 
  889 FORMAT (10X,79H*** CORNER POINTS OF PATCHES HAVE BEEN COMPUTED AND PACHXY 
     1 STORED AS COMMON PATBLK ***)                                      PACHXY 
      RETURN                                                             PACHXY 
C                                                                        PACHXY 
C                                                                        PACHXY 
      END                                                                PACHXY 
      SUBROUTINE TIPLE (XTIPIN,YTIP,ZTIP,YSIN,ZSIN)                      TIPLE
C                                                                        TIPLE
C      FIND LEADING EDGE LOCATION AND FOCUS OF ELLIPSE                   MOD2 
C                                                                        TIPLE
      COMMON /XSECT/ ABCDE(20),PPL1(3),PPL2(3),PPL3(3),                  XSECT
     1        PLOTSZ,HPAGE,VPAGE,INP,NOU,NOW,ISIDE,IPRIN,                XSECT
     2        KODE,XSTAT,THETR,XMACH                                     XSECT
      COMMON /XPAT/NLE,NXLE(5),NXPAT(5),PATCHX(14400),PATCOR(4,150,2)    MOD2 
      COMMON /ERROR/ IERR                                                ERROR
      DIMENSION A(3,3),NAME(2),ABC(20),PATCH(4,4,3)                      TIPLE
      DIMENSION XPRM(3),PNT1(3),PNT2(3),PNT3(3),PNT4(3)                  TIPLE
      EQUIVALENCE (PNT1(1),PPL1(1)),(PNT2(1),PPL2(1)),(PNT3(1),PPL3(1))  TIPLE
C                                                                        TIPLE
      XTIP=XTIPIN                                                        TIPLE
C                                                                        TIPLE
      N=1                                                                MOD2 
      IFLAG=0                                                            TIPLE
      NX=NLE                                                             TIPLE
      DO 370 NPATX=1,NX                                                  TIPLE
      NNPAT=NXLE(NPATX)                                                  TIPLE
      IF (XTIP.GT.PATCOR(2,NNPAT,N).OR.XTIP.LT.PATCOR(1,NNPAT,N)) GO TO  TIPLE
     1777                                                                TIPLE
      DO 800 II=1,4                                                      TIPLE
      DO 800 JJ=1,4                                                      TIPLE
      DO 800 KK=1,3                                                      TIPLE
      PATCH(II,JJ,KK)=PATCHX(II+4*(JJ-1)+16*(KK-1)+48*(NNPAT-1)+         MOD2 
     1 7200*(N-1))                                                       MOD2 
  800 CONTINUE                                                           TIPLE
      CALL TSOLV(XTIP,YTIP,ZTIP,U,W,PATCH,IFLAG)                         TIPLE
  777 IF (IFLAG.EQ.1) WRITE (6,779) XTIP,YTIP,ZTIP                       TIPLE
  779 FORMAT (10X,5HXTIP=,F10.5,2X,5HYTIP=,F10.5,2X,5HZTIP=,F10.5)       TIPLE
      IF (IFLAG.EQ.1) GO TO 400                                          TIPLE
      IF (IFLAG.EQ.1) IERR=1                                             TIPLE
      IF (IFLAG.EQ.0) IERR=0                                             TIPLE
  370 CONTINUE                                                           TIPLE
      WRITE (6,701)                                                      TIPLE
  701 FORMAT (1X,26HSEARCH FOR LE PATCH FAILED)                          TIPLE
  400 CONTINUE                                                           TIPLE
      RETURN                                                             TIPLE
      END                                                                TIPLE
      SUBROUTINE TSOLV (XIN,Y,Z,U,W,PATCH,IFLAG)                         TSOLV
C                                                                        TSOLV
C      SOLVES FOR V(U=0,W) FROM PATCH EQUATION                           MOD2 
C                                                                        TSOLV
      DIMENSION PATCH(4,4,3)                                             TSOLV
      IFLAG=1                                                            TSOLV
      ITER=0                                                             TSOLV
      U=0.                                                               TSOLV
      WT=0.                                                              TSOLV
      X=XIN                                                              TSOLV
      CALL UWSOLV (XT,YT,ZT,U,WT,PATCH)                                  TSOLV
      WTN=1.                                                             TSOLV
  500 CALL UWSOLV (XTN,YTN,ZTN,U,WTN,PATCH)                              TSOLV
C     WRITE (6,501) XT,XTN                                               TSOLV
  501 FORMAT (10X,3HXT=,F10.5,2X,4HXTN=,F10.5)                           TSOLV
      IF (ABS(YTN-YT) .LT.1.E-8.AND.ABS(XTN-XT).LT.1.E-8) GO TO 600      TSOLV
      WTNN=WTN+((WTN-WT)/(XTN-XT))*(X-XTN)                               TSOLV
      ITER=ITER+1                                                        TSOLV
      IF (ITER.GT.100) IFLAG=0                                           TSOLV
      IF (ITER.GT.100) WRITE (6,883)                                     TSOLV
  883 FORMAT (10X,32H*** ITERATION AT L.E. FAILED ***)                   TSOLV
      IF (IFLAG.EQ.0) RETURN                                             TSOLV
      WT=WTN                                                             TSOLV
      XT=XTN                                                             TSOLV
      YT=YTN                                                             TSOLV
      WTN=WTNN                                                           TSOLV
      GO TO 500                                                          TSOLV
  600 X=XTN                                                              TSOLV
      IF(WTN.GT.1.0.OR.WTN.LT.0.0) IFLAG=0                               MOD2 
      Y=YTN                                                              TSOLV
      Z=ZTN                                                              TSOLV
      RETURN                                                             TSOLV
      END                                                                TSOLV
      SUBROUTINE UWSOLV (X,Y,Z,U,W,PATCH)                                UWSOLV 
C                                                                        UWSOLV 
C      SOLVES FOR W GIVEN U FROM PATCH EQUATION                          MOD2 
C                                                                        UWSOLV 
      DIMENSION VEC(4,3),PATCH(4,4,3),V(3)                               UWSOLV 
      DO 10 J4=1,4                                                       UWSOLV 
      DO 10 K3=1,3                                                       UWSOLV 
      VEC(J4,K3)=((U*PATCH(1,J4,K3)+PATCH(2,J4,K3))*U+PATCH(3,J4,K3))*U+ UWSOLV 
     1PATCH(4,J4,K3)                                                     UWSOLV 
10    CONTINUE                                                           UWSOLV 
      DO 20 K3=1,3                                                       UWSOLV 
      V(K3)=((W*VEC(1,K3)   +VEC(2,K3))*W+VEC(3,K3))*W+VEC(4,K3)         UWSOLV 
20    CONTINUE                                                           UWSOLV 
      X=V(1)                                                             UWSOLV 
      Y=V(2)                                                             UWSOLV 
      Z=V(3)                                                             UWSOLV 
      RETURN                                                             UWSOLV 
      END                                                                UWSOLV 
      OVERLAY (COREL,2,0)                                                MNSUB
      PROGRAM MNSUB                                                      MNSUB
C                                                                        MOD2 
C      MAIN PROGRAM FOR NUMERICAL SOLUTION                               MOD2 
C                                                                        MOD2 
      COMMON /NEWCOM/ W(3),DMIN(3),KMAX(3),KREF                          NEWCOM 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /DESGN/ CPP(120),EMST(120),CPPEX(120),XCP(120),             DESGN
     1 NCP,IDESIN,KDES,KDESMX,YYB1(120),CPP1(120),SUMDCP(50),            DESGN
     2 STARTC,BETAM(120),NSTART,WDES                                     DESGN
      COMMON/TITL/TI1(80),TI2(80)                                        TITL 
      COMMON /BLK2/ F(60,60),H(60,60),X(115),Y(115),B(115),              BLK2 
     1       BPR(115),BSEC(115),C(115),CPR(115),CSEC(115)                BLK2 
      COMMON/MAP/S0,S1,S2,PII,CSCAL                                      MAP
      COMMON /BLK3/ VI(60,60),UI(60,60),WI(60,60)                        BLK3 
      COMMON /FF/ FFS(60,60),COTH(115),SINTH(115),P0,Q0,ELO2             FF 
      COMMON/PLO/XXB(120),YYB(120)                                       PLO
      COMMON /FOR/AF,FM,ELI(120),DRI(120),XXS(120),YYS(120)              FOR
      COMMON/VELOC/RHOV(120),OMEGV(120),PSIV(120),PSIRV(120),PSITV(120)  VELOC
      COMMON /SARC/ S(115),SPHI(115),SPSI(115),SMAX,XMAX,DYSTR(115)      SARC 
      COMMON /VELCPT/ UCART(115),VCART(115),WCART(115),UCYL(115),        VELCPT 
     1                VCYL(115) ,WCYL(115) ,USHER(115),VSHER(115),       VELCPT 
     2                WSHER(115),USURF(115),VSURF(115),WSURF(115)        VELCPT 
      COMMON /INT/ L(401),D(401)                                         INT
      COMMON /INTIVE/ D2(129),L2(129)                                    INTIVE 
      COMMON /LDRG/ CCLCA(80),ETASPN(80),ISPNXX,EDRAG                    LDRG 
      COMMON /WNGTE/ XROOT,YWNGRT,ZROOT                                  WNGTE
      COMPLEX S0,S1,S2                                                   MNSUB
C                                                                        MNSUB
C                                                                        MNSUB
      IF(IPLOT.EQ.1) CALL STRPLT                                         MNSUB
C                                                                        MNSUB
      DO 100 K=1,KREF                                                    MNSUB
      DELMIN=DMIN(K)                                                     MNSUB
      WW=W(K)                                                            MNSUB
      KT=KMAX(K)                                                         MNSUB
   60 CONTINUE                                                           MNSUB
      CALL INIT(K)                                                       MNSUB
      CALL STRECH                                                        MNSUB
      WRITE(LOUT,200) K                                                  MNSUB
      CALL RELAX                                                         MNSUB
      CALL OUTP(K)                                                       MNSUB
C                                                                        MNSUB
C     DESIGN OPTION                                                      MNSUB
C                                                                        MNSUB
      IF (IDESIN.EQ.1.AND.K.EQ.KREF) GOTO 80                             MNSUB
      GOTO 100                                                           MNSUB
   80 IF (KDES.GT.KDESMX) GOTO 100                                       MNSUB
      KDES=KDES+1                                                        MNSUB
      GOTO 60                                                            MNSUB
C                                                                        MNSUB
  100 CONTINUE                                                           MNSUB
C                                                                        MNSUB
      IF(IPLOT.EQ.1) CALL ENDPLT                                         MNSUB
C                                                                        MNSUB
  200 FORMAT(/3X,39HSLOR SOLUTION ITERATION BEGINS ON MESH ,I1)          MNSUB
      END                                                                MNSUB
      SUBROUTINE AXIS                                                    AXIS 
      RETURN                                                             AXIS 
      END                                                                AXIS 
      SUBROUTINE PLOT                                                    PLOT 
      RETURN                                                             PLOT 
      END                                                                PLOT 
      SUBROUTINE PLOTS                                                   PLOTS
      RETURN                                                             PLOTS
      END                                                                PLOTS
      SUBROUTINE LINE                                                    LINE 
      RETURN                                                             LINE 
      END                                                                LINE 
      SUBROUTINE SYMBL4                                                  SYMBL4 
      RETURN                                                             SYMBL4 
      END                                                                SYMBL4 
      SUBROUTINE EPLOT                                                   EPLOT
      RETURN                                                             EPLOT
      END                                                                EPLOT
       SUBROUTINE RELAX                                                  RELAX
C     F=0 OUTSIDE BOW SHOCK                                              RELAX
C     RING AND COLLUMN RELAXATION                                        RELAX
C     ROTATED DIFFERENCES                                                RELAX
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /BLK2/ F(60,60),H(60,60),X(115),Y(115),B(115),              BLK2 
     1       BPR(115),BSEC(115),C(115),CPR(115),CSEC(115)                BLK2 
      COMMON /BLK3/ VI(60,60),UI(60,60),WI(60,60)                        BLK3 
      COMMON /FF/ FFS(60,60),COTH(115),SINTH(115),P0,Q0,ELO2             FF 
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON/MAP/S0,S1,S2,PII,CSCAL                                      MAP
      COMPLEX S0,S1,S2                                                   RELAX
      DIMENSION GAM(115),DEL(115),FO(115),FOO(115),JSH(115),DFO(115),    RELAX
     1          OMJD(115),FP(115),FPP(115),ERR(400),RSD(400)             RELAX
      DATA LK/0/                                                         RELAX
 1000 FORMAT(//1X,5H ITER,5X,5HDELMX,6X,1HI,3X,1HJ,6X,6HDELAVG,10X,      RELAX
     1 5HRESMX,6X,1HI,3X,1HJ,6X,6HRESAVG,7X,4HKSUP,4X,4HNPVD,3X,         RELAX
     2 6HJSHMAX,2X,6HISHMAX,2X,6HJSHMIN,2X,6HISHMIN //)                  RELAX
 1001 FORMAT(I5,E14.4,2I4,E14.4,E16.4,2I4,E14.4,6(4X,I4))                RELAX
 1002 FORMAT(//10X,43HNO. OF POINTS VIOLATING DIADGONAL DOMINENCE,       RELAX
     1 I3//10X,3HJC=,I3,5X,7HJSHMAX=,I3,5X,7HJSHMIN=,I3/)                RELAX
      LL=1                                                               RELAX
      JSHMAX=JC-2                                                        RELAX
      JLIMXP=JC-1                                                        RELAX
      ISHMAX=0                                                           RELAX
      JSHMIN=0                                                           RELAX
      ISHMIN=0                                                           RELAX
      LK=LK+1                                                            RELAX
      ICP=IC+1                                                           RELAX
      ICM=IC-1                                                           RELAX
      JCC=JC-2                                                           RELAX
      JCCP=JCC+1                                                         RELAX
      D2X=.5/DX                                                          RELAX
      D2Y=.5/DY                                                          RELAX
      DX2=1./(DX*DX)                                                     RELAX
      DY2=1./(DY*DY)                                                     RELAX
      DXY4=.25/(DX*DY)                                                   RELAX
      Q1=1./WW                                                           RELAX
      TOT=(IC-1)*(JCC-1)                                                 RELAX
      JD=JDRLX                                                           RELAX
C                                                                        RELAX
C       RING RELAXATION ONLY FOR JD=2                                    RELAX
C       IF JD GT 2, RING AND COLUMN RELAXATION - TYP. JD=7               RELAX
C       IF KSUB GT 0  RERUN WITH JD=7                                    RELAX
C       EST=-6. IS A GOOD NOMINAL VALUE                                  RELAX
C                                                                        RELAX
      JD1=JD-1                                                           RELAX
      IF(IOUT2.NE.2) WRITE(6,1000)                                       RELAX
      DO 5 I=2,IC                                                        RELAX
    5 JSH(I)=JCC                                                         RELAX
      DO 290 K=1,KT                                                      RELAX
      KOUNT=K                                                            RELAX
      ADELMX=0.                                                          RELAX
      ARESMX=0.                                                          RELAX
      AVDEL=0.                                                           RELAX
      AVRES=0.                                                           RELAX
      KSUP=0                                                             RELAX
      KSUB=0                                                             RELAX
      JLIMX=MIN0(JSHMAX+2,JCC)                                           RELAX
      JLIMXP=JLIMX+1                                                     RELAX
      DO 10 I=1,ICP                                                      RELAX
      DFO(I)=0.                                                          RELAX
      FOO(I)=F(I,JLIMXP+1)                                               RELAX
   10 FO(I)=F(I,JLIMXP)                                                  RELAX
      DO 90 JJ=JD,JLIMX                                                  RELAX
      J=JLIMX-JJ+JD                                                      RELAX
      DO 70 I=2,IC                                                       RELAX
C                                                                        RELAX
C      TRANSFORMATION DERIVATIVES                                        RELAX
C                                                                        RELAX
      YRHO=1./(C(I)-B(I))                                                RELAX
      YRHOTH=-(CPR(I)-BPR(I))*YRHO*YRHO                                  RELAX
      YTH=-(BPR(I)+Y(J)*(CPR(I)-BPR(I)))*YRHO                            RELAX
      YTHTH=-(BSEC(I)+Y(J)*(CSEC(I)-BSEC(I))+2.*YTH*(CPR(I)-BPR(I)))     RELAX
     1*YRHO                                                              RELAX
      RHO1=YRHO/(Y(J)+B(I)*YRHO)                                         RELAX
      RHO=1./RHO1                                                        RELAX
      FF=FFS(I,J)                                                        RELAX
      HH=H(I,J)*FF                                                       RELAX
C                                                                        RELAX
C      NUMERICAL DERIVATIVE                                              RELAX
C                                                                        RELAX
      FX=F(I+1,J)-F(I-1,J)                                               RELAX
      FY=FO(I)-F(I,J-1)                                                  RELAX
      HX=H(I+1,J)-H(I-1,J)                                               RELAX
      HY=H(I,J+1)-H(I,J-1)                                               RELAX
      FFRHO=(RHO-.5*(P0*COTH(I)+Q0*SINTH(I)))/FF                         RELAX
      FFTHE=RHO*.5*(P0*SINTH(I)-Q0*COTH(I))/FF                           RELAX
      HWRHO=YRHO*HY*D2Y                                                  RELAX
      HWTHE=HX*D2X+YTH*HY*D2Y                                            RELAX
      HRHO=FF*HWRHO+H(I,J)*FFRHO                                         RELAX
      HTHE=FF*HWTHE+H(I,J)*FFTHE                                         RELAX
      FXX=F(I+1,J)-2.*F(I,J)+F(I-1,J)                                    RELAX
      FYY=F(I,J+1)-2.*F(I,J)+F(I,J-1)                                    RELAX
      FXY=F(I+1,J+1)-F(I-1,J+1)-F(I+1,J-1)+F(I-1,J-1)                    RELAX
C                                                                        RELAX
C      VELOCITIES                                                        RELAX
C                                                                        RELAX
      VS=YRHO*FY*D2Y/HH                                                  RELAX
      US=(FX*D2X+YTH*FY*D2Y)*RHO1/HH                                     RELAX
      V=VS+VI(I,J)                                                       RELAX
      U=US+UI(I,J)                                                       RELAX
      W=F(I,J)+WI(I,J)                                                   RELAX
      Q2=V*V+U*U                                                         RELAX
      QT2=Q2+W*W                                                         RELAX
C                                                                        RELAX
C      SOUND SPEED                                                       RELAX
C                                                                        RELAX
      A2=-GA*QT2+A02                                                     RELAX
      A2=AMAX1(1.E-08,A2)                                                RELAX
C                                                                        RELAX
C      EQUATION COEFFICIENTS                                             RELAX
C                                                                        RELAX
      AA1=(A2-U*U)*RHO1*RHO1*DX2                                         RELAX
      AA2=((A2-U*U)*2.*RHO1*YTH-2.*U*V*YRHO)*DXY4*RHO1                   RELAX
      AA3=((A2-V*V)*YRHO*YRHO-2.*U*V*YRHO*YTH*RHO1                       RELAX
     1+(A2-U*U)*YTH*YTH*RHO1*RHO1)*DY2                                   RELAX
      AA4=(-2.*U*V*RHO1*(YRHOTH-YTH*RHO1)+(A2-U*U)                       RELAX
     1*RHO1*(YTHTH*RHO1+YRHO))*D2Y                                       RELAX
      AA5=+2.*U*V*RHO1*RHO1*D2X                                          RELAX
      AA6=(2.*A2-Q2)*HH*HH                                               RELAX
      AA7=(V*V-U*U)*(VS*HRHO-US*RHO1*HTHE)                               RELAX
     1+2.*U*V*(US*HRHO+VS*RHO1*HTHE)                                     RELAX
      RHS=AA4*FY+AA5*FX+AA6*F(I,J)+AA7                                   RELAX
C                                                                        RELAX
C      ROTATED DIFFERENCES                                               RELAX
C                                                                        RELAX
      U1=U*RHO1                                                          RELAX
      V2=V*RHO1                                                          RELAX
      V1=V*YRHO+U*RHO1*YTH                                               RELAX
      VV1=-ABS(V1)                                                       RELAX
      U2=U*YRHO-V*RHO1*YTH                                               RELAX
      IS=1                                                               RELAX
      IF(U.LT.0.) IS=-1                                                  RELAX
      IM1=I-IS                                                           RELAX
      K11=(1+IS)/2                                                       RELAX
      K22=(1-IS)/2                                                       RELAX
      UU2=ABS(U2)                                                        RELAX
      CC4=VV1*UU2*DY2                                                    RELAX
      CC5=U1*UU2*4.*DXY4                                                 RELAX
      IF(Q2.GT.A2) GO TO 20                                              RELAX
C                                                                        RELAX
C      SUBSONIC LOOP - TRIDIAGONAL COEFFICIENTS                          RELAX
C                                                                        RELAX
      DD=.5/(AA1+AA3*Q1+.5*EST*(CC4-IS*CC5))                             RELAX
      AL1=AA1*DD                                                         RELAX
      AL2=EST*CC5*DD                                                     RELAX
      ALP1=AL1+K22*AL2                                                   RELAX
      ALP2=AL1-K11*AL2                                                   RELAX
      DUM=ABS(ALP1)+ABS(ALP2)                                            RELAX
      IF(DUM.GT.1.) KSUB=KSUB+1                                          RELAX
      RDEL=AA1*FXX+AA2*FXY+AA3*FYY+RHS                                   RELAX
      BET=RDEL*DD+EST*CC4*DFO(I)*DD                                      RELAX
      GO TO 30                                                           RELAX
C                                                                        RELAX
C      SUPERSONIC LOOP - TRIDIAGONAL COEFFICIENTS                        RELAX
C                                                                        RELAX
   20 KSUP=KSUP+1                                                        RELAX
      BB1=U1*U1*DX2                                                      RELAX
      BB2P=8.*U1*V1*DXY4                                                 RELAX
      BB2=8.*U1*VV1*DXY4                                                 RELAX
      BB3=V1*V1*DY2                                                      RELAX
      CC1=V2*V2*DX2                                                      RELAX
      CC2=-2.*U2*V2*DXY4                                                 RELAX
      CC3=U2*U2*DY2                                                      RELAX
      DD=.5/((Q2-A2)*(BB1-IS*BB2+BB3)+A2*(CC1+.5*CC3)                    RELAX
     1+EST*A2*.5*(CC4-IS*CC5))                                           RELAX
      ALP11=A2*CC1*DD                                                    RELAX
      ALP22=((Q2-A2)*(2.*BB1-IS*BB2)+A2*CC1)*DD-IS*EST*A2*CC5*DD         RELAX
      IM2=IM1-IS                                                         RELAX
      IF(IM2.EQ.0) IM2=4                                                 RELAX
      IF(IM2.EQ.ICP+1) IM2=ICM-1                                         RELAX
      FXXB=F(I,J)-2.*F(IM1,J)+F(IM2,J)                                   RELAX
      FXYB=IS*(F(I,J+1)-FO(IM1)-F(I,J)+F(IM1,J))                         RELAX
      FYYB=F(I,J)-2.*F(I,J+1)+FOO(I)                                     RELAX
      FSS=BB1*FXXB+BB2P*FXYB+BB3*FYYB                                    RELAX
      FNN=CC1*FXX+CC2*FXY+CC3*FYY                                        RELAX
      RDEL=((A2-Q2)*FSS+A2*FNN)/Q2+RHS                                   RELAX
      ALP1=K11*ALP11+K22*ALP22                                           RELAX
      ALP2=K11*ALP22+K22*ALP11                                           RELAX
      DUM=ABS(ALP1)+ABS(ALP2)                                            RELAX
      IF(DUM.GT.1.) KSUB=KSUB+1                                          RELAX
      BET=RDEL*DD*Q2+EST*A2*DD*DFO(I)*CC4                                RELAX
C                                                                        RELAX
C      GAUSSIAN ELIMINATION - FORWARD SWEEP                              RELAX
C                                                                        RELAX
   30 IF(I.NE.2) GO TO 40                                                RELAX
      GAM(2)=ALP1+ALP2                                                   RELAX
      DEL(2)=BET                                                         RELAX
      GO TO 50                                                           RELAX
   40 D=1./(1.-ALP2*GAM(I-1))                                            RELAX
      GAM(I)=ALP1*D                                                      RELAX
      DEL(I)=(ALP2*DEL(I-1)+BET)*D                                       RELAX
   50 ARES=ABS(RDEL)                                                     RELAX
      IF(J.GE.JSH(I)) GO TO 60                                           RELAX
      AVRES=AVRES+ARES                                                   RELAX
      IF(ARES.LT.ARESMX) GO TO 60                                        RELAX
      RESMX=RDEL                                                         RELAX
      ARESMX=ARES                                                        RELAX
      IRX=I                                                              RELAX
      JRX=J                                                              RELAX
   60 IF(I.NE.IC) GO TO 70                                               RELAX
      A1IC=ALP1                                                          RELAX
      A2IC=ALP2                                                          RELAX
      BETIC=BET                                                          RELAX
   70 CONTINUE                                                           RELAX
      GAM(IC)=0.                                                         RELAX
      DEL(IC)=((A1IC+A2IC)*DEL(ICM)+BETIC)/(1.-(A1IC+A2IC)*GAM(ICM))     RELAX
      DELF=0.                                                            RELAX
C                                                                        RELAX
C      GAUSSIAN ELIMINATION - BACKWARD SUBSTITUTUIN                      RELAX
C                                                                        RELAX
      DO 80 II=2,IC                                                      RELAX
      I=IC-II+2                                                          RELAX
      DELF=GAM(I)*DELF+DEL(I)                                            RELAX
      FOO(I)=FO(I)                                                       RELAX
      FO(I)=F(I,J)                                                       RELAX
      DFO(I)=DELF                                                        RELAX
C                                                                        RELAX
C      POTENTIAL UPDATE                                                  RELAX
C                                                                        RELAX
      F(I,J)=F(I,J)+DELF                                                 RELAX
      IF(J.GE.JSH(I)) GO TO 80                                           RELAX
      ADELF=ABS(DELF)                                                    RELAX
      AVDEL=AVDEL+ADELF                                                  RELAX
      IF(ADELF.LT.ADELMX) GO TO 80                                       RELAX
      DELMX=DELF                                                         RELAX
      ADELMX=ADELF                                                       RELAX
      IMX=I                                                              RELAX
      JMX=J                                                              RELAX
   80 CONTINUE                                                           RELAX
      F(1,J)=F(3,J)                                                      RELAX
      F(ICP,J)=F(ICM,J)                                                  RELAX
   90 CONTINUE                                                           RELAX
      IF(JD.EQ.2) GO TO 200                                              RELAX
C                                                                        RELAX
C      COLUMN RELAXATION                                                 RELAX
C                                                                        RELAX
      DO 105 I=2,IC                                                      RELAX
      FP(I)=FO(I)                                                        RELAX
      FPP(I)=FOO(I)                                                      RELAX
  105 OMJD(I)=DFO(I)                                                     RELAX
      FP(1)=FP(3)                                                        RELAX
      FPP(1)=FPP(3)                                                      RELAX
      FP(ICP)=FP(ICM)                                                    RELAX
      FPP(ICP)=FPP(ICM)                                                  RELAX
      DO 110 J=1,JD                                                      RELAX
      DFO(J)=0.                                                          RELAX
      FOO(J)=F(4,J)                                                      RELAX
  110 FO(J)=F(3,J)                                                       RELAX
      DO 190 I=2,IC                                                      RELAX
      DO 170 J=2,JD1                                                     RELAX
C                                                                        RELAX
C      TRANSFORMATION DERIVATIVES                                        RELAX
C                                                                        RELAX
      YRHO=1./(C(I)-B(I))                                                RELAX
      YRHOTH=-(CPR(I)-BPR(I))*YRHO*YRHO                                  RELAX
      YTH=-(BPR(I)+Y(J)*(CPR(I)-BPR(I)))*YRHO                            RELAX
      YTHTH=-(BSEC(I)+Y(J)*(CSEC(I)-BSEC(I))+2.*YTH*(CPR(I)-BPR(I)))     RELAX
     1*YRHO                                                              RELAX
      RHO1=YRHO/(Y(J)+B(I)*YRHO)                                         RELAX
      FPI=F(I,J+1)                                                       RELAX
      FPIP=F(I+1,J+1)                                                    RELAX
      IF(J.EQ.JD1) FPI=FP(I)                                             RELAX
      IF(J.EQ.JD1) FPIP=FP(I+1)                                          RELAX
C                                                                        RELAX
C      NUMERICAL DERIVATIVES                                             RELAX
C                                                                        RELAX
      FX=F(I+1,J)-FO(J)                                                  RELAX
      FY=FPI-F(I,J-1)                                                    RELAX
      RHO=1./RHO1                                                        RELAX
      FF=FFS(I,J)                                                        RELAX
      HH=H(I,J)*FF                                                       RELAX
      HX=H(I+1,J)-H(I-1,J)                                               RELAX
      HY=H(I,J+1)-H(I,J-1)                                               RELAX
      FFRHO=(RHO-.5*(P0*COTH(I)+Q0*SINTH(I)))/FF                         RELAX
      FFTHE=RHO*.5*(P0*SINTH(I)-Q0*COTH(I))/FF                           RELAX
      HWRHO=YRHO*HY*D2Y                                                  RELAX
      HWTHE=HX*D2X+YTH*HY*D2Y                                            RELAX
      HRHO=FF*HWRHO+H(I,J)*FFRHO                                         RELAX
      HTHE=FF*HWTHE+H(I,J)*FFTHE                                         RELAX
      FXX=F(I+1,J)-2.*F(I,J)+F(I-1,J)                                    RELAX
      FYY=FPI-2.*F(I,J)+F(I,J-1)                                         RELAX
      FXY=FPIP-F(I-1,J+1)-F(I+1,J-1)+F(I-1,J-1)                          RELAX
C                                                                        RELAX
C      VELOCITIES                                                        RELAX
C                                                                        RELAX
      VS=YRHO*FY*D2Y/HH                                                  RELAX
      US=(FX*D2X+YTH*FY*D2Y)*RHO1/HH                                     RELAX
      V=VS+VI(I,J)                                                       RELAX
      U=US+UI(I,J)                                                       RELAX
      W=F(I,J)+WI(I,J)                                                   RELAX
      Q2=V*V+U*U                                                         RELAX
      QT2=Q2+W*W                                                         RELAX
C                                                                        RELAX
C      SOUND SPEED                                                       RELAX
C                                                                        RELAX
      A2=-GA*QT2+A02                                                     RELAX
C                                                                        RELAX
C      EQUATION COEFFICIENTS                                             RELAX
C                                                                        RELAX
      A2=AMAX1(1.E-08,A2)                                                RELAX
      AA1=(A2-U*U)*RHO1*RHO1*DX2                                         RELAX
      AA2=((A2-U*U)*2.*RHO1*YTH-2.*U*V*YRHO)*DXY4*RHO1                   RELAX
      AA3=((A2-V*V)*YRHO*YRHO-2.*U*V*YRHO*YTH*RHO1                       RELAX
     1+(A2-U*U)*YTH*YTH*RHO1*RHO1)*DY2                                   RELAX
      AA4=(-2.*U*V*RHO1*(YRHOTH-YTH*RHO1)+(A2-U*U)                       RELAX
     1*RHO1*(YTHTH*RHO1+YRHO))*D2Y                                       RELAX
      AA5=+2.*U*V*RHO1*RHO1*D2X                                          RELAX
      AA6=(2.*A2-Q2)*HH*HH                                               RELAX
      AA7=(V*V-U*U)*(VS*HRHO-US*RHO1*HTHE)                               RELAX
     1+2.*U*V*(US*HRHO+VS*RHO1*HTHE)                                     RELAX
      RHS=AA4*FY+AA5*FX+AA6*F(I,J)+AA7                                   RELAX
C                                                                        RELAX
C      ROTATED DIFFERENCES                                               RELAX
C                                                                        RELAX
C                                                                        RELAX
      U1=U*RHO1                                                          RELAX
      V2=V*RHO1                                                          RELAX
      V1=V*YRHO+U*RHO1*YTH                                               RELAX
      U2=U*YRHO-V*RHO1*YTH                                               RELAX
      JS=1                                                               RELAX
      IF(V1.GT.0.) JS=-1                                                 RELAX
      JM1=J+JS                                                           RELAX
      K11=(1-JS)/2                                                       RELAX
      K22=(1+JS)/2                                                       RELAX
      VV2=ABS(V2)                                                        RELAX
      CC4=V1*VV2*4.*DXY4                                                 RELAX
      CC5=ABS(U1)*VV2*DX2                                                RELAX
      IF(Q2.GT.A2) GO TO 120                                             RELAX
C                                                                        RELAX
C      SUBSONIC LOOP - TRIDIAGONAL COEFFICIENTS                          RELAX
C                                                                        RELAX
      DD=.5/(AA3+AA1*Q1-.5*EST*(-JS*CC4+CC5))                            RELAX
      AL1=AA3*DD                                                         RELAX
      AL2=EST*CC4*DD                                                     RELAX
      ALP1=AL1+K22*AL2                                                   RELAX
      ALP2=AL1-K11*AL2                                                   RELAX
      DUM=ABS(ALP1)+ABS(ALP2)                                            RELAX
      IF(DUM.GT.1.) KSUB=KSUB+1                                          RELAX
      RDEL=AA1*FXX+AA2*FXY+AA3*FYY+RHS                                   RELAX
      BET=RDEL*DD-EST*CC5*DFO(J)*DD                                      RELAX
      GO TO 130                                                          RELAX
  120 KSUP=KSUP+1                                                        RELAX
C                                                                        RELAX
C      SUPERSONIC LOOP - TRIDIAGONAL COEFFICIENTS                        RELAX
C                                                                        RELAX
      BB1=U1*U1*DX2                                                      RELAX
      BB2=8.*U1*V1*DXY4                                                  RELAX
      BB3=V1*V1*DY2                                                      RELAX
      CC1=V2*V2*DX2                                                      RELAX
      CC2=-2.*U2*V2*DXY4                                                 RELAX
      CC3=U2*U2*DY2                                                      RELAX
      DD=.5/((Q2-A2)*(BB1-JS*BB2+BB3)+A2*(CC3+.5*CC1)                    RELAX
     1-EST*A2*.5*(-JS*CC4+CC5))                                          RELAX
      ALP11=A2*CC3*DD                                                    RELAX
      ALP22=((Q2-A2)*(2.*BB3+JS*BB2)+A2*CC3)*DD-JS*EST*A2*CC4*DD         RELAX
      JM2=JM1+JS                                                         RELAX
      FJM2=0.                                                            RELAX
      IF(JM2.GT.0) FJM2=F(I,JM2)                                         RELAX
      FJM1=F(I,JM1)                                                      RELAX
      FOJM1=FO(JM1)                                                      RELAX
      IF(J.NE.JD1) GO TO 125                                             RELAX
      IF(JS.NE.1) GO TO 125                                              RELAX
      FJM1=FP(I)                                                         RELAX
      FJM2=FPP(I)                                                        RELAX
      FOJM1=FP(I-1)                                                      RELAX
  125 CONTINUE                                                           RELAX
      FYYB=F(I,J)-2.*FJM1+FJM2                                           RELAX
      FXYB=-JS*(F(I,J)-F(I-1,J)-FJM1+FOJM1)                              RELAX
      FXXB=F(I,J)-2.*F(I-1,J)+FOO(J)                                     RELAX
      FSS=BB1*FXXB+BB2*FXYB+BB3*FYYB                                     RELAX
      FNN=CC1*FXX+CC2*FXY+CC3*FYY                                        RELAX
      RDEL=((A2-Q2)*FSS+A2*FNN)/Q2+RHS                                   RELAX
      ALP1=K11*ALP11+K22*ALP22                                           RELAX
      ALP2=K11*ALP22+K22*ALP11                                           RELAX
      DUM=ABS(ALP1)+ABS(ALP2)                                            RELAX
      IF(DUM.GT.1.) KSUB=KSUB+1                                          RELAX
      BET=RDEL*DD*Q2-EST*A2*DD*DFO(I)*CC5                                RELAX
C                                                                        RELAX
C      GAUSSIAN ELIMINATION - FORWARD SWEEP                              RELAX
C                                                                        RELAX
  130 IF(J.NE.2) GO TO 140                                               RELAX
      GAM(2)=ALP1+ALP2                                                   RELAX
      DEL(2)=BET                                                         RELAX
      GO TO 150                                                          RELAX
  140 D=1./(1.-ALP2*GAM(J-1))                                            RELAX
      GAM(J)=ALP1*D                                                      RELAX
      DEL(J)=(ALP2*DEL(J-1)+BET)*D                                       RELAX
  150 ARES=ABS(RDEL)                                                     RELAX
      AVRES=AVRES+ARES                                                   RELAX
      IF(ARES.LT.ARESMX) GO TO 170                                       RELAX
      RESMX=RDEL                                                         RELAX
      ARESMX=ARES                                                        RELAX
      IRX=I                                                              RELAX
      JRX=J                                                              RELAX
  170 CONTINUE                                                           RELAX
      DELF=OMJD(I)                                                       RELAX
C                                                                        RELAX
C        GAUSSIAN ELIMINATION - BACKWARD SUBSTSITUTUIN                   RELAX
C                                                                        RELAX
      DO 180 JJ=2,JD1                                                    RELAX
      J=JD1-JJ+2                                                         RELAX
      DELF=GAM(J)*DELF+DEL(J)                                            RELAX
      FOO(J)=FO(J)                                                       RELAX
      FO(J)=F(I,J)                                                       RELAX
      DFO(J)=DELF                                                        RELAX
C                                                                        RELAX
C      POTENTIAL UPDATE                                                  RELAX
C                                                                        RELAX
      F(I,J)=F(I,J)+DELF                                                 RELAX
      ADELF=ABS(DELF)                                                    RELAX
      AVDEL=AVDEL+ADELF                                                  RELAX
      IF(ADELF.LT.ADELMX) GO TO 180                                      RELAX
      DELMX=DELF                                                         RELAX
      ADELMX=ADELF                                                       RELAX
      IMX=I                                                              RELAX
      JMX=J                                                              RELAX
  180 CONTINUE                                                           RELAX
      FO(1)=F(I,1)                                                       RELAX
      FF=FFS(I,2)                                                        RELAX
      HH=H(I,2)*FF                                                       RELAX
      F(I,1)=F(I,3)-(BPR(I)*(F(I+1,2)-F(I-1,2))*D2X+HH*B(I)*(BPR(I)      RELAX
     1*UI(I,2)-B(I)*VI(I,2)))*(C(I)-B(I))/(D2Y*(B(I)*B(I)+BPR(I)         RELAX
     2*BPR(I)))                                                          RELAX
  190 CONTINUE                                                           RELAX
      DO 195 J=1,JLIMX                                                   RELAX
      F(1,J)=F(3,J)                                                      RELAX
  195 F(ICP,J)=F(ICM,J)                                                  RELAX
      GO TO 220                                                          RELAX
  200 DO 210 I=2,IC                                                      RELAX
      FF=FFS(I,2)                                                        RELAX
      HH=H(I,2)*FF                                                       RELAX
      F(I,1)=F(I,3)-(BPR(I)*(F(I+1,2)-F(I-1,2))*D2X+HH*B(I)*(BPR(I)      RELAX
     1*UI(I,2)-B(I)*VI(I,2)))*(C(I)-B(I))/(D2Y*(B(I)*B(I)+BPR(I)         RELAX
     2*BPR(I)))                                                          RELAX
  210 CONTINUE                                                           RELAX
  220 AVRES=AVRES/TOT                                                    RELAX
      AVDEL=AVDEL/TOT                                                    RELAX
      IF(LL.EQ.0) GO TO 270                                              RELAX
C                                                                        RELAX
C      SET F=0 OUTSIDE BOW SHOCK WAVE                                    RELAX
C                                                                        RELAX
      IF(K.LT.50) GO TO 270                                              RELAX
      DO 240 I=2,IC                                                      RELAX
      DO 230 JJ=2,JLIMX                                                  RELAX
      J=JLIMX-JJ+2                                                       RELAX
      YRHO=1./(C(I)-B(I))                                                RELAX
      YTH=-(BPR(I)+Y(J)*(CPR(I)-BPR(I)))*YRHO                            RELAX
      RHO1=YRHO/(Y(J)+B(I)*YRHO)                                         RELAX
      FF=FFS(I,J)                                                        RELAX
      HH=H(I,J)*FF                                                       RELAX
      FX=F(I+1,J)-F(I-1,J)                                               RELAX
      FY=F(I,J+1)-F(I,J-1)                                               RELAX
      VS=YRHO*FY*D2Y/HH                                                  RELAX
      US=(FX*D2X+YTH*FY*D2Y)*RHO1/HH                                     RELAX
      V=VS+VI(I,J)                                                       RELAX
      U=US+UI(I,J)                                                       RELAX
      W=F(I,J)+WI(I,J)                                                   RELAX
      Q2=V*V+U*U                                                         RELAX
      A2=-GA*(Q2+W*W)+A02                                                RELAX
      A2=AMAX1(1.E-08,A2)                                                RELAX
      IF(Q2.LE.A2) GO TO 240                                             RELAX
      JSH(I)=J                                                           RELAX
      F(I,J)=0.                                                          RELAX
  230 CONTINUE                                                           RELAX
  240 CONTINUE                                                           RELAX
      DO 250 J=2,JLIMX                                                   RELAX
      F(1,J)=F(3,J)                                                      RELAX
  250 F(ICP,J)=F(ICM,J)                                                  RELAX
      TOT=0.                                                             RELAX
      JSHMAX=0                                                           RELAX
      JSHMIN=200                                                         RELAX
      DO 260 I=2,IC                                                      RELAX
      JSHSHK=JSH(I)                                                      RELAX
      IF(JSHSHK.GT.JSHMAX) ISHMAX=I                                      RELAX
      IF(JSHSHK.LT.JSHMIN) ISHMIN=I                                      RELAX
      JSHMAX=MAX0(JSHSHK,JSHMAX)                                         RELAX
      JSHMIN=MIN0(JSHSHK,JSHMIN)                                         RELAX
  260 TOT=TOT+JSHSHK-1                                                   RELAX
  270 CONTINUE                                                           RELAX
      ERR(K)=ALOG10(ABS(DELMX))                                          RELAX
      RSD(K)=ALOG10(ABS(RESMX))                                          RELAX
      IF(IOUT2.NE.2) WRITE(6,1001)K,DELMX,IMX,JMX,AVDEL,RESMX,IRX,JRX,   RELAX
     1 AVRES,KSUP,KSUB,JSHMAX,ISHMAX,JSHMIN,ISHMIN                       RELAX
C                                                                        RELAX
C      CONVERGENCE CHECK                                                 RELAX
C                                                                        RELAX
      IF(ADELMX.LT.DELMIN) GO TO 300                                     RELAX
      IF(ADELMX.GT.1.0E10) WRITE(6,360)                                  RELAX
      IF(ADELMX.GT.1.0E10) GO TO 300                                     RELAX
      IF(LK.EQ.1.AND.K.EQ.200) CALL SHOCKR(JSHMAX)                       RELAX
      IF(LK.EQ.1.AND.K.EQ.200.AND.IOUT2.NE.2) WRITE(6,1000)              RELAX
  290 CONTINUE                                                           RELAX
  360 FORMAT(//10X,38H SOLUTION STOPS - ITERATION DIVERGING )            RELAX
  300 IF(IOUT2.NE.2) WRITE(6,1000)                                       RELAX
      IF(IOUT2.NE.2) CALL ERPLOT(KOUNT,ERR,RSD)                          RELAX
      IF(IOUT2.EQ.2) WRITE(6,1002) KSUB,JC,JSHMAX,JSHMIN                 RELAX
      RETURN                                                             RELAX
       END                                                               RELAX
      SUBROUTINE ERPLOT(KOUNT,ERR,RSD)                                   ERPLOT 
C                                                                        ERPLOT 
C      PRINT OF ITERATION HISTORY                                        ERPLOT 
C                                                                        ERPLOT 
      DIMENSION ERR(1),RSD(1)                                            ERPLOT 
      DIMENSION LINE(126),IE(6),IR(6)                                    ERPLOT 
      DATA IB/1H /,IS/1H*/,IY/1HI/,IX/1H-/,IP/1H+/                       ERPLOT 
      WRITE(6,200)                                                       ERPLOT 
      ERRO=10.0**ERR(1)                                                  ERPLOT 
      ERRL=ALOG10(ERRO)                                                  ERPLOT 
      CE=7.                                                              ERPLOT 
      IF(ERRL.GT.-2.) CE=CE-AINT(ERRL+1.)                                ERPLOT 
      RSDO=10.0**RSD(1)                                                  ERPLOT 
      RSDL=ALOG10(RSDO)                                                  ERPLOT 
      CR=5.                                                              ERPLOT 
      IF(RSDL.GT.0.) CR=CR-AINT(RSDL+1.)                                 ERPLOT 
      WRITE(6,202) ERRO,RSDO                                             ERPLOT 
      DO 7 K=1,KOUNT                                                     ERPLOT 
      ERR(K)=CE+ERR(K)                                                   ERPLOT 
    7 RSD(K)=CR+RSD(K)                                                   ERPLOT 
      DO 5 L=1,6                                                         ERPLOT 
      IE(L) = L-1-IFIX(CE)                                               ERPLOT 
    5 IR(L) = L-1-IFIX(CR)                                               ERPLOT 
      WRITE(6,203) (IE(L),IR(L),L=1,6)                                   ERPLOT 
C                                                                        ERPLOT 
      NK = KOUNT+1                                                       ERPLOT 
      DO 100 KKK=1,NK                                                    ERPLOT 
      K = KKK-1                                                          ERPLOT 
      DO 10 I=1,126                                                      ERPLOT 
   10 LINE(I)=IB                                                         ERPLOT 
      IF(MOD(K,50).NE.0) GO TO 30                                        ERPLOT 
      DO 20 I=11,111                                                     ERPLOT 
   20 LINE(I)=IX                                                         ERPLOT 
   30 DO 40 I=11,111,20                                                  ERPLOT 
   40 LINE(I)=IY                                                         ERPLOT 
      IF (KKK.EQ.1) GO TO 100                                            ERPLOT 
      J=11.5+20.*ERR(K)                                                  ERPLOT 
      IF (J.LT.1) J=1                                                    ERPLOT 
      IF (J.GT.126) J = 126                                              ERPLOT 
      LINE (J)=IS                                                        ERPLOT 
      J=11.5+20.*RSD(K)                                                  ERPLOT 
      IF (J.LT.1) J=1                                                    ERPLOT 
      IF (J.GT.126) J = 126                                              ERPLOT 
      LINE(J)=IP                                                         ERPLOT 
  100 WRITE(6,201) K,LINE                                                ERPLOT 
C                                                                        ERPLOT 
      RETURN                                                             ERPLOT 
  200 FORMAT(1H1/5X,19HCONVERGENCE HISTORY )                             ERPLOT 
  201 FORMAT( 2X,I4,1X,126A1)                                            ERPLOT 
  202 FORMAT(10X,21H INITIAL ERROR(*) IS ,E12.4,5X,                      ERPLOT 
     1  23HINITIAL RESIDUAL(+) IS ,E12.4///)                             ERPLOT 
  203 FORMAT(6(15X,I2,1H/,I2))                                           ERPLOT 
      END                                                                ERPLOT 
      SUBROUTINE SHOCKR(JSHMAX)                                          SHOCKR 
C                                                                        SHOCKR 
C      RECOMPUTES NEW POSTION OF OUTER BOUNDARY AT NS MESH POINTS        SHOCKR 
C      OUTSIDE CALCULATED BOW WAVE. THE RESULTING SHAPE C(X) IS          SHOCKR 
C      SMOOTHED KS TIMES AND THEN NUMERICALLY DIFFERENTIATED             SHOCKR 
C                                                                        SHOCKR 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /BLK2/ F(60,60),H(60,60),X(115),Y(115),B(115),              BLK2 
     1       BPR(115),BSEC(115),C(115),CPR(115),CSEC(115)                BLK2 
      COMMON /BLK3/ VI(60,60),UI(60,60),WI(60,60)                        BLK3 
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON /FF/ FFS(60,60),COTH(115),SINTH(115),P0,Q0,ELO2             FF 
      DIMENSION CO(201),FN(201)                                          SHOCKR 
      NS=NSHKR                                                           SHOCKR 
      ICM=IC-1                                                           SHOCKR 
      ICP=IC+1                                                           SHOCKR 
      JCM=JC-1                                                           SHOCKR 
      JINER=JSHMAX                                                       SHOCKR 
      DO 5 I=2,IC                                                        SHOCKR 
      DO 5 J=JINER,JCM                                                   SHOCKR 
    5 F(I,J)=0.0                                                         SHOCKR 
      JSHMAX=JC-2                                                        SHOCKR 
      JCP=JC+1                                                           SHOCKR 
      KS=KSHKR                                                           SHOCKR 
      WRITE(LOUT,4)                                                      SHOCKR 
C                                                                        SHOCKR 
C      CALCULATION OF BOW WAVE                                           SHOCKR 
C                                                                        SHOCKR 
      DO 20 I=2,IC                                                       SHOCKR 
      DO 10 JJ=2,JCM                                                     SHOCKR 
      J=JCM-JJ+2                                                         SHOCKR 
      FY=F(I,J+1)-F(I,J-1)                                               SHOCKR 
      FX=F(I+1,J)-F(I-1,J)                                               SHOCKR 
      YRHO=1./(C(I)-B(I))                                                SHOCKR 
      YTH=-(BPR(I)+Y(J)*(CPR(I)-BPR(I)))*YRHO                            SHOCKR 
      RHO1=YRHO/(Y(J)+B(I)*YRHO)                                         SHOCKR 
      HH=H(I,J)*FFS(I,J)                                                 SHOCKR 
      VS=YRHO*FY/(2.*DY*HH)                                              SHOCKR 
      US=(FX*.5/DX+YTH*FY*.5/DY)*RHO1/HH                                 SHOCKR 
      V=VS+VI(I,J)                                                       SHOCKR 
      U=US+UI(I,J)                                                       SHOCKR 
      W=F(I,J)+WI(I,J)                                                   SHOCKR 
      Q2C=U*U+V*V                                                        SHOCKR 
      Q2=Q2C+W*W                                                         SHOCKR 
      A2=-GA*Q2+A02                                                      SHOCKR 
      IF(A2.LT.0.) A2=-A2                                                SHOCKR 
      EM2=Q2C/A2                                                         SHOCKR 
      RHO=1./RHO1                                                        SHOCKR 
      IF(EM2.LT.1.) GO TO 15                                             SHOCKR 
      EM2O=EM2                                                           SHOCKR 
      RHOO=RHO                                                           SHOCKR 
   10 CONTINUE                                                           SHOCKR 
      GO TO 200                                                          SHOCKR 
   15 IF(J.EQ.JCM) GO TO 200                                             SHOCKR 
      RHOS=(RHOO-RHO)*(1.-EM2)/(EM2O-EM2)+RHO                            SHOCKR 
      CO(I)=C(I)                                                         SHOCKR 
C                                                                        SHOCKR 
C      CALCULATION OF OUTER BOUNDARY C(X) AND SUBSEQUENT SMOOTHING       SHOCKR 
C      AND MAPPING                                                       SHOCKR 
C                                                                        SHOCKR 
      C(I)=(RHOS-B(I)*NS*DY)/(1.-NS*DY)                                  SHOCKR 
   20 CONTINUE                                                           SHOCKR 
      C(1)=C(3)                                                          SHOCKR 
      C(ICP)=C(ICM)                                                      SHOCKR 
      DO 40 KK=1,KS                                                      SHOCKR 
      CM1=C(1)                                                           SHOCKR 
      DO 30 I=2,IC                                                       SHOCKR 
      CM=C(I)                                                            SHOCKR 
      C(I)=.25*(CM1+2.*CM+C(I+1))                                        SHOCKR 
   30 CM1=CM                                                             SHOCKR 
      C(1)=C(3)                                                          SHOCKR 
      C(ICP)=C(ICM)                                                      SHOCKR 
   40 CONTINUE                                                           SHOCKR 
      C(1)=C(3)                                                          SHOCKR 
      C(ICP)=C(ICM)                                                      SHOCKR 
      DO 100 I=2,IC                                                      SHOCKR 
      CPR(I)=(C(I+1)-C(I-1))*.5/DX                                       SHOCKR 
      CSEC(I)=(C(I+1)-2.*C(I)+C(I-1))/(DX*DX)                            SHOCKR 
C                                                                        SHOCKR 
C      INTERPOLATION OF POTENTIAL F AT NEW GRID POINTS                   SHOCKR 
C                                                                        SHOCKR 
      DO 80 J=3,JC                                                       SHOCKR 
      IF(J.GE.JC-NS) GO TO 70                                            SHOCKR 
      RHON=(C(I)-B(I))*Y(J)+B(I)                                         SHOCKR 
      DO 50 JJO=2,JC                                                     SHOCKR 
      JO=JC-JJO+2                                                        SHOCKR 
      RHOP=(CO(I)-B(I))*Y(JO)+B(I)                                       SHOCKR 
      IF(RHOP.LT.RHON) GO TO 60                                          SHOCKR 
      RHOPO=RHOP                                                         SHOCKR 
   50 CONTINUE                                                           SHOCKR 
   60 EP=(RHON-RHOP)/(RHOPO-RHOP)                                        SHOCKR 
      FN(J)=F(I,JO)+EP*(F(I,JO+1)-F(I,JO))                               SHOCKR 
      GO TO 80                                                           SHOCKR 
   70 FN(J)=0.                                                           SHOCKR 
   80 CONTINUE                                                           SHOCKR 
      FN(2)=F(I,2)                                                       SHOCKR 
      DO 90 J=2,JC                                                       SHOCKR 
   90 F(I,J)=FN(J)                                                       SHOCKR 
  100 CONTINUE                                                           SHOCKR 
      DO 110 J=2,JC                                                      SHOCKR 
      F(1,J)=F(3,J)                                                      SHOCKR 
  110 F(ICP,J)=F(ICM,J)                                                  SHOCKR 
C                                                                        SHOCKR 
C                                                                        SHOCKR 
C       RECOMPUTATION OF MAPPING METRIC AND FREESTREAM VELOCITIES AT     SHOCKR 
C       NEW GRID POINTS                                                  SHOCKR 
C                                                                        SHOCKR 
      CALL STRECH                                                        SHOCKR 
      IF(IOUT2.NE.2) WRITE(6,2)                                          SHOCKR 
      IF(IOUT2.NE.2) WRITE(6,3)                                          SHOCKR 
      IF(IOUT2.NE.2) WRITE(6,1)(I,C(I),CPR(I),CSEC(I),I=2,IC)            SHOCKR 
      IF(IOUT2.NE.2) WRITE(6,3)                                          SHOCKR 
    1 FORMAT(I5,3E15.6)                                                  SHOCKR 
    2 FORMAT(1H1//5X,19H NEW SHOCK LOCATION )                            SHOCKR 
    3 FORMAT(/4X,1HI,7X,4HC(I),11X,6HCPR(I),8X,7HCSEC(I) /)              SHOCKR 
    4 FORMAT(//4X,43HREMAP USING INITIAL COMPUTED SHOCK LOCATION /)      SHOCKR 
  200 RETURN                                                             SHOCKR 
      END                                                                SHOCKR 
      SUBROUTINE STRECH                                                  STRECH 
C                                                                        STRECH 
C      MAPPING METRIC AND FREESTREAM VELOCITIES                          STRECH 
C                                                                        STRECH 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /BLK2/ F(60,60),H(60,60),X(115),Y(115),B(115),              BLK2 
     1       BPR(115),BSEC(115),C(115),CPR(115),CSEC(115)                BLK2 
      COMMON /BLK3/ VI(60,60),UI(60,60),WI(60,60)                        BLK3 
      COMMON/MAP/S0,S1,S2,PII,CSCAL                                      MAP
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON/PLO/XXB(120),YYB(120)                                       PLO
      COMMON /FF/ FFS(60,60),COTH(115),SINTH(115),P0,Q0,ELO2             FF 
      COMMON /FOR/AF,FM,ELI(120),DRI(120),XXS(120),YYS(120)              FOR
      COMMON/VELOC/RHOV(120),OMEGV(120),PSIV(120),PSIRV(120),PSITV(120)  VELOC
      COMMON /SARC/ S(115),SPHI(115),SPSI(115),SMAX,XMAX,DYSTR(115)      SARC 
      COMPLEX S0,S1,S2                                                   STRECH 
 1000 FORMAT(///3X,1HI,4X,1HJ,7X,3HRHO,12X,3HTHE,12X,3HPSI,12X,4HOMEG,   STRECH 
     1 12X,1HH,14X,2HUI,13X,2HVI,13X,2HWI/)                              STRECH 
 1001 FORMAT(2I5,8E15.5)                                                 STRECH 
 1004 FORMAT(I5)                                                         STRECH 
 1005 FORMAT(/3X,1HI,10X,3HX/Z,12X,3HY/Z,14X,1HS,11X,5HTHETA,12X,3HPSI,  STRECH 
     1 7X,10H(X/Z)/XMAX,4X,10H(Y/Z)/XMAX,8X,8HDYBP/DZP//)                STRECH 
 1006 FORMAT(1X,I3,8F15.5)                                               STRECH 
 1008 FORMAT(//5X,5HSMAX=,F10.5,11X,5HXMAX=,F10.5,10X,10HSMAX/XMAX=,     STRECH 
     1 F10.5/)                                                           STRECH 
 1010 FORMAT(1H1)                                                        STRECH 
 1012 FORMAT(8F10.6)                                                     STRECH 
 1014 FORMAT(14H LOWER SURFACE )                                         STRECH 
 1016 FORMAT(14H UPPER SURFACE )                                         STRECH 
 1018 FORMAT(32H SPANWISE SECTION FROM COREL JOB ,A8,4X,4HNO. ,I2)       STRECH 
 1020 FORMAT(13HOFFLINE READ ,1HI,I1,3HSEC,1X,A8)                        STRECH 
 1022 FORMAT(//3X,50H MAPPING METRIC AND FREESTREAM VELOCITIES AT GRID   STRECH 
     1 ,6HPOINTS)                                                        STRECH 
 1024 FORMAT(/5X,37HSURFACE ARC LENGTH (S) SLOPE (THETA)                 STRECH 
     1 22H AND CURVATURE (PSI)         )                                 STRECH 
      DATA IQQQQQ /1/                                                    STRECH 
      AF=0.                                                              STRECH 
      P0=REAL(S0)                                                        STRECH 
      Q0=AIMAG(S0)                                                       STRECH 
      ELO2=(P0**2+Q0**2)/4.0                                             STRECH 
      D2X=.5/DX                                                          STRECH 
      D2Y=.5/DY                                                          STRECH 
      ICM=IC-1                                                           STRECH 
      ICP=IC+1                                                           STRECH 
      Y(1)=-Y(3)                                                         STRECH 
      IF(IOUT2.NE.2) WRITE(LOUT,1022)                                    STRECH 
      IF(IOUT2.NE.2) WRITE(LOUT,1000)                                    STRECH 
C                                                                        STRECH 
C      CALCULATION OF MAPPING METRIC H AND FREESTREAM VELOCITIES         STRECH 
C      UI,VI,WI                                                          STRECH 
C                                                                        STRECH 
      DO 60 J=1,JC                                                       STRECH 
      DO 50 I=2,IC                                                       STRECH 
      THE=X(I)                                                           STRECH 
      SINTH(I)=SIN(THE)                                                  STRECH 
      COTH(I)=COS(THE)                                                   STRECH 
      RHO=(C(I)-B(I))*Y(J)+B(I)                                          STRECH 
      CSI=RHO*COTH(I)                                                    STRECH 
      ETA=RHO*SINTH(I)                                                   STRECH 
      CALL RCONF(CSI,ETA,P,Q,HC,SCSI,SETA)                               STRECH 
      OMEG=ATAN2(Q,P)                                                    STRECH 
      P2Q2=SQRT(P*P+Q*Q)                                                 STRECH 
      PSI=PI-2.*ATAN(CSCAL/P2Q2)                                         STRECH 
      HH=SIN(PSI)*HC/P2Q2                                                STRECH 
      FF=SQRT(RHO*(RHO-P0*COTH(I)-Q0*SINTH(I))+ELO2)                     STRECH 
      FFS(I,J)=FF                                                        STRECH 
      H(I,J)=HH/FF                                                       STRECH 
      PSICSI=SCSI/HC                                                     STRECH 
      PSIETA=SETA/HC                                                     STRECH 
      PSIRHO=PSICSI*COTH(I)+PSIETA*SINTH(I)                              STRECH 
      PSITHR=-PSICSI*SINTH(I)+PSIETA*COTH(I)                             STRECH 
      VI(I,J)=SIN(ALP)*(COS(PSI)*SIN(OMEG)*PSIRHO-COS(OMEG)*PSITHR)      STRECH 
     1-COS(ALP)*SIN(PSI)*PSIRHO                                          STRECH 
      UI(I,J)=SIN(ALP)*(COS(PSI)*SIN(OMEG)*PSITHR+COS(OMEG)*PSIRHO)      STRECH 
     1-COS(ALP)*SIN(PSI)*PSITHR                                          STRECH 
      WI(I,J)=SIN(ALP)*SIN(PSI)*SIN(OMEG)+COS(ALP)*COS(PSI)              STRECH 
      IF(J.NE.2) GO TO 46                                                STRECH 
      IF(IOUT2.EQ.2) GO TO 40                                            STRECH 
      WRITE(LOUT,1001) I,J,RHO,THE,PSI,OMEG,HH,UI(I,J),VI(I,J)           STRECH 
     1,WI(I,J)                                                           STRECH 
   40 XXB(I-1)=COS(OMEG)*TAN(PSI)                                        STRECH 
      YYB(I-1)=SIN(OMEG)*TAN(PSI)                                        STRECH 
      RT=1./COS(PSI)                                                     STRECH 
      VIW=COS(ALP)*(COS(PSI)*SIN(OMEG)*PSIRHO-COS(OMEG)*PSITHR)          STRECH 
     1+SIN(ALP)*SIN(PSI)*PSIRHO                                          STRECH 
      UIW=COS(ALP)*(COS(PSI)*SIN(OMEG)*PSITHR+COS(OMEG)*PSIRHO)          STRECH 
C                                                                        STRECH 
C      PARAMETERS USED LATER IN LIFT AND DRAG COEFFICIENT CALCULATION    STRECH 
C                                                                        STRECH 
      EN1=B(I)*VI(I,2)-BPR(I)*UI(I,2)                                    STRECH 
      EN2=B(I)*VIW-BPR(I)*UIW                                            STRECH 
      DUM=RT*RT*HH                                                       STRECH 
      ELI(I)=-EN2*DUM                                                    STRECH 
      DRI(I)=-EN1*DUM                                                    STRECH 
      AFI=SQRT(B(I)**2+BPR(I)**2)*DUM                                    STRECH 
      IF(I.NE.2.AND.I.NE.IC) GO TO 45                                    STRECH 
      AFI=.5*AFI                                                         STRECH 
   45 AF=AF+AFI                                                          STRECH 
   46 IF(J.NE.2) GO TO 50                                                STRECH 
      RHOV(I)=RHO                                                        STRECH 
      OMEGV(I)=OMEG                                                      STRECH 
      PSIV(I)=PSI                                                        STRECH 
      PSIRV(I)=PSIRHO                                                    STRECH 
      PSITV(I)=PSITHR                                                    STRECH 
   50 CONTINUE                                                           STRECH 
      H(1,J)=H(3,J)                                                      STRECH 
      H(ICP,J)=H(ICM,J)                                                  STRECH 
   60 CONTINUE                                                           STRECH 
C                                                                        STRECH 
C      BOUNDARY CONDITION ON INITIAL CONDITIONS                          STRECH 
C                                                                        STRECH 
      DO 70 I=2,IC                                                       STRECH 
      FF=FFS(I,2)                                                        STRECH 
      HH=H(I,2)*FF                                                       STRECH 
      F(I,1)=F(I,3)-(BPR(I)*(F(I+1,2)-F(I-1,2))*D2X+HH*B(I)*(BPR(I)      STRECH 
     1*UI(I,2)-B(I)*VI(I,2)))*(C(I)-B(I))/(D2Y*(B(I)*B(I)+BPR(I)         STRECH 
     2*BPR(I)))                                                          STRECH 
C     H(I,1)=H(I,3)                                                      STRECH 
   70 CONTINUE                                                           STRECH 
      F(1,1)=F(3,1)                                                      STRECH 
      F(ICP,1)=F(ICM,1)                                                  STRECH 
      AF=.5*AF*DX                                                        STRECH 
      FM=2./(GAMMA*EMINF**2)                                             STRECH 
C                                                                        STRECH 
C      GENERATE SPAN SECTION ARC LENGTH ,SLOPE,AND CURVATURE DATA        STRECH 
C                                                                        STRECH 
      WRITE(6,1010)                                                      STRECH 
      IF(IOUT2.NE.2) WRITE(LOUT,1024)                                    STRECH 
      IF(IOUT2.NE.2) WRITE(6,1005)                                       STRECH 
      ICM2=ICM-1                                                         STRECH 
      CALL ARCDRV(2,ICM,XXB,YYB,S,SPHI,SPSI)                             STRECH 
      XMAX=0.0                                                           STRECH 
      IXMAX=0                                                            STRECH 
      DO 76 I=1,ICM                                                      STRECH 
      IF(XXB(I).GT.XMAX) IXMAX=I                                         STRECH 
      IF(XXB(I).GT.XMAX) XMAX=XXB(I)                                     STRECH 
   76 CONTINUE                                                           STRECH 
      DO 80 I=1,ICM                                                      STRECH 
      XXMAX=XXB(I)/XMAX                                                  STRECH 
      YXMAX=YYB(I)/XMAX                                                  STRECH 
      TANARG=PIO2-1.0E-5                                                 STRECH 
      IF(ABS(PIO2-SPHI(I)).GT.1.0E-05) TANARG=SPHI(I)                    STRECH 
      DYSTRM=YYB(I)-XXB(I)*TAN(TANARG)                                   STRECH 
      DYSTRM=DYSTRM-ALP                                                  STRECH 
      DYSTR(I)=DYSTRM                                                    STRECH 
      SPHID=57.2958*SPHI(I)                                              STRECH 
   80 IF(IOUT2.NE.2) WRITE(6,1006) I,XXB(I),YYB(I),S(I),SPHID,SPSI(I),   STRECH 
     1 XXMAX,YXMAX,DYSTRM                                                STRECH 
      IF(IOUT2.NE.2) WRITE(6,1005)                                       STRECH 
      SMAX=S(ICM)                                                        STRECH 
      SXMAX=SMAX/XMAX                                                    STRECH 
      IF(IOUT2.NE.2) WRITE(LOUT,1008) SMAX,XMAX,SXMAX                    STRECH 
C                                                                        STRECH 
      RETURN                                                             STRECH 
      END                                                                STRECH 
C----- DECK A930  ARCDRV SUBROUTINE  A.VACHRIS DATE 10-1-77              ARCDRV 
C----- NUMERICAL DIFFERENTIATION OF A TWO-DIMENSIONAL CURVE              ARCDRV 
C----- ARC-LENGTH PARAMETERIZATION                                       ARCDRV 
C----- CALCULATES LOCAL SLOPE AND CURVATURE                              ARCDRV 
C-----                                   REVISION DATE 3-30-78           ARCDRV 
      SUBROUTINE ARCDRV(MODE,N,X,Y,S,PHI,PSI)                            ARCDRV 
      DIMENSION X(1),Y(1),S(1),PHI(1),PSI(1)                             ARCDRV 
      TWOPI=6.2831853072                                                 ARCDRV 
      PIHALF=TWOPI/4.                                                    ARCDRV 
C-----   CALCULATE ARC LENGTH                                            ARCDRV 
      IF(MODE.GT.-1) CALL ARCLNG(N,X,Y,S)                                ARCDRV 
      IF(MODE.EQ.0) GO TO 900                                            ARCDRV 
C-----   CALCULATE D(X)/D(S)                                             ARCDRV 
      CALL SLOPE(N,S,X,PHI)                                              ARCDRV 
C-----   CALCULATE D(Y)/D(S)                                             ARCDRV 
      CALL SLOPE(N,S,Y,PSI)                                              ARCDRV 
      IF(IABS(MODE).EQ.1) GO TO 900                                      ARCDRV 
C-----   CALCULATE PHI=ATAN2(D(Y)/D(S),D(X)/D(S))                        ARCDRV 
      DO 50 I=1,N                                                        ARCDRV 
   50 PHI(I)=ATAN2(PSI(I),PHI(I))                                        ARCDRV 
C-----  REMOVE DISCONTINUITY IN ATAN2 FUNCTION                           ARCDRV 
      PHINEW=PHI(1)                                                      ARCDRV 
      DO 60 I=2,N                                                        ARCDRV 
      PHIOLD=PHINEW                                                      ARCDRV 
      PHINEW=PHI(I)                                                      ARCDRV 
      DEL=PHINEW-PHIOLD                                                  ARCDRV 
      IF(ABS(DEL).LT.PIHALF) GO TO 60                                    ARCDRV 
      PHINEW=PHINEW-TWOPI*SIGN(1.,DEL)                                   ARCDRV 
      PHI(I)=PHINEW                                                      ARCDRV 
   60 CONTINUE                                                           ARCDRV 
C-----    CALCULATE PSI=D(PHI)/D(S)                                      ARCDRV 
      CALL SLOPE(N,S,PHI,PSI)                                            ARCDRV 
  900 RETURN                                                             ARCDRV 
      END                                                                ARCDRV 
C----- DECK A931 ARCLNG SUBROUTINE A.VACHRIS DATE 10-1-77                ARCLNG 
C----- CALCULATES ARC-LENGTH FOR TWO-DIMENSIONAL CURVE                   ARCLNG 
C-----                                      REVISION DATE 4-7-78         ARCLNG 
      SUBROUTINE ARCLNG(N,X,Y,SARC)                                      ARCLNG 
      DIMENSION X(1),Y(1),SARC(1)                                        ARCLNG 
      ATRI(XA,YA,XB,YB,XC,YC)=.5*((XB-XA)*(YC-YB)+(XB-XC)*(YB-YA))       ARCLNG 
      XLNGTH(XA,YA,XB,YB)=SQRT((XB-XA)*(XB-XA)+(YB-YA)*(YB-YA))          ARCLNG 
      IF(N.LE.0) GO TO 999                                               ARCLNG 
      SSUM=0.D0                                                          ARCLNG 
      NM=N-1                                                             ARCLNG 
      DO 110 I=1,N                                                       ARCLNG 
  110 SARC(I)=0.                                                         ARCLNG 
      BLNG=XLNGTH(X(1),Y(1),X(2),Y(2))                                   ARCLNG 
      IF(N.GT.2) GO TO 120                                               ARCLNG 
      SARC(2)=BLNG                                                       ARCLNG 
      GO TO 999                                                          ARCLNG 
C----- CALCULATE LEFT AND RIGHT ESTIMATES OF ARC LENGTH                  ARCLNG 
  120 DO 130 J=2,NM                                                      ARCLNG 
      I=J-1                                                              ARCLNG 
      K=J+1                                                              ARCLNG 
      ALNG=BLNG                                                          ARCLNG 
      BLNG=XLNGTH(X(J),Y(J),X(K),Y(K))                                   ARCLNG 
      CLNG=XLNGTH(X(I),Y(I),X(K),Y(K))                                   ARCLNG 
      AARC=ALNG                                                          ARCLNG 
      BARC=BLNG                                                          ARCLNG 
      AREA=ABS(ATRI(X(I),Y(I),X(J),Y(J),X(K),Y(K)))                      ARCLNG 
C-----  TEST FOR THREE POINTS CO-LINEAR                                  ARCLNG 
      IF(AREA.EQ.0.) GO TO 140                                           ARCLNG 
      RADIUS=ALNG*BLNG*CLNG/(4.*AREA)                                    ARCLNG 
      BARC=2.*RADIUS*ASIN(.5*BLNG/RADIUS)                                ARCLNG 
      AARC=2.*RADIUS*ASIN(.5*ALNG/RADIUS)                                ARCLNG 
  140 CONTINUE                                                           ARCLNG 
      SARC(J)=SARC(J)+AARC                                               ARCLNG 
      SARC(K)=SARC(K)+BARC                                               ARCLNG 
  130 CONTINUE                                                           ARCLNG 
      IF(N.GT.3) GO TO 150                                               ARCLNG 
      SARC(3)=SARC(2)+0.D0+SARC(3)                                       ARCLNG 
      GO TO 999                                                          ARCLNG 
C----- AVERAGE LEFT AND RIGHT ESTIMATES                                  ARCLNG 
  150 DO 160 I=3,NM                                                      ARCLNG 
  160 SARC(I)=.5*SARC(I)                                                 ARCLNG 
C-----  SUM UP RUNNING ARC LENGTH                                        ARCLNG 
      SSUM=SSUM+SARC(2)                                                  ARCLNG 
      DO 170 I=3,NM                                                      ARCLNG 
      SSUM=SSUM+SARC(I)                                                  ARCLNG 
  170 SARC(I)=SSUM                                                       ARCLNG 
      SARC(N)=SSUM+SARC(N)                                               ARCLNG 
  999 RETURN                                                             ARCLNG 
      END                                                                ARCLNG 
C----- DECK A943 SLOPE SUBROUTINE AL VACHRIS DATE 10-1-77                SLOPE
C----- NUMERICAL DIFFERENTIATION OF A TABULAR FUNCTION                   SLOPE
C----- RUNNING POINT VERSION                                             SLOPE
C.....                                     REVISION DATE 10-1-77         SLOPE
      SUBROUTINE SLOPE(N,X,Y,T )                                         SLOPE
      DIMENSION X(1),Y(1),T(1),TT(5),FLAG(5)                             SLOPE
      DIMENSION XX(8),YY(8)                                              SLOPE
      FLINE(XL,YL,XR,YR,X)=(YL*(XR-X)+YR*(X-XL))/(XR-XL)                 SLOPE
      NABS=IABS(N)                                                       SLOPE
      DO 10 I=1,3                                                        SLOPE
      XX(I+1)=X(I)                                                       SLOPE
      YY(I+1)=Y(I)                                                       SLOPE
      K=NABS-I+1                                                         SLOPE
      XX(I+5)=X(K)                                                       SLOPE
      YY(I+5)=Y(K)                                                       SLOPE
   10 CONTINUE                                                           SLOPE
      DO 80 K=1,5,4                                                      SLOPE
      XL=XX(K+2)-XX(K+1)                                                 SLOPE
      YL=YY(K+2)-YY(K+1)                                                 SLOPE
      XR=XX(K+3)-XX(K+2)                                                 SLOPE
      YR=YY(K+3)-YY(K+2)                                                 SLOPE
      XC=XX(K+3)-XX(K+1)                                                 SLOPE
      YC=YY(K+3)-YY(K+1)                                                 SLOPE
      XMONO=XR*XL                                                        SLOPE
      YMONO=YR*YL                                                        SLOPE
      IF(XMONO.GT.0..AND.YMONO.GT.0.) GO TO 50                           SLOPE
      IF(XMONO.GT.0.) GO TO 60                                           SLOPE
      IF(YMONO.GT.0.) GO TO 70                                           SLOPE
      IF(XL.GT.0..AND.YL.GT.0.) GO TO 30                                 SLOPE
      IF(N.LT.0.AND.ABS(YC).GT.ABS(XC)) GO TO 20                         SLOPE
      XX(K)=XX(K+1)-XC                                                   SLOPE
      YY(K)=FLINE(XX(K+1),YY(K+1),XX(K+3),YY(K+3),XX(K))                 SLOPE
      GO TO 80                                                           SLOPE
   20 YY(K)=YY(K+1)-YC                                                   SLOPE
      XX(K)=FLINE(YY(K+1),XX(K+1),YY(K+3),XX(K+3),YY(K))                 SLOPE
      GO TO 80                                                           SLOPE
   30 IF(N.LT.0.AND.ABS(YC).GT.ABS(XC)) GO TO 40                         SLOPE
      XX(K)=XX(K+1)-XL                                                   SLOPE
      YY(K)=FLINE(XX(K+1),YY(K+1),XX(K+2),YY(K+2),XX(K))                 SLOPE
      GO TO 80                                                           SLOPE
   40 YY(K)=YY(K+1)-YL                                                   SLOPE
      XX(K)=FLINE(YY(K+1),XX(K+1),YY(K+2),XX(K+2),YY(K))                 SLOPE
      GO TO 80                                                           SLOPE
   50 IF(N.LT.0.AND.ABS(YC).GT.ABS(XC)) GO TO 70                         SLOPE
   60 XX(K)=XX(K+1)-XR                                                   SLOPE
      YL=FLINE(XX(K+1),YY(K+1),XX(K+2),YY(K+2),XX(K))                    SLOPE
      YR=FLINE(XX(K+2),YY(K+2),XX(K+3),YY(K+3),XX(K))                    SLOPE
      YY(K)=FLINE(XX(K+1),YL,XX(K+3),YR,XX(K))                           SLOPE
      GO TO 80                                                           SLOPE
   70 YY(K)=YY(K+1)-YR                                                   SLOPE
      XL=FLINE(YY(K+1),XX(K+1),YY(K+2),XX(K+2),YY(K))                    SLOPE
      XR=FLINE(YY(K+2),XX(K+2),YY(K+3),XX(K+3),YY(K))                    SLOPE
      XX(K)=FLINE(YY(K+1),XL,YY(K+3),XR,YY(K))                           SLOPE
   80 CONTINUE                                                           SLOPE
      X(N+1)=XX(5)                                                       SLOPE
      Y(N+1)=YY(5)                                                       SLOPE
      XJ=XX(1)                                                           SLOPE
      YJ=YY(1)                                                           SLOPE
      XK=X(1)                                                            SLOPE
      YK=Y(1)                                                            SLOPE
      XR=XK-XJ                                                           SLOPE
      YR=YK-YJ                                                           SLOPE
      DO 1000 J=1,NABS                                                   SLOPE
      XI=XJ                                                              SLOPE
      XL=XR                                                              SLOPE
       YL=YR                                                             SLOPE
      YI=YJ                                                              SLOPE
      XJ=XK                                                              SLOPE
      YJ=YK                                                              SLOPE
      K=J+1                                                              SLOPE
      XK=X(K)                                                            SLOPE
      YK=Y(K)                                                            SLOPE
      XR=XK-XJ                                                           SLOPE
      YR=YK-YJ                                                           SLOPE
      XC=XK-XI                                                           SLOPE
      YC=YK-YI                                                           SLOPE
      SC=SIGN(1000.,YC)                                                  SLOPE
      IF(XC.NE.0.) SC=YC/XC                                              SLOPE
      T(J)=SC                                                            SLOPE
      IF(XR.EQ.0..AND.XL.EQ.0.) GO TO 1000                               SLOPE
      IF(XR.EQ.0..AND.YR.EQ.0.) GO TO 1000                               SLOPE
      IF(XL.EQ.0..AND.YL.EQ.0.) GO TO 1000                               SLOPE
      IF(XR.EQ.0.) GO TO 1110                                            SLOPE
      IF(XL.EQ.0.) GO TO 1120                                            SLOPE
      IF(XC.EQ.0.) GO TO 1130                                            SLOPE
      DO 100 I=1,5                                                       SLOPE
      TT(I)=0.                                                           SLOPE
      FLAG(I)=1.                                                         SLOPE
  100 CONTINUE                                                           SLOPE
      XMONO=XR*XL                                                        SLOPE
      YMONO=YR*YL                                                        SLOPE
      IF(XMONO.GT.0.) GO TO 200                                          SLOPE
      IF(YMONO.LT.0.) GO TO 1000                                         SLOPE
      FLAG(1)=0.                                                         SLOPE
      FLAG(3)=0.                                                         SLOPE
      GO TO 300                                                          SLOPE
  200 IF(YMONO.GT.0.) GO TO 300                                          SLOPE
      FLAG(2)=0.                                                         SLOPE
      FLAG(3)=0.                                                         SLOPE
  300 SL=YL/XL                                                           SLOPE
      SR=YR/XR                                                           SLOPE
      IF(ABS(SR-SL).LT.1.E-4) GO TO 1000                                 SLOPE
      SSRSL=SR+SL                                                        SLOPE
      PSRSL=SR*SL                                                        SLOPE
      SMIN=AMIN1(SR,SL)                                                  SLOPE
      SMAX=AMAX1(SR,SL)                                                  SLOPE
C                   FIT  ONE                 X*X =A*X    +  B*Y    +  C  SLOPE
      IF(FLAG(1).EQ.0.) GO TO 1020                                       SLOPE
      TT(1)=SSRSL-SC                                                     SLOPE
C                   FIT  TWO                 Y*Y =A*X    +  B*Y    +  C  SLOPE
 1020 CONTINUE                                                           SLOPE
      IF(FLAG(2).EQ.0.) GO TO 1030                                       SLOPE
      DENOM=SSRSL*SC-PSRSL                                               SLOPE
      IF(DENOM.NE.0.) GO TO 1021                                         SLOPE
      FLAG(2)=0.                                                         SLOPE
      GO TO 1030                                                         SLOPE
 1021 TT(2)=PSRSL*SC/DENOM                                               SLOPE
C                   FIT  THREE               X*Y =A*X    +  B*Y    +  C  SLOPE
 1030 CONTINUE                                                           SLOPE
      IF(FLAG(3).EQ.0.) GO TO 1040                                       SLOPE
      DENOM=SC                                                           SLOPE
      IF(DENOM.NE.0.) GO TO 1031                                         SLOPE
      FLAG(3)=0.                                                         SLOPE
      GO TO 1040                                                         SLOPE
 1031 TT(3)=PSRSL/DENOM                                                  SLOPE
C                   FIT  FOUR      X*X    +  Y*Y =A*X    +  B*Y    +  C  SLOPE
 1040 CONTINUE                                                           SLOPE
      DENOM=SSRSL*SC+1.-PSRSL                                            SLOPE
      IF(DENOM.NE.0.) GO TO 1041                                         SLOPE
      FLAG(4)=0.                                                         SLOPE
      GO TO 1050                                                         SLOPE
 1041 TT(4)=(SSRSL+SC*(PSRSL-1. ))/DENOM                                 SLOPE
C                   FIT  FIVE      X*X    -  Y*Y =A*X    +  B*Y    +  C  SLOPE
 1050 CONTINUE                                                           SLOPE
      DENOM=1.+PSRSL-SC*SSRSL                                            SLOPE
      IF(DENOM.NE.0.) GO TO 1051                                         SLOPE
      FLAG(5)=0.                                                         SLOPE
      GO TO 1060                                                         SLOPE
 1051 TT(5)=(SSRSL-SC*(1.+PSRSL))/DENOM                                  SLOPE
       GO TO 1060                                                        SLOPE
 1110 T(J)=SL*SC/(SC-SL)                                                 SLOPE
       GO TO 1000                                                        SLOPE
 1120 T(J)=SR*SC/(SC-SR)                                                 SLOPE
       GO TO 1000                                                        SLOPE
 1130 T(J)=SIGN(1000.,SR*SL)                                             SLOPE
      IF((SL+SR).NE.0.) T(J)=SR*SL/(SL+SR)                               SLOPE
      GO TO 1000                                                         SLOPE
 1060 CONTINUE                                                           SLOPE
      SUM=0.                                                             SLOPE
      TSUM=0.                                                            SLOPE
      IF(XMONO.LT.0.) GO TO 1210                                         SLOPE
      DO 1200 I=1,5                                                      SLOPE
      IF(FLAG(I).EQ.0.) GO TO 1200                                       SLOPE
      IF(TT(I).LT.SMIN)  GO TO 1200                                      SLOPE
      IF(TT(I).GT.SMAX)  GO TO 1200                                      SLOPE
      TSUM=TSUM+TT(I)                                                    SLOPE
      SUM=SUM+1.                                                         SLOPE
 1200 CONTINUE                                                           SLOPE
      GO TO 1400                                                         SLOPE
 1210 DO 1300 I=1,5                                                      SLOPE
      IF(FLAG(I).EQ.0.) GO TO 1300                                       SLOPE
      IF(TT(I).LT.SMAX) GO TO 1300                                       SLOPE
      IF(TT(I).GT.SMIN) GO TO 1300                                       SLOPE
      TSUM=TSUM+TT(I)                                                    SLOPE
      SUM=SUM+1.                                                         SLOPE
 1300 CONTINUE                                                           SLOPE
 1400 IF(SUM.EQ.0.) GO TO 1000                                           SLOPE
      TSUM=TSUM/SUM                                                      SLOPE
       T(J)=TSUM                                                         SLOPE
 1000 CONTINUE                                                           SLOPE
      RETURN                                                             SLOPE
      END                                                                SLOPE
      SUBROUTINE OUTP(K)                                                 OUTP 
C                                                                        OUTP 
C      OUTPUT OF RESULTS                                                 OUTP 
C                                                                        OUTP 
      REAL MCMIN                                                         OUTP 
      COMMON /NEWCOM/ W(3),DMIN(3),KMAX(3),KREF                          NEWCOM 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /BLK2/ F(60,60),H(60,60),X(115),Y(115),B(115),              BLK2 
     1       BPR(115),BSEC(115),C(115),CPR(115),CSEC(115)                BLK2 
      COMMON /BLK3/ VI(60,60),UI(60,60),WI(60,60)                        BLK3 
      COMMON/MAP/S0,S1,S2,PII,CSCAL                                      MAP
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      COMMON/PLO/XXB(120),YYB(120)                                       PLO
      COMMON/TITL/TI1(80),TI2(80)                                        TITL 
      COMMON /FOR/AF,FM,ELI(120),DRI(120),XXS(120),YYS(120)              FOR
      COMMON /LDRG/ CCLCA(80),ETASPN(80),ISPNXX,EDRAG                    LDRG 
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON/VELOC/RHOV(120),OMEGV(120),PSIV(120),PSIRV(120),PSITV(120)  VELOC
      COMMON /SARC/ S(115),SPHI(115),SPSI(115),SMAX,XMAX,DYSTR(115)      SARC 
      COMMON /DESGN/ CPP(120),EMST(120),CPPEX(120),XCP(120),             DESGN
     1 NCP,IDESIN,KDES,KDESMX,YYB1(120),CPP1(120),SUMDCP(50),            DESGN
     2 STARTC,BETAM(120),NSTART,WDES                                     DESGN
      COMMON /VELCPT/ UCART(115),VCART(115),WCART(115),UCYL(115),        VELCPT 
     1                VCYL(115) ,WCYL(115) ,USHER(115),VSHER(115),       VELCPT 
     2                WSHER(115),USURF(115),VSURF(115),WSURF(115)        VELCPT 
      COMMON /FF/ FFS(60,60),COTH(115),SINTH(115),P0,Q0,ELO2             FF 
      COMMON /WNGTE/ XROOT,YWNGRT,ZROOT                                  WNGTE
      COMPLEX S0,S1,S2                                                   OUTP 
      DIMENSION CPU(80),CPL(80),DELTCP(80),XDUM(80),CPDUM(80),           OUTP 
     1 XXI(115),YYI(115),CPNC(115),                                      OUTP 
     2 XI1(115),XI2(115),UV(115),VV(115),WV(115),DPSIDO(115),EMM(115)    OUTP 
 1000 FORMAT(///4X,1HI,4X,1HJ,7X,3HRHO,12X,3HTHE,13X,1HF,14X,1HU,14X,    OUTP 
     1 1HV,14X,2HMC,13X,1HM,14X,2HCP/)                                   OUTP 
 1001 FORMAT(2I5,8E15.5)                                                 OUTP 
 1002 FORMAT(4E18.6)                                                     MOD3 
 1003 FORMAT(I5)                                                         OUTP 
 1004 FORMAT(//10X,3HCL=,F8.5//10X,3HCD=,F8.5//10X,3HCN=,F8.5,10X,3HCA=  OUTP 
     1,F8.5//10X,3HA =,F7.4//10X,6HEMINF=,F7.4,8X,4HALP=,                OUTP 
     2 F7.4//10X,A8/)                                                    OUTP 
 1005 FORMAT(1X,3E20.7)                                                  OUTP 
 1006 FORMAT(2X,1HI,4X,6HX/XMAX,3X,6HY/XMAX,3X,3HPSI,4X,4HOMEG,          MOD3 
     1   6X,2HCP,5X,2HMC,8X,1HU,7X,1HV,7X,1HW,6X,4HBETA,4X,              OUTP 
     2 2HVS,6X,2HWS,6X,2HUC,6X,2HVC,6X,2HWC,3X,5HDELTA/)                 OUTP 
 1007 FORMAT(I4,2F8.4,2F8.2,5F8.4,3F8.2,3F8.4,F8.2)                      MOD3 
 1008 FORMAT(1H1)                                                        OUTP 
 1010 FORMAT(/4X,1HI,6X,2HXX,8X,2HYY,9X,1HZ,9X,1HR,8X,3HAA1,7X,3HAA2,7X, OUTP 
     1 5HTHETA,6X,2HCS,8X,2HDZ,6X,4HDSBL,6X,3HSBL,8X,2HQE/)              OUTP 
 1012 FORMAT(1H1/5X,7HIMCMIN=,I3,10X,                                    MOD4 
     2 6HMCMIN=,F10.5)                                                   OUTP 
 1014 FORMAT(2X,I3,12F10.5)                                              OUTP 
 1016 FORMAT(1H1)                                                        OUTP 
 1018 FORMAT(/4X,1HI,6X,1HS,7X,5HPSIBD,5X,5HOMEG,2X,11HDPSIB/DOMEG,      OUTP 
     1 4X,2HI2,7X,2HI2,8X,4HUCYL,6X,4HVCYL,6X,4HWCYL,3X,8HDYBP/DZP,      OUTP 
     2 2X,13HCP*(DYBP/DZP)/)                                             OUTP 
 1020 FORMAT(/9X,1HI,4X,6HETASPN,6X,3HCPU,7X,3HCPL,4X,7HDELTACP,         OUTP 
     1 4X,6HDCPLIN,4X,6HCCL/CA/)                                         OUTP 
 1022 FORMAT(5X,I5,6F10.4)                                               OUTP 
 1024 FORMAT(//10X,21HCN (FROM DELTA CP ) =,F10.4,10X,                   OUTP 
     1 21HCN (FROM SPANLOAD) =,F10.4)                                    OUTP 
 1028 FORMAT(/9X,8H SPAN E=,F8.4/)                                       OUTP 
 1030 FORMAT(/9X,13H TOTAL ANGLE=,F10.4/)                                OUTP 
 1032 FORMAT(80A1)                                                       OUTP 
 1034 FORMAT(8F10.6)                                                     OUTP 
 1036 FORMAT(1H1/5X,13HBASIC RESULTS  /)                                 OUTP 
 1038 FORMAT(/5X,16HSURFACE RESULTS /)                                   OUTP 
 1040 FORMAT(/5X,20HMORE SURFACE RESULTS /)                              OUTP 
 1042 FORMAT(/5X,21HCROSSFLOW SONIC LINE //5X,                           OUTP 
     1 17HNUMBER OF POINTS 1X,I2//                                       OUTP 
     2 7X,1HJ,8X,3HXXI,8X,3HYYI /)                                       OUTP 
 1044 FORMAT(5X,I3,2F12.5)                                               OUTP 
 1046 FORMAT(/5X,48HDELTA CP , FLAT PLATE LINEAR DCP , AND SPANLOAD   ,  OUTP 
     1 13HDISTRIBUTION   /)                                              OUTP 
  402 FORMAT(1H1//10X,38HPURE CONICAL FORCE COEFFICIENT RESULTS //)      OUTP 
  404 FORMAT(/10X,36HDELTA CP FROM NON CONICAL CORRECTION   /)           OUTP 
  406 FORMAT(/9X,1HI,4X,6HETASPN,6X,3HCPU,7X,3HCPL,4X,7HDELTACP/)        OUTP 
  408 FORMAT(/10X,25HNON-CONICAL FORCE RESULTS //10X,3HCN=,F10.4//)      OUTP 
      ICM=IC-1                                                           OUTP 
      JCM=JC-1                                                           OUTP 
      GB=-GAMMA/(GAMMA-1.)                                               OUTP 
      C1=2./(GAMMA*EMINF*EMINF)                                          OUTP 
      C2=(A02*EMINF*EMINF)**(-GB)                                        OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,1036)                                    OUTP 
      DO 20 J=2,JCM                                                      OUTP 
      IF(IOUT.EQ.1.AND.J.GT.2) GO TO 3                                   OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,1000)                                    OUTP 
    3 CONTINUE                                                           OUTP 
      DO 20 I=2,IC                                                       OUTP 
      FY=F(I,J+1)-F(I,J-1)                                               OUTP 
      FX=F(I+1,J)-F(I-1,J)                                               OUTP 
      YRHO=1./(C(I)-B(I))                                                OUTP 
      YTH=-(BPR(I)+Y(J)*(CPR(I)-BPR(I)))*YRHO                            OUTP 
      RHO1=YRHO/(Y(J)+B(I)*YRHO)                                         OUTP 
      RHO=1.0/RHO1                                                       OUTP 
      FF=FFS(I,J)                                                        OUTP 
      HH=H(I,J)*FF                                                       OUTP 
      VS=YRHO*FY/(2.*DY*HH)                                              OUTP 
      US=(FX*.5/DX+YTH*FY*.5/DY)*RHO1/HH                                 OUTP 
      V=VS+VI(I,J)                                                       OUTP 
      U=US+UI(I,J)                                                       OUTP 
      WL=F(I,J)+WI(I,J)                                                  OUTP 
      IF(J.EQ.2) UV(I)=U                                                 OUTP 
      IF(J.EQ.2) VV(I)=V                                                 OUTP 
      IF(J.EQ.2) WV(I)=WL                                                OUTP 
      Q2C=U*U+V*V                                                        OUTP 
      Q2=Q2C+WL*WL                                                       OUTP 
      A2=-GA*Q2+A02                                                      OUTP 
      EM2=Q2/ABS(A2)                                                     OUTP 
      EM=SQRT(EM2)                                                       OUTP 
      IF(J.EQ.2) EMST(I-1)=EM                                            OUTP 
      EMC=SQRT(Q2C/AMAX1(0.1E-04,A2))                                    OUTP 
      CP=C1*(C2*(1.+GA*EM2)**GB-1.)                                      OUTP 
      IF(A2.LT.0.0) CP=-C1                                               OUTP 
      RHO=1./RHO1                                                        OUTP 
      IF(IOUT.EQ.1.AND.J.GT.2) GO TO 4                                   OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,1001) I,J,RHO,X(I),F(I,J),U,V,EMC,EM,CP  OUTP 
    4 CONTINUE                                                           OUTP 
      IF(J.NE.2) GO TO 5                                                 OUTP 
      CPP(I-1)=CP                                                        OUTP 
      EMM(I-1)=EMC                                                       OUTP 
    5 UI(I,J)=EMC                                                        OUTP 
   10 CONTINUE                                                           OUTP 
   20 CONTINUE                                                           OUTP 
C                                                                        OUTP 
      XMAX=0.0                                                           OUTP 
      DO 190 I=2,IC                                                      OUTP 
      IF(XXB(I-1).GT.XMAX) IXMAX=I                                       OUTP 
      IF(XXB(I-1).GT.XMAX) XMAX=XXB(I-1)                                 OUTP 
  190 CONTINUE                                                           OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      MCMIN=5.0                                                          OUTP 
      IMCMIN=0                                                           OUTP 
      IMCM1=6                                                            OUTP 
      IMCM2=IC-4                                                         OUTP 
      DO 195 I=IMCM1,IMCM2                                               OUTP 
      IF(EMM(I-1).LT.MCMIN) IMCMIN=I                                     OUTP 
      IF(EMM(I-1).LT.MCMIN) MCMIN=EMM(I-1)                               OUTP 
  195 CONTINUE                                                           OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      WRITE(LOUT,1008)                                                   OUTP 
      WRITE(LOUT,1038)                                                   OUTP 
      WRITE(LOUT,1006)                                                   OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      DO 200 I=2,IC                                                      OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      COEF1=1.0                                                          OUTP 
      RHO=RHOV(I)                                                        OUTP 
      OMEG=OMEGV(I)                                                      OUTP 
      PSI=PSIV(I)                                                        OUTP 
      PSIRHO=PSIRV(I)                                                    OUTP 
      PSITHR=PSITV(I)                                                    OUTP 
C                                                                        OUTP 
      A11=COEF1*(COS(PSI)*COS(OMEG)*PSIRHO+SIN(OMEG)*PSITHR)             OUTP 
      A21=COEF1*(COS(PSI)*SIN(OMEG)*PSIRHO-COS(OMEG)*PSITHR)             OUTP 
      A13=SIN(PSI)*COS(OMEG)                                             OUTP 
      A12=COEF1*(COS(PSI)*COS(OMEG)*PSITHR-SIN(OMEG)*PSIRHO)             OUTP 
      A22=COEF1*(COS(PSI)*SIN(OMEG)*PSITHR+COS(OMEG)*PSIRHO)             OUTP 
      A23=SIN(PSI)*SIN(OMEG)                                             OUTP 
      A31=-COEF1*SIN(PSI)*PSIRHO                                         OUTP 
      A32=-COEF1*SIN(PSI)*PSITHR                                         OUTP 
      A33=COS(PSI)                                                       OUTP 
C                                                                        OUTP 
      UC=A11*VV(I)+A12*UV(I)+A13*WV(I)                                   OUTP 
      VC=A21*VV(I)+A22*UV(I)+A23*WV(I)                                   OUTP 
      WC=A31*VV(I)+A32*UV(I)+A33*WV(I)                                   OUTP 
C                                                                        OUTP 
      US=UC*SIN(PSI)*COS(OMEG)+VC*SIN(PSI)*SIN(OMEG)+WC*COS(PSI)         OUTP 
      VS=UC*COS(PSI)*COS(OMEG)+VC*COS(PSI)*SIN(OMEG)-WC*SIN(PSI)         OUTP 
      WS=-UC*SIN(OMEG)+VC*COS(OMEG)                                      OUTP 
C                                                                        OUTP 
      DELTA=0.0                                                          OUTP 
      DELTA1=0.0                                                         MOD3 
      DELTA2=0.0                                                         MOD3 
      IF(I.EQ.2.OR.I.EQ.IC) GO TO 198                                    OUTP 
      IF(WS.EQ.0.0) GO TO 198                                            MOD3 
C                                                                        MOD3 
      DELTA1=SPHI(I-1)-OMEG-PI/2.0                                       MOD3 
      VI1=VS*COS(DELTA1)+WS*SIN(DELTA1)                                  MOD3 
      WI1=-VS*SIN(DELTA1)+WS*COS(DELTA1)                                 MOD3 
      IF(VI1.EQ.0.0) DELTA=DELTA1                                        MOD3 
      IF(VI1.EQ.0.0) GO TO 198                                           MOD3 
      DELTA2=ATAN(-VI1/WI1)                                              MOD3 
      DELTA=DELTA1+DELTA2                                                MOD3 
C                                                                        MOD3 
  198 CONTINUE                                                           OUTP 
      DPSIDO(I)=SIN(PSI)*TAN(DELTA)                                      OUTP 
C                                                                        OUTP 
      U=US                                                               OUTP 
      V=COS(DELTA)*VS+SIN(DELTA)*WS                                      OUTP 
      WL=-SIN(DELTA)*VS+COS(DELTA)*WS                                    OUTP 
      BETA=ATAN(WL/U)                                                    OUTP 
      BETAM(I)=BETA                                                      OUTP 
C                                                                        OUTP 
      UCART(I)=UC                                                        OUTP 
      VCART(I)=VC                                                        OUTP 
      WCART(I)=WC                                                        OUTP 
C                                                                        OUTP 
      UCYL(I)=UC*COS(OMEG)+VC*SIN(OMEG)                                  OUTP 
      VCYL(I)=-UC*SIN(OMEG)+VC*COS(OMEG)                                 OUTP 
      WCYL(I)=WC                                                         OUTP 
C                                                                        OUTP 
      USHER(I)=US                                                        OUTP 
      VSHER(I)=VS                                                        OUTP 
      WSHER(I)=WS                                                        OUTP 
C                                                                        OUTP 
      USURF(I)=U                                                         OUTP 
      VSURF(I)=V                                                         OUTP 
      WSURF(I)=WL                                                        OUTP 
C                                                                        OUTP 
      DELTA=57.2958*DELTA                                                OUTP 
      BETA=57.2958*BETA                                                  OUTP 
      PSID=PSI*57.29577951                                               OUTP 
      OMEGD=OMEG*57.29577951                                             OUTP 
      DELTA1=DELTA1*57.29577951                                          MOD3 
      DELTA2=DELTA2*57.29577951                                          MOD3 
      XXBAZ=XXB(I-1)/XMAX                                                OUTP 
      YYBAZ=YYB(I-1)/XMAX                                                OUTP 
  200 WRITE(LOUT,1007)I,XXBAZ,YYBAZ,PSID,OMEGD,CPP(I-1),EMM(I-1),U       OUTP 
     1 ,V,WL,BETA,DELTA1,DELTA2,UC,VC,WC,DELTA                           MOD3 
      WRITE(LOUT,1006)                                                   OUTP 
C                                                                        OUTP 
      DO 230 I=2,IC                                                      OUTP 
      OMEG=OMEGV(I)                                                      OUTP 
      XI1(I)=SIN(OMEG)*TAN(PSIV(I))-DPSIDO(I)*COS(OMEG)/COS(PSIV(I))**2  OUTP 
      XI2(I)=TAN(PSIV(I))**2                                             OUTP 
      PSID=PSIV(I)*57.29577951                                           OUTP 
      OMEGD=OMEG*57.29577951                                             OUTP 
      DYSTRM=DYSTR(I-1)                                                  OUTP 
      CPDYST=CPP(I-1)*DYSTRM                                             OUTP 
      DPSIDO(I)=DPSIDO(I)*57.2958                                        OUTP 
      IF(IOUT2.EQ.2) GO TO 230                                           OUTP 
  230 CONTINUE                                                           OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
C      TRACK STREAMLINES                                                 OUTP 
C                                                                        OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,1012) IMCMIN,MCMIN                       OUTP 
      Z=1.0                                                              OUTP 
      R=SQRT(XXB(IMCMIN-1)**2+YYB(IMCMIN-1)**2+Z**2)                     OUTP 
      SBL=0.0                                                            OUTP 
      THETAS=0.0                                                         OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      III=IMCMIN+1                                                       OUTP 
      DO 300 I=III,IC                                                    OUTP 
      ZM1=Z                                                              OUTP 
C                                                                        OUTP 
      RRIM12=1.0+XXB(I-1)**2+YYB(I-1)**2                                 OUTP 
      RRIM22=1.0+XXB(I-2)**2+YYB(I-2)**2                                 OUTP 
C                                                                        OUTP 
      RRIM1=SQRT(RRIM12)                                                 OUTP 
      RRIM2=SQRT(RRIM22)                                                 OUTP 
C                                                                        OUTP 
      THETA=ACOS((XXB(I-1)*XXB(I-2)+YYB(I-1)*YYB(I-2)+1.0)/              OUTP 
     1       (RRIM1*RRIM2))                                              OUTP 
C                                                                        OUTP 
      RM12=(Z*XXB(I-2))**2+(Z*YYB(I-2))**2+Z*Z                           OUTP 
      RM1=SQRT(RM12)                                                     OUTP 
      RM2=(Z*XXB(I-1))**2+(Z*YYB(I-1))**2+Z*Z                            OUTP 
      RM=SQRT(RM2)                                                       OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      CS=SQRT(RM*RM+RM1**2-2.0*RM*RM1*COS(THETA))                        OUTP 
      A=0.5*RM*RM1*SIN(THETA)                                            OUTP 
      HH=2.0*A/CS                                                        OUTP 
C                                                                        OUTP 
C     AVERAGE BETA COULD ALSO BE USED                                    OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      BETA=ATAN(WSURF(I-1)/USURF(I-1))                                   OUTP 
      IF(ABS(BETA).LT.1.E-04.AND.I.NE.III) GO TO 310                     OUTP 
      IF(BETA.LT.1.E-4) BETA = 0.075                                     OUTP 
C                                                                        OUTP 
      ARG1=HH/RM1                                                        OUTP 
      ARG=HH/RM                                                          OUTP 
      IF(ABS(ARG1).GT.1.0) ARG1=ABS(ARG1)/ARG1                           OUTP 
      IF(ABS(ARG).GT.1.0) ARG=ABS(ARG)/ARG                               OUTP 
      AA1=ACOS(ARG1)                                                     OUTP 
      AA2=ACOS(ARG)                                                      OUTP 
C                                                                        OUTP 
      DELM1=PI/2.0-AA1                                                   OUTP 
      DELM=PI-(THETA+DELM1)                                              OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      CCC=PI-(DELM1+BETA)                                                OUTP 
      BBB=PI-DELM                                                        OUTP 
      AAA=PI-(BBB+CCC)                                                   OUTP 
C                                                                        OUTP 
      ADS=CS                                                             OUTP 
      BDS=ADS*SIN(BBB)/SIN(AAA)                                          OUTP 
      CDS=ADS*SIN(CCC)/SIN(AAA)                                          OUTP 
C                                                                        OUTP 
      DSBL=BDS                                                           OUTP 
      RDR=CDS                                                            OUTP 
C                                                                        OUTP 
      R=Z*SQRT(1.0+XXB(I-1)**2+YYB(I-1)**2)                              OUTP 
      R=R+RDR                                                            OUTP 
      ZNEW2=R**2/(1.0+XXB(I-1)**2+YYB(I-1)**2)                           OUTP 
      Z=SQRT(ZNEW2)                                                      OUTP 
      DZ=Z-ZM1                                                           OUTP 
      SBL=SBL+DSBL                                                       OUTP 
C                                                                        OUTP 
      XX=XXB(I-1)*Z                                                      OUTP 
      YY=YYB(I-1)*Z                                                      OUTP 
      QE=SQRT(USURF(I)**2+WSURF(I)**2)                                   OUTP 
C                                                                        OUTP 
      THETD=57.29577951*THETA                                            OUTP 
      THETAS=THETAS+THETD                                                OUTP 
C                                                                        OUTP 
  300 CONTINUE                                                           OUTP 
  310 CONTINUE                                                           OUTP 
C                                                                        OUTP 
C     BOW SHOCK                                                          OUTP 
      DO 35 I=2,IC                                                       OUTP 
      DO 30 JJ=2,JCM                                                     OUTP 
      J=JCM-JJ+2                                                         OUTP 
      IF(UI(I,J).LT.1.0) GO TO 31                                        OUTP 
   30 CONTINUE                                                           OUTP 
   31 RHO1=(C(I)-B(I))*Y(J)+B(I)                                         OUTP 
      RHO2=(C(I)-B(I))*Y(J+1)+B(I)                                       OUTP 
      RHO=(RHO2-RHO1)*(1.-UI(I,J))/(UI(I,J+1)-UI(I,J))+RHO1              OUTP 
      THE=X(I)                                                           OUTP 
      CSI=RHO*COS(THE)                                                   OUTP 
      ETA=RHO*SIN(THE)                                                   OUTP 
      CALL RCONF(CSI,ETA,P,Q,HC,SCSI,SETA)                               OUTP 
      OMEG=ATAN2(Q,P)                                                    OUTP 
      P2Q2=SQRT(P*P+Q*Q)                                                 OUTP 
      PSI=PI-2.*ATAN(CSCAL/P2Q2)                                         OUTP 
      XXS(I-1)=COS(OMEG)*TAN(PSI)                                        OUTP 
      YYS(I-1)=SIN(OMEG)*TAN(PSI)                                        OUTP 
   35 CONTINUE                                                           OUTP 
C     IMBEDDED SHOCK                                                     OUTP 
      DO 45 J=2,JCM                                                      OUTP 
      JS=J                                                               OUTP 
      DO 40 I=2,IC                                                       OUTP 
      IF(UI(I,J).GT.1.0) GO TO 41                                        OUTP 
   40 CONTINUE                                                           OUTP 
      GO TO 50                                                           OUTP 
   41 EP=(1.-UI(I-1,J))/(UI(I,J)-UI(I-1,J))                              OUTP 
      TH1=(X(I)-X(I-1))*EP+X(I-1)                                        OUTP 
      B1=(B(I)-B(I-1))*EP+B(I-1)                                         OUTP 
      C1=(C(I)-C(I-1))*EP+C(I-1)                                         OUTP 
      I1=I                                                               OUTP 
      DO 42 I=I1,IC                                                      OUTP 
      IF(UI(I,J).LE.1.0) GO TO 43                                        OUTP 
   42 CONTINUE                                                           OUTP 
   43 EP=(1.-UI(I,J))/(UI(I-1,J)-UI(I,J))                                OUTP 
      TH2=(X(I-1)-X(I))*EP+X(I)                                          OUTP 
      B2=(B(I-1)-B(I))*EP+B(I)                                           OUTP 
      C2=(C(I-1)-C(I))*EP+C(I)                                           OUTP 
      R1=(C1-B1)*Y(J)+B1                                                 OUTP 
      R2=(C2-B2)*Y(J)+B2                                                 OUTP 
      VI(1,J)=TH1                                                        OUTP 
      VI(2,J)=TH2                                                        OUTP 
      WI(1,J)=R1                                                         OUTP 
      WI(2,J)=R2                                                         OUTP 
   45 CONTINUE                                                           OUTP 
   50 JS=JS-2                                                            OUTP 
      JSS=2*JS                                                           OUTP 
      IF(JS.EQ.0) GO TO 65                                               OUTP 
      DO 60 L=1,2                                                        OUTP 
      DO 55 JJ=1,JS                                                      OUTP 
      JS1=JJ+(L-1)*JS                                                    OUTP 
      J=(2-L)*(JJ+1)+(L-1)*(JS-JJ+2)                                     OUTP 
      RHO=WI(L,J)                                                        OUTP 
      THE=VI(L,J)                                                        OUTP 
      CSI=RHO*COS(THE)                                                   OUTP 
      ETA=RHO*SIN(THE)                                                   OUTP 
      CALL RCONF(CSI,ETA,P,Q,HC,SCSI,SETA)                               OUTP 
      OMEG=ATAN2(Q,P)                                                    OUTP 
      P2Q2=SQRT(P*P+Q*Q)                                                 OUTP 
      PSI=PI-2.*ATAN(CSCAL/P2Q2)                                         OUTP 
      XXI(JS1)=COS(OMEG)*TAN(PSI)                                        OUTP 
      YYI(JS1)=SIN(OMEG)*TAN(PSI)                                        OUTP 
   55 CONTINUE                                                           OUTP 
   60 CONTINUE                                                           OUTP 
   65 CONTINUE                                                           OUTP 
      IF(IOUT2.EQ.2) GO TO 70                                            OUTP 
      IF(JSS.GT.0) WRITE(LOUT,1042) JSS                                  OUTP 
      IF(JSS.EQ.0) GO TO 70                                              OUTP 
      DO 68 J=1,JSS                                                      OUTP 
   68 WRITE(LOUT,1044) J,XXI(J),YYI(J)                                   OUTP 
   70 CONTINUE                                                           OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
      CALL FORCE(ELC,DRC,EMC,CPP,DX,IC,X,AZ,IXMAX,IOUT2,ETADR)           OUTP 
C                                                                        OUTP 
C     COMPUTE DELTA CP                                                   OUTP 
C                                                                        OUTP 
      ISPNXX=IC-IXMAX+1                                                  OUTP 
      DO 320 I=IXMAX,IC                                                  OUTP 
      II=IC-I+1                                                          OUTP 
      ETASPN(II)=XXB(I-1)/XMAX                                           OUTP 
  320 CPU(II)=CPP(I-1)                                                   OUTP 
C                                                                        OUTP 
      IMXM1=IXMAX-1                                                      OUTP 
      DO 330 I=1,IMXM1                                                   OUTP 
      XDUM(I)=XXB(I)/XMAX                                                OUTP 
  330 CPDUM(I)=CPP(I)                                                    OUTP 
      CALL VINTER(CPL,ETASPN,1,ISPNXX,CPDUM,XDUM,1,IMXM1,2,0)            OUTP 
      WRITE(LOUT,1016)                                                   OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,1046)                                    OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,1020)                                    OUTP 
      DO 340 I=1,ISPNXX                                                  OUTP 
  340 DELTCP(I)=CPL(I)-CPU(I)                                            OUTP 
C                                                                        OUTP 
C      COMPUTE SPANLOAD DISTRIBUTION                                     OUTP 
C                                                                        OUTP 
      ISPNM2=ISPNXX-2                                                    OUTP 
      FI1=0.0                                                            OUTP 
      SUM=0.0                                                            OUTP 
      DO 346 I=1,ISPNM2                                                  OUTP 
      II=ISPNXX-I                                                        OUTP 
      FIM1=FI1                                                           OUTP 
      FI1=DELTCP(II)/ETASPN(II)**2                                       OUTP 
      DELTAH=ETASPN(II+1)-ETASPN(II)                                     OUTP 
      DELS2=0.5*DELTAH*(FI1+FIM1)                                        OUTP 
C                                                                        OUTP 
      SS1=DELTCP(II)*(1.0/ETASPN(II)-1.0/ETASPN(II+1))                   OUTP 
      SS2=(DELTCP(II+1)-DELTCP(II))*ALOG(ETASPN(II+1)/ETASPN(II))        OUTP 
      DELS1=SS1+SS2                                                      OUTP 
C                                                                        OUTP 
      DELTAS=DELS2                                                       OUTP 
      IF(ETASPN(II).LT.0.20) DELTAS=DELS1                                OUTP 
C                                                                        OUTP 
      SUM=SUM+DELTAS                                                     OUTP 
  346 CCLCA(II)=ETASPN(II)*2.0*SUM                                       OUTP 
      CCLCA(1)=2.0*DELTCP(1)                                             OUTP 
      CCLCA(ISPNXX)=0.0                                                  MOD1 
      CALL SIMP(CLCCL,ETASPN,CCLCA,ISPNXX,IERR)                          OUTP 
      CALL SIMP(CL,ETASPN,DELTCP,ISPNXX,IERR)                            OUTP 
C                                                                        OUTP 
      CCLCA(ISPNXX)=0.0                                                  OUTP 
      XLESWP=PIO2-ATAN(AZ)                                               OUTP 
      XMN=EMINF*COS(XLESWP)                                              OUTP 
      BETA=SQRT(EMINF**2-1.0)                                            OUTP 
      DO 350 I=1,ISPNXX                                                  OUTP 
      DELCPL=0.0                                                         OUTP 
      IF(ETASPN(I).LT.1.0) DELCPL=ELC/PIO2/SQRT(1.0-ETASPN(I)**2)        OUTP 
      IF(XMN.LT.1.0) GO TO 348                                           OUTP 
      XNCP=TAN(XLESWP)/BETA                                              OUTP 
      DELCPL=ELC/SQRT(1.0-XNCP**2)                                       OUTP 
      IF(ETASPN(I).LT.XNCP) DELCPL=DELCPL*(1.0-ASIN(XNCP*                OUTP 
     1 SQRT((1.0-(ETASPN(I)/XNCP)**2)/(1.0-ETASPN(I)**2)))/PIO2)         OUTP 
  348 IF(IOUT2.EQ.2) GO TO 350                                           OUTP 
      WRITE(LOUT,1022) I,ETASPN(I),CPU(I),CPL(I),DELTCP(I),DELCPL,       OUTP 
     1 CCLCA(I)                                                          OUTP 
  350 CONTINUE                                                           OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,1020)                                    OUTP 
C                                                                        OUTP 
      KLUE=2                                                             OUTP 
      IF(IEQV.EQ.1) CALL EQUIV(NG,IXMAX,XXB,YYB,RHO,X,CPNC,KLUE)         OUTP 
C                                                                        OUTP 
      IF(IEQV.NE.1) GO TO 391                                            OUTP 
C                                                                        OUTP 
      DO 385 I=IXMAX,IC                                                  OUTP 
      II=IC-I+1                                                          OUTP 
  385 CPU(II)=CPNC(I-1)                                                  MOD1 
      DO 387 I=1,IMXM1                                                   OUTP 
  387 CPDUM(I)=CPNC(I)                                                   OUTP 
      CALL VINTER(CPL,ETASPN,1,ISPNXX,CPDUM,XDUM,1,IMXM1,2,0)            OUTP 
      WRITE(LOUT,1016)                                                   OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,404)                                     OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,406)                                     OUTP 
      DO 389 I=1,ISPNXX                                                  OUTP 
      DELTCP(I)=CPL(I)-CPU(I)                                            OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,1022) I,ETASPN(I),CPU(I),CPL(I),         OUTP 
     1 DELTCP(I)                                                         OUTP 
  389 CONTINUE                                                           OUTP 
      IF(IOUT2.NE.2) WRITE(LOUT,406)                                     OUTP 
      CALL SIMP(CNNC,ETASPN,DELTCP,ISPNXX,IERR)                          OUTP 
      WRITE(LOUT,408) CNNC                                               OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
  391 CONTINUE                                                           OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
C    PUT OUT SPANWISE DELTA CP@S FOR W12 CALCULATION                     OUTP 
C                                                                        OUTP 
      IF(K.NE.KREF) GO TO 358                                            OUTP 
      AZLE=ATAN(AZ)*180.0/3.1415926                                      OUTP 
      AZLE=90.0-AZLE                                                     OUTP 
      WRITE(32,1032) TI2                                                 OUTP 
      XSPNXX=ISPNXX                                                      OUTP 
      WRITE(32,1034) XSPNXX,AZLE,ETADR,XORIGC,YORIGC                     OUTP 
      DO 355 I=1,ISPNXX                                                  OUTP 
  355 WRITE(32,1034) ETASPN(I),DELTCP(I)                                 OUTP 
  358 CONTINUE                                                           OUTP 
C                                                                        OUTP 
      WRITE(LOUT,402)                                                    OUTP 
      WRITE(LOUT,1024) CL,CLCCL                                          OUTP 
C                                                                        OUTP 
C                                                                        OUTP 
C      COMPUTE E FROM IVES PROGRAM-LIDRAG                                OUTP 
C                                                                        OUTP 
      CALL LIDRAG                                                        OUTP 
      WRITE(LOUT,1028) EDRAG                                             OUTP 
C                                                                        OUTP 
      CN=ELC*COS(ALP)+DRC*SIN(ALP)                                       OUTP 
      CA=-ELC*SIN(ALP)+DRC*COS(ALP)                                      OUTP 
C                                                                        OUTP 
      ALPD=180.0/PI*ALP                                                  OUTP 
      ETATE=YWNGRT/(XMAX*(XSTN-XORIGC))                                  MOD3 
      ICNT=0                                                             MOD3 
      DO 359 I=1,ICM                                                     MOD3 
      ETA=XXB(I)/XMAX                                                    MOD3 
      IF(ETA.LT.ETATE) GO TO 359                                         MOD3 
      ICNT=ICNT+1                                                        MOD3 
  359 CONTINUE                                                           MOD3 
      WRITE(LOUT,1004) ELC,DRC,CN,CA,AF,EMINF,ALPD,XLGNO                 OUTP 
      IF(IPUNCH.LT.3) GO TO 380                                          OUTP 
      IF(K.LT.KREF) GO TO 380                                            MOD3 
      WRITE(7,1032) TI1                                                  MOD3 
      WRITE(7,1034) EMINF,ALPD,XSTN,CN,CNNC                              MOD3 
      XICNT=ICNT                                                         MOD3 
      WRITE(7,1034) XICNT                                                MOD3 
      DO 360 I=1,ICM                                                     MOD3 
      XXBAZ=XXB(I)/XMAX                                                  MOD3 
      YYBAZ=YYB(I)/XMAX                                                  MOD3 
      IF(XXBAZ.LT.ETATE) GO TO 360                                       MOD3 
      IF(IEQV.NE.1) WRITE(7,1002) XXBAZ,YYBAZ,CPP(I)                     MOD3 
      IF(IEQV.EQ.1) WRITE(7,1002) XXBAZ,YYBAZ,CPP(I),CPNC(I)             MOD3 
  360 CONTINUE                                                           MOD3 
  380 CONTINUE                                                           OUTP 
      IF(IPLOT.EQ.0) GO TO 100                                           OUTP 
   90 XMAX=AZ+.00001                                                     OUTP 
      IF(IPLOT.EQ.2) WRITE(7,1005)(XXB(I),YYB(I),CPP(I),I=1,ICM)         OUTP 
      CALL GRAF(XXB,YYB,CPP,ICM,XXS,YYS,XXI,YYI,JSS,XMAX,                OUTP 
     1 X,Y,0,TI1,TI2,EMM,ELC,DRC,CPNC)                                   OUTP 
  100 RETURN                                                             OUTP 
      END                                                                OUTP 
      SUBROUTINE GRAF(XB,YB,CP,IM,XS,YS,XI,YI,JS,XMAX,XP,YP,KPLOT,A,B    GRAF 
     1 ,EMC,CL,CD,CPNC)                                                  GRAF 
      COMMON /DESGN/ CPP(120),EMST(120),CPPEX(120),XCP(120),             DESGN
     1 NCP,IDESIN,KDES,KDESMX,YYB1(120),CPP1(120),SUMDCP(50),            DESGN
     2 STARTC,BETAM(120),NSTART,WDES                                     DESGN
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      DIMENSION XB(1),YB(1),CP(1),XS(1),YS(1),XI(1),YI(1),XP(1),YP(1)    GRAF 
      DIMENSION R(20),BUFFER(512),A(1),B(1),EMC(1),CPNC(1)               GRAF 
 1001 FORMAT(80A1)                                                       GRAF 
 1002 FORMAT(5X,3HCL=,F7.4,5X,3HCD=,F7.4,45X)                            GRAF 
C     CP AND GEOM PLOT                                                   GRAF 
    5 CALL PLOT(2.5,1.5,-3)                                              GRAF 
      DO 7 I=1,IM                                                        GRAF 
      XP(I)=5.*XB(I)/XMAX                                                GRAF 
    7 YP(I)=5.*YB(I)/XMAX                                                GRAF 
      CALL LINE(XP,YP,IM,2,2,1,0,0.)                                     GRAF 
    9 CALL PLOT(0.,4.,-3)                                                GRAF 
      CALL AXIS(-.5,-4.,2HCP,2,8.,90.,0.,-.1,0)                          GRAF 
      CALL AXIS(0.,-5.0,1HX,1,5.,0.,0.,.2,0)                             GRAF 
      DO 10 I=1,IM                                                       GRAF 
      XP(I)=5.*XB(I)/XMAX                                                GRAF 
      YP(I)=-10.*CP(I)                                                   GRAF 
   10 CONTINUE                                                           GRAF 
      CALL LINE(XP,YP,IM,2,2,1,0,0.)                                     GRAF 
      CP8V=-0.8*2.0/1.4/EMINF**2                                         GRAF 
      DO 11 I=1,2                                                        GRAF 
      YP(I)=-10.*CP8V                                                    GRAF 
      XP(I)=5.*XB(I)/XMAX                                                GRAF 
   11 CALL SYMBL4(XP(I),YP(I),0.07,1,0.0,-1)                             GRAF 
      IF(IEQV.EQ.0) GO TO 14                                             GRAF 
      DO 12 I=1,IM                                                       GRAF 
      XP(I)=5.*XB(I)/XMAX                                                GRAF 
      YP(I)=-10.*CPNC(I)                                                 GRAF 
   12 CALL SYMBL4(XP(I),YP(I),0.07,1,0.0,-1)                             GRAF 
   14 CONTINUE                                                           GRAF 
C                                                                        GRAF 
      ENCODE(80,1001,R) (A(I),I=1,80)                                    GRAF 
      CALL SYMBL4(0.,4.,.12,R,0.,80)                                     GRAF 
      ENCODE(80,1003,R) XLGNO                                            GRAF 
 1003 FORMAT(30H GROSSMAN@S CONICAL RELAXATION ,5X,3HJOB,A8)             GRAF 
      CALL SYMBL4(0.,4.3,.12,R,0.,80)                                    GRAF 
      ENCODE(80,1001,R) (B(I),I=1,80)                                    GRAF 
      CALL SYMBL4(0.,3.76,.12,R,0.,80)                                   GRAF 
      ENCODE(80,1002,R) CL,CD                                            GRAF 
      CALL SYMBL4(0.,3.52,.12,R,0.,80)                                   GRAF 
C     MCROSS AND GEOM PLOT                                               GRAF 
      CALL PLOT(8.5,-4.,-3)                                              GRAF 
      DO 17 I=1,IM                                                       GRAF 
      XP(I)=5.*XB(I)/XMAX                                                GRAF 
   17 YP(I)=5.*YB(I)/XMAX                                                GRAF 
      CALL LINE(XP,YP,IM,2,2,1,0,0.)                                     GRAF 
      IF(JS.EQ.0) GO TO 19                                               GRAF 
      DO 18 I=1,JS                                                       GRAF 
      XP(I)=5.*XI(I)/XMAX                                                GRAF 
   18 YP(I)=5.*YI(I)/XMAX                                                GRAF 
      CALL LINE(XP,YP,JS,2,2,1,0,0.)                                     GRAF 
   19 CALL PLOT(0.,3.,-3)                                                GRAF 
      CALL AXIS(-.5,-1.,2HMC,2,6.25,90.0,0.4,.4,0)                       GRAF 
      CALL AXIS(0.,-4.0,1HX,1,5.,0.,0.,.2,0)                             GRAF 
      DO 20 I=1,IM                                                       GRAF 
      XP(I)=5.*XB(I)/XMAX                                                GRAF 
      EMCPLT=AMIN1(2.4,EMC(I))                                           GRAF 
   20 YP(I)=2.5*EMCPLT-1.0                                               GRAF 
      CALL LINE(XP,YP,IM,2,2,1,0,0.)                                     GRAF 
      ENCODE(80,1001,R) (A(I),I=1,80)                                    GRAF 
      CALL SYMBL4(0.,5.,.12,R,0.,80)                                     GRAF 
      ENCODE(80,1001,R) (B(I),I=1,80)                                    GRAF 
      CALL SYMBL4(0.,4.76,.12,R,0.,80)                                   GRAF 
      ENCODE(80,1002,R) CL,CD                                            GRAF 
      CALL SYMBL4(0.,4.52,.12,R,0.,80)                                   GRAF 
      CALL PLOT(8.5,-4.5,-3)                                             GRAF 
      IF(KDES.EQ.13) CALL PLOT(0.,0.,999)                                GRAF 
      IF(KDES.EQ.28) CALL PLOT(0.,0.,999)                                GRAF 
      RETURN                                                             GRAF 
      END                                                                GRAF 
      SUBROUTINE STRPLT                                                  GRAF 
      CALL PLOTS(BUFFER,512)                                             GRAF 
      CALL SYMBL4(0.,0.,0.7,1,0.,-1)                                     GRAF 
      RETURN                                                             GRAF 
      END                                                                GRAF 
      SUBROUTINE ENDPLT                                                  GRAF 
      CALL EPLOT                                                         GRAF 
      RETURN                                                             GRAF 
      END                                                                GRAF 
      SUBROUTINE RCONF(CSI,ETA,P,Q,H,SCSI,SETA)                          RCONF
C                                                                        RCONF
C      REVERSE CONFORMAL MAPPING FROM CSI,ETA TO P,Q                     RCONF
C      (MAPPED PLANE TOWARDS PHYSICAL PLANE)                             RCONF
C                                                                        RCONF
      COMMON/MAP/S0,S1,S2,PII,CSCAL                                      MAP
      COMPLEX S,G,G1,S0,S1,S2,SPR                                        RCONF
      G=CMPLX(CSI,ETA)                                                   RCONF
      G1=G+S2                                                            RCONF
      S=(G1*G1+S0*S1*.25)/(G1-.25*(S0-S1))                               RCONF
      P=REAL(S)                                                          RCONF
      Q=AIMAG(S)                                                         RCONF
      SPR=(S-S0)*(S+S1)/((G1-.5*S0)*(G1+.5*S1))                          RCONF
C                                                                        RCONF
C      CONFORMAL MAPPING METRIC                                          RCONF
C                                                                        RCONF
      H=CABS(SPR)                                                        RCONF
      PCSI=REAL(SPR)                                                     RCONF
      QCSI=AIMAG(SPR)                                                    RCONF
      D=1./SQRT(P*P+Q*Q)                                                 RCONF
      SCSI=(P*PCSI+Q*QCSI)*D                                             RCONF
      SETA=(-P*QCSI+Q*PCSI)*D                                            RCONF
      RETURN                                                             RCONF
      END                                                                RCONF
      SUBROUTINE EQUIV(NQ,IXMAX,X,Y,R,THE,CPNCQ,KLUE)                    EQUIV
C                                                                        EQUIV
C      REDEFINE THE CROSS SECTION TO ANALIZE THE                         EQUIV
C      EQUIVALENT CONICAL SECTION                                        EQUIV
C                                                                        EQUIV
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /DESGN/ CPP(120),EMST(120),CPPEX(120),XCP(120),             DESGN
     1 NCP,IDESIN,KDES,KDESMX,YYB1(120),CPP1(120),SUMDCP(50),            DESGN
     2 STARTC,BETAM(120),NSTART,WDES                                     DESGN
      COMMON /VELCPT/ UCART(115),VCART(115),WCART(115),UCYL(115),        VELCPT 
     1                VCYL(115) ,WCYL(115) ,USHER(115),VSHER(115),       VELCPT 
     2                WSHER(115),USURF(115),VSURF(115),WSURF(115)        VELCPT 
      COMMON /GEOIN/ RRZ(201),THZ(201),X0,Y0,Y1,NM,NGH,NMH               GEOIN
      COMMON /SARC/ S(115),SPHI(115),SPSI(115),SMAX,XMAX,DYSTR(115)      SARC 
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON /WNGTE/ XROOT,YWNGRT,ZROOT                                  WNGTE
      DIMENSION X(1),Y(1),R(1),THE(1),CPNCQ(1),ZIN(60),                  EQUIV
     1 SARCIN(60),SARCH(200)                                             EQUIV
      DIMENSION YHAR(200),ZOUTH(200),DNYH(200),DNZH(200),DNXH(200),      EQUIV
     1          YIN(60),DNY(60),DNZ(60),DNX(60)                          EQUIV
      EQUIVALENCE (UCART(1),YHAR(1)),(VCART(85),ZOUTH(1)),               EQUIV
     1 (UCYL(55),DNYH(1)),(WCYL(25),DNZH(1)),(USHER(110),DNXH(1)),       EQUIV
     2 (WSHER(80),YIN(1))                                                EQUIV
C                                                                        EQUIV
      IF(IOUT2.NE.2) WRITE(LOUT,320)                                     EQUIV
      G=GAMMA                                                            EQUIV
      G1=(G-1.0)/2.0                                                     EQUIV
      RADD=180.0/PI                                                      EQUIV
      ICM=IC-1                                                           EQUIV
      ETATE=YWNGRT/(XMAX*(XSTN-XORIGC))                                  MOD2 
C                                                                        EQUIV
      REWIND 20                                                          EQUIV
      DO 220 N=1,NGH                                                     EQUIV
      READ(20,350) XSTN,YHAR(N),ZOUTH(N),DNYH(N),DNZH(N),DNXH(N)         EQUIV
  220 CONTINUE                                                           EQUIV
      CALL ARCLNG(NGH,YHAR,ZOUTH,SARCH)                                  EQUIV
      DO 225 I=1,ICM                                                     EQUIV
      ZIN(I)=Y(I)*(XSTN-XORIGC)                                          EQUIV
  225 YIN(I)=X(I)*(XSTN-XORIGC)                                          EQUIV
C                                                                        EQUIV
      ZAVG=-TAN(DALP)                                                    EQUIV
      CALL ARCLNG(ICM,YIN,ZIN,SARCIN)                                    EQUIV
      CALL VINTER(DNY,SARCIN,1,ICM,DNYH,SARCH,1,NGH,2,0)                 EQUIV
      CALL VINTER(DNZ,SARCIN,1,ICM,DNZH,SARCH,1,NGH,2,0)                 EQUIV
      CALL VINTER(DNX,SARCIN,1,ICM,DNXH,SARCH,1,NGH,2,0)                 EQUIV
C                                                                        EQUIV
C                                                                        EQUIV
      IF(IOUT2.NE.2) WRITE(LOUT,330)                                     EQUIV
C                                                                        EQUIV
      DO 250 I=1,ICM                                                     EQUIV
C                                                                        MOD2 
      CPNCQ(I)=0.0                                                       MOD2 
C                                                                        MOD2 
      ETA=X(I)/XMAX                                                      MOD2 
C                                                                        MOD2 
      IF(ETA.LE.ETATE) GO TO 250                                         MOD2 
C                                                                        MOD2 
      XMSQ=((1.+G1*EMINF**2)/(1.+G/2.*EMINF**2*CPP(I))**((G-1.)          EQUIV
     1     /G)-1.)/G1                                                    EQUIV
      XMCON=SQRT(XMSQ)                                                   EQUIV
      CALL PMA(XMCON,XNUC,0)                                             EQUIV
C                                                                        EQUIV
      FETA=(Y(I)-ZAVG)/XMAX                                              EQUIV
      FPETA=-DNY(I)/DNZ(I)                                               EQUIV
      DFDXC=(FETA-ETA*FPETA)*AZ                                          EQUIV
      DFDXNC=DFDXC                                                       EQUIV
      IF(DNZ(I).NE.0) DFDXNC=-DNX(I)/DNZ(I)                              EQUIV
      DELNU=DFDXNC-DFDXC                                                 EQUIV
      IF(I.GT.IXMAX) DELNU=-DELNU                                        EQUIV
      XNUNC=XNUC+DELNU                                                   EQUIV
      CALL PMA(XMNNC,XNUNC,1)                                            EQUIV
      CPNC=(1.0+G1*EMINF**2)/(1.0+G1*XMNNC**2)                           EQUIV
      CPNC=CPNC**(G/(G-1.0))-1.0                                         EQUIV
      CPNC=2.0/G/EMINF**2*CPNC                                           EQUIV
      DELMCH=XMNNC-XMCON                                                 EQUIV
      XNUCD=RADD*XNUC                                                    EQUIV
      XNUNCD=RADD*XNUNC                                                  EQUIV
      DELNUD=RADD*DELNU                                                  EQUIV
C                                                                        EQUIV
      CPNCQ(I)=CPNC                                                      EQUIV
C                                                                        EQUIV
      IF(IOUT2.EQ.2) GO TO 250                                           EQUIV
C                                                                        EQUIV
      WRITE(LOUT,300) I,XMCON,XNUC,YIN(I),DNY(I),DNZ(I),DNX(I),CPP(I),   EQUIV
     1 CPNC,DELMCH,DELNUD,ETA                                            MOD4 
C                                                                        EQUIV
  250 CONTINUE                                                           EQUIV
C                                                                        EQUIV
      IF(IOUT2.NE.2) WRITE(LOUT,330)                                     EQUIV
C                                                                        EQUIV
  300 FORMAT(5X,I5,12F10.5)                                              EQUIV
  320 FORMAT(1H1//5X,26HMODIFICATION OF PRESSURES ,                      EQUIV
     1 36HTO ACCOUNT FOR NON-CONICAL GEOMETRY  //)                       EQUIV
  330 FORMAT(/9X, 1HI,5X,4HMCON,6X,5HNUCON,6X,3HYIN,7X,3HDNY,            EQUIV
     1 7X,3HDNZ,7X,3HDNX,7X,3HCPP,6X,4HCPNC,5X,6HDELMCH,4X,6HDELNUD,     MOD4 
     2 5X,3HETA/)                                                        MOD4 
  340 FORMAT(//)                                                         EQUIV
  350 FORMAT(6E14.7)                                                     EQUIV
C                                                                        EQUIV
      RETURN                                                             EQUIV
      END                                                                EQUIV
      SUBROUTINE PMA(XM,XNU,MODE)                                        PMA
C                                                                        PMA
C      PRANDTL-MEYER ANGLE                                               PMA
C                                                                        PMA
C      MODE=0  GIVE MACH  - GET ANGLE                                    PMA
C           1  GIVE ANGLE - GET MACH                                     PMA
C                                                                        PMA
      EPS=0.1E-6                                                         MOD2 
      G=1.4                                                              PMA
      PIO2=1.570796327                                                   PMA
      A=SQRT((G+1.0)/(G-1.0))                                            PMA
      XNUMAX=PIO2*(A-1.0)                                                PMA
C                                                                        PMA
      IF(MODE.EQ.1) GO TO 100                                            PMA
      Q=SQRT(XM**2-1.0)                                                  PMA
      XNU=A*ATAN(Q/A)-ATAN(Q)                                            PMA
C                                                                        PMA
      RETURN                                                             PMA
C                                                                        PMA
  100 CONTINUE                                                           PMA
      IF(XNU.LE.0.0) GO TO 140                                           MOD2 
      IF(XNU.GT.0.38397) EPS=EPS*10.0                                    PMA
      IF(XNU.GE.XNUMAX) GO TO 120                                        PMA
      I=0                                                                PMA
      C1=XNU/XNUMAX                                                      PMA
      XN=0.56+0.313*C1-0.42*SQRT(C1)                                     PMA
      XM=1.0/(1.0-C1**XN)                                                PMA
      Q=SQRT(XM**2-1.0)                                                  PMA
C                                                                        PMA
C                                                                        PMA
   50 I=I+1                                                              PMA
      IF(I.GT.20) WRITE(6,260) DELTA                                     MOD2 
  260 FORMAT(/5X,14HI GT 20 IN PMA ,6HDELTA=,F10.6//)                    MOD2 
      IF(I.GT.20) GO TO 60                                               PMA
      FQ=XNU-A*ATAN(Q/A)+ATAN(Q)                                         PMA
      FPQ=-A*A/(A*A+Q*Q)+1.0/(1.0+Q*Q)                                   PMA
      QP=Q                                                               PMA
      Q=Q-FQ/FPQ                                                         PMA
      DELTA=ABS(Q-QP)                                                    PMA
  500 FORMAT(I10,4E12.5)                                                 PMA
      IF(DELTA.GT.EPS) GO TO 50                                          PMA
   60 XM=SQRT(Q*Q+1.0)                                                   PMA
      RETURN                                                             PMA
C                                                                        PMA
  120 XM=100.0                                                           PMA
      WRITE(6,220) XNU,XNUMAX                                            MOD2 
  220 FORMAT(5X,20HXNU GT XNUMAX - XNU+,F10.5,8X,7HXNUMAX=,              PMA
     1 F10.5)                                                            PMA
      RETURN                                                             PMA
C                                                                        MOD2 
  140 XM=1.0                                                             MOD2 
      WRITE(6,240) XNU                                                   MOD2 
      XNU=0.0                                                            MOD2 
  240 FORMAT(/5X,20HXNU LT 0 IN PMA XNU=,F10.4//)                        MOD2 
C                                                                        MOD2 
      RETURN                                                             MOD2 
C                                                                        PMA
      END                                                                PMA
      SUBROUTINE VINTER(FN,X,K0,KMAX,VF,S,I0,IMAX,LF,IDER)               VINTER 
C                                                                        VINTER 
C      INTERPLOLATION - FROM JOE VOLPE                                   VINTER 
C                                                                        VINTER 
C      FN- OUTPUT VECTOR OF FUNCTION OR SLOPE                            VINTER 
C      X-  LOCATION OF FN                                                VINTER 
C      K0- 1ST INDEX VALUE USED IN FN ARRAY                              VINTER 
C      KMAX- LAST INDEX VALUE USED IN FN ARRAY                           VINTER 
C      VF- INPUT FUNCTION VALUE                                          VINTER 
C      S-  LOCATION OF INPUT FUNCTION VALUE                              VINTER 
C      I0- 1ST INDEX VALUE OF VF USED FOR INTERPOLATION                  VINTER 
C      IMAX-LAST INDEX VALUE OF VF USED FOR INTERPOLATION                VINTER 
C      LF- ORDER OF INTERPOLATION =2-LINEAR                              VINTER 
C                                 =4-CUBIC                               VINTER 
C      IDER=0 FUNCTION VALUE RETURNED                                    VINTER 
C          #0 SLOPE OF FUNCTION RETURNED                                 VINTER 
C                                                                        VINTER 
      DIMENSION FN(1),X(1),VF(1),S(1)                                    VINTER 
      K=K0                                                               VINTER 
      LF12=LF/2                                                          VINTER 
    5 I=I0-1                                                             VINTER 
   10 I=I+1                                                              VINTER 
      IF(X(K).LT.S(I0+LF12)) GO TO 12                                    VINTER 
      IF(X(K).GE.S(IMAX-LF12)) GO TO 13                                  VINTER 
      IF(X(K).GE.S(I).AND.X(K).LT.S(I+1)) GO TO 14                       VINTER 
      GO TO 10                                                           VINTER 
   12 I=I0                                                               VINTER 
      GO TO 20                                                           VINTER 
   13 I=IMAX-LF+1                                                        VINTER 
      GO TO 20                                                           VINTER 
   14 I=I-LF/2+1                                                         VINTER 
   20 FN(K)=0.                                                           VINTER 
   22 L=I-1                                                              VINTER 
   25 L=L+1                                                              VINTER 
      RAT=0.                                                             VINTER 
      N=I-1                                                              VINTER 
      IF(IDER.LE.0) N=IMAX                                               VINTER 
   27 N=N+1                                                              VINTER 
      M=I-1                                                              VINTER 
      DU=1.                                                              VINTER 
      DD=1.                                                              VINTER 
      IF(N.EQ.L) GO TO 34                                                VINTER 
   30 M=M+1                                                              VINTER 
      IF(M.EQ.L) GO TO 32                                                VINTER 
      IF(M.EQ.N) GO TO 31                                                VINTER 
      DU=DU*(X(K)-S(M))                                                  VINTER 
   31 DD=DD*(S(L)-S(M))                                                  VINTER 
   32 IF(M-I-LF+1) 30,33,33                                              VINTER 
   33 RAT=RAT+DU/DD                                                      VINTER 
   34 IF(N-I-LF+1) 27,35,35                                              VINTER 
   35 FN(K)=FN(K)+RAT*VF(L)                                              VINTER 
      IF(L-I-LF+1) 25,40,40                                              VINTER 
   40 K=K+1                                                              VINTER 
      IF(K-KMAX) 5,5,50                                                  VINTER 
   50 RETURN                                                             VINTER 
      END                                                                VINTER 
      SUBROUTINE FORCE(CL,CD,EMC,CPP,DX,IC,X,AZ,IMAX,IOUT2,ETADR)        FORCE
C                                                                        FORCE
C      INTEGRATE PRESSURES ON SURFACE TO GET FORCES                      FORCE
C                                                                        FORCE
      COMMON /FOR/AF,FM,ELI(120),DRI(120),XXS(120),YYS(120)              FOR
      COMMON/PLO/XXB(120),YYB(120)                                       PLO
      DIMENSION CPP(1),X(1),XXQ(120)                                     FORCE
      FLIN(R,T,ETA,YR,YT)=(ETA-YR)/(YT-YR)*(T-R)+R                       FORCE
      IF(IOUT2.NE.2) WRITE(6,100)                                        FORCE
  100 FORMAT(1H1//10X,7HCONICAL ,23H FORCE DISTRIBUTIONS,  ,             FORCE
     A 15HBODY AND SHOCK   ,                                             FORCE
     1 9HLOCATIONS//8X  1HI,5X,4HX(I),8X,2HCL,8X,2HCD,5X,4HOMEG,8X,      FORCE
     2 3HXXB,7X,3HYYB,7X,2HRB,8X,3HXXS,7X,3HYYS,6X,2HRS,6X,5HRS/RB /)    FORCE
      ELC=0.                                                             FORCE
      DRC=0.                                                             FORCE
      XMAX=XXB(IMAX)                                                     FORCE
      DO 10 I=2,IC                                                       FORCE
      RB=SQRT(XXB(I-1)**2+YYB(I-1)**2)                                   FORCE
      RS=SQRT(XXS(I-1)**2+YYS(I-1)**2)                                   FORCE
      RSRB=RS/RB                                                         FORCE
      XXQ(I)=XXB(I-1)/XMAX                                               FORCE
      OMEG=57.29578*X(I)                                                 FORCE
      IF(I.EQ.2) GO TO 3                                                 FORCE
      IF(XXQ(I).GE.ETADR.AND.XXQ(I-1).LT.ETADR) INITL=I                  FORCE
      IF(XXQ(I).LE.ETADR.AND.XXQ(I-1).GT.ETADR) IFINL=I                  FORCE
    3 CONTINUE                                                           FORCE
      PF=.5*CPP(I-1)                                                     FORCE
      EI=PF*ELI(I)                                                       FORCE
      DI=PF*DRI(I)                                                       FORCE
      EIW=EI/AZ                                                          FORCE
      DIW=DI/AZ                                                          FORCE
      IF(IOUT2.NE.2) WRITE(6,1) I,X(I),EIW,DIW,OMEG,XXB(I-1),YYB(I-1),   FORCE
     1 RB,XXS(I-1),YYS(I-1),RS,RSRB                                      FORCE
      IF(I.NE.2.AND.I.NE.IC) GO TO 5                                     FORCE
      EI=.5*EI                                                           FORCE
      DI=.5*DI                                                           FORCE
    5 ELC=ELC+EI                                                         FORCE
      DRC=DRC+DI                                                         FORCE
   10 CONTINUE                                                           FORCE
      CLL=0.0                                                            FORCE
      CDL=0.0                                                            FORCE
      DO 20 I=2,IMAX                                                     FORCE
      PF=0.5*CPP(I-1)                                                    FORCE
      EI=PF*ELI(I)                                                       FORCE
      DI=PF*DRI(I)                                                       FORCE
      IF(I.NE.2.AND.I.NE.IMAX) GO TO 15                                  FORCE
      EI=0.5*EI                                                          FORCE
      DI=0.5*DI                                                          FORCE
   15 CLL=CLL+EI                                                         FORCE
      CDL=CDL+DI                                                         FORCE
   20 CONTINUE                                                           FORCE
    1 FORMAT(5X,I4,11F10.4)                                              FORCE
      CL=2.0*ELC*DX/AZ                                                   FORCE
      CD=2.0*DRC*DX/AZ                                                   FORCE
      CLL=DX/AZ*2.0*CLL                                                  FORCE
      CDL=DX/AZ*2.0*CDL                                                  FORCE
      CLU=CL-CLL                                                         FORCE
      CDU=CD-CDL                                                         FORCE
      XLD=CL/CD                                                          FORCE
      XLDU=CLU/CDU                                                       FORCE
      XLDL=CLL/CDL                                                       FORCE
C                                                                        FORCE
      WRITE(6,120) CL,CD,CLU,CLL,CDU,CDL,XLD,XLDU,XLDL                   FORCE
      IF(ETADR.EQ.0.0) RETURN                                            FORCE
      CLETDR=0.0                                                         FORCE
      CDETDR=0.0                                                         FORCE
      ISUM1=INITL+1                                                      FORCE
      ISUM2=IFINL-1                                                      FORCE
      DO 30 I=ISUM1,ISUM2                                                FORCE
      CLDELT=DX/AZ*(CPP(I-1)*ELI(I)+CPP(I-2)*ELI(I-1))/2.0               FORCE
      CDDELT=DX/AZ*(CPP(I-1)*DRI(I)+CPP(I-2)*DRI(I-1))/2.0               FORCE
      CLETDR=CLETDR+CLDELT                                               FORCE
   30 CDETDR=CDETDR+CDDELT                                               FORCE
C                                                                        FORCE
C      ADD END POINTS                                                    FORCE
C                                                                        FORCE
      DXI=X(INITL)-FLIN(X(INITL-1),X(INITL),ETADR*XMAX,                  FORCE
     1 XXB(INITL-2),XXB(INITL-1))                                        FORCE
      XINITL=X(INITL)-DXI                                                FORCE
      DXF=FLIN(X(IFINL-1),X(IFINL),ETADR*XMAX,XXB(IFINL-2),              FORCE
     1    XXB(IFINL-1))-X(IFINL-1)                                       FORCE
      XFINAL=X(IFINL-1)+DXF                                              FORCE
      FIL=FLIN(CPP(INITL-2)*ELI(INITL-1),CPP(INITL-1)*ELI(INITL),        FORCE
     1    XINITL,X(INITL-1),X(INITL))                                    FORCE
      FFL=FLIN(CPP(IFINL-2)*ELI(IFINL-1),CPP(IFINL-1)*ELI(IFINL),        FORCE
     1 XFINAL,X(IFINL-1),X(IFINL))                                       FORCE
      FID=FLIN(CPP(INITL-2)*DRI(INITL-1),CPP(INITL-1)*DRI(INITL),        FORCE
     1     XINITL,X(INITL-1),X(INITL))                                   FORCE
      FFD=FLIN(CPP(IFINL-2)*DRI(IFINL-1),CPP(IFINL-1)*DRI(IFINL),        FORCE
     1    XFINAL,X(IFINL-1),X(IFINL))                                    FORCE
      XIFIL=DXI/AZ*(CPP(INITL-1)*ELI(INITL)+FIL)/2.0                     FORCE
      XIFFL=DXF/AZ*(FFL+CPP(IFINL-2)*ELI(IFINL-1))/2.0                   FORCE
      XIFID=DXI/AZ*(CPP(INITL-1)*DRI(INITL)+FID)/2.0                     FORCE
      XIFFD=DXF/AZ*(FFD+CPP(IFINL-2)*DRI(IFINL-1))/2.0                   FORCE
      CLETDR=CLETDR+XIFIL+XIFFL                                          FORCE
      CDETDR=CDETDR+XIFID+XIFFD                                          FORCE
C                                                                        FORCE
      WRITE(6,125) INITL,IFINL,ETADR,CLETDR,CDETDR                       FORCE
C                                                                        FORCE
  120 FORMAT(//5X,4HCL =,F8.4,6X,4HCD =,F8.4//4X,                        FORCE
     15H CLU=,F8.4,6X,4HCLL=,F8.4//5X,4HCDU=,F8.4,                       FORCE
     2 6X,4HCDL=,F8.4//5X,4HL/D=,F8.3,6X,                                FORCE
     3 11HL/D UPPER =,F8.3,6X,11HL/D LOWER =,F8.4/)                      FORCE
  125 FORMAT(//10X,6HINITL=,I3,10X,6HIFINL=,I3,//10X,                    FORCE
     1 6HETADR=,F6.3,5X,10HCL(ETADR)=,F7.4,5X,10HCD(ETADR)=,F7.4/)       FORCE
C                                                                        FORCE
      RETURN                                                             FORCE
      END                                                                FORCE
C  DECK050 FORTH LIDRAG    VERSION OF 76/05/20 AT 03.59.51  ( 057729)    LIDRAG 
      SUBROUTINE LIDRAG                                                  LIDRAG 
C                                                                        LIDRAG 
C      WING SPAN EFFICIENCY [E[ IS COMPUTED BY FOURIER ANALYSIS          LIDRAG 
C                                                                        LIDRAG 
C     WRITTEN BY DAVE IVES, RESEARCH, X2221, 4-5-72                      LIDRAG 
C                                                                        LIDRAG 
      COMMON /LDRG/ CCLCA(80),ETASPN(80),ISPNXX,EDRAG                    LDRG 
      DIMENSION X(80),F(80)                                              LIDRAG 
      NOUT=6                                                             LIDRAG 
      DO 110 J=1,ISPNXX                                                  LIDRAG 
      X(J)=ETASPN(J)                                                     LIDRAG 
  110 F(J)=CCLCA(J)                                                      LIDRAG 
      M=32                                                               LIDRAG 
      CALL MAST(ISPNXX,M,X,F,SUM,A1,NOUT)                                LIDRAG 
      E = A1**2 / SUM                                                    LIDRAG 
      EDRAG=E                                                            LIDRAG 
      RETURN                                                             LIDRAG 
      END                                                                LIDRAG 
C  DECK057 FORTH MAST      VERSION OF 76/06/17 AT 16.33.37  ( 029941)    MAST 
      SUBROUTINE MAST (N,M,X,F,SUM,A1,NOUT)                              MAST 
      DIMENSION X(1),F(1),X2(512),F2(129)                                MAST 
      DIMENSION A(255),B(255),XX(512)                                    MAST 
      DIMENSION FX(129),FXX(129),FXXX(129)                               MAST 
      DIMENSION YY(514),Z(1024),W(512)                                   MAST 
      EQUIVALENCE (W(1),X2(1)),(Z(1),F2(1)),(Z(130),FX(1)),              MAST 
     1     (Z(259),FXX(1)),(Z(388),FXXX(1))                              MAST 
C     N MUST NOT EXCEED 129                                              MAST 
C     THE LARGEST PRIME FACTOR OF M SHOULD NOT EXCEED ELEVEN             MAST 
C     M=4*N (OR THEREABOUTS) IS RECOMMENDED, WHERE POSSIBLE              MAST 
C     IF M EXCEEDS 128 IT IS RESET TO 128                                MAST 
C     GAMMA AT THE TIP OF THE WING IS AUTOMATICALLY ZEROED               MAST 
      IF(M.GT.128) M=128                                                 MAST 
      IF(N.GT.129) RETURN                                                MAST 
      DO 1 I=1,N                                                         MAST 
    1 XX(I)=-ACOS(X(I))                                                  MAST 
      F(N)=0.                                                            MAST 
      CALL FIT2(N,XX,F,FX,FXX,FXXX,1,2,0.0D0,0.0D0)                      MAST 
      DX=(XX(N)-XX(1))/M                                                 MAST 
      X2(1)=XX(1)                                                        MAST 
      MP=M+1                                                             MAST 
      DO 10 I=2,MP                                                       MAST 
   10 X2(I)=X2(I-1)+DX                                                   MAST 
      CALL DELTA1(N,XX,MP,X2)                                            MAST 
      CALL INTERX(MP,F,FX,FXX,FXXX,F2)                                   MAST 
      F2(MP)=0.                                                          MAST 
      DO 11 I=1,M                                                        MAST 
      XX(I)=F2(MP-I+1)                                                   MAST 
      XX(I+M)=F2(I)                                                      MAST 
      XX(I+2*M)=-F2(MP-I+1)                                              MAST 
   11 XX(I+3*M)=-F2(I)                                                   MAST 
      CALL SERIES(XX,M*4,AZ,A,B,AN,YY,Z,W)                               MAST 
      SUM=0.                                                             MAST 
      M2M=2*M-1                                                          MAST 
      DO 12 I=1,M2M                                                      MAST 
   12 SUM=SUM+I*B(I)**2                                                  MAST 
      A1=B(1)                                                            MAST 
      RETURN                                                             MAST 
      END                                                                MAST 
C  DECK056 FORTH DELTA1    VERSION OF 76/04/24 AT 06.32.20  ( 055231)    DELTA1 
      SUBROUTINE DELTA1 (MI1,X1,MI2,X2)                                  DELTA1 
      DIMENSION X1(1),X2(1)                                              DELTA1 
      COMMON /INTIVE/ D2(129),L2(129)                                    INTIVE 
      MI1M1=MI1-1                                                        DELTA1 
      MI2M1=MI2-1                                                        DELTA1 
      L2(1)=1                                                            DELTA1 
      D2(1)=0.0                                                          DELTA1 
      IS=1                                                               DELTA1 
      DO 3 I2=2,MI2M1                                                    DELTA1 
      DO 1 I1=IS,MI1M1                                                   DELTA1 
      IF (X1(I1+1).GT.X2(I2)) GO TO 2                                    DELTA1 
    1 CONTINUE                                                           DELTA1 
    2 IS=I1                                                              DELTA1 
      L2(I2)=IS                                                          DELTA1 
    3 D2(I2)=X2(I2)-X1(IS)                                               DELTA1 
      L2(MI2)=MI1                                                        DELTA1 
      D2(MI2)=0.0                                                        DELTA1 
      RETURN                                                             DELTA1 
      END                                                                DELTA1 
C  DECK054 FORTH FIT2      VERSION OF 76/04/24 AT 06.32.20  ( 055231)    FIT2 
      SUBROUTINE FIT2 (N,X,F,FX,FXX,FXXX,K1,KN,END1,ENDN)                FIT2 
      DIMENSION X(1),F(1),FX(1),FXX(1),FXXX(1)                           FIT2 
      NM1=N-1                                                            FIT2 
      IF (N.LT.3) X(N+1)=X(N)+1.0                                        FIT2 
      IF (N.LT.3) F(N+1)=F(N)                                            FIT2 
      DX2=X(2)-X(1)                                                      FIT2 
      GO TO (1,2,3),K1                                                   FIT2 
    1 FX(1)=0.5                                                          FIT2 
      FXXX(1)=3.*((F(2)-F(1))/DX2-END1)/DX2                              FIT2 
      GO TO 4                                                            FIT2 
    2 FX(1)=0.0                                                          FIT2 
      FXXX(1)=END1                                                       FIT2 
      GO TO 4                                                            FIT2 
    3 FX(1)=-1.0                                                         FIT2 
      FXXX(1)=-DX2*END1                                                  FIT2 
    4 DO 5 I=2,NM1                                                       FIT2 
      DX1=X(I)-X(I-1)                                                    FIT2 
      DX2=X(I+1)-X(I)                                                    FIT2 
      FX(I)=.5*DX2/(DX1+DX2-.5*DX1*FX(I-1))                              FIT2 
    5 FXXX(I)=(6.*(F(I+1)-F(I))/DX2-6.*(F(I)-F(I-1))/DX1-DX1*FXXX(I-1))  FIT2 
     1*FX(I)/DX2                                                         FIT2 
      DX1=X(N)-X(NM1)                                                    FIT2 
      FX(N)=0.0                                                          FIT2 
      GO TO (6,7,8),KN                                                   FIT2 
    6 FXXX(N)=(6.*(ENDN-(F(N)-F(NM1))/DX1)/DX1-FXXX(NM1))/(2.-FX(NM1))   FIT2 
      GO TO 9                                                            FIT2 
    7 FXXX(N)=ENDN                                                       FIT2 
      GO TO 9                                                            FIT2 
    8 FXXX(N)=(ENDN*DX1+FXXX(NM1))/(1.+FX(NM1))                          FIT2 
    9 FXX(N)=FXXX(N)                                                     FIT2 
      DO 10 II=1,NM1                                                     FIT2 
      I=N-II                                                             FIT2 
      DX2=X(I+1)-X(I)                                                    FIT2 
      FXX(I)=FXXX(I)-FX(I)*FXX(I+1)                                      FIT2 
      FXXX(I)=(FXX(I+1)-FXX(I))/DX2                                      FIT2 
   10 FX(I)=(F(I+1)-F(I))/DX2-DX2*(FXX(I+1)+2.*FXX(I))/6.                FIT2 
      FXXX(N)=FXXX(NM1)                                                  FIT2 
      DX1=X(N)-X(NM1)                                                    FIT2 
      FX(N)=(F(N)-F(NM1))/DX1+DX1*(FXX(NM1)+2.*FXX(N))/6.                FIT2 
      RETURN                                                             FIT2 
      END                                                                FIT2 
C  DECK055 FORTH INTERX    VERSION OF 76/04/24 AT 06.32.20  ( 055231)    INTERX 
      SUBROUTINE INTERX (MI2,F,FX,FXX,FXXX,FO)                           INTERX 
      DIMENSION F(1),FX(1),FXX(1),FXXX(1),FO(1)                          INTERX 
      COMMON /INTIVE/ D2(129),L2(129)                                    INTIVE 
      DO 1 I=1,MI2                                                       INTERX 
      IS=L2(I)                                                           INTERX 
    1 FO(I)=F(IS)+D2(I)*(FX(IS)+0.5*D2(I)*(FXX(IS)+D2(I)*                INTERX 
     1      FXXX(IS)/3.))                                                INTERX 
      RETURN                                                             INTERX 
      END                                                                INTERX 
C  DECK053 FORTH SERIES    VERSION OF 76/04/24 AT 06.32.20  ( 055231)    SERIES 
      SUBROUTINE SERIES (Y,N2,AZ,A,B,AN,YY,Z,W)                          SERIES 
C     DETERMINATION OF COEFFICIENTS IN SERIES BY DAVID IVES, GRUMMAN AER SERIES 
C     Y(K)..INPUT VALUE OF FUNCTION AT AN ANGLE OF TK=2.*PI*(K-1)/N2     SERIES 
C           FOR K=1 TO K=N2                                              SERIES 
C     PI....3.14159265358979324.....                                     SERIES 
C     N2....EVEN NUMBER OF INPUT FUNCTION VALUES                         SERIES 
C     N.....N2/2                                                         SERIES 
C     AZ....CONSTANT TERM IN SERIES                                      SERIES 
C     A.....(N-1) REAL OUTPUT VALUES OF COEFFICIENTS IN COSINE SERIES    SERIES 
C     B.....(N-1) REAL OUTPUT VALUES OF COEFFICIENTS IN SINE SERIES      SERIES 
C     AN....COSINE(N*TK) TERM IN SERIES                                  SERIES 
C     YY....DUMMY STORAGE OF LENGTH 2*N+2 (REAL)                         SERIES 
C     Z.....DUMMY STORAGE OF LENGTH 4*N (REAL)                           SERIES 
C     W.....DUMMY STORAGE OF LENGTH 2*N (REAL)                           SERIES 
C     ****************************************************************** SERIES 
C             L=N-1                                                      SERIES 
C     Y(K)=AZ+ SUM (A(L)*DCOS(L*TK)+B(L)*DSIN(L*TK))+AN*DCOS(N*TK)       SERIES 
C              L=1                                                       SERIES 
C     ****************************************************************** SERIES 
      DIMENSION Y(1),A(1),B(1),YY(1),Z(1),W(1)                           SERIES 
      N=N2/2                                                             SERIES 
      CALL RFAST(Y,YY,N2,Z,W)                                            SERIES 
      AZ=YY(1)/N2                                                        SERIES 
      DO 1 I=2,N                                                         SERIES 
      A(I-1)=YY(2*I-1)/N                                                 SERIES 
    1 B(I-1)=-YY(2*I)/N                                                  SERIES 
      AN=YY(2*N+1)/N2                                                    SERIES 
      RETURN                                                             SERIES 
      END                                                                SERIES 
C  DECK052 FORTH RFAST     VERSION OF 76/04/24 AT 06.32.20  ( 055231)    RFAST
      SUBROUTINE RFAST(X,Y,N,Z,W)                                        RFAST
C     FAST FOURIER TRANSFORM OF REAL DATA BY DAVID IVES, GRUMMAN AEROSPA RFAST
C     X.....N REAL INPUT VALUES                                          RFAST
C     Y.....N/2+1 COMPLEX OUTPUT VALUES                                  RFAST
C     N.....EVEN NUMBER OF INPUT VALUES                                  RFAST
C     Z.....DUMMY STORAGE OF LENGTH 2N (REAL)                            RFAST
C     W.....DUMMY STORAGE OF LENGTH N (REAL)                             RFAST
C     N MUST BE 4 OR MORE                                                RFAST
C     THIS PRODUCES @OUTPUT Y@ FROM @INPUT X@, WHERE                     RFAST
C     ****************************************************************** RFAST
C          K=N                                                           RFAST
C     Y(J)=SUM X(K)*EXP(-I*2*PI*(J-1)*(K-1)/N)                           RFAST
C          K=1                                                           RFAST
C     ****************************************************************** RFAST
C     FOR J=1 TO J=N                                                     RFAST
C     WITH I=SQRT(-1) AND PI=3.14159........                             RFAST
C     NOTE THAT Y(N-J+2)=CONJ(Y(J)) FOR J=1 TO J=N/2+1                   RFAST
C     THUS ONLY Y(1) TO Y(N/2+1) ARE CALCULATED                          RFAST
C     COMPLEX NUMBERS ARE HANDLED IN FORTRAN 4 CONVENTION, NAMELY THE    RFAST
C     REAL AND IMAGINARY PARTS ARE STORED IN ALTERNATE CELLS, STARTING   RFAST
C     WITH THE REAL PART OF Y(1) IN THE FIRST LOCATION, ETC.             RFAST
      DIMENSION X(1),Y(1),W(1),Z(1)                                      RFAST
      N2=N/2                                                             RFAST
      Y(N+1)=0.                                                          RFAST
      DO 2 J=2,N,2                                                       RFAST
    2 Y(N+1)=Y(N+1)+X(J-1)-X(J)                                          RFAST
      Y(N+2)=0.                                                          RFAST
      CALL FAST(X,Y,N2,Z,W)                                              RFAST
      DO 1 J=2,N2,2                                                      RFAST
      SJ=SIN((3.14159265358979324*(J/2))/N2)                             RFAST
      CJ=COS((3.14159265358979324*(J/2))/N2)                             RFAST
      JR=N-J                                                             RFAST
      Y1=Y(J+1)                                                          RFAST
      Y2=Y(J+2)                                                          RFAST
      Y3=Y(JR+1)                                                         RFAST
      Y4=Y(JR+2)                                                         RFAST
      Y(J+1)=.5*(Y1+Y3-SJ*(Y1-Y3)+CJ*(Y2+Y4))                            RFAST
      Y(J+2)=.5*(Y2-Y4-CJ*(Y1-Y3)-SJ*(Y2+Y4))                            RFAST
      Y(JR+1)=.5*(Y1+Y3+SJ*(Y1-Y3)-CJ*(Y2+Y4))                           RFAST
    1 Y(JR+2)=.5*(Y4-Y2-CJ*(Y1-Y3)-SJ*(Y2+Y4))                           RFAST
      Y(1)=Y(1)+Y(2)                                                     RFAST
      Y(2)=0.                                                            RFAST
      RETURN                                                             RFAST
      END                                                                RFAST
C  DECK051 FORTH FAST      VERSION OF 76/04/24 AT 06.32.20  ( 055231)    FAST 
      SUBROUTINE FAST(X,Y,N,Z,W)                                         FAST 
C     FAST FOURIER TRANSFORM OF COMPLEX DATA BY DAVID IVES, GRUMMAN AERO FAST 
C     X.....N INPUT VALUES (COMPLEX)                                     FAST 
C     Y.....N OUTPUT VALUES (COMPLEX)                                    FAST 
C     N.....NUMBER OF VALUES                                             FAST 
C     Z.....DUMMY STORAGE OF LENGTH 2N (COMPLEX)                         FAST 
C     W.....DUMMY STORAGE OF LENGTH N (COMPLEX)                          FAST 
C     THIS PRODUCES @OUTPUT Y@ FROM @INPUT X@, WHERE                     FAST 
C     ****************************************************************** FAST 
C          K=N                                                           FAST 
C     Y(J)=SUM X(K)*EXP(-I*2*PI*(J-1)*(K-1)/N)                           FAST 
C          K=1                                                           FAST 
C     ****************************************************************** FAST 
C     WITH I=SQRT(-1) AND PI=3.14159........                             FAST 
C     COMPLEX NUMBERS ARE HANDLED IN FORTRAN 4 CONVENTION, NAMELY THE    FAST 
C     REAL AND IMAGINARY PARTS ARE STORED IN ALTERNATE CELLS, STARTING   FAST 
C     WITH THE REAL PART OF X(1) IN THE FIRST LOCATION, ETC.             FAST 
C     TO OBTAIN X FROM Y, TAKE THE CONJUGATE OF Y AS THE @INPUT X@,THEN  FAST 
C     DIVIDE THE CONJUGATE OF THE @OUTPUT Y@ BY @N@ TO OBTAIN X          FAST 
      DIMENSION X(1),Z(1),W(1),Y(1)                                      FAST 
      MOD(K,J)=K-(K/J)*J                                                 FAST 
      DO 1 I=1,N                                                         FAST 
      W(2*I-1)=COS((6.28318530717958647/N)*(I-1))                        FAST 
      W(2*I)= -SIN((6.28318530717958647/N)*(I-1))                        FAST 
      Z(2*I-1)=X(2*I-1)                                                  FAST 
    1 Z(2*I)=X(2*I)                                                      FAST 
      ID=N                                                               FAST 
      IS=1                                                               FAST 
      J=0                                                                FAST 
    2 DO 3 IX=2,ID                                                       FAST 
      IF(MOD(ID,IX)) 4,4,3                                               FAST 
    3 CONTINUE                                                           FAST 
    4 ID=ID/IX                                                           FAST 
      IS=IS*IX                                                           FAST 
      J=J+1                                                              FAST 
      DO 5 L1=1,IS                                                       FAST 
      DO 5 L=1,ID                                                        FAST 
      JMK=(MOD(L+(L1-1)*ID*IX,N)+MOD(J+1,2)*N)*2                         FAST 
      JPI=(L+(L1-1)*ID+MOD(J,2)*N)*2                                     FAST 
      Z(JPI-1)=Z(JMK-1)                                                  FAST 
      Z(JPI)=Z(JMK)                                                      FAST 
      DO 5 IH=2,IX                                                       FAST 
      IG=(MOD((L1-1)*ID*(IH-1),N)+1)*2                                   FAST 
      IU=JMK+(IH-1)*ID*2                                                 FAST 
      Z(JPI-1)=Z(JPI-1)+Z(IU-1)*W(IG-1)-Z(IU)*W(IG)                      FAST 
    5 Z(JPI)=Z(JPI)+Z(IU)*W(IG-1)+Z(IU-1)*W(IG)                          FAST 
      IF(ID-1) 6,6,2                                                     FAST 
    6 DO 7 I=1,N                                                         FAST 
      JPI=MOD(J,2)*N+I                                                   FAST 
      Y(2*I-1)=Z(2*JPI-1)                                                FAST 
    7 Y(2*I)=Z(2*JPI)                                                    FAST 
      RETURN                                                             FAST 
      END                                                                FAST 
      SUBROUTINE SIMP(R,X,Y,N,IER)                                       SIMP 
C                                                                        SIMP 
C      INTEGRATION OF ARBITRARILY SPACED TABULATION                      SIMP 
C                                                                        SIMP 
C      FROM NASA AMES (2ND ORDER-NOT SIMPSON@S RULE)                     SIMP 
C                                                                        SIMP 
C      R- INTEGRAL OF Y   FROM X(1) TO X(N)                              SIMP 
C      X- INDEPENDENT VARIABLE                                           SIMP 
C      Y- DEPENDENT VARIABLE                                             SIMP 
C      N- NUMBER OF X@S INPUT                                            SIMP 
C      IER=1 NORMAL OPERATION                                            SIMP 
C         =2 N LT OR EQ 1                                                SIMP 
C         =4 INPUT INDEPENDENT VARIABLE NOT MONOTONIC                    SIMP 
C                                                                        SIMP 
      DIMENSION X(N),Y(N)                                                SIMP 
      R=0.0                                                              SIMP 
      IF(N.GT.1) GO TO 1                                                 SIMP 
      IER=2                                                              SIMP 
      RETURN                                                             SIMP 
    1 IF(X(1).EQ.X(2)) GO TO 12                                          SIMP 
      NM1=N-1                                                            SIMP 
      IF(N.EQ.2) GO TO 13                                                SIMP 
      IF(X(1).LT.X(2)) GO TO 3                                           SIMP 
C                                                                        SIMP 
C******* TEST FOR X TO BE MONOTONICALLY DECREASING ********************  SIMP 
C                                                                        SIMP 
      DO 2 I=2,NM1                                                       SIMP 
      IF(X(I+1).GE.X(I)) GO TO 12                                        SIMP 
    2 CONTINUE                                                           SIMP 
      GO TO 5                                                            SIMP 
C                                                                        SIMP 
C******* TEST FOR X TO BE MONOTONICALLY INCREASING ********************  SIMP 
C                                                                        SIMP 
    3 DO 4 I=2,NM1                                                       SIMP 
      IF(X(I+1).LE.X(I)) GO TO 12                                        SIMP 
    4 CONTINUE                                                           SIMP 
    5 NM2=N-2                                                            SIMP 
      IF(MOD(N,2).EQ.0) GO TO 14                                         SIMP 
      P=0.0                                                              SIMP 
      N1=1                                                               SIMP 
    6 S1=X(N1+1)-X(N1)                                                   SIMP 
      S2=X(N1+2)-X(N1+1)                                                 SIMP 
      S3=X(NM1)-X(NM2)                                                   SIMP 
      S4=X(N)-X(NM1)                                                     SIMP 
      R=(2.*S1**2+S1*S2-S2**2)/S1*Y(N1)+(2.*S4**2+S3*S4-S3**2)/S4*Y(N)   SIMP 
      N1=N1+1                                                            SIMP 
      DO 7 I=N1,NM1,2                                                    SIMP 
      S1=X(I)-X(I-1)                                                     SIMP 
      S2=X(I+1)-X(I)                                                     SIMP 
    7 R=R+(S1+S2)**3/(S1*S2)*Y(I)                                        SIMP 
      IF(N.LT.5) GO TO 9                                                 SIMP 
      N1=N1+1                                                            SIMP 
      DO 8 I=N1,NM2,2                                                    SIMP 
      S1=X(I-1)-X(I-2)                                                   SIMP 
      S2=X(I)-X(I-1)                                                     SIMP 
      S3=X(I+1)-X(I)                                                     SIMP 
      S4=X(I+2)-X(I+1)                                                   SIMP 
    8 R=R+((2.*S2**2+S1*S2-S1**2)/S2+(2.*S3**2+S3*S4-S4**2)/S3)*Y(I)     SIMP 
    9 R=R/6.+P                                                           SIMP 
   10 IER=1                                                              SIMP 
      RETURN                                                             SIMP 
   12 IER=4                                                              SIMP 
      RETURN                                                             SIMP 
C                                                                        SIMP 
C******* TRAPEZOIDAL RULE FOR N=2 *************************************  SIMP 
C                                                                        SIMP 
   13 R=(X(2)-X(1))*(Y(1)+Y(2))/2.0                                      SIMP 
      GO TO 10                                                           SIMP 
C                                                                        SIMP 
C******* FIT POLYNOMIAL THRU FIRST 3 POINTS AND INTEGRATE FROM ********  SIMP 
C******* X(1) TO X(2) *************************************************  SIMP 
C                                                                        SIMP 
   14 S1=X(2)-X(1)                                                       SIMP 
      S2=X(3)-X(1)                                                       SIMP 
      S3=Y(2)-Y(1)                                                       SIMP 
      S4=Y(3)-Y(1)                                                       SIMP 
      P=S1/6.*(2.*S3+6.*Y(1)+(S2**2*S3-S1**2*S4)/(S2*(S2-S1)))           SIMP 
      N1=2                                                               SIMP 
      GO TO 6                                                            SIMP 
      END                                                                SIMP 
      SUBROUTINE INIT(K)                                                 INIT 
C                                                                        INIT 
C      BODY GEOMETRY AND INITIAL OUTER BOUDARY INPUT, MAPPING,           INIT 
C      SPLINE FIT, AND DERIVATIVES. INITIAL DATA FOR POTENTIAL           INIT 
C      AND GRID REFINEMENTS                                              INIT 
C                                                                        INIT 
      COMMON/BLK1/LIN,LOUT,IC,JC,KT,DX,DY,WW,GA,EMINF,A02,GAMMA          BLK1 
     1 ,DELMIN,PI,PIO2,ALP,IPLOT,EST,NSHKR,KSHKR,JDRLX,ETADR,EPSHKI,     BLK1 
     2 TESWP,KCCC,XORIGC,YORIGC,DALP,IMOD,IEQV,XSTN,IEQV3                BLK1 
      COMMON /BLK2/ F(60,60),H(60,60),X(115),Y(115),B(115),              BLK2 
     1       BPR(115),BSEC(115),C(115),CPR(115),CSEC(115)                BLK2 
      COMMON/MAP/S0,S1,S2,PII,CSCAL                                      MAP
      COMMON /IODAT/ XLGNO,IREAD,IWRIT,IOUT,IRPTS,IOUT2,IPUNCH           IODAT
      COMMON/GEO/ NG,NS,AZ,BZ,CC(5),CT(5),CM(5),LC,LT,LM                 GEO
      COMMON /GEOIN/ RRZ(201),THZ(201),X0,Y0,Y1,NM,NGH,NMH               GEOIN
      COMMON /DESGN/ CPP(120),EMST(120),CPPEX(120),XCP(120),             DESGN
     1 NCP,IDESIN,KDES,KDESMX,YYB1(120),CPP1(120),SUMDCP(50),            DESGN
     2 STARTC,BETAM(120),NSTART,WDES                                     DESGN
      COMPLEX S0,S1,S2                                                   INIT 
      DIMENSION RRZS(201),RHOB(401),                                     INIT 
     1 THEB(401),FP(401),FPP(401),FPPP(401),RHOS(401),THES(401),         INIT 
     2 FPS(401),FPPS(401),FPPPS(401)                                     INIT 
      EQUIVALENCE (H(1,1),RHOB(1)),(H(41,7),THEB(1)),                    INIT 
     1            (H(22,14),FP(1)),(H(3,21),FPP(1)),                     INIT 
     2            (H(44,27),FPPP(1)),(H(25,34),RHOS(1)),                 INIT 
     3            (H(6,41),THES(1)),(H(47,47),FPS(1)),                   INIT 
     4            (H(28,54),RRZS(1))                                     INIT 
 1000 FORMAT(//5X,30HMAPPED BODY (B) AND SHOCK (C) ,                     INIT 
     1 51HLOCATIONS - WITH 1ST (PR) AND 2ND (SEC) DERIVATIVES )          INIT 
 1001 FORMAT(///4X,1HI,8X,1HX,14X,1HB,13X,3HBPR,12X,4HBSEC,12X,1HC,13X,  INIT 
     1 3HCPR,12X,4HCSEC/)                                                INIT 
 1002 FORMAT(I5,7E15.5)                                                  INIT 
 1010 FORMAT(//5X,3HX0=,F10.5,6X,3HY0=,F10.6,6X,3HY1=,F10.6,6X,3HNM=,    INIT 
     1 I3/)                                                              INIT 
      IF(KDES.GE.2) GO TO 6                                              INIT 
      PII=PI                                                             INIT 
      CSCAL=AZ*AZ/(SQRT(1.+AZ*AZ)-1.)                                    INIT 
C                                                                        INIT 
C      GEOMETRY INPUT                                                    INIT 
C                                                                        INIT 
      WRITE(LOUT,1010) X0,Y0,Y1,NM                                       INIT 
      GO TO 8                                                            INIT 
    6 CONTINUE                                                           INIT 
C                                                                        INIT 
C      SINGULARITY CALCULATION AND MAPPING OF INPUT GEOMETRY             INIT 
C                                                                        INIT 
    8 OMEG0=0.                                                           INIT 
      IF(X0.NE.0.) OMEG0=ATAN2(Y0,X0)                                    INIT 
      PSI0=ATAN(SQRT(X0*X0+Y0*Y0))                                       INIT 
      SIG0=CSCAL*TAN(.5*PSI0)                                            INIT 
      P0=SIG0*COS(OMEG0)                                                 INIT 
      Q0=SIG0*SIN(OMEG0)                                                 INIT 
      PSI1=ATAN(Y1)                                                      INIT 
      H0=CSCAL*TAN(.5*PSI1)                                              INIT 
      Q2=.5*(H0+Q0)                                                      INIT 
      S0=CMPLX(P0,Q0)                                                    INIT 
      S1=CMPLX(P0,-Q0)                                                   INIT 
      S2=CMPLX(0.,Q2)                                                    INIT 
      CALL CONF(NG,RRZ,THZ,RHOB,THEB,CSCAL,NM,0)                         INIT 
      NCC=2*(NG-1)                                                       INIT 
      NC1=NG+1                                                           INIT 
C                                                                        INIT 
C      REFLECTION OF MAPPED GEOMETRY ABOUT SYMMETRY PLANE                INIT 
C                                                                        INIT 
      DO 10 N=NC1,NCC                                                    INIT 
      N1=2*NG-N                                                          INIT 
      RHOB(N)=RHOB(N1)                                                   INIT 
      THEB(N)=PI-THEB(N1)                                                INIT 
   10 CONTINUE                                                           INIT 
C                                                                        INIT 
C      SPLINE FIT COEFFICIENTS OF MAPPED GEOMETRY                        INIT 
C                                                                        INIT 
      CALL PCS(NCC,RHOB,FP,FPP,FPPP,THEB)                                INIT 
      IF(K.GT.1) GO TO 100                                               INIT 
C                                                                        INIT 
C                                                                        INIT 
C                                                                        INIT 
C      INITIAL GUESS FOR OUTER BOUNDARY AND SUBSEQUENT MAPPING,          INIT 
C      REFLECTION AND SPLINE FIT COEFFICIENTS                            INIT 
C                                                                        INIT 
      CALL SHOCKI(NG,RRZS,RRZ,THZ,EMINF,ALP,EPSHKI)                      INIT 
      CALL CONF(NG,RRZS,THZ,RHOS,THES,CSCAL,NM,1)                        INIT 
      DO 20 N=NC1,NCC                                                    INIT 
      N1=2*NG-N                                                          INIT 
      RHOS(N)=RHOS(N1)                                                   INIT 
      THES(N)=PI-THES(N1)                                                INIT 
   20 CONTINUE                                                           INIT 
      CALL PCS(NCC,RHOS,FPS,FPPS,FPPPS,THES)                             INIT 
      IF(KDES.GE.2) GO TO 200                                            INIT 
C                                                                        INIT 
C      INITIALIZATION OF POTENTIAL,K=1                                   INIT 
C                                                                        INIT 
      DO 30 J=2,JC                                                       INIT 
      DO 30 I=2,IC                                                       INIT 
   30 F(I,J)=0.                                                          INIT 
      GO TO 200                                                          INIT 
C                                                                        INIT 
C      MESH REFINEMENT AND ASSOCIATED INTERPOLATION                      INIT 
C                                                                        INIT 
  100 IC=2*(IC-1)                                                        INIT 
      JC=2*(JC-1)                                                        INIT 
      NS=2*NS                                                            INIT 
      DO 110 JJ=2,JC,2                                                   INIT 
      JN=JC-JJ+2                                                         INIT 
      JO=JN/2+1                                                          INIT 
      DO 110 II=2,IC,2                                                   INIT 
      IN=IC-II+2                                                         INIT 
      IO=IN/2+1                                                          INIT 
  110 F(IN,JN)=F(IO,JO)                                                  INIT 
      DO 120 J=2,JC,2                                                    INIT 
      DO 120 I=3,IC,2                                                    INIT 
  120 F(I,J)=.5*(F(I+1,J)+F(I-1,J))                                      INIT 
      DO 130 J=3,JC,2                                                    INIT 
      DO 130 I=2,IC                                                      INIT 
  130 F(I,J)=.5*(F(I,J+1)+F(I,J-1))                                      INIT 
      DO 140 II=2,IC,2                                                   INIT 
      IN=IC-II+2                                                         INIT 
      IO=IN/2+1                                                          INIT 
  140 C(IN)=C(IO)                                                        INIT 
      DO 150 I=3,IC,2                                                    INIT 
      CIP3=C(I+3)                                                        INIT 
      CIM3=C(I-3)                                                        INIT 
      IF(I.EQ.3) CIM3=C(4)                                               INIT 
      IF(I.EQ.IC-1) CIP3=C(IC-2)                                         INIT 
  150 C(I)=(9.*(C(I+1)+C(I-1))-(CIP3+CIM3))/16.                          INIT 
  200 DX=PI/FLOAT(IC-2)                                                  INIT 
      DY=1./FLOAT(JC-2)                                                  INIT 
      ICM=IC-1                                                           INIT 
      ICP=IC+1                                                           INIT 
      D2Y=.5/DY                                                          INIT 
      D2X=.5/DX                                                          INIT 
      DO 210 I=1,ICM                                                     INIT 
  210 X(I)=(I-1)*DX-PIO2                                                 INIT 
      DO 220 J=1,JC                                                      INIT 
  220 Y(J)=(J-2)*DY                                                      INIT 
C                                                                        INIT 
C      PERIODIC CUBIC SPLINE FIT OF MAPPED GEOMETRY AND OUTER            INIT 
C      BOUNDARY LOCATION                                                 INIT 
C                                                                        INIT 
      CALL DELTA(NCC,THEB,ICM,X)                                         INIT 
      CALL INTERP(ICM,RHOB,FP,FPP,FPPP,B,BPR,BSEC)                       INIT 
      IF(K.NE.1) GO TO 230                                               INIT 
      CALL DELTA(NCC,THES,ICM,X)                                         INIT 
      CALL INTERP(ICM,RHOS,FPS,FPPS,FPPPS,C,CPR,CSEC)                    INIT 
  230 DO 240 II=2,IC                                                     INIT 
      I=IC-II+2                                                          INIT 
      I1=I-1                                                             INIT 
      B(I)=B(I1)                                                         INIT 
      BPR(I)=BPR(I1)                                                     INIT 
      BSEC(I)=BSEC(I1)                                                   INIT 
      IF(K.NE.1) GO TO 240                                               INIT 
      C(I)=C(I1)                                                         INIT 
      CPR(I)=CPR(I1)                                                     INIT 
      CSEC(I)=CSEC(I1)                                                   INIT 
  240 X(I)=X(I1)                                                         INIT 
C                                                                        INIT 
C      SHIFT OF OUTER BOUNDARY LOCATION NS MESH POINTS FROM INITIAL      INIT 
C      ESTIMATES                                                         INIT 
C                                                                        INIT 
      C1=NS*DY                                                           INIT 
      C2=1./(1.-C1)                                                      INIT 
      IF(K.NE.1) GO TO 260                                               INIT 
      DO 250 I=2,IC                                                      INIT 
      C(I)=(C(I)-C1*B(I))*C2                                             INIT 
      CPR(I)=(CPR(I)-C1*BPR(I))*C2                                       INIT 
  250 CSEC(I)=(CSEC(I)-C1*BSEC(I))*C2                                    INIT 
  260 B(1)=B(3)                                                          INIT 
      C(1)=C(3)                                                          INIT 
      B(ICP)=B(ICM)                                                      INIT 
      C(ICP)=C(ICM)                                                      INIT 
C                                                                        INIT 
C      NUMERICAL DERIVATIVES OF MAPPED GEOMETRY  AND OUTER BOUNDARY      INIT 
C                                                                        INIT 
      DO 270 I=2,IC                                                      INIT 
      BPR(I)=(B(I+1)-B(I-1))*.5/DX                                       INIT 
      CPR(I)=(C(I+1)-C(I-1))*.5/DX                                       INIT 
      BSEC(I)=(B(I+1)+B(I-1)-2.*B(I))/(DX*DX)                            INIT 
  270 CSEC(I)=(C(I+1)+C(I-1)-2.*C(I))/(DX*DX)                            INIT 
      IF(IOUT2.EQ.2) GO TO 278                                           INIT 
      WRITE(LOUT,1000)                                                   INIT 
      WRITE(LOUT,1001)                                                   INIT 
      WRITE(LOUT,1002)(I,X(I),B(I),BPR(I),BSEC(I),C(I),CPR(I),CSEC(I)    INIT 
     1,I=2,IC)                                                           INIT 
      WRITE(LOUT,1001)                                                   MOD2 
  278 DO 280 J=2,JC                                                      INIT 
      F(1,J)=F(3,J)                                                      INIT 
  280 F(ICP,J)=F(ICM,J)                                                  INIT 
      RETURN                                                             INIT 
      END                                                                INIT 
      SUBROUTINE CONF(NT,RZ,OM,RHO,THE,C,NM,KODE)                        CONF 
C                                                                        CONF 
C      COMPLETE TRANSFORMATION FROM PHYSICAL TO MAPPED PLANE             CONF 
C      INCLUDING CONFORMAL MAPPING,SHERICAL COORDINATES R/Z,             CONF 
C      OMEGA TO RHO,THETA                                                CONF 
C                                                                        CONF 
      COMMON/MAP/S0,S1,S2,PII,CSCAL                                      MAP
      DIMENSION RZ(1),OM(1),RHO(1),THE(1)                                CONF 
      COMPLEX S,SS1,SS2,S0,S1,S2,A,G1,G                                  CONF 
      PI=PII                                                             CONF 
      DO 100 NN=1,NT                                                     CONF 
      N=NT-NN+1                                                          CONF 
      SIG=C*TAN(.5*ATAN(RZ(N)))                                          CONF 
      IF(CABS(S0).LT.1.E-4) GO TO 30                                     CONF 
      P=SIG*COS(OM(N))                                                   CONF 
      Q=SIG*SIN(OM(N))                                                   CONF 
      S=CMPLX(P,Q)                                                       CONF 
      SS1=S-S0                                                           CONF 
      SS2=S+S1                                                           CONF 
      R1=CABS(SS1)                                                       CONF 
      R2=CABS(SS2)                                                       CONF 
      T2=ATAN2(AIMAG(SS2),REAL(SS2))                                     CONF 
      T1=ATAN2(AIMAG(SS1),REAL(SS1))                                     CONF 
C     WRITE(6,500) N,SS1,T1                                              CONF 
C                                                                        CONF 
C      ROOT SELECTION                                                    CONF 
C                                                                        CONF 
  500 FORMAT(I5,5E20.5)                                                  CONF 
      IF(KODE.EQ.1) GO TO 20                                             CONF 
      IF(N.LT.NM.AND.T1.GT.0.) T1=T1-2.*PI                               CONF 
   20 CONTINUE                                                           CONF 
      A=SQRT(R1/R2)*CEXP(CMPLX(0.,1.)*.5*(T1-T2))                        CONF 
      G=.5*(S0+A*S1)/(1.-A)-S2                                           CONF 
      RHO(N)=CABS(G)                                                     CONF 
      THE(N)=ATAN2(AIMAG(G),REAL(G))                                     CONF 
C     WRITE(6,500) N,T1,RHO(N),THE(N)                                    CONF 
      GO TO 100                                                          CONF 
   30 RHO(N)=SIG                                                         CONF 
      THE(N)=OM(N)                                                       CONF 
  100 CONTINUE                                                           CONF 
      RETURN                                                             CONF 
      END                                                                CONF 
      SUBROUTINE DELTA (MI1,X1,MI2,X2)                                   DELTA
C                                                                        DELTA
C      COMPUTE INCREMENTS FOR INTERPOLATOON                              DELTA
C                                                                        DELTA
C      MI1- NO. OF OLD POINTS                                            DELTA
C      X1- NEW X LOCATIONS                                               DELTA
C      MI2- NO. OF NEW POINTS                                            DELTA
C      X2- NEW X LOCATIONS                                               DELTA
C                                                                        DELTA
      DIMENSION X1(1),X2(1)                                              DELTA
      COMMON /INT/ L(401),D(401)                                         INT
      MI1M1=MI1-1                                                        DELTA
      IS=1                                                               DELTA
      DO 3 I2=1,MI2                                                      DELTA
      DO 1 I1=IS,MI1M1                                                   DELTA
      IF(X1(I1+1).GT.X2(I2)) GO TO 2                                     DELTA
    1 CONTINUE                                                           DELTA
      I1=MI1                                                             DELTA
    2 IS=I1                                                              DELTA
      L(I2)=IS                                                           DELTA
    3 D(I2)=X2(I2)-X1(IS)                                                DELTA
      RETURN                                                             DELTA
      END                                                                DELTA
      SUBROUTINE INTERP(MI2,F,FX,FXX,FXXX,FO,FXO,FXXO)                   INTERP 
C                                                                        INTERP 
C                                                                        INTERP 
C      INTERPOLATE FROM OLD LOCATIONS TO NEW LOCATIONS                   INTERP 
C                                                                        INTERP 
C      MI2- NO. OF NEW POINTS                                            INTERP 
C      F,FX,FXX,FXXX OLD FUNCTION AND 1ST,2ND,AND 3RD DERIVATIVES        INTERP 
C      FO,FXO,FXXO- NEW FUNCTION VALUES AND 1ST AND 2ND DERIVATIVES      INTERP 
C                                                                        INTERP 
      DIMENSION F(1),FX(1),FXX(1),FXXX(1),FO(1),FXO(1),FXXO(1)           INTERP 
      COMMON /INT/ L(401),D(401)                                         INT
      DO 1 I=1,MI2                                                       INTERP 
      IS=L(I)                                                            INTERP 
      FO(I)=F(IS)+D(I)*(FX(IS)+.5*D(I)*(FXX(IS)+D(I)*FXXX(IS)/3.))       INTERP 
      FXO(I)=FX(IS)+D(I)*(FXX(IS)+D(I)*.5*FXXX(IS))                      INTERP 
    1 FXXO(I)=FXX(IS)+D(I)*FXXX(IS)                                      INTERP 
      RETURN                                                             INTERP 
      END                                                                INTERP 
      SUBROUTINE PCS(N,Y,FP,FPP,FPPP,X)                                  PCS
C     PERIODIC CUBIC SPLINE -IVES,X2221 - 4-27-71  - EXPLICIT (AHLBERG)  PCS
C                                                                        PCS
C      APPROXIMATE DERIVATIVES FOR CUBIC INTERPOLATION                   PCS
C                                                                        PCS
C      N- NO. OF POINTS                                                  PCS
C      Y- INPUT VALUE OF FUNCTION F(X)                                   PCS
C      FP,FPP,FPPP- OUTPUT VALUES OF DERIVATIVES                         PCS
C      X- LOCATION OF FUNCTION AND DERIVATIVES                           PCS
C                                                                        PCS
      DIMENSION X(1),Y(1),FP(1),FPP(1),FPPP(1)                           PCS
      NM=N-1                                                             PCS
      NMM=N-2                                                            PCS
      PI2=SIGN(1.,X(2)-X(1))*8*ATAN(1.)                                  PCS
      DO 1 I=1,NMM                                                       PCS
      FP(I)=(X(I+2)-X(I+1))/(X(I+1)-X(I))                                PCS
    1 FPPP(I)=((Y(I+2)-Y(I+1))/(X(I+2)-X(I+1))-(Y(I+1)-Y(I))/(X(I+1)-X(I PCS
     1)))*3./(X(I+1)-X(I))                                               PCS
      FP(NM)=(PI2+X(1)-X(N))/(X(N)-X(NM))                                PCS
      FPPP(NM)=((Y(1)-Y(N))/(PI2+X(1)-X(N))-(Y(N)-Y(NM))/(X(N)-X(NM)))*3 PCS
     1.    /(X(N)-X(NM))                                                 PCS
      FP(N)=(X(2)-X(1))/(PI2+X(1)-X(N))                                  PCS
      FPPP(N)=((Y(2)-Y(1))/(X(2)-X(1))-(Y(1)-Y(N))/(PI2+X(1)-X(N)))*3.   PCS
     1     /(PI2+X(1)-X(N))                                              PCS
      S1=FPPP(N-1)                                                       PCS
      S2=FP(N-1)                                                         PCS
      P=2.*(1.+FP(N))                                                    PCS
      SZ=FP(1)                                                           PCS
      FP(1)=-FP(N)/P                                                     PCS
      FPREV=FPPP(1)                                                      PCS
      FPPP(1)=2.*FPPP(N)/P                                               PCS
      FPP(1)=-1./P                                                       PCS
      DO 11 I=2,N                                                        PCS
      P=FP(I-1)+2.*(1.+SZ)                                               PCS
      STO=FP(I)                                                          PCS
      FP(I)=-SZ/P                                                        PCS
      SZ=STO                                                             PCS
      STO=FPPP(I)                                                        PCS
      FPPP(I)=(2.*FPREV-FPPP(I-1))/P                                     PCS
      FPREV=STO                                                          PCS
   11 FPP(I)=-FPP(I-1)/P                                                 PCS
      FPP(N)=1.                                                          PCS
      FPPP(N)=0.                                                         PCS
      DO 12 I=2,N                                                        PCS
      K=N-I+1                                                            PCS
      FPP(K)=FP(K)*FPP(K+1)+FPP(K)                                       PCS
   12 FPPP(K)=FP(K)*FPPP(K+1)+FPPP(K)                                    PCS
      FPP(N)=(2.*S1-S2*FPPP(1)-FPPP(N-1))/(S2*FPP(1)+FPP(N-1)+2.*(1.+S2) PCS
     1)                                                                  PCS
      DO 13 I=1,NM                                                       PCS
   13 FPP(I)=FPP(I)*FPP(N)+FPPP(I)                                       PCS
      DO 7 I=1,NM                                                        PCS
    7 FPPP(I)=(FPP(I+1)-FPP(I))/(X(I+1)-X(I))                            PCS
      FPPP(N)=(FPP(1)-FPP(N))/(PI2+X(1)-X(N))                            PCS
      DO 8 I=1,NM                                                        PCS
      DX=X(I+1)-X(I)                                                     PCS
    8 FP(I)=(Y(I+1)-Y(I))/DX-FPP(I)/2.*DX-FPPP(I)/6.*DX**2               PCS
      DX=PI2+X(1)-X(N)                                                   PCS
      FP(N)=(Y(1)-Y(N))/DX-FPP(N)/2.*DX-FPPP(N)/6.*DX**2                 PCS
      RETURN                                                             PCS
      END                                                                PCS
      SUBROUTINE SHOCKI(NC,RS,RB,OM,EM,ALP,EP)                           SHOCKI 
C                                                                        SHOCKI 
C      INITIAL POSITION OF OUTER BOUNDARY - APPROXIMATE WEDGE            SHOCKI 
C      SOLUTION, ROTATED BY ALPHA.                                       SHOCKI 
C                                                                        SHOCKI 
      DIMENSION RS(1),RB(1),OM(1)                                        SHOCKI 
      EM2=EM*EM                                                          SHOCKI 
      EM2F=EM2-1.                                                        SHOCKI 
      C1=1./SQRT(EM2F)                                                   SHOCKI 
      C2=EM2/EM2F                                                        SHOCKI 
      NCX=(NC+1)/2                                                       SHOCKI 
      TB=C1+C2*RB(NCX)                                                   SHOCKI 
      DO 10 N=1,NC                                                       SHOCKI 
      COM=COS(OM(N))                                                     SHOCKI 
      SOM=SIN(OM(N))                                                     SHOCKI 
      CAL=COS(ALP)                                                       SHOCKI 
      SAL=SIN(ALP)                                                       SHOCKI 
      AA=COM*COM+SOM*SOM*(CAL*CAL-SAL*SAL*TB*TB)                         SHOCKI 
      BB=SOM*SAL*CAL*(1.+TB*TB)                                          SHOCKI 
      CC=SAL*SAL-CAL*CAL*TB*TB                                           SHOCKI 
      RS(N)=EP*(BB+SQRT(BB*BB-AA*CC))/AA                                 SHOCKI 
   10 CONTINUE                                                           SHOCKI 
      RETURN                                                             SHOCKI 
      END                                                                SHOCKI 
