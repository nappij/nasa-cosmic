[ IDENT       ('QPLOT'),
  INHERIT     ('QLIBHOME:STANDARD',
               'QLIBHOME:IO',
               'QLIBHOME:GENERAL',
               'QLIBHOME:COLOR',
               'QLIBHOME:FIG',
               'QLIBHOME:TERM_VAX',
               'QLIBHOME:TERM_4010'),
  ENVIRONMENT ('QLIBHOME:TEK4014.TEN') ]
MODULE term_TEK4014;
[ HIDDEN ] VAR
   termfig       : RECORD
                   charsize : char;
                   END := (';');
{=============================================================================}
{-- PROCEDURES FOR TERMINAL TYPE TEK4014 -------------------------------------}
{=============================================================================}
[ GLOBAL ]
FUNCTION termname_TEK4014 (i : integer) : devname_type;
BEGIN
CASE i OF
   0: termname_TEK4014 := '1';
   1: termname_TEK4014 := 'TEK4014 ';
   END;
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
PROCEDURE colorsetup_TEK4014;
BEGIN
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
PROCEDURE executecom_TEK4014;
{------------------------------}
PROCEDURE bufferempty;
BEGIN
IF length (env.buffer) <> 0 
 THEN 
  BEGIN
  env.mode := M_PLOT;
  qiowwrite (env.buffer);
  env.buffer := '';
  END;
END;
{------------------------------}
BEGIN
WITH plotitem DO CASE ins OF
   I_col:  BEGIN
           bufferempty;
           IF env.visible THEN qiowwrite (ESC + chofcolor_4010 (st));
           END;
   I_pan:  ;
   I_clo:  ;
   I_pos:  BEGIN
           bufferempty;
           env.pos.ix := ix;
           env.pos.iy := iy;
           END;
   I_dra:  draw_4010(ix,iy,true,bufferempty);
   I_siz:  ;
   I_mar:  ;
   I_pri:  IF env.visible AND (st <> '') 
            THEN 
             BEGIN
             bufferempty;
             env.buffer := ESC + termfig.charsize 
                         + chr(29) + strofpos_4010 (env.pos) 
                         + chr(31) + st;
             bufferempty;
             END;
   I_emp:  bufferempty;
   END;
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
PROCEDURE writeterm_TEK4014 (str : VARYING [l2] OF char);
BEGIN
writeterm_4010 (str);
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
PROCEDURE readterm_TEK4014 (VAR outstr : VARYING [l2] OF char);  
BEGIN
readterm_vax (outstr);
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
PROCEDURE screenerase_TEK4014;
BEGIN
screenerase_4010;
qiowwrite (ESC + termfig.charsize);
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
PROCEDURE screencopy_TEK4014;
BEGIN
screencopy_4010;
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
PROCEDURE gin_TEK4014 (VAR key : char;  VAR ipt : ipoint;  color : color_type);
BEGIN
gin_4010 (key,ipt);
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
FUNCTION readmenu_TEK4014 (default : char;  toplevel : boolean;
   helpprefix : anystring) : command_type;
BEGIN
readmenu_TEK4014 := readmenu_4010 (default,toplevel,helpprefix,menuprep_4010);
END;
{-----------------------------------------------------------------------------}
[ GLOBAL ]
PROCEDURE termconfig_TEK4014 (configcontrol : configcontrol_type);
BEGIN
WITH termfig DO CASE configcontrol OF
   CON:  BEGIN
         CASE termfig.charsize OF
            ';':  config.ch := ch_type (496,768,96,208);
            ':':  config.ch := ch_type (544,848,64,176);
            '9':  config.ch := ch_type (816,1312,96,304);
            '8':  config.ch := ch_type (896,1408,96,288);
            END;
         config.resolution := 64;
         config.dotsize    := 64;
         config.starsize   := 320;
         config.ansi364    := false;
         config.drawblack  := false;
         END;
   QUE:  BEGIN
         readch ('ENTER TEK CHARACTER SIZE CODE : ',charsize,'89:;',charsize);
         CASE termfig.charsize OF
            ';':  config.ch := ch_type (496,768,96,208);
            ':':  config.ch := ch_type (544,848,64,176);
            '9':  config.ch := ch_type (816,1312,96,304);
            '8':  config.ch := ch_type (896,1408,96,288);
            END;
         END;
   REP:  writeline (out,'Character size code is "' + charsize + '"');
   END;
END;
{-----------------------------------------------------------------------------}
END.
