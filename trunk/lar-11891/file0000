D4002
      PROGRAM QUICK(INPUT,OUTPUT,PUNCH,TAPE5=INPUT,TAPE6=OUTPUT,
     1TAPE7=PUNCH,TAPE1)
C***********************************************************************
C*****    MAIN PROGRAM:  CONTROLS THE QUICK-GEOMETRY               *****
C*****    DEFINITION AND CHECK OUT                                 *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C*****    GRUMMAN AEROSPACE CORPORATION                            *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/BLCONF/KNTBLM,KNTBLS(25),IBLSSH(10,25),BLCOEF(7,10,25),
     1NBLCOR,IBLMX(50),IBLSX(50),BLMMIN(25),BLMMAX(25)
      COMMON/NAMES/CPNTNM(50),COMPNM(20),KCPNT,KCOMP,ICOMPX(10,10)
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
C*IBM REAL*8 CPNTNM,COMPNM
      DATA IPUNCH/7/
      IREAD=5 
      IRITE=6 
      ICRITE=6
      ITAPE=7 
      IPLOT=1 
      IF(ITAPE.NE.IRITE.AND.ITAPE.NE.ICRITE.AND.ITAPE.NE.IPUNCH)
     1  REWIND ITAPE
      READ(IREAD,10)VTITLE
   10 FORMAT(15A4)
      CALL CSMDEF(IREAD)
      CALL CSMCHK(IRITE)
      NBLCOR=2*KCPNT
      DO 100 I=1,NBLCOR 
      IBLSX(I)=1
  100 IBLMX(I)=0
      KNTBLM=0
      CALL BLMDEF 
      NBLCOR=2*KCPNT
      CALL BLMCHK(IRITE)
      CALL GEMOUT(IRITE,ITAPE)
      IF(ITAPE.NE.IRITE.AND.ITAPE.NE.ICRITE.AND.ITAPE.NE.IPUNCH)
     1  REWIND ITAPE
      CALL GEMCHK(IREAD,IRITE,ICRITE,ITAPE,IPLOT) 
      STOP
      END 
      SUBROUTINE DSETUP(ALABLE,NUMBER,BLABLE,INDEX,INEW)
C***********************************************************************
C*****    ADAPTING DICTIONARY LOOK UP -  NEW ITEMS ARE ADDED       *****
C*****    TO CODEWORD LIST - INDEX IS RETURNED FOR CODEWORD -      *****
C*****    INEW=1 WHEN A NEW ITEM IS ENCOUNTERED - FOR IBM USAGE    *****
C*****    NOTE THAT THE CODEWORDS ARE REAL*8 ON IBM                *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      DIMENSION ALABLE(1) 
C*IBM REAL*8 ALABLE,BLABLE
      INEW=0
      IF(NUMBER.EQ.0) GO TO 100 
      DO 200 I=1,NUMBER 
      IF(ALABLE(I).EQ.BLABLE) GO TO 300 
  200 CONTINUE
  100 NUMBER=NUMBER+1 
      INDEX=NUMBER
      ALABLE(NUMBER)=BLABLE 
      INEW=1
      GO TO 500 
  300 INDEX=I 
  500 RETURN
      END 
      SUBROUTINE DLOKUP(AWORD,NUMBER,BWORD,INDEX) 
C***********************************************************************
C*****    SIMPLE DICTIONARY LOOK UP -  ASSIGN INDEX TO A CODE      *****
C*****    WORD - INDEX 0 WHEN CODE WORD IS NOT IDENTIFIED          *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      DIMENSION AWORD(1)
      DO 100 I=1,NUMBER 
      IF(AWORD(I).EQ.BWORD) GO TO 200 
  100 CONTINUE
      INDEX=0 
      GO TO 500 
  200 INDEX=I 
  500 RETURN
      END 
      SUBROUTINE CSMDEF(IREAD)
C***********************************************************************
C*****    DEFINES CROSS SECTION MODELS FROM INPUT CARDS            *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/NAMES/CPNTNM(50),COMPNM(20),KCPNT,KCOMP,ICOMPX(10,10)
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
C*IBM REAL*8 CPNTNM,COMPNM,ARCNAM,PNTNAM,BLANK2,ZMAPNM,ARCNM
      DIMENSION SHAPE(4)
      DIMENSION TYPE(5),ASPEC(2),ISET(2)
      DIMENSION PNTNAM(3),ARCNM(2)
      DATA SHAPE(1)/4HLINE/,SHAPE(2)/4HCIRC/,SHAPE(3)/4HELLI/ 
      DATA SHAPE(4)/4HELLO/ 
      DATA TYPE(1)/4HPIEC/,TYPE(2)/4HFLIN/,TYPE(3)/4HALIN/
      DATA TYPE(4)/4HPATC/,TYPE(5)/4HFILE/
      DATA BLANK2/8H        / 
      DATA AY/1HY/,AZ/1HZ/,AH/1HH/,AB/1H /,BEE/1HB/,TEE/1HT/
      KCOMP=0 
      KCPNT=0 
C     IFLT=-1 
C*****   SET BLANK AS FIRST CODE WORD IN CONTROL POINT NAME TABLE 
      CALL DSETUP(CPNTNM,KCPNT,BLANK2,IDUMY,INEW) 
      READ(IREAD,1)NCSM 
    1 FORMAT(I2)
C*****    READ IN LIBRARY OF CROSS SECTION MODELS 
      DO 100 K=1,NCSM 
      READ(IREAD,2)KDUM,KARC,(CTITLE(I,K),I=1,10) 
    2 FORMAT(2I2,6X,15A4) 
      KNTCSA(K)=KARC
      IZBDEX(K)=-1
      IZTDEX(K)=-1
      DO 150 J=1,KARC 
      READ(IREAD,3)ARCNAM,JSEQ,ASHAPE,ATYPE,JFREE,
     1    (ASPEC(I),PNTNAM(I),I=1,2),PNTNAM(3),(ARCNM(I),I=1,2) 
    3 FORMAT(A8,I2,A4,2X,A4,1X,I1,2X,2(A1,A8,1X),1X,3(A8,2X)) 
      CALL DSETUP(COMPNM,KCOMP,ARCNAM,ICOMPX(J,K),INEW) 
C*****   SET DEFINITION SEQUENCE FOR EACH ARC 
      IF(JSEQ.EQ.0) JSEQ=J
      ICSASQ(JSEQ,K)=J
      CALL DLOKUP(SHAPE,4,ASHAPE,ICSASH(J,K)) 
      CALL DLOKUP(TYPE,5,ATYPE,ICSATY(J,K)) 
      IF(JFREE.LE.0) JFREE=0
      ICSAFR(J,K)=JFREE 
C*****   SET BODY LINE INDEX FOR CONTROL POINTS 
      DO 110 I=1,3
      CALL DSETUP(CPNTNM,KCPNT,PNTNAM(I),INDEX,INEW)
      ICSACP(I,J,K)=INDEX 
  110 CONTINUE
      DO 112 I=1,2
      INDEX=-1
      ISP=-1
      IF(ICSATY(J,K).NE.5) GO TO 109
      IF(ASPEC(I).EQ.AB) ISP=0
      IF(ASPEC(I).EQ.AY) ISP=1
      IF(ASPEC(I).EQ.AZ) ISP=2
      IF(ASPEC(I).EQ.AH) ISP=3
  109 ISPEC(I,J,K)=ISP
      IF(ASPEC(I).EQ.BEE) IZBDEX(K)=ICSACP(I,J,K) 
      IF(ASPEC(I).EQ.TEE) IZTDEX(K)=ICSACP(I,J,K) 
      IF(ARCNM(I).EQ.BLANK2) GO TO 111
      CALL DSETUP(COMPNM,KCOMP,ARCNM(I),INDEX,INEW) 
  111 ICSACC(I,J,K)=INDEX 
  112 CONTINUE
  150 CONTINUE
      DO 180 J=1,KARC 
      IF(ICSACC(1,J,K).EQ.-1.AND.ICSACC(2,J,K).EQ.-1) GO TO 180 
      ISET(1)=-1
      ISET(2)=-1
      DO 175 JJ=1,KARC
      DO 170 I=1,2
      IF(ISET(I).GT.0) GO TO 170
      IF(ICSACC(I,J,K).NE.ICOMPX(JJ,K)) GO TO 170 
      ICSACC(I,J,K)=JJ
      ISET(I)=1 
  170 CONTINUE
      IF(ISET(1).GT.0.AND.ISET(2).GT.0) GO TO 180 
      IF(ISET(1).GT.0.AND.ICSACC(2,J,K).EQ.-1) GO TO 180
      IF(ISET(2).GT.0.AND.ICSACC(1,J,K).EQ.-1) GO TO 180
  175 CONTINUE
  180 CONTINUE
  100 CONTINUE
C******    APPLY LIBRARY TO A SPECIFIC CONFIGURATION
      READ(IREAD,4)KNTCSM,ZMAPNM
    4 FORMAT(I2,8X,A8)
C*****    SET BODY LINE INDEX FOR MAP AXIS
      CALL DSETUP(CPNTNM,KCPNT,ZMAPNM,IZCDEX,INEW)
      DO 200 K=1,KNTCSM 
      READ(IREAD,5)KDUM,MODEL,XCSMS1(K),XCSMS2(K) 
    5 FORMAT(2I2,6X,2F10.5) 
      ICSMX(K)=MODEL
      KARC=KNTCSA(MODEL)
C*****   SET BODY LINE INDEX FOR BOTTOM CENTER LINE 
      IF(IZBDEX(K).EQ.-1) IZBDEX(K)=ICSACP(1,1,MODEL) 
C*****   SET BODY LINE INDEX FOR TOP CENTER LINE
      IF(IZTDEX(K).EQ.-1) IZTDEX(K)=ICSACP(2,KARC,MODEL)
  200 CONTINUE
      RETURN
      END 
      SUBROUTINE CSMCHK(IRITE)
C***********************************************************************
C*****    WRITES OUT CROSS SECTION MODEL DEFINITION CORRELATION    *****
C*****    LIST BETWEEN INPUT DATA DECK AND INDICES FOR MATH MODEL  *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/NAMES/CPNTNM(50),COMPNM(20),KCPNT,KCOMP,ICOMPX(10,10)
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
C*IBM REAL*8 CPNTNM,COMPNM,ARCNAM,PNTNAM,BLANK2,ZMAPNM,ARCNM
      DIMENSION KDEF(10),INDEXP(3)
      DIMENSION SHAPE(4)
      DIMENSION TYPE(5) 
      DIMENSION PNTNAM(3),ARCNM(2)
      DATA SHAPE(1)/4HLINE/,SHAPE(2)/4HCIRC/,SHAPE(3)/4HELLI/ 
      DATA SHAPE(4)/4HELLO/ 
      DATA TYPE(1)/4HPIEC/,TYPE(2)/4HFLIN/,TYPE(3)/4HALIN/
      DATA TYPE(4)/4HPATC/,TYPE(5)/4HFILE/
      DATA BLANK2/8H        / 
      WRITE(IRITE,7)VTITLE
    7 FORMAT(1X,15A4) 
      WRITE(IRITE,8)
    8 FORMAT(//1X,33H   CHECK CROSS SECTION DEFINITION) 
      WRITE(IRITE,1)KNTCSM
    1 FORMAT(1X,I2) 
      DO 100 K=1,KNTCSM 
      KNTARC=KNTCSA(K)
      WRITE(IRITE,2)K,KNTARC,(CTITLE(I,K),I=1,10) 
    2 FORMAT(1X,2I2,6X,15A4)
      DO 105 J=1,KNTARC 
      L=ICSASQ(J,K) 
  105 KDEF(L)=J 
      DO 110 J=1,KNTARC 
      INDEX1=ICOMPX(J,K)
      ARCNAM=COMPNM(INDEX1) 
      ISEQ=KDEF(J)
      INDEX2=ICSASH(J,K)
      IF(INDEX2.EQ.4)ICSASH(J,K)=-3 
      ASHAPE=SHAPE(INDEX2)
      INDEX3=ICSATY(J,K)
      ATYPE=TYPE(INDEX3)
      IFREE=ICSAFR(J,K) 
      DO 120 L=1,3
      INDEX=ICSACP(L,J,K) 
      INDEXP(L)=INDEX 
  120 PNTNAM(L)=CPNTNM(INDEX) 
      DO 122 L=1,2
      INDEX=ICSACC(L,J,K) 
      IF(INDEX.GT.KNTARC) GO TO 123 
      IF(INDEX.GT.0) GO TO 121
      ARCNM(L)=BLANK2 
      GO TO 122 
  121 INDEX=ICOMPX(INDEX,K) 
  123 ARCNM(L)=COMPNM(INDEX)
  122 CONTINUE
      WRITE(IRITE,3)ARCNAM,INDEX1,ISEQ,ASHAPE,INDEX2, 
     1 ATYPE,INDEX3,IFREE,(PNTNAM(I),INDEXP(I),I=1,3),(ARCNM(I),I=1,2)
    3 FORMAT(1X,A8,1H(,I2,1H),I2,1X,2(A4,1H(,I2,1H)), 
     1I1,3(A8,1H(,I2,1H)),2(A8,2X)) 
  110 CONTINUE
  100 CONTINUE
      INDEX=IZCDEX
      ZMAPNM=CPNTNM(INDEX)
      WRITE(IRITE,4)NCSM,ZMAPNM,INDEX 
    4 FORMAT(//1X,I2,8X,A8,2H (,I2,2H) )
      DO 200 K=1,NCSM 
      INDEX1=IZBDEX(K)
      INDEXP(1)=INDEX1
      PNTNAM(1)=CPNTNM(INDEX1)
      INDEX2=IZTDEX(K)
      INDEXP(2)=INDEX2
      PNTNAM(2)=CPNTNM(INDEX2)
      MODEL=ICSMX(K)
      WRITE(IRITE,5)K,MODEL,
     1(PNTNAM(I),INDEXP(I),I=1,2),
     2XCSMS1(K),XCSMS2(K) 
    5 FORMAT(1X,2I2,2X,2(A8,2H (,I2,3H)  ),6X,2F10.5) 
  200 CONTINUE
      WRITE(IRITE,9)
    9 FORMAT(//1X,24H   COMPONENT INDEX TABLE)
      DO 300 K=1,KCOMP
  300 WRITE(IRITE,6)K,COMPNM(K) 
      WRITE(IRITE,10) 
   10 FORMAT(//1X,28H   CONTROL POINT INDEX TABLE)
      DO 310 K=1,KCPNT
  310 WRITE(IRITE,6)K,CPNTNM(K) 
    6 FORMAT(I5,A8) 
      WRITE(IRITE,8001) 
 8001 FORMAT(1H1,12X,36HCHECK LIST MENU FOR BODY LINE MODELS) 
      WRITE(IRITE,8002) 
 8002 FORMAT(6X,50(1H.))
      WRITE(IRITE,8003) 
 8003 FORMAT(11X,7HCONTROL,10X,8HPLANFORM,8X,7HPROFILE) 
      WRITE(IRITE,8004) 
 8004 FORMAT(12X,5HPOINT,10X,10HDEFINITION,5X,10HDEFINITION)
      WRITE(IRITE,8005) 
 8005 FORMAT(12X,5HNAMES,9X,12HY-COORDINATE,3X,12HZ-COORDINATE) 
      WRITE(IRITE,8002) 
      DO 8100 K=1,KCPNT 
      WRITE(IRITE,8006)K,CPNTNM(K),BLANK2,BLANK2
 8006 FORMAT(1H0,5X,1H.,I2,2H .,3(A8,6X,1H.),5X)
 8100 WRITE(IRITE,8002) 
  999 RETURN
      END 
      SUBROUTINE BLMDEF 
C***********************************************************************
C*****    DEFINES BODY LINE MODELS FROM INPUT CARDS                *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/BLCONF/KNTBLM,KNTBLS(25),IBLSSH(10,25),BLCOEF(7,10,25),
     1NBLCOR,IBLMX(50),IBLSX(50),BLMMIN(25),BLMMAX(25)
      COMMON/BLMPRT/BLMNAM(25),BLMNYZ(25),BLMDEE(8,10,25),
     1IBLMWD(4,10,25),IBLMIX(25)
      COMMON/NAMES/CPNTNM(50),COMPNM(20),KCPNT,KCOMP,ICOMPX(10,10)
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
C*IBM REAL*8 CPNTNM,COMPNM,BNAME,ANAME,BLMNAM 
      DIMENSION BLDATA(8,10),BLTEMP(12,10)
      DIMENSION SHAPE(11),TYPE(5),DEF(3)
      DIMENSION D(6),XX(5),VV(5),COEFS(3) 
      DIMENSION TITLE(10) 
      EQUIVALENCE (D(1),D1),(D(2),D2),(D(3),D3),(D(4),D4) 
      EQUIVALENCE (D(5),D5),(D(6),D6) 
      EQUIVALENCE (XX(1),X1),(XX(2),X2),(XX(3),X3,X3L),(XX(4),X3R)
      EQUIVALENCE (VV(1),V1),(VV(2),V2),(VV(3),V3,V3L),(VV(4),V3R)
      EQUIVALENCE (XX(5),X5),(VV(5),V5) 
      DATA ZEE/1HZ/,WHY/1HY/,BLANK/1H /,ESS/1HS/,AAY/1HA/ 
      DATA SHAPE(1)/4HLINE/,SHAPE(2)/4HCIRC/,SHAPE(4)/4HELLY/ 
      DATA SHAPE(5)/4HXPAR/,SHAPE(6)/4HYPAR/,SHAPE(7)/4HRXPA/ 
      DATA SHAPE(9)/4HCUBI/,SHAPE(3)/4HELLX/,SHAPE(10)/4HALL /
      DATA SHAPE(8)/4HRYPA/,SHAPE(11)/4HNULL/ 
      DATA TYPE(1)/4HPIEC/,TYPE(2)/4HFLIN/,TYPE(3)/4HALIN/
      DATA TYPE(4)/4HPATC/,TYPE(5)/4HFILE/
      DATA DEF(1)/2HPT/,DEF(2)/2HCN/,DEF(3)/2HKV/ 
      DTOR=ATAN2(1.,1.)/45. 
      MAXKCP=KCPNT
  100 READ(IREAD,1) BYORZ,BNAME,AYORZ,ANAME,KOUT,TITLE
    1 FORMAT(A1,A8,1X,A1,A8,1X,I5,5X,10A4)
      IF(BYORZ.EQ.BLANK) GO TO 5000 
      CALL DSETUP(CPNTNM,KCPNT,BNAME,INAME,INEW)
      MAXKCP=MAX0(MAXKCP,KCPNT) 
      IYORZ=-1
      IF(BYORZ.EQ.ZEE) IYORZ=0
      IBLCOR=2*INAME+IYORZ
      IF(AYORZ.EQ.BLANK) GO TO 180
      CALL DSETUP(CPNTNM,KCPNT,ANAME,INAME,INEW)
      IYORZ=-1
      IF(AYORZ.EQ.ZEE) IYORZ=0
      JBLCOR=2*INAME+IYORZ
      IBLMX(IBLCOR)=IBLMX(JBLCOR) 
      GO TO 100 
  180 KNTBLM=KNTBLM+1 
      IBLMX(IBLCOR)=KNTBLM
      KNTBLS(KNTBLM)=0
      IBLSX(KNTBLM)=1 
      IBLMIX(KNTBLM)=IBLCOR 
      BLMNYZ(KNTBLM)=BYORZ
      BLMNAM(KNTBLM)=BNAME
  190 ITEMP=0 
  200 READ(IREAD,2)KSEG,SSHAPE,STYPE,SDEF,IFREE 
    2 FORMAT(I2,1X,A4,3X,A4,2X,A2,I1) 
    3 FORMAT(3F10.5,F9.4,A1,F9.4,A1,F10.5)
      IF(ITEMP.EQ.0) GO TO 215
      IF(KSEG.EQ.0) GO TO 230 
      IF(KSEG.GT.1) GO TO 205 
      IF(ITEMP.GT.1) KPICK=KSEG 
  205 DO 210 I=1,8
      BLMDEE(I,KSAVE,KNTBLM)=BLTEMP(I,KPICK)
  210 BLDATA(I,KSAVE)=BLTEMP(I,KPICK) 
      BLCOEF(1,KSAVE,KNTBLM)=BLTEMP(1,KPICK)
      BLCOEF(2,KSAVE,KNTBLM)=BLTEMP(2,KPICK)
      BLCOEF(3,KSAVE,KNTBLM)=BLTEMP(9,KPICK)
      BLCOEF(4,KSAVE,KNTBLM)=BLTEMP(10,KPICK) 
      BLCOEF(5,KSAVE,KNTBLM)=BLTEMP(11,KPICK) 
      BLCOEF(6,KSAVE,KNTBLM)=BLTEMP(3,KPICK)
      BLCOEF(7,KSAVE,KNTBLM)=BLTEMP(4,KPICK)
      IBLSSH(KSAVE,KNTBLM)=BLTEMP(12,KPICK) 
      IBLMWD(1,KSAVE,KNTBLM)=IASHP
      IBLMWD(2,KSAVE,KNTBLM)=ITYPE
      IBLMWD(3,KSAVE,KNTBLM)=IDEF 
      IBLMWD(4,KSAVE,KNTBLM)=IFREEO 
      IF(KSEG.LT.0) GO TO 100 
      IF(ITEMP.GT.1) GO TO 190
      GO TO 216 
  215 IF(KSEG.LT.0) GO TO 100 
  216 KSAVE=KSEG
      KNTBLS(KNTBLM)=MAX0(KSEG,KNTBLS(KNTBLM))
      KPICK=1 
      ITEMP=0 
  230 CALL DLOKUP(SHAPE,11,SSHAPE,ISHAPE) 
      CALL DLOKUP(TYPE,5,STYPE,ITYPE) 
      CALL DLOKUP(DEF,3,SDEF,IDEF)
      IF(ISHAPE.EQ.10) GO TO 240
      IGO=ISHAPE
      ISTOP=ISHAPE
      GO TO 250 
  240 IGO=1 
      ISTOP=9 
      ISAVE=1 
  250 IF(KSEG.EQ.0) GO TO 1000
C .....   SET UP POINT COORDINATES
      IF(ISHAPE.NE.11) GO TO 260
      DO 255 I=1,4
      XX(I)=0.
  255 VV(I)=0.
      IDEF=3
      GO TO 1000
  260 READ(IREAD,3)(D(I),I=1,4),SLP1,D(5),SLP2,D(6) 
      IF(ITYPE.EQ.5) GO TO 800
      IF(ITYPE.GT.3) GO TO 290
      IF(SLP1.EQ.BLANK.AND.SLP2.EQ.BLANK) GO TO 290 
      IF(SLP1.EQ.ESS) S1=D5 
      IF(SLP1.EQ.AAY) S1=TAN(D5*DTOR) 
      IF(SLP2.EQ.ESS) S2=D6 
      IF(SLP2.EQ.AAY) S2=TAN(D6*DTOR) 
      IF(ISHAPE.NE.1) GO TO 265 
      IF(SLP1.EQ.BLANK) SL=S2 
      IF(SLP2.EQ.BLANK) SL=S1 
      IF(IFREE.EQ.0.OR.IFREE.GT.4) GO TO 290
      GO TO (261,262,263,264),IFREE 
  261 D1=D3-(D4-D2)/SL
      GO TO 290 
  262 D2=D4-(D3-D1)*SL
      GO TO 290 
  263 D3=D1+(D4-D2)/SL
      GO TO 290 
  264 D4=D2+(D3-D1)*SL
      GO TO 290 
  265 GO TO (266,270,280), ITYPE
  266 IF(ABS(S1-S2).LT.1.E-5) GO TO 290 
      D5=(D1*S1-D3*S2-D2+D4)/(S1-S2)
      D6=D2+(D5-D1)*S1
      GO TO 290 
  270 ISEG=D3 
      D3=BLDATA(1,ISEG) 
      D5=(D1+D3)*.5 
      D6=D2+(D5-D1)*S1
      D3=ISEG 
      GO TO 290 
  280 ISEG=D1 
      D1=BLDATA(3,ISEG) 
      D5=(D1+D3)*.5 
      D6=D4+(D5-D3)*S2
      D1=ISEG 
  290 CONTINUE
      X1=D1 
      V1=D2 
      X2=D3 
      V2=D4 
      IF(ISHAPE.EQ.1) D5=.5*(D1+D3) 
      IF(ISHAPE.EQ.1) D6=.5*(D2+D4) 
      X5=D5 
      V5=D6 
      IF(ITYPE.EQ.1) GO TO 400
      IF(ITYPE.EQ.2) GO TO 300
      ISEG=D1 
      X1=BLDATA(3,ISEG) 
      V1=BLDATA(4,ISEG) 
      IF(ITYPE.NE.4) GO TO 400
  300 ISEG=D3 
      X2=BLDATA(1,ISEG) 
      V2=BLDATA(2,ISEG) 
  400 IF(IDEF.LT.3) GO TO 1000
C.......     SET UP END POINT SLOPES- SLOPE CONTROL POINT 
  500 X3R=D5
      X3L=D5
      V3R=D6
      V3L=D6
      IF(ITYPE.EQ.1) GO TO 1000 
      IF(ITYPE.EQ.2) GO TO 700
      IF(D2.EQ.0.) GO TO 600
      ISEG=D2 
      X3L=BLDATA(7,ISEG)
      V3L=BLDATA(8,ISEG)
  600 IF(ITYPE.NE.4) GO TO 1000 
  700 IF(D4.EQ.0.) GO TO 1000 
      ISEG=D4 
      X3R=BLDATA(5,ISEG)
      V3R=BLDATA(6,ISEG)
      GO TO 1000
  800 DX=(D6-D5)/2. 
      ISEG=D1 
      ISHP=IBLSSH(ISEG,KNTBLM)
      A=BLCOEF(3,ISEG,KNTBLM) 
      B=BLCOEF(4,ISEG,KNTBLM) 
      C=BLCOEF(5,ISEG,KNTBLM) 
      XO=BLCOEF(1,ISEG,KNTBLM)
      VO=BLCOEF(2,ISEG,KNTBLM)
      X=D5-XO 
      CALL CURVES(ISHP,A,B,C,X,V,T,S) 
      X1=D5 
      V1=V+VO 
      X3L=X1+DX 
      V3L=V1+T*DX 
      BLCOEF(6,ISEG,KNTBLM)=D5
      BLCOEF(7,ISEG,KNTBLM)=V1
      BLDATA(3,ISEG)=D5 
      BLDATA(4,ISEG)=V1 
      BLMDEE(3,ISEG,KNTBLM)=D5
      BLMDEE(4,ISEG,KNTBLM)=V1
      ISEG=D3 
      ISHP=IBLSSH(ISEG,KNTBLM)
      A=BLCOEF(3,ISEG,KNTBLM) 
      B=BLCOEF(4,ISEG,KNTBLM) 
      C=BLCOEF(5,ISEG,KNTBLM) 
      XO=BLCOEF(1,ISEG,KNTBLM)
      VO=BLCOEF(2,ISEG,KNTBLM)
      X=D6-XO 
      CALL CURVES(ISHP,A,B,C,X,V,T,S) 
      X2=D6 
      V2=V+VO 
      X3R=X2-DX 
      V3R=V2-T*DX 
      BLMDEE(1,ISEG,KNTBLM)=D6
      BLMDEE(2,ISEG,KNTBLM)=V2
      GO TO 1000
 1000 DO 2000 ISHAPE=IGO,ISTOP
      GO TO (1100,1200,1300), IDEF
 1100 CONTINUE
C1100 CALL PNTDEF(ISHAPE,XX,VV,COEFS,NG)
      GO TO 1500
 1200 CONTINUE
C1200 CALL CENDEF(ISHAPE,XX,VV,COEFS,NG)
      GO TO 1500
 1300 ISHP=ISHAPE 
      CALL KRVDEF(ISHP,IFREE,XX,VV,COEFS,NG)
      IASHP=IABS(ISHP)
      IF(IASHP.EQ.ISHAPE) GO TO 1500
      WRITE(IRITE,4)KNTBLM,KSEG,SHAPE(ISHAPE),SHAPE(IASHP)
      IF(ICRITE.NE.IRITE) 
     1WRITE(ICRITE,4)KNTBLM,KSEG,SHAPE(ISHAPE),SHAPE(IASHP) 
    4 FORMAT(/1X,11HB.L. MODEL ,I2,11H , SEGMENT ,I2, 
     1/29H SHAPE HAS BEEN CHANGED FROM ,A4,4H TO ,A4,/) 
 1500 ITEMP=ITEMP+1 
C***  CALL KRVCHK(ISHAPE,IFREE,XX,VV,COEFS,NG)
      BLTEMP(1,ITEMP)=X1
      BLTEMP(2,ITEMP)=V1
      BLTEMP(3,ITEMP)=X2
      BLTEMP(4,ITEMP)=V2
      BLTEMP(5,ITEMP)=X3L 
      BLTEMP(6,ITEMP)=V3L 
      BLTEMP(7,ITEMP)=X3R 
      BLTEMP(8,ITEMP)=V3R 
      BLTEMP(9,ITEMP)=COEFS(1)
      BLTEMP(10,ITEMP)=COEFS(2) 
      BLTEMP(11,ITEMP)=COEFS(3) 
      BLTEMP(12,ITEMP)=ISHP 
 2000 CONTINUE
      IFREEO=IFREE
      GO TO 200 
 5000 KCPNT=MAXKCP
      RETURN
      END 
      SUBROUTINE BLMCHK(IRITE)
C***********************************************************************
C*****    WRITES OUT BODY LINE MODEL DEFINITION CORRELATION        *****
C*****    LIST BETWEEN INPUT DATA DECK AND INDICES FOR MATH MODEL  *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/BLCONF/KNTBLM,KNTBLS(25),IBLSSH(10,25),BLCOEF(7,10,25),
     1NBLCOR,IBLMX(50),IBLSX(50),BLMMIN(25),BLMMAX(25)
      COMMON/BLMPRT/BLMNAM(25),BLMNYZ(25),BLMDEE(8,10,25),
     1IBLMWD(4,10,25),IBLMIX(25)
      COMMON/NAMES/CPNTNM(50),COMPNM(20),KCPNT,KCOMP,ICOMPX(10,10)
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
C*IBM REAL*8 CPNTNM,COMPNM,BNAME,ANAME,BLMNAM 
C*IBM REAL*8 EQUNB(2),EQUNA(11) 
      DIMENSION EQUNB(2),EQUNA(11)
      DIMENSION SHAPE(11),TYPE(6),DEF(3)
      DIMENSION ANAME(25),ANYZ(25)
      DIMENSION TITLE(10) 
      DATA ZEE/1HZ/,WHY/1HY/
      DATA XSTAR/2HX*/,YSTAR/2HY*/
      DATA ANONE/4HNONE/
      DATA EQUNB(1)/8H0.=AX+BY/,
     2EQUNB(2)/8H      NO/, 
     1EQUNA(1)/8H        /, 
     2EQUNA(2)/8H+XX+YY  /, 
     3EQUNA(3)/8H+CXX+YY /, 
     4EQUNA(4)/8H+CYY+XX /, 
     5EQUNA(5)/8H+YY     /, 
     6EQUNA(6)/8H+XX     /, 
     7EQUNA(7)/8H+CXY+YY /, 
     8EQUNA(8)/8H+CXY+XX /, 
     9EQUNA(9)/8H+CXX+XXX/, 
     BEQUNA(11)/8HNE      / 
      DATA SHAPE(1)/4HLINE/,SHAPE(2)/4HCIRC/,SHAPE(4)/4HELLY/ 
      DATA SHAPE(5)/4HXPAR/,SHAPE(6)/4HYPAR/,SHAPE(7)/4HRXPA/ 
      DATA SHAPE(9)/4HCUBI/,SHAPE(3)/4HELLX/,SHAPE(10)/4HALL /
      DATA SHAPE(8)/4HRYPA/,SHAPE(11)/4HNULL/ 
      DATA TYPE(1)/4HPIEC/,TYPE(2)/4HFLIN/,TYPE(3)/4HALIN/
      DATA TYPE(4)/4HPATC/,TYPE(5)/4HFILE/,TYPE(6)/4H -- /
      DATA DEF(1)/2HPT/,DEF(2)/2HCN/,DEF(3)/2HKV/ 
      DATA BLANK/4H    /
      WRITE(IRITE,7)VTITLE
    7 FORMAT(1H1,15A4)
      WRITE(IRITE,8)
    8 FORMAT(//1X,29H   CHECK BODY LINE DEFINITION) 
      WRITE(IRITE,11) 
   11 FORMAT(/1X,28H  BODY LINE COORDINATE INDEX) 
      DO 100 K=1,NBLCOR 
      KX=IBLMX(K) 
      BYORZ=WHY 
      IF(MOD(K,2).EQ.0) BYORZ=ZEE 
      L=(K+1)/2 
  100 WRITE(IRITE,1)K,BYORZ,CPNTNM(L),KX,BLANK
      WRITE(IRITE,12) 
   12 FORMAT(1H1,25H   BODY LINE MODEL TABLES,///)
      DO 200 KMOD=1,KNTBLM
      KNTSEG=KNTBLS(KMOD) 
      WRITE(IRITE,3) KMOD,KNTSEG
    3 FORMAT(1X,25H   BODY LINE MODEL NUMBER,2I5) 
      DO 210 KSEG=1,KNTSEG
      ISHAPE=IBLSSH(KSEG,KMOD)
      INDEX=IABS(ISHAPE)
      SSHAPE=BLANK
      IF(INDEX.GT.0) SSHAPE=SHAPE(INDEX)
      IF(INDEX.GT.0.AND.INDEX.LT.11)XTEST=BLCOEF(1,KSEG,KMOD) 
  210 WRITE(IRITE,2)KSEG,SSHAPE,ISHAPE,(BLCOEF(I,KSEG,KMOD),I=1,5)
      XMIN=XTEST
      XMAX=XTEST
      DO 220 KSEG=1,KNTSEG
      INDEX=IABS(IBLSSH(KSEG,KMOD)) 
      X1=BLCOEF(1,KSEG,KMOD)
      X2=BLCOEF(6,KSEG,KMOD)
      IF(INDEX.LE.0) GO TO 220
      IF(INDEX.GT.10) GO TO 220 
      IF(X1.LT.XMIN)XMIN=X1 
      IF(X2.GT.XMAX)XMAX=X2 
  220 CONTINUE
      BLMMIN(KMOD)=XMIN 
      BLMMAX(KMOD)=XMAX 
  200 CONTINUE
    1 FORMAT(1X,I2,2X,A1,1X,A8,2H (,I2,2H) ,10 A4)
    2 FORMAT(I5,5X,A4,2H (,I2,3H)  ,2F12.5,3E17.8)
      DO 500 KMOD=1,KNTBLM
      KNTSEG=KNTBLS(KMOD) 
      WRITE(IRITE,8001)BLMNYZ(KMOD),BLMNAM(KMOD),KMOD,KNTSEG
 8001 FORMAT(///1X,5H*****,1X,A1,A8,3X,15HBODY LINE MODEL,
     15X,15HMODEL NUMBER = ,I3,5X,20HNUMBER OF SEGMENTS =,I3) 
      WRITE(IRITE,8002) 
 8002 FORMAT(1H0,22H   BOUNDARY CONDITIONS) 
      WRITE(IRITE,8003) 
 8003 FORMAT(2X,27HSEG SHAPE CONN DEF FREE GAP,4X,
     18HX-ORIGIN,4X,8HY-ORIGIN,5X,6HX-TERM,5X,
     26HY-TERM,5X,10HX-LEFT SCP,2X,10HY-LEFT SCP, 
     32X,11HX-RIGHT SCP,1X,11HY-RIGHT SCP)
      XOLD=BLMDEE(1,1,KMOD) 
      YOLD=BLMDEE(2,1,KMOD) 
      DO 8100 KSEG=1,KNTSEG 
      GAPX=BLANK
      GAPY=BLANK
      ISHAPE=IBLMWD(1,KSEG,KMOD)
      ITYPE=IBLMWD(2,KSEG,KMOD) 
      IF(ISHAPE.EQ.11) ITYPE=6
      IDEF=IBLMWD(3,KSEG,KMOD)
      IFREE=IBLMWD(4,KSEG,KMOD) 
      IF(BLMDEE(1,KSEG,KMOD).NE.XOLD) GAPX=XSTAR
      IF(BLMDEE(2,KSEG,KMOD).NE.YOLD) GAPY=YSTAR
      WRITE(IRITE,8004) KSEG,SHAPE(ISHAPE),TYPE(ITYPE),DEF(IDEF), 
     1 IFREE,GAPX,GAPY,(BLMDEE(IPT,KSEG,KMOD),IPT=1,8)
 8004 FORMAT(1X,I3,1X,A4,2X,A4,2X,A2,I4,1X,2A2,1X,8F12.5) 
      XOLD=BLMDEE(3,KSEG,KMOD)
      YOLD=BLMDEE(4,KSEG,KMOD)
      IF(ISHAPE.NE.11) GO TO 8100 
      KSEGP=KSEG+1
      IF(KSEGP.GT.KNTSEG) GO TO 8100
      XOLD=BLMDEE(1,KSEGP,KMOD) 
      YOLD=BLMDEE(2,KSEGP,KMOD) 
 8100 CONTINUE
      WRITE(IRITE,8005) 
 8005 FORMAT(1H0,19H  SEGMENT EQUATIONS)
      WRITE(IRITE,8006) 
 8006 FORMAT(2X,9HSEG SHAPE,5X,8HEQUATION,11X,13HA-COEFFICIENT, 
     16X,13HB-COEFFICIENT,7X,13HC-COEFFICIENT)
      DO 8200 KSEG=1,KNTSEG 
      ISHAPE=IBLMWD(1,KSEG,KMOD)
      IEQB=1
      IF(ISHAPE.EQ.11) IEQB=2 
 8200 WRITE(IRITE,8007) KSEG,SHAPE(ISHAPE),EQUNB(IEQB), 
     1 EQUNA(ISHAPE),(BLCOEF(I,KSEG,KMOD),I=3,5)
 8007 FORMAT(1X,I3,1X,A4,3X,2A8,2X,3E20.8)
      NALIAS=0
      DO 8300 K=1,NBLCOR
      IF(IBLMX(K).NE.KMOD) GO TO 8300 
      AYORZ=WHY 
      IF(MOD(K,2).EQ.0) AYORZ=ZEE 
      L=(K+1)/2 
      IF(CPNTNM(L).NE.BLMNAM(KMOD)) GO TO 8310
      IF(AYORZ.EQ.BLMNYZ(KMOD)) GO TO 8300
 8310 NALIAS=NALIAS+1 
      ANYZ(NALIAS)=AYORZ
      ANAME(NALIAS)=CPNTNM(L) 
 8300 CONTINUE
      IF(NALIAS.GT.0) GO TO 8400
      NALIAS=1
      ANYZ(1)=BLANK 
      ANAME(1)=ANONE
 8400 WRITE(IRITE,8008) 
 8008 FORMAT(/2X,10HALIAS LIST) 
      WRITE(IRITE,8010)(ANYZ(I),ANAME(I),I=1,NALIAS)
 8010 FORMAT(2X,10(A1,A8,1X),5X)
  500 CONTINUE
  999 RETURN
      END 
      SUBROUTINE KRVDEF(ISHAPE,IFREE,XX,YY,COEFS,NG)
C***********************************************************************
C*****    CALCULATES COEFFICIENTS FOR CURVE FITS                   *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      DIMENSION XX(5),YY(5),COEFS(1)
      ISET=0
      ISHAPO=0
      ZERO=1.E-6
      A=0.
      B=0.
      C=0.
      COEFS(1)=0. 
      COEFS(2)=0. 
      COEFS(3)=0. 
      NG=0
      IF(ISHAPE.EQ.0) GO TO 8000
      IF(ISHAPE.EQ.11) GO TO 8000 
      X2=XX(2)-XX(1)
      Y2=YY(2)-YY(1)
      X31=XX(3)-XX(1) 
      X42=XX(4)-XX(2) 
      Y31=YY(3)-YY(1) 
      Y42=YY(4)-YY(2) 
      INFT1=0 
      INFT2=0 
      T1=1.E+10 
      T2=1.E+10 
      IF(ABS(X31).LT.ZERO) INFT1=1
      IF(ABS(X42).LT.ZERO) INFT2=1
      IF(INFT1.EQ.0) T1=Y31/X31 
      IF(INFT2.EQ.0) T2=Y42/X42 
      FX2=0.
      FY2=0.
      GX2=0.
      GY2=0.
      PX2X2=X2*X2 
      SX2X2=X2+X2 
      PY2Y2=Y2*Y2 
      SY2Y2=Y2+Y2 
      PX2Y2=X2*Y2 
    1 GO TO (10,20,30,40,50,60,70,80,90),ISHAPE 
C        *
C       ***         LINE                A*X + B*Y = 0 
C        *
   10 A=Y2
      B=-X2 
      GO TO 8000
C        *
C       ***         CIRCLE              A*X + B*Y + X**2 + Y**2 = 0 
C        *
   20 F2=PX2X2+PY2Y2
      FX2=SX2X2 
      FY2=SY2Y2 
      GO TO 1000
C        *
C       ***         X-ELLIPSE           A*X + B*Y + C*X**2 + Y**2 = 0 
C        *
   30 F2=PY2Y2
      FY2=SY2Y2 
      G2=PX2X2
      GX2=SX2X2 
      GO TO 3000
C        *
C       ***         Y-ELLIPSE           A*X + B*Y + C*Y**2 + X**2 = 0 
C        *
   40 F2=PX2X2
      FX2=SX2X2 
      G2=PY2Y2
      GY2=SY2Y2 
      GO TO 3000
C        *
C       ***         X-PARABOLA          A*X + B*Y + Y**2 = 0
C        *
   50 F2=PY2Y2
      FY2=SY2Y2 
      GO TO 1000
C        *
C       ***         Y-PARABOLA          A*X + B*Y + X**2 = 0
C        *
   60 F2=PX2X2
      FX2=SX2X2 
      GO TO 1000
C        *
C       ***         ROTATED X-PARABOLA  A*X + B*Y + C*X*Y + Y**2 = 0
C        *
   70 F2=PY2Y2
      FY2=SY2Y2 
      G2=PX2Y2
      GX2=Y2
      GY2=X2
      GO TO 3000
C        *
C       ***         ROTATED Y-PARABOLA  A*X + B*Y + C*X*Y + X**2 = 0
C        *
   80 F2=PX2X2
      FX2=SX2X2 
      G2=PX2Y2
      GX2=Y2
      GY2=X2
      GO TO 3000
C        *
C       ***         CUBIC               A*X + B*Y + C*X**2 + X**3 = 0 
C        *
   90 F2=PX2X2*X2 
      FX2=3.*PX2X2
      G2=PX2X2
      GX2=SX2X2 
      GO TO 3000
C.....  COEFFICIENTS FOR GROUP 1 FUNCTIONS
 1000 IF(IFREE.EQ.0) GO TO 9000 
      TBAR=Y2/X2
      FBAR=F2/X2
      IF(IFREE.EQ.5) GO TO 1500 
      IF(IFREE.EQ.6) GO TO 1600 
 1500 IF(INFT2.EQ.1) GO TO 1520 
      FSTAR=FY2*T2+FX2
      T1INF=FSTAR-FBAR
      IF(ABS(T1INF).GT.ZERO) GO TO 1510 
      INFT1=1 
      GO TO 2100
 1510 T1=(TBAR*FSTAR-FBAR*T2)/T1INF 
      GO TO 2000
 1520 T1INF=FY2 
      IF(ABS(T1INF).GT.ZERO) GO TO 1530 
      INFT1=1 
      GO TO 2900
 1530 T1=(FY2*TBAR-FBAR)/T1INF
      GO TO 2200
 1600 IF(INFT1.EQ.1) GO TO 1620 
      T2INF=FBAR+(T1-TBAR)*FY2
      IF(ABS(T2INF).GT.ZERO) GO TO 1610 
      INFT2=1 
      GO TO 2200
 1610 T2=(FBAR*T1+(TBAR-T1)*FX2)/T2INF
      GO TO 2000
 1620 T2INF=FY2 
      IF(ABS(T2INF).GT.ZERO) GO TO 1630 
      INFT2=1 
      GO TO 2900
 1630 T2=(FBAR-FX2)/T2INF 
      GO TO 2100
 2000 TEST=T2-T1
      IF(ABS(TEST).LT.ZERO) GO TO 2800
      B=-(FY2*T2+FX2)/TEST
      A=-B*T1 
      GO TO 8000
 2100 B=0.
      A=-FBAR 
      GO TO 8000
 2200 B=-FY2
      A=-B*T1 
      GO TO 8000
 2800 A=Y31 
      B=-X31
      GO TO 8000
 2900 A=0.
      B=0.
      GO TO 9000
C.....   COEFFICIENTS FOR GROUP 2 FUNCTIONS 
 3000 IF(IFREE.GT.0) GO TO 9000 
      FBAR=F2/X2
      GBAR=G2/X2
      TBAR=Y2/X2
      IF(INFT2.EQ.1) GO TO 4200 
      FSTAR=FY2*T2+FX2
      GSTAR=GY2*T2+GX2
      IF(INFT1.EQ.1) GO TO 4100 
      TEST=T2-T1
      IF(ABS(TEST).LT.ZERO) GO TO 4800
      FCOMP=FBAR*TEST+(T1-TBAR)*FSTAR 
      GCOMP=GBAR*TEST+(T1-TBAR)*GSTAR 
      IF(ABS(GCOMP).LT.ZERO) GO TO 4500 
 4000 C=-FCOMP/GCOMP
      B=-(C*GSTAR+FSTAR)/TEST 
      A=-B*T1 
      GO TO 8000
 4800 IF(ISHAPE.NE.9.OR.T1.EQ.1.E+10) GO TO 9000
      C=-3.*X2/2. 
      B=F2/(2.*(Y2-X2*T1))
      A=-B*T1 
      GO TO 8000
 4100 B=0.
      CINF=GBAR-GSTAR 
      IF(ABS(CINF).LT.ZERO) GO TO 4510
      C=-(FBAR-FSTAR)/CINF
      A=-(C*GBAR+FBAR)
      GO TO 8000
 4200 CINF=GBAR-(TBAR-T1)*GY2 
      IF(ABS(CINF).LT.ZERO) GO TO 4520
      C=-(FBAR-(TBAR-T1)*FY2)/CINF
      B=-(C*GY2+FY2)
      A=-B*T1 
 8000 COEFS(1)=A
      COEFS(2)=B
      COEFS(3)=C
      IF(ISHAPE.NE.0.AND.ISHAPE.NE.11)ISHAPE=ISHAPE*SIGN(1.,Y2) 
      RETURN
 4500 CONTINUE
 4510 CONTINUE
 4520 CONTINUE
      ISET=ISET+1 
      IF(ISET.GT.1) GO TO 8999
      IF(ISET.EQ.1) ISHAPO=ISHAPE 
      GO TO(8999,8999,4530,4540,8999,8999,4570,4580,8999),ISHAPO
 4530 IF(ISET.EQ.1) ISHAPE=4
      GO TO 1 
 4540 IF(ISET.EQ.1) ISHAPE=3
      GO TO 1 
 4570 IF(ISET.EQ.1) ISHAPE=8
      GO TO 1 
 4580 IF(ISET.EQ.1) ISHAPE=7
      GO TO 1 
 8999 ISHAPE=11 
 9000 NG=1
      RETURN
      END 
      SUBROUTINE GEMOUT(IRITE,IPUNC)
C***********************************************************************
C*****    PUNCH OUT/PRINT OUT MATH MODEL FROM QUICK-GEOMETRY       *****
C*****    DEFINITION                                               *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/BLCONF/KNTBLM,KNTBLS(25),IBLSSH(10,25),BLCOEF(7,10,25),
     1NBLCOR,IBLMX(50),IBLSX(50),BLMMIN(25),BLMMAX(25)
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
      COMMON/NAMES/CPNTNM(50),COMPNM(20),KCPNT,KCOMP,ICOMPX(10,10)
C*IBM REAL*8 CPNTNM,COMPNM,ARCNAM,PNTNAM,BLANK2,ZMAPNM,ARCNM
      WRITE(IPUNC,7)VTITLE
    7 FORMAT(1X,15A4) 
      WRITE(IPUNC,1)KNTCSM,IZCDEX 
    1 FORMAT(1X,3(I2,1X)) 
      DO 100 K=1,KNTCSM 
      WRITE(IPUNC,2)KNTCSA(K),IZBDEX(K),IZTDEX(K),XCSMS1(K),XCSMS2(K),
     1(CTITLE(I,K),I=1,10)
    2 FORMAT(1X,3(I2,1X),1X,2F10.5,10A4)
      KARC=KNTCSA(K)
      DO 200 J=1,KARC 
  200 WRITE(IPUNC,3)K,J,ICSASQ(J,K),ICSASH(J,K),ICSATY(J,K),ICSAFR(J,K) 
     1,(ICSACP(I,J,K),I=1,3),(ICSACC(I,J,K),I=1,2),(ISPEC(I,J,K),I=1,2) 
    3 FORMAT(1X,2(I2,1X),3X,11I5) 
  100 CONTINUE
      WRITE(IPUNC,4)NBLCOR
      DO 300 K=1,NBLCOR 
  300 WRITE(IPUNC,5)K,IBLMX(K)
    4 FORMAT(1X,I2) 
    5 FORMAT(1X,2(I2,1X),4X,10A4) 
      WRITE(IPUNC,4)KNTBLM
      DO 400 K=1,KNTBLM 
      KNTSEG=KNTBLS(K)
      WRITE(IPUNC,9)K,KNTSEG,BLMMIN(K),BLMMAX(K)
      DO 410 J =1,KNTSEG
      WRITE(IPUNC,6) K,J,(BLCOEF(I,J,K),I=1,2), 
     1(BLCOEF(I,J,K),I=6,7) 
      WRITE(IPUNC,8) K,J,IBLSSH(J,K),(BLCOEF(I,J,K),I=3,5)
  410 CONTINUE
    6 FORMAT(1X,2(I2,1X),1X,4F10.5) 
    8 FORMAT(1X,3(I2,1X),1X,3E15.8) 
  400 CONTINUE
    9 FORMAT(1X,2(I2,1X),2F15.5)
      IF(IRITE.EQ.IPUNC) GO TO 999
      WRITE(IRITE,8000) 
 8000 FORMAT(///42H   CROSS SECTION CHECK AGAINST BODY LINES )
      DO 500 K=1,KNTCSM 
      KARC=KNTCSA(K)
      X1=XCSMS1(K)
      X2=XCSMS2(K)
      DO 510 J=1,KARC 
      DO 520 I=1,3
      NCP=ICSACP(I,J,K) 
      IF(NCP.LE.1) GO TO 520
      IZCP=NCP+NCP
      IYCP=IZCP-1 
      IYBLM=IBLMX(IYCP) 
      IZBLM=IBLMX(IZCP) 
      YMIN=BLMMIN(IYBLM)
      YMAX=BLMMAX(IYBLM)
      ZMIN=BLMMIN(IZBLM)
      ZMAX=BLMMAX(IZBLM)
      IF(X1.LT.YMIN)WRITE(IRITE,8001)K,CPNTNM(NCP),IYBLM,X1,YMIN
      IF(X2.GT.YMAX)WRITE(IRITE,8002)K,CPNTNM(NCP),IYBLM,X2,YMAX
      IF(X1.LT.ZMIN)WRITE(IRITE,8003)K,CPNTNM(NCP),IZBLM,X1,ZMIN
      IF(X2.GT.ZMAX)WRITE(IRITE,8004)K,CPNTNM(NCP),IZBLM,X2,ZMAX
 8001 FORMAT(3X,8HCS MODEL,I3,3H  Y,A8,2X,8HBL MODEL,I3,
     1 3X,7HXCSM1 =,F10.5,15H IS LT BLMMIN =,F10.5) 
 8002 FORMAT(3X,8HCS MODEL,I3,3H  Y,A8,2X,8HBL MODEL,I3,
     1 3X,7HXCSM2 =,F10.5,15H IS GT BLMMAX =,F10.5) 
 8003 FORMAT(3X,8HCS MODEL,I3,3H  Z,A8,2X,8HBL MODEL,I3,
     1 3X,7HXCSM1 =,F10.5,15H IS LT BLMMIN =,F10.5) 
 8004 FORMAT(3X,8HCS MODEL,I3,3H  Z,A8,2X,8HBL MODEL,I3,
     1 3X,7HXCSM2 =,F10.5,15H IS GT BLMMAX =,F10.5) 
  520 CONTINUE
  510 CONTINUE
  500 CONTINUE
      WRITE(IRITE,8010) 
 8010 FORMAT(43H CROSS SECTION DEFINITION CHECK IS FINISHED)
  999 RETURN
      END 
      SUBROUTINE GEMCHK(IREAD,IRITE,ICRITE,ITAPE,IPLOT) 
C***********************************************************************
C*****    GEOMETRY CHECK OUT -  EXERCISES MATHEMATICALLY MODELED   *****
C*****    GEOMETRY - GENERATES PLOTTING DATA FILES ON UNIT(IPLOT)  *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      CALL GEOMIN(ITAPE,IRITE,ICRITE,IREAD) 
      IF(IRITE.EQ.ITAPE) GO TO 100
      WRITE(IRITE,60) 
      CALL GEMOUT(IRITE,IRITE)
  100 READ(IREAD,1)MODE,NDERV,XGO,XEND,XDEL,HGO,HEND,HDEL 
      IF(MODE.EQ.0) GO TO 999 
      IF(MODE.GT.0)WRITE(IRITE,2)MODE,NDERV,XGO,XEND,XDEL,HGO,HEND,HDEL 
      IAMD=IABS(MODE) 
      IANDV=IABS(NDERV) 
      IF(MODE.LT.0.AND.IAMD.NE.6) WRITE(IPLOT,20) IAMD,IANDV
      GO TO (1000,2000,3000,4000,5000,6000,7000),IAMD 
 1000 CALL MODE1(XGO,XEND,XDEL,MODE,NDERV)
      GO TO 100 
 2000 CALL MODE2(XGO,XEND,XDEL,HGO,HEND,HDEL,MODE,NDERV)
      GO TO 100 
 3000 IF(MODE.LT.0) GO TO 1000
      CALL MODE3(XGO,XEND,XDEL,MODE,NDERV)
      GO TO 100 
 4000 CALL MODE4(XGO,XEND,XDEL,HGO,HEND,HDEL,MODE,NDERV)
      GO TO 100 
 5000 CALL MODE5(XGO,XEND,XDEL,HGO,HEND,HDEL,MODE,NDERV)
      GO TO 100 
 6000 EPSX=1.E-5*(XCSMS2(KNTCSM)-XCSMS1(1)) 
      XDEL=1. 
      DO 6100 K=1,KNTCSM
      DO 6100 I=1,2 
      IF(I.EQ.1) XGO=XCSMS1(K)+EPSX 
      IF(I.EQ.2) XGO=XCSMS2(K)-EPSX 
      XEND=XGO+XDEL*.1
      IF(MODE.LT.0) GO TO 6020
      IF(K.NE.1.OR.I.NE.1) WRITE(IRITE,60)
      CALL MODE1(XGO,XEND,XDEL,MODE,NDERV)
      WRITE(IRITE,60) 
 6020 IMODE=2 
      IF(MODE.LT.0) WRITE(IPLOT,20)IMODE,NDERV
      CALL MODE2(XGO,XEND,XDEL,HGO,HEND,HDEL,MODE,NDERV)
      IF(MODE.LT.0) GO TO 6070
      WRITE(IRITE,60) 
      CALL MODE3(XGO,XEND,XDEL,MODE,NDERV)
      IF(MODE.GT.0) GO TO 6100
 6070 IMODE=7 
      IF(MODE.LT.0) WRITE(IPLOT,20) IMODE,NDERV 
      CALL MODE7(XGO,XEND,XDEL,MODE,NDERV)
 6100 CONTINUE
      GO TO 100 
 7000 CALL MODE7(XGO,XEND,XDEL,MODE,NDERV)
      GO TO 100 
  999 RETURN
    1 FORMAT(I2,1X,I2,5X,6F10.5)
    2 FORMAT(1H1,1X,I1,1X,I2,6F10.5)
   20 FORMAT(2I5) 
   60 FORMAT(1H1) 
      END 
      SUBROUTINE MODE1(XGO,XEND,XDEL,MODE,NDERV)
C***********************************************************************
C*****    CALLED BY GEMCHK TO TRACE BODY LINE MODEL VALUES         *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/BLCONF/KNTBLM,KNTBLS(25),IBLSSH(10,25),BLCOEF(7,10,25),
     1NBLCOR,IBLMX(50),IBLSX(50),BLMMIN(25),BLMMAX(25)
      COMMON/BLVALS/V(25),VX(25),VXX(25)
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      MODEL=1 
      XSIZE=1.E-5*(XCSMS2(KNTCSM)-XCSMS1(1))
      XNOW=XGO-XDEL 
      NXPTS=(XEND-XGO)/XDEL+1 
      IF(MODE.LT.0) WRITE(IPLOT,20) NXPTS,KNTBLM
 3200 XNOW=XNOW+XDEL
      IF(XNOW.GT.XEND) GO TO 999
  100 IF(XNOW.LE.XCSMS2(MODEL)) GO TO 200 
      IF(MODEL.EQ.KNTCSM) GO TO 200 
      MODEL=MODEL+1 
      GO TO 100 
  200 XSTAR=XNOW
      XSIZE=1.E-5*(XCSMS2(KNTCSM)-XCSMS1(1))
      IF(ABS(XNOW-XCSMS1(MODEL)).LT.XSIZE) XSTAR=XCSMS1(MODEL)+XSIZE
      IF(ABS(XNOW-XCSMS2(MODEL)).LT.XSIZE) XSTAR=XCSMS2(MODEL)-XSIZE
      CALL BLMSET(XSTAR)
      IF(MODE.LT.0) WRITE(IPLOT,24) XNOW
      IF(MODE.GT.0) WRITE(IRITE,71) XNOW
      DO 3300 I=1,KNTBLM
      J=IBLSX(I)
      IF(MODE.GT.0) WRITE(IRITE,72) I,J,V(I),VX(I),VXX(I) 
      IF(MODE.EQ.-1) WRITE(IPLOT,24) V(I),VX(I),VXX(I)
      IF(MODE.EQ.-3) WRITE(IPLOT,24) V(I) 
 3300 CONTINUE
   24 FORMAT(3F10.4)
      GO TO 3200
   20 FORMAT(2I5) 
   71 FORMAT(///,20X,11HXSTATION = ,F10.5,//,1X,13HINXBLM INXBLS, 
     14X,1HV,17X,2HVX,12X,3HVXX,/)
   72 FORMAT(2I5,3F15.5)
  999 RETURN
      END 
      SUBROUTINE MODE2(XGO,XEND,XDEL,HGO,HEND,HDEL,MODE,NDERV)
C***********************************************************************
C*****    CALLED BY GEMCHK TO CREATE CROSS SECTIONAL CUTS          *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      DIMENSION Y(101),Z(101),ZG(101),HG(101),RG(101) 
      DIMENSION X(101),H(101),R(101),RX(101),RH(101),RXH(101),RXX(101)
      DIMENSION RSUBH(101),RSUBX(101),RXSUBH(101),RHSUBX(101) 
      DIMENSION RXSUBX(101),RSUBXX(101) 
      DIMENSION DSUBH(101),DSUBX(101),DHSUBX(101),DXSUBH(101) 
      DIMENSION DXSUBX(101),DSUBXX(101),DXX(101)
      DIMENSION ZMAP(101),ZXMAP(101),ZXXMAP(101)
C*IBM REAL*8 XLAB,HLAB,GLAB(9),DLAB(17) 
      DIMENSION GLAB(9),DLAB(17)
      DATA GLAB(1)/8H  THETA /, 
     1GLAB(2)/8H RADIUS /,
     2GLAB(3)/8H THETAG /,
     3GLAB(4)/8H  RAD-G /,
     4GLAB(5)/8H Y-CORD /,
     5GLAB(6)/8H Z-CORD /,
     6GLAB(7)/8H ZGCORD /,
     7GLAB(8)/8H X-CORD /,
     8GLAB(9)/8H  ZMAP  / 
      DATA DLAB(1)/8H   RX   /, 
     1DLAB(2)/8H   RH   /,
     2DLAB(3)/8H  RSUBX /,
     3DLAB(4)/8H  RSUBH /,
     4 DLAB(5)/8H  DSUBX /, 
     5DLAB(6)/8H  DSUBH /,
     6DLAB(7)/8H  RXX   /,
     7DLAB(8)/8H RXSUBX /,
     8DLAB(9)/8H DXSUBX / 
      DATA DLAB(10)/8H RSUBXX /,
     1DLAB(11)/8H DSUBXX /, 
     2DLAB(12)/8H  DXX   /, 
     3DLAB(13)/8H  RXH   /, 
     4DLAB(14)/8H RXSUBH /, 
     5DLAB(15)/8H DXSUBH /, 
     6XLAB/8HSTATION /, 
     7HLAB/8H  THETA /, 
     8DLAB(16)/8H ZXMAP  /, 
     9DLAB(17)/8H ZXXMAP /
      IFMT=33 
      PI=3.14159265358979 
      PIHALF=PI/2.
      PIOVR4=PI/4.
      RTOD=57.29577951
      DTOR=.0174532925
      XNOW=XGO-XDEL 
      IF(MODE.GT.0) GO TO 200 
      NXPTS=(XEND-XGO)/XDEL+1.
      NHPTS=(HEND-HGO)/HDEL+1.
      XNOW=XGO-XDEL 
      DO 401 IX=1,NXPTS 
  401 XNOW=XNOW+XDEL
      IF(XNOW.GT.XEND) NXPTS=NXPTS-1
      IF(XNOW+XDEL.LE.XEND) NXPTS=NXPTS+1 
      HNOW=HGO-HDEL 
      DO 402 IH=1,NHPTS 
  402 HNOW=HNOW+HDEL
      IF(HNOW.GT.HEND) NHPTS=NHPTS-1
      IF(HNOW+HDEL.LE.HEND) NHPTS=NHPTS+1 
      WRITE(IPLOT,20) NXPTS,NHPTS 
      XNOW=XGO-XDEL 
      DO 400 IX=1,NXPTS 
      XNOW=XNOW+XDEL
      WRITE(IPLOT,21) XNOW
      HNOW=HGO-HDEL 
      DO 410 IH=1,NHPTS 
      HNOW=HNOW+HDEL
      HP=HNOW*DTOR
      CALL CSGEOM(XNOW,HP,RP,RPX,RPH,RPXX,RPXH,NDERV) 
      ZP=RP*SIN(HP) 
      YP=RP*COS(HP) 
      IF(ABS(ABS(HP)-PIHALF).LT.1.E-4) YP=0.
      ZPG=ZP+ZCL(3) 
      IF(NDERV.EQ.0) WRITE(IPLOT,21) YP,ZPG 
      IF(NDERV.EQ.1) WRITE(IPLOT,21) YP,ZPG,HNOW,RPX,RPH
      IF(NDERV.EQ.2) WRITE(IPLOT,21) YP,ZPG,HNOW,RPX,RPH,RPXX,RPXH
   20 FORMAT(2I5) 
   21 FORMAT(7F10.4)
  410 CONTINUE
  400 CONTINUE
      GO TO 100 
  200 XNOW=XNOW+XDEL
      IF(XNOW.GT.XEND) GO TO 100
      I=0 
      HNOW=HGO-HDEL 
  300 HNOW=HNOW+HDEL
      IF(HNOW.GT.HEND) GO TO 210
      I=I+1 
      HNOWR=HNOW*DTOR 
      CALL CSGEOM(XNOW,HNOWR,R(I),RX(I),RH(I),RXX(I),RXH(I),NDERV)
      ZMAP(I)=ZCL(3)
      ZXMAP(I)=ZCLX(3)
      ZXXMAP(I)=ZCLXX(3)
      H(I)=HNOWR
      GO TO 300 
  210 NHPTS=I 
      CALL SLOPE(NHPTS,H,R,RSUBH) 
      CALL SLOPE(NHPTS,H,RX,RXSUBH) 
      IF(IFMT.EQ.33)WRITE(IRITE,33) VTITLE
      IF(IFMT.EQ.30)WRITE(IRITE,30) VTITLE
      IFMT=30 
      WRITE(IRITE,31) 
      WRITE(IRITE,3)XLAB,XNOW 
      WRITE(IRITE,4)GLAB(9),ZCL(3),DLAB(16),ZCLX(3),DLAB(17),ZCLXX(3) 
      WRITE(IRITE,40)(GLAB(KK),KK=1,7)
      DO 220 I=1,NHPTS
      Y(I)=R(I)*COS(H(I)) 
      IF(ABS(ABS(H(I))-PIHALF).LT.1.E-4) Y(I)=0.
      Z(I)=R(I)*SIN(H(I)) 
      H(I)=H(I)*RTOD
      ZG(I)=Z(I)+ZMAP(I)
      RG(I)=SQRT(ZG(I)*ZG(I)+Y(I)*Y(I)) 
      HG(I)=ATAN2(ZG(I),Y(I))*RTOD
      DSUBH(I)=RH(I)-RSUBH(I) 
      DXSUBH(I)=RXH(I)-RXSUBH(I)
  220 WRITE(IRITE,14) 
     1H(I),R(I),HG(I),RG(I),Y(I),Z(I),ZG(I) 
      IF(IABS(NDERV).LT.1) GO TO 200
      WRITE(IRITE,30) VTITLE
      WRITE(IRITE,32) 
      WRITE(IRITE,3) XLAB,XNOW
      WRITE(IRITE,4)GLAB(9),ZCL(3),DLAB(16),ZCLX(3),DLAB(17),ZCLXX(3) 
      WRITE(IRITE,41)GLAB(1),GLAB(2),DLAB(2),DLAB(4),DLAB(6),DLAB(1), 
     1DLAB(13),DLAB(14),DLAB(15),DLAB(7)
      DO 230 I=1,NHPTS
  230 WRITE(IRITE,11) 
     1H(I),R(I),RH(I),RSUBH(I),DSUBH(I),RX(I),RXH(I), 
     2RXSUBH(I),DXSUBH(I),RXX(I)
   11 FORMAT(1X,2F10.5,2E15.6,E10.2,3E15.6,E10.2,E15.6) 
      GO TO 200 
  100 RETURN
    3 FORMAT(1H0,45X,A8,5H  =  ,F10.5)
   30 FORMAT(1H1,45X,20A4)
   33 FORMAT(1H0,45X,20A4)
   31 FORMAT(1H0,45X,17H  GEOMETRY CHECK )
   32 FORMAT(1H0,45X,20H  DERIVATIVES CHECK ) 
   40 FORMAT(1H0,8(3X,A8,4X)) 
   41 FORMAT(1H0,2(1X,A8,1X),2(3X,A8,4X),1X,A8,1X,
     13(3X,A8,4X),1X,A8,1X,3X,A8,4X)
   14 FORMAT(8E15.6)
    4 FORMAT(1H0,20X,3(A8,3H = ,E15.6)) 
      END 
      SUBROUTINE MODE3(XGO,XEND,XDEL,MODE,NDERV)
C***********************************************************************
C*****    CALLED BY GEMCHK TO EXAMINE CONTROL POINTS - MODE 3      *****
C*****    PLOTTING IS TRANSFERED TO MODE 1 (MULTIPLE BODY LINE     *****
C*****    TRACES TO CREATE PLAN AND PROFILE VIEWS)                 *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      COMMON/WVALUE/ W(4,10),WX(5,10),WXX(4,10) 
      COMMON/THETAS/THETA1(10),THETA2(10),KNTARC,UTHET1(10),UTHET2(10), 
     1MODEL 
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      DIMENSION Y(101),Z(101),ZG(101),HG(101),RG(101) 
      DIMENSION THETA(36) 
      DIMENSION X(101),H(101),R(101),RX(101),RH(101),RXH(101),RXX(101)
      DIMENSION ZMAP(101),ZXMAP(101),ZXXMAP(101)
C*IBM REAL*8 GLAB(9),DLAB(17),XLAB,HLAB 
C*IBM REAL*8 ZLAB(9),CLAB(14) 
      DIMENSION GLAB(9),DLAB(17),ZLAB(9),CLAB(14) 
      DATA HEPSIL/.00001/ 
      DATA GLAB(1)/8H  THETA /, 
     1GLAB(2)/8H RADIUS /,
     2GLAB(3)/8H THETAG /,
     3GLAB(4)/8H  RAD-G /,
     4GLAB(5)/8H Y-CORD /,
     5GLAB(6)/8H Z-CORD /,
     6GLAB(7)/8H ZGCORD /,
     7GLAB(8)/8H X-CORD /,
     8GLAB(9)/8H  ZMAP  / 
      DATA DLAB(1)/8H   RX   /, 
     1DLAB(2)/8H   RH   /,
     2DLAB(3)/8H  RSUBX /,
     3DLAB(4)/8H  RSUBH /,
     4 DLAB(5)/8H  DSUBX /, 
     5DLAB(6)/8H  DSUBH /,
     6DLAB(7)/8H  RXX   /,
     7DLAB(8)/8H RXSUBX /,
     8DLAB(9)/8H DXSUBX / 
      DATA DLAB(10)/8H RSUBXX /,
     1DLAB(11)/8H DSUBXX /, 
     2DLAB(12)/8H  DXX   /, 
     3DLAB(13)/8H  RXH   /, 
     4DLAB(14)/8H RXSUBH /, 
     5DLAB(15)/8H DXSUBH /, 
     6XLAB/8HSTATION /, 
     7HLAB/8H  THETA /, 
     8DLAB(16)/8H ZXMAP  /, 
     9DLAB(17)/8H ZXXMAP /
      DATA
     1ZLAB(1)/8H  ZBCL  /,
     2ZLAB(2)/8H ZBCLX  /,
     3ZLAB(3)/8H ZBCLXX /,
     4ZLAB(4)/8H  ZTCL  /,
     5ZLAB(5)/8H ZTCLX  /,
     6ZLAB(6)/8H ZTCLXX /,
     7ZLAB(7)/8H  ZMAP  /,
     8ZLAB(8)/8H ZMAPX  /,
     9ZLAB(9)/8H ZMAPXX / 
      PI=3.14159265358979 
      PIHALF=PI/2.
      PIOVR4=PI/4.
      DATA
     1CLAB(1)/8HU/THETA1/,
     2CLAB(2)/8HU/THETA2/,
     3CLAB(3)/8H   RO   /,
     4CLAB(4)/8H  ROX   /,
     5CLAB(5)/8H  ROXX  /,
     6CLAB(6)/8H   HO   /,
     7CLAB(7)/8H  HOX   /,
     8CLAB(8)/8H  HOXX  /,
     9CLAB(9)/8H   AA   /,
     ACLAB(10)/8H  AAX   /, 
     BCLAB(11)/8H  AAXX  /, 
     CCLAB(12)/8H   BB   /, 
     DCLAB(13)/8H  BBX   /, 
     ECLAB(14)/8H  BBXX  /
      RTOD=57.29577951
      DTOR=.0174532925
      HNOWR=0.
      XNOW=XGO-XDEL 
 2200 XNOW=XNOW+XDEL
      IF(XNOW.GT.XEND) GO TO 100
      CALL CSGEOM(XNOW,HNOWR,R(1),RX(1),RH(1),RXX(1),RXH(1),NDERV)
      WRITE(IRITE,59)XNOW 
   59 FORMAT(//,1X,13H  XSTATION = ,F10.5)
   60 FORMAT(/,1X,13H  XSTATION = ,F10.5) 
      WRITE(IRITE,61)ZLAB 
   61 FORMAT(1X,9(A8,2X)) 
      WRITE(IRITE,62)(ZCL(M),ZCLX(M),ZCLXX(M),M=1,3)
   62 FORMAT(1X,9F10.5) 
      WRITE(IRITE,63)CLAB 
   63 FORMAT(3X,1HJ,1X,14(A8,1X)) 
      IRT=IRITE 
      KK=0
      DO 3610 MM=1,KNTARC 
      M=IUORDR(MM)
      IF(IN(M).EQ.1) KK=KK+1
      K=-M
      IF(IN(M).EQ.1)
     1WRITE(IRT,64)M,UTHET1(M),UTHET2(M),(W(L,M),WX(L,M),WXX(L,M),L=1,4)
      IF(IN(M).EQ.-1) 
     1WRITE(IRT,64)K,THETA1(M),THETA2(M),(W(L,M),WX(L,M),WXX(L,M),L=1,4)
 3610 CONTINUE
   64 FORMAT(1X,I3,1X,2(F8.4,1X),12(E8.2,1X)) 
      DO 2300 II=1,KK 
      I=IUORDR(II)
 2300 THETA(II)=UTHET1(I) 
      KARCP1=KK+1 
      KARCM1=KK-1 
      K=IUORDR(KK)
      THETA(KARCP1)=UTHET2(K) 
      HNOWR=THETA(1)
      H(1)=HNOWR
      H(2)=HNOWR+HEPSIL 
      HNOWR=THETA(KARCP1) 
      L=3*KK
      H(L)=HNOWR-HEPSIL 
      H(L+1)=HNOWR
      LKNT=L+1
      IF(KK.EQ.1) GO TO 2311
      L=0 
      LSTEP=3 
      DO 2310 M=2,KK
      L=L+LSTEP 
      HNOWR=THETA(M)
      H(L)=HNOWR-HEPSIL 
      H(L+1)=HNOWR
      H(L+2)=HNOWR+HEPSIL 
 2310 CONTINUE
 2311 CONTINUE
      DO 2320 L =1,LKNT 
      CALL CSGEOM(XNOW,H(L),R(L),RX(L),RH(L),RXX(L),RXH(L),NDERV) 
      Y(L)=R(L)*COS(H(L)) 
      IF(ABS(ABS(H(L))-PIHALF).LT.1.E-4.AND.L.NE.2.AND. 
     1L.NE.(LKNT-1)) Y(L)=0.
      Z(L)=R(L)*SIN(H(L)) 
      ZG(L)=Z(L)+ZCL(3) 
 2320 CONTINUE
      WRITE(IRITE,60)XNOW 
      WRITE(IRITE,65)GLAB(1),GLAB(2),DLAB(1),DLAB(2),DLAB(7), 
     1 DLAB(13),(GLAB(I),I=5,7) 
   65 FORMAT(3X,9(A8,2X)) 
      DO 2340 L=1,LKNT
      WRITE(IRITE,66)H(L),R(L),RX(L),RH(L),RXX(L),RXH(L), 
     1 Y(L),Z(L),ZG(L)
   66 FORMAT(1X,9F10.5) 
 2340 CONTINUE
      GO TO 2200
  100 RETURN
      END 
      SUBROUTINE MODE4(XGO,XEND,XDEL,HGO,HEND,HDEL,MODE,NDERV)
C***********************************************************************
C*****    CALLED BY GEMCHK TO EXERCISE SUBROUTINE SLOPE TO         *****
C*****    EXAMINE NUMERICALLY FORMED DERIVATIVES                   *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      DIMENSION Y(101),Z(101),ZG(101),HG(101),RG(101) 
      DIMENSION THETA(36) 
      DIMENSION X(101),H(101),R(101),RX(101),RH(101),RXH(101),RXX(101)
      DIMENSION RSUBH(101),RSUBX(101),RXSUBH(101),RHSUBX(101) 
      DIMENSION RXSUBX(101),RSUBXX(101) 
      DIMENSION DSUBH(101),DSUBX(101),DHSUBX(101),DXSUBH(101) 
      DIMENSION DXSUBX(101),DSUBXX(101),DXX(101)
      DIMENSION ZMAP(101),ZXMAP(101),ZXXMAP(101)
C*IBM REAL*8 XLAB,HLAB,GLAB(9),DLAB(17) 
      DIMENSION GLAB(9),DLAB(17)
      DATA GLAB(1)/8H  THETA /, 
     1GLAB(2)/8H RADIUS /,
     2GLAB(3)/8H THETAG /,
     3GLAB(4)/8H  RAD-G /,
     4GLAB(5)/8H Y-CORD /,
     5GLAB(6)/8H Z-CORD /,
     6GLAB(7)/8H ZGCORD /,
     7GLAB(8)/8H X-CORD /,
     8GLAB(9)/8H  ZMAP  / 
      DATA DLAB(1)/8H   RX   /, 
     1DLAB(2)/8H   RH   /,
     2DLAB(3)/8H  RSUBX /,
     3DLAB(4)/8H  RSUBH /,
     4 DLAB(5)/8H  DSUBX /, 
     5DLAB(6)/8H  DSUBH /,
     6DLAB(7)/8H  RXX   /,
     7DLAB(8)/8H RXSUBX /,
     8DLAB(9)/8H DXSUBX / 
      DATA DLAB(10)/8H RSUBXX /,
     1DLAB(11)/8H DSUBXX /, 
     2DLAB(12)/8H  DXX   /, 
     3DLAB(13)/8H  RXH   /, 
     4DLAB(14)/8H RXSUBH /, 
     5DLAB(15)/8H DXSUBH /, 
     6XLAB/8HSTATION /, 
     7HLAB/8H  THETA /, 
     8DLAB(16)/8H ZXMAP  /, 
     9DLAB(17)/8H ZXXMAP /
      IFMT=33 
      PI=3.14159265358979 
      PIHALF=PI/2.
      PIOVR4=PI/4.
      RTOD=57.29577951
      DTOR=.0174532925
      HNOW=HGO-HDEL 
 1200 HNOW=HNOW+HDEL
      IF(HNOW.GT.HEND) GO TO 100
      I=0 
      HNOWR=HNOW*DTOR 
      XNOW=XGO-XDEL 
 1400 XNOW=XNOW+XDEL
      IF(XNOW.GT.XEND) GO TO 1210 
      I=I+1 
      X(I)=XNOW 
      CALL CSGEOM(X(I),HNOWR,R(I),RX(I),RH(I),RXX(I),RXH(I),NDERV)
      ZMAP(I)=ZCL(3)
      ZXMAP(I)=ZCLX(3)
      ZXXMAP(I)=ZCLXX(3)
      GO TO 1400
 1210 NXPTS=I 
      CALL SLOPE(NXPTS,X,R,RSUBX) 
      CALL SLOPE(NXPTS,X,RX,RXSUBX) 
      CALL SLOPE(NXPTS,X,RSUBX,RSUBXX)
      CALL SLOPE(NXPTS,X,RH,RHSUBX) 
      IF(IFMT.EQ.33)WRITE(IRITE,33) VTITLE
      IF(IFMT.EQ.30)WRITE(IRITE,30) VTITLE
      IFMT=30 
      WRITE(IRITE,31) 
      WRITE(IRITE,3) HLAB,HNOW
      WRITE(IRITE,40)GLAB(8),GLAB(2),GLAB(4),GLAB(5),GLAB(6),GLAB(7)
     1,GLAB(3),GLAB(9)
      DO 1211 I=1,NXPTS 
      Y(I)=R(I)*COS(HNOWR)
      IF(ABS(ABS(HNOWR)-PIHALF).LT.1.E-4) Y(I)=0. 
      Z(I)=R(I)*SIN(HNOWR)
      ZG(I)=Z(I)+ZMAP(I)
      HG(I)=ATAN2(ZG(I),Y(I))*RTOD
      RG(I)=SQRT(ZG(I)*ZG(I)+Y(I)*Y(I)) 
      DSUBX(I)=RX(I)-RSUBX(I) 
      DXSUBX(I)=RXX(I)-RXSUBX(I)
      DSUBXX(I)=RXX(I)-RSUBXX(I)
      DXX(I)=DXSUBX(I)-DSUBXX(I)
      DHSUBX(I)=RXH(I)-RHSUBX(I)
 1211 CONTINUE
      DO 1215 I=1,NXPTS 
 1215 WRITE(IRITE,14) 
     1 X(I),R(I),RG(I),Y(I),Z(I),ZG(I),HG(I),ZMAP(I)
      IF(IABS(NDERV).LT.1) GO TO 1200 
      WRITE(IRITE,30) VTITLE
      WRITE(IRITE,32) 
      WRITE(IRITE,3) HLAB,HNOW
      WRITE(IRITE,41)GLAB(8),GLAB(2),DLAB(1),DLAB(3),DLAB(5), 
     1DLAB(2),DLAB(13),DLAB(14),DLAB(15),DLAB(16) 
      DO 1220 I=1,NXPTS 
 1220 WRITE(IRITE,12) 
     1X(I),R(I),RX(I),RSUBX(I),DSUBX(I),RH(I),RXH(I),RHSUBX(I)
     2,DHSUBX(I),ZXMAP(I) 
   12 FORMAT(1X,2F10.5,2E15.6,E10.2,3E15.6,E10.2,E15.6) 
      IF(IABS(NDERV).LT.2) GO TO 1200 
      WRITE(IRITE,30) VTITLE
      WRITE(IRITE,32) 
      WRITE(IRITE,3) HLAB,HNOW
      WRITE(IRITE,52)GLAB(8),GLAB(2),DLAB(1),DLAB(7),DLAB(8), 
     1DLAB(9),DLAB(10),DLAB(11),DLAB(12),DLAB(17) 
      DO 1230 I=1,NXPTS 
 1230 WRITE(IRITE,13) 
     1X(I),R(I),RX(I),RXX(I),RXSUBX(I),DXSUBX(I),RSUBXX(I),DSUBXX(I)
     2,DXX(I),ZXXMAP(I) 
      GO TO 1200
  100 RETURN
   30 FORMAT(1H1,45X,20A4)
   33 FORMAT(1H0,45X,20A4)
   31 FORMAT(1H0,45X,17H  GEOMETRY CHECK )
   32 FORMAT(1H0,45X,20H  DERIVATIVES CHECK ) 
    3 FORMAT(1H0,45X,A8,5H  =  ,F10.5)
   40 FORMAT(1H0,8(3X,A8,4X)) 
   41 FORMAT(1H0,2(1X,A8,1X),2(3X,A8,4X),1X,A8,1X,
     13(3X,A8,4X),1X,A8,1X,3X,A8,4X)
   52 FORMAT(1H0,2(1X,A8,1X),3(3X,A8,4X),1X,A8,4X,3X,A8,4X, 
     12(1X,A8,1X),3X,A8)
   14 FORMAT(8E15.6)
   13 FORMAT(1X,2F10.5,3E15.6,E10.2,E15.6,2E10.2,E15.6) 
      END 
      SUBROUTINE MODE5(XGO,XEND,XDEL,HGO,HEND,HDEL,MODE,NDERV)
C***********************************************************************
C*****    CALLED BY GEMCHK TO EXAMINE SURFACE NORMALS              *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      COMMON/NORML/UNX,UNY,UNZ
C*IBM REAL*8 XLAB,GLAB(9),NLAB(3) 
      DIMENSION GLAB(9),NLAB(3) 
      DATA XLAB/8HSTATION / 
      DATA NLAB(1)/8H NORM-X /, 
     1     NLAB(2)/8H NORM-Y /, 
     2     NLAB(3)/8H NORM-Z /
      DATA GLAB(1)/8H  THETA /, 
     1GLAB(2)/8H RADIUS /,
     2GLAB(3)/8H THETAG /,
     3GLAB(4)/8H  RAD-G /,
     4GLAB(5)/8H Y-CORD /,
     5GLAB(6)/8H Z-CORD /,
     6GLAB(7)/8H ZGCORD /,
     7GLAB(8)/8H X-CORD /,
     8GLAB(9)/8H  ZMAP  / 
      IFMT=33 
      RTOD=57.29577951
      DTOR=.0174532925
 5000 WRITE(IRITE,42) 
   42 FORMAT(1H0,45X,23H SURFACE NORMALS CHECK )
      XNOW=XGO-XDEL 
 5100 XNOW=XNOW+XDEL
      IF(XNOW.GT.XEND) GO TO 100
      IF(IFMT.EQ.33) WRITE(IRITE,3) XLAB,XNOW 
      IF(IFMT.EQ.30) WRITE(IRITE,43) XLAB,XNOW
      IFMT=30 
   43 FORMAT(1H1,45X,A8,5H  =  ,F10.5)
      WRITE(IRITE,40)(GLAB(I),I=1,2),(GLAB(I),I=5,7), 
     1(NLAB(I),I=1,3) 
      HNOW=HGO-HDEL 
 5200 HNOW=HNOW+HDEL
      IF(HNOW.GT.HEND) GO TO 5100 
      HNOWR=HNOW*DTOR 
      CALL CSGEOM(XNOW,HNOWR,R,RX,RH,RXX,RXH,NDERV) 
      Y=R*COS(HNOWR)
      IF(ABS(ABS(HNOWR)-PIHALF).LT.1.E-4) Y=0.
      Z=R*SIN(HNOWR)
      ZG=Z+ZCL(3) 
      WRITE(IRITE,14) HNOW,R,Y,Z,ZG,UNX,UNY,UNZ 
      GO TO 5200
  100 RETURN
    3 FORMAT(1H0,45X,A8,5H  =  ,F10.5)
   14 FORMAT(8E15.6)
   40 FORMAT(1H0,8(3X,A8,4X)) 
      END 
      SUBROUTINE MODE7(XGO,XEND,XDEL,MODE,NDERV)
C***********************************************************************
C*****    CALLED BY GEMCHK TO EXAMINE ALL DEFINED ARCS AT A GIVEN  *****
C*****    CROSS SECTIONAL STATION                                  *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      COMMON/THETAS/THETA1(10),THETA2(10),KNTARC,UTHET1(10),UTHET2(10), 
     1MODEL 
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      PI=3.14159265358979 
      PIHALF=PI/2.
      PIOVR4=PI/4.
      RTOD=57.29577951
      DTOR=.0174532925
      NXPTS=(XEND-XGO)/XDEL+1.
      NHPTS=30
      IF(MODE.GT.0) GO TO 999 
      NX=0
      WRITE(IPLOT,10) NXPTS,NHPTS 
   10 FORMAT(16I5)
      XNOW=XGO-XDEL 
  100 XNOW=XNOW+XDEL
      IF(XNOW.GT.XEND) GO TO 400
      NX=NX+1 
      CALL CSGEOM(XNOW,0.,R,RX,RH,RXX,RXH,0)
      KARC=0
      DO 150 IARC=1,KNTARC
  150 IF(ICSATY(IARC,MODEL).NE.5.OR.IN(IARC).EQ.1)KARC=KARC+1 
      WRITE(IPLOT,10) KARC,KNTARC 
      WRITE(IPLOT,11) XNOW
      DO 300 IARC=1,KNTARC
      IF(ICSATY(IARC,MODEL).EQ.5.AND.IN(IARC).EQ.-1) GO TO 300
      HDEL=(THETA2(IARC)-THETA1(IARC))/(FLOAT(NHPTS)-1.)
      DO 200 IPT=1,NHPTS
      HNOWR=(FLOAT(IPT)-1.)*HDEL+THETA1(IARC) 
      CALL CSCALC(XNOW,MODEL,IARC,HNOWR,R,RX,RH,RXX,RXH,NDERV)
      Y=R*COS(HNOWR)
      ZG=R*SIN(HNOWR)+ZCL(3)
      IF(IABS(NDERV).EQ.0) WRITE(IPLOT,11) Y,ZG 
      IF(IABS(NDERV).EQ.1) WRITE(IPLOT,11) Y,ZG,HNOWR,RX,RH 
      IF(IABS(NDERV).EQ.2) WRITE(IPLOT,11) Y,ZG,HNOWR,RX,RH,RXX,RXH 
   11 FORMAT(8F10.5)
  200 CONTINUE
  300 CONTINUE
      GO TO 100 
  400 IF(NX.LT.NXPTS) WRITE(IPLOT,12) 
   12 FORMAT(5H DONE) 
  999 RETURN
      END 
      SUBROUTINE SLOPE(N,X,Y,T )
C***********************************************************************
C*****    NUMERICAL ESTIMATE OF FIRST DERIVATIVE - USED AS AN      *****
C*****    INDEPENDENT CHECK ON QUICK DERIVATIVES                   *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      DIMENSION X(1),Y(1),T(1),TT(5),FLAG(5)
      DIMENSION XX(8),YY(8) 
      FLINE(XL,YL,XR,YR,X)=(YL*(XR-X)+YR*(X-XL))/(XR-XL)
      DO 10 I=1,3 
      XX(I+1)=X(I)
      YY(I+1)=Y(I)
      K=N-I+1 
      XX(I+5)=X(K)
      YY(I+5)=Y(K)
   10 CONTINUE
      DO 80 K=1,5,4 
      XL=XX(K+2)-XX(K+1)
      YL=YY(K+2)-YY(K+1)
      XR=XX(K+3)-XX(K+2)
      YR=YY(K+3)-YY(K+2)
      XC=XX(K+3)-XX(K+1)
      YC=YY(K+3)-YY(K+1)
      XMONO=XR*XL 
      YMONO=YR*YL 
      IF(XMONO.GT.0..AND.YMONO.GT.0.) GO TO 50
      IF(XMONO.GT.0.) GO TO 60
      IF(YMONO.GT.0.) GO TO 70
      IF(XL.GT.0..AND.YL.GT.0.) GO TO 30
      IF(ABS(YC).GT.ABS(XC)) GO TO 20 
      XX(K)=XX(K+1)-XC
      YY(K)=FLINE(XX(K+1),YY(K+1),XX(K+3),YY(K+3),XX(K))
      GO TO 80
   20 YY(K)=YY(K+1)-YC
      XX(K)=FLINE(YY(K+1),XX(K+1),YY(K+3),XX(K+3),YY(K))
      GO TO 80
   30 IF(ABS(YC).GT.ABS(XC)) GO TO 40 
      XX(K)=XX(K+1)-XL
      YY(K)=FLINE(XX(K+1),YY(K+1),XX(K+2),YY(K+2),XX(K))
      GO TO 80
   40 YY(K)=YY(K+1)-YL
      XX(K)=FLINE(YY(K+1),XX(K+1),YY(K+2),XX(K+2),YY(K))
      GO TO 80
   50 IF(ABS(YC).GT.ABS(XC)) GO TO 70 
   60 XX(K)=XX(K+1)-XR
      YL=FLINE(XX(K+1),YY(K+1),XX(K+2),YY(K+2),XX(K)) 
      YR=FLINE(XX(K+2),YY(K+2),XX(K+3),YY(K+3),XX(K)) 
      YY(K)=FLINE(XX(K+1),YL,XX(K+3),YR,XX(K))
      GO TO 80
   70 YY(K)=YY(K+1)-YR
      XL=FLINE(YY(K+1),XX(K+1),YY(K+2),XX(K+2),YY(K)) 
      XR=FLINE(YY(K+2),XX(K+2),YY(K+3),XX(K+3),YY(K)) 
      XX(K)=FLINE(YY(K+1),XL,YY(K+3),XR,YY(K))
   80 CONTINUE
      X(N+1)=XX(5)
      Y(N+1)=YY(5)
      XJ=XX(1)
      YJ=YY(1)
      XK=X(1) 
      YK=Y(1) 
      XR=XK-XJ
      YR=YK-YJ
      DO 1000 J=1,N 
      XI=XJ 
      XL=XR 
       YL=YR
      YI=YJ 
      XJ=XK 
      YJ=YK 
      K=J+1 
      XK=X(K) 
      YK=Y(K) 
      XR=XK-XJ
      YR=YK-YJ
      XC=XK-XI
      YC=YK-YI
      SC=SIGN(1000.,YC) 
      IF(XC.NE.0.) SC=YC/XC 
      T(J)=SC 
      IF(XR.EQ.0..AND.XL.EQ.0.) GO TO 1000
      IF(XR.EQ.0..AND.YR.EQ.0.) GO TO 1000
      IF(XL.EQ.0..AND.YL.EQ.0.) GO TO 1000
      IF(XR.EQ.0.) GO TO 1110 
      IF(XL.EQ.0.) GO TO 1120 
      IF(XC.EQ.0.) GO TO 1130 
      DO 100 I=1,5
      TT(I)=0.
      FLAG(I)=1.
  100 CONTINUE
      XMONO=XR*XL 
      YMONO=YR*YL 
      IF(XMONO.GT.0.) GO TO 200 
      IF(YMONO.LT.0.) GO TO 1000
      FLAG(1)=0.
      FLAG(3)=0.
      GO TO 300 
  200 IF(YMONO.GT.0.) GO TO 300 
      FLAG(2)=0.
      FLAG(3)=0.
  300 SL=YL/XL
      SR=YR/XR
      IF(ABS(SR-SL).LT.1.E-4) GO TO 1000
      SSRSL=SR+SL 
      PSRSL=SR*SL 
      SMIN=AMIN1(SR,SL) 
      SMAX=AMAX1(SR,SL) 
C                   FIT  ONE                 X*X =A*X    +  B*Y    +  C 
      IF(FLAG(1).EQ.0.) GO TO 1020
      TT(1)=SSRSL-SC
C                   FIT  TWO                 Y*Y =A*X    +  B*Y    +  C 
 1020 CONTINUE
      IF(FLAG(2).EQ.0.) GO TO 1030
      DENOM=SSRSL*SC-PSRSL
      IF(DENOM.NE.0.) GO TO 1021
      FLAG(2)=0.
      GO TO 1030
 1021 TT(2)=PSRSL*SC/DENOM
C                   FIT  THREE               X*Y =A*X    +  B*Y    +  C 
 1030 CONTINUE
      IF(FLAG(3).EQ.0.) GO TO 1040
      DENOM=SC
      IF(DENOM.NE.0.) GO TO 1031
      FLAG(3)=0.
      GO TO 1040
 1031 TT(3)=PSRSL/DENOM 
C                   FIT  FOUR      X*X    +  Y*Y =A*X    +  B*Y    +  C 
 1040 CONTINUE
      DENOM=SSRSL*SC+1.-PSRSL 
      IF(DENOM.NE.0.) GO TO 1041
      FLAG(4)=0.
      GO TO 1050
 1041 TT(4)=(SSRSL+SC*(PSRSL-1. ))/DENOM
C                   FIT  FIVE      X*X    -  Y*Y =A*X    +  B*Y    +  C 
 1050 CONTINUE
      DENOM=1.+PSRSL-SC*SSRSL 
      IF(DENOM.NE.0.) GO TO 1051
      FLAG(5)=0.
      GO TO 1060
 1051 TT(5)=(SSRSL-SC*(1.+PSRSL))/DENOM 
       GO TO 1060 
 1110 T(J)=SL*SC/(SC-SL)
       GO TO 1000 
 1120 T(J)=SR*SC/(SC-SR)
       GO TO 1000 
 1130 T(J)=SIGN(1000.,SR*SL)
      IF((SL+SR).NE.0.) T(J)=SR*SL/(SL+SR)
      GO TO 1000
 1060 CONTINUE
      SUM=0.
      TSUM=0. 
      IF(XMONO.LT.0.) GO TO 1210
      DO 1200 I=1,5 
      IF(FLAG(I).EQ.0.) GO TO 1200
      IF(TT(I).LT.SMIN)  GO TO 1200 
      IF(TT(I).GT.SMAX)  GO TO 1200 
      TSUM=TSUM+TT(I) 
      SUM=SUM+1.
 1200 CONTINUE
      GO TO 1400
 1210 DO 1300 I=1,5 
      IF(FLAG(I).EQ.0.) GO TO 1300
      IF(TT(I).LT.SMAX) GO TO 1300
      IF(TT(I).GT.SMIN) GO TO 1300
      TSUM=TSUM+TT(I) 
      SUM=SUM+1.
 1300 CONTINUE
 1400 IF(SUM.EQ.0.) GO TO 1000
      TSUM=TSUM/SUM 
       T(J)=TSUM
 1000 CONTINUE
      RETURN
      END 
      SUBROUTINE GEOMIN(INR,IW,ICW,IR)
C***********************************************************************
C*****    READS IN MATH MODEL GENERATED BY QUICK-GEOMETRY          *****
C*****    DEFINITION                                               *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,INREAD
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/BLCONF/KNTBLM,KNTBLS(25),IBLSSH(10,25),BLCOEF(7,10,25),
     1NBLCOR,IBLMX(50),IBLSX(50),BLMMIN(25),BLMMAX(25)
      COMMON/TITLES/VTITLE(15),CTITLE(10,10),BTITLE(10,35)
      DATA IPUNCH/7/
      IREAD=IR
      IRITE=IW
      ICRITE=ICW
      INREAD=INR
      IF(INREAD.EQ.IRITE.OR.INREAD.EQ.ICRITE.OR.INREAD.EQ.IPUNCH) 
     1  GO TO 900 
      READ(INREAD,7)VTITLE
    7 FORMAT(1X,15A4) 
      READ(INREAD,1)KNTCSM,IZCDEX 
    1 FORMAT(1X,3(I2,1X)) 
      DO 100 K=1,KNTCSM 
      READ(INREAD,2)KNTCSA(K),IZBDEX(K),IZTDEX(K),XCSMS1(K),XCSMS2(K),
     1(CTITLE(I,K),I=1,10)
    2 FORMAT(1X,3(I2,1X),1X,2F10.5,10A4)
      KARC=KNTCSA(K)
      DO 200 J=1,KARC 
  200 READ(INREAD,3)M,N,ICSASQ(J,K),ICSASH(J,K),ICSATY(J,K),ICSAFR(J,K) 
     1,(ICSACP(I,J,K),I=1,3),(ICSACC(I,J,K),I=1,2),(ISPEC(I,J,K),I=1,2) 
    3 FORMAT(1X,2(I2,1X),3X,11I5) 
  100 CONTINUE
      READ(INREAD,4)NBLCOR
      DO 300 K=1,NBLCOR 
  300 READ(INREAD,5)KDUM,IBLMX(K) 
    4 FORMAT(1X,I2) 
    5 FORMAT(1X,2(I2,1X),4X,10A4) 
      READ(INREAD,4)KNTBLM
      DO 400 K=1,KNTBLM 
      READ(INREAD,9)KDUM,KNTSEG,BLMMIN(K),BLMMAX(K) 
      KNTBLS(K)=KNTSEG
      IBLSX(K)=1
      DO 410 J =1,KNTSEG
      READ(INREAD,6)KD,JD,(BLCOEF(I,J,K),I=1,2),
     1(BLCOEF(I,J,K),I=6,7) 
      READ(INREAD,8)KD,JD,IBLSSH(J,K),(BLCOEF(I,J,K),I=3,5) 
  410 CONTINUE
    6 FORMAT(1X,2(I2,1X),1X,4F10.5) 
    8 FORMAT(1X,3(I2,1X),1X,3E15.8) 
    9 FORMAT(1X,2(I2,1X),2F15.5)
  400 CONTINUE
  900 RETURN
      END 
      SUBROUTINE CSGEOM(X,H,R,RX,RH,RXX,RXH,NDERV)
C***********************************************************************
C*****    MAJOR QUICK SUBROUTINE -  CONSTRUCTS CROSS SECTION       *****
C*****    GEOMETRY - USED FOR ALL GEOMETRY MODEL INTERROGATIONS    *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      COMMON/THETAS/THETA1(10),THETA2(10),KNTARC,UTHET1(10),UTHET2(10), 
     1MODEL 
      EQUIVALENCE (ZB,ZCL(1)),(ZBX,ZCLX(1)),(ZBXX,ZCLXX(1)) 
      EQUIVALENCE (ZT,ZCL(2)),(ZTX,ZCLX(2)),(ZTXX,ZCLXX(2)) 
      EQUIVALENCE (ZC,ZCL(3)),(ZCX,ZCLX(3)),(ZCXX,ZCLXX(3)) 
      DATA XOLD/1.E+10/ 
C*****   CHECK FOR DERIVATIVE CALCULATION 
      IF(NDERV.LT.0) GO TO 1030 
      PIHALF=1.5707963267649
C*****   CHECK FOR THE SAME X-STATION 
      IF(X.EQ.XOLD) GO TO 1000
C*****      SETUP NEW X-STATION 
      INXARC=1
      IF(X.LT.XOLD)MODEL =1 
  100 IF(X.LE.XCSMS2(MODEL)) GO TO 200
      IF(MODEL.EQ.KNTCSM) GO TO 200 
      MODEL=MODEL+1 
      GO TO 100 
  200 XOLD=X
      XSTAR=X 
      XSIZE=1.E-5*(XCSMS2(KNTCSM)-XCSMS1(1))
      IF(ABS(X-XCSMS1(MODEL)).LT.XSIZE) XSTAR=XCSMS1(MODEL)+XSIZE 
      IF(ABS(X-XCSMS2(MODEL)).LT.XSIZE) XSTAR=XCSMS2(MODEL)-XSIZE 
      KNTARC=KNTCSA(MODEL)
      KZCDEX=2*IZCDEX 
      KZBDEX=2*IZBDEX(MODEL)
      KZTDEX=2*IZTDEX(MODEL)
      CALL BLMSET(XSTAR)
      CALL BLGEOM(KZCDEX,XSTAR,ZC,ZCX,ZCXX) 
      CALL BLGEOM(KZBDEX,XSTAR,ZB,ZBX,ZBXX) 
      CALL BLGEOM(KZTDEX,XSTAR,ZT,ZTX,ZTXX) 
      CALL CSMSET(XSTAR,ICSASQ(1,MODEL),ICSASH(1,MODEL),
     1ICSATY(1,MODEL),ICSAFR(1,MODEL),ICSACP(1,1,MODEL))
      CALL THELIM(XSTAR)
C******     LOOK UP CENTER LINE GEOMETRY
      CALL BLGEOM(KZBDEX,XSTAR,ZB,ZBX,ZBXX) 
      CALL BLGEOM(KZTDEX,XSTAR,ZT,ZTX,ZTXX) 
      SIZE=.5*(ZT-ZB) 
C******  REFERENCE CENTER LINE GEOMETRY TO MAP AXIS -- ZC 
      DO 210 K=1,2
      ZCL(K)=ZCL(K)-ZCL(3)
      ZCLX(K)=ZCLX(K)-ZCLX(3) 
      ZCLXX(K)=ZCLXX(K)-ZCLXX(3)
  210 CONTINUE
      GO TO 1010
C*****     CHECK  H  FOR SAME ARC 
 1000 IF(IN(INXARC).EQ.+1.AND.H.GE.UTHET1(INXARC).AND.H.LE.UTHET2(INXARC
     1  )) GO TO 1030 
C*****     SEARCH FOR NEW ARC 
 1010 DO 1020 JJ=1,KNTARC 
      J=IUORDR(JJ)
      IF(IN(J).NE.+1.OR.H.LT.UTHET1(J).OR.H.GT.UTHET2(J)) GO TO 1020
      INXARC=J
      GO TO 1030
 1020 CONTINUE
 1030 CALL CSCALC(XSTAR,MODEL,INXARC,H,R,RX,RH,RXX,RXH,NDERV) 
      RETURN
      END 
      SUBROUTINE BLMSET(X)
C***********************************************************************
C*****    CALCULATES POINTS AND SLOPES ON ALL BODY LINE MODELS     *****
C*****    FOR THE SPECIFIED FUSELAGE STATION                       *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/BLCONF/KNTBLM,KNTBLS(25),IBLSSH(10,25),BLCOEF(7,10,25),
     1NBLCOR,IBLMX(50),IBLSX(50),BLMMIN(25),BLMMAX(25)
      COMMON/BLVALS/V(25),VX(25),VXX(25)
      DO 500 INXBLM=1,KNTBLM
      VNOW=0. 
      VXNOW=0.
      VXXNOW=0. 
      KNTMAX=KNTBLS(INXBLM) 
      XMIN=BLCOEF(1,1,INXBLM) 
      XMAX=BLCOEF(6,KNTMAX,INXBLM)
      DO 10 ISEG=1,KNTMAX 
      X1MAX=BLCOEF(6,ISEG,INXBLM) 
      IF(X1MAX.GT.XMAX) XMAX=X1MAX
   10 CONTINUE
      IF(X.LT.XMIN) GO TO 300 
      IF(X.GT.XMAX) GO TO 300 
      DO 100 INXSEG=1,KNTMAX
      XONE=BLCOEF(1,INXSEG,INXBLM)
      XTWO=BLCOEF(6,INXSEG,INXBLM)
      IF(X.GT.XTWO) GO TO 100 
      IF(X.LT.XONE) GO TO 300 
      GO TO 200 
  100 CONTINUE
      GO TO 300 
  200 IBLSX(INXBLM)=INXSEG
      ISHAPE=IBLSSH(INXSEG,INXBLM)
      IF(ISHAPE.EQ.0.OR.ISHAPE.EQ.11) GO TO 300 
      XO=BLCOEF(1,INXSEG,INXBLM)
      VO=BLCOEF(2,INXSEG,INXBLM)
      A =BLCOEF(3,INXSEG,INXBLM)
      B =BLCOEF(4,INXSEG,INXBLM)
      C =BLCOEF(5,INXSEG,INXBLM)
      XSTEP=X-XO
      CALL CURVES(ISHAPE,A,B,C,XSTEP,VSTEP,VXNOW,VXXNOW)
      VNOW=VO+VSTEP 
  300 V(INXBLM)=VNOW
      VX(INXBLM)=VXNOW
      VXX(INXBLM)=VXXNOW
  500 CONTINUE
      RETURN
      END 
      SUBROUTINE CURVES(ISHAPE,AA,BB,CC,XX,YY,TT,SS)
C***********************************************************************
C*****    CALCULATES POINTS AND SLOPES FROM INDIVIDUAL CURVE FITS  *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      DOUBLE A,B,C,X,Y,T,S,FACT,RFACT 
      DATA ZERO/1.E-5/,BIGZRO/1.E-2/
      A=AA
      B=BB
      C=CC
      X=XX
C*****        FUNCTION VALUE = Y
C*****        FIRST DERIVATIVE = T = DY/DX
C*****        SECOND DERIVATIVE = S = D2Y/DX2 
      Y=0.D0
      T=0.D0
      S=0.D0
      IF(ISHAPE.EQ.0) GO TO 9000
      NSHAPE=IABS(ISHAPE) 
      SSHAPE=ISIGN(1,ISHAPE)
      GO TO (100,200,300,400,500,600,700,800,900), NSHAPE 
C        *
C       ***         LINE                A*X + B*Y = 0 
C        *
  100 IF(B.NE.0.)T=-A/B 
      Y=X*T 
      GO TO 9000
C        *
C       ***         CIRCLE              A*X + B*Y + X**2 + Y**2 = 0 
C        *
  200 SWGN=SIGN(1.,BB)
      IF(BB.EQ.0.) SWGN=SSHAPE
      FACT=B*B-4.*X*(X+A) 
      Y=(SWGN*DSQRT(FACT)-B)/2. 
      FACT=2.*Y+B 
      DUM=FACT
      IF(DUM.EQ.0.) FACT=SWGN*BIGZRO
      T=-(2.*X+A)/FACT
      S=-2.*(T*T+1.)/FACT 
      GO TO 9000
C        *
C       ***         X-ELLIPSE           A*X + B*Y + C*X**2 + Y**2 = 0 
C        *
  300 SWGN=SIGN(1.,BB)
      IF(BB.EQ.0.) SWGN=SSHAPE
      FACT=B*B-4.*X*(C*X+A) 
      Y=(SWGN*DSQRT(FACT)-B)/2. 
      FACT=2.*Y+B 
      DUM=FACT
      IF(DUM.EQ.0.) FACT=SWGN*BIGZRO
      T=-(2.*C*X+A)/FACT
      S=-2.*(C+T*T)/FACT
      GO TO 9000
C        *
C       ***         Y-ELLIPSE           A*X + B*Y + C*Y**2 + X**2 = 0 
C        *
  400 IF(ABS(CC).LT.ZERO) GO TO 600 
      SWGN=SIGN(1.,BB)
      IF(BB.EQ.0.) SWGN=SSHAPE
      FACT=B*B-4.*C*X*(X+A) 
      Y=(SWGN*DSQRT(FACT)-B)/(2.*C) 
      FACT=2.*C*Y+B 
      DUM=FACT
      IF(DUM.EQ.0.) FACT=SWGN*BIGZRO
      T=-(2.*X+A)/FACT
      S=-2.*(1.+C*T*T)/FACT 
      GO TO 9000
C        *
C       ***         X-PARABOLA          A*X + B*Y + Y**2 = 0
C        *
  500 SWGN=SIGN(1.,BB)
      IF(BB.EQ.0.) SWGN=SSHAPE
      FACT=B*B-4.*A*X 
      Y=(SWGN*DSQRT(FACT)-B)/2. 
      FACT=2.*Y+B 
      DUM=FACT
      IF(DUM.EQ.0.) FACT=SWGN*BIGZRO
      T=-A/FACT 
      S=-2.*T*T/FACT
      GO TO 9000
C        *
C       ***         Y-PARABOLA          A*X + B*Y + X**2 = 0
C        *
  600 Y=-X*(X+A)/B
      T=-(2.*X+A)/B 
      S=-2./B 
      GO TO 9000
C        *
C       ***         ROTATED X-PARABOLA  A*X + B*Y + C*X*Y + Y**2 = 0
C        *
  700 RFACT=B+C*X 
      SWGN=SIGN(1.,BB)
      IF(BB.EQ.0.) SWGN=SSHAPE
      FACT=RFACT*RFACT-4.*A*X 
      Y=(SWGN*DSQRT(FACT)-RFACT)/2. 
      FACT=RFACT+2.*Y 
      DUM=FACT
      IF(DUM.EQ.0.) FACT=SWGN*BIGZRO
      T=-(A+C*Y)/FACT 
      S=-2.*T*(C+T)/FACT
      GO TO 9000
C        *
C       ***         ROTATED Y-PARABOLA  A*X + B*Y + C*X*Y + X**2 = 0
C        *
  800 FACT=B+C*X
      Y=-X*(X+A)/FACT 
      T=-(A+C*Y+2.*X)/FACT
      S=-2.*(1.+T*C)/FACT 
      GO TO 9000
C        *
C       ***         CUBIC               A*X + B*Y + C*X**2 + X**3 = 0 
C        *
  900 Y=-X*(X*(X+C)+A)/B
      T=-(A+(2.*C+3.*X)*X)/B
      S=-2.*(3.*X+C)/B
 9000 YY=Y
      TT=T
      SS=S
      RETURN
      END 
      SUBROUTINE CSMSET(X,KSEQ,KSHAPE,KTYPE,KFREE,KPTCOR) 
C***********************************************************************
C*****    SETS UP THE CONTROL POINT ARRAYS USED TO DEFINE          *****
C*****    THE CROSS SECTION GEOMETRY AT THE SPECIFIED              *****
C*****    FUSELAGE STATION                                         *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/THETAS/THETA1(10),THETA2(10),KNTARC,UTHET1(10),UTHET2(10), 
     1MODEL 
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      DIMENSION KSHAPE(1),KPTCOR(3,1),KSEQ(1),KTYPE(1),KFREE(1) 
      COMMON/CPOINT/Y1(10),Y1X(10),Y1XX(10),Z1(10),Z1X(10),Z1XX(10),
     1              Y2(10),Y2X(10),Y2XX(10),Z2(10),Z2X(10),Z2XX(10),
     2              Y3(10),Y3X(10),Y3XX(10),Z3(10),Z3X(10),Z3XX(10),
     3              Y4(10),Y4X(10),Y4XX(10),Z4(10),Z4X(10),Z4XX(10),
     4              IBLCOR(6,10)
      SIZE=ABS(ZCL(2)-ZCL(1)) 
      IF(SIZE.LT.10.) SIZE=10.
C*****      SETUP NEW X-STATION 
      DO 100 J=1,3
      JJ=J+J
      DO 100 K=1,KNTARC 
      INDEX=KPTCOR(J,K) 
      II=INDEX+INDEX
      IBLCOR(JJ,K)=II 
  100 IBLCOR(JJ-1,K)=II-1 
C******   LOOK UP BODY LINE GEOMETRY FOR EACH ARC 
C******   GEOMETRY KEY
C******   INITIAL POINT (Y1,Z1) 
C******   FINAL POINT   (Y2,Z2) 
C******  INITIAL SLOPE POINT (Y3,Z3)
C******  FINAL SLOPE POINT   (Y4,Z4)
      DO 400 I=1,KNTARC 
      IF(KTYPE(I).EQ.5) GO TO 400 
      CALL BLGEOM(IBLCOR(1,I),X,YY1,YY1X,YY1XX) 
      CALL BLGEOM(IBLCOR(2,I),X,ZZ1,ZZ1X,ZZ1XX) 
      CALL BLGEOM(IBLCOR(3,I),X,YY2,YY2X,YY2XX) 
      CALL BLGEOM(IBLCOR(4,I),X,ZZ2,ZZ2X,ZZ2XX) 
      CALL BLGEOM(IBLCOR(5,I),X,YY3,YY3X,YY3XX) 
      CALL BLGEOM(IBLCOR(6,I),X,ZZ3,ZZ3X,ZZ3XX) 
      Y1(I)=YY1 
      Y2(I)=YY2 
      Y3(I)=YY3 
      Y1X(I)=YY1X 
      Y2X(I)=YY2X 
      Y3X(I)=YY3X 
      Y1XX(I)=YY1XX 
      Y2XX(I)=YY2XX 
      Y3XX(I)=YY3XX 
C******   TRANSLATE GEOMETRIC AXIS TO MAP AXIS
      Z1(I)=ZZ1-ZCL(3)
      Z2(I)=ZZ2-ZCL(3)
      Z3(I)=ZZ3-ZCL(3)
      Z1X(I)=ZZ1X-ZCLX(3) 
      Z2X(I)=ZZ2X-ZCLX(3) 
      Z3X(I)=ZZ3X-ZCLX(3) 
      Z1XX(I)=ZZ1XX-ZCLXX(3)
      Z2XX(I)=ZZ2XX-ZCLXX(3)
      Z3XX(I)=ZZ3XX-ZCLXX(3)
C*****  SET THETA LIMITS FOR EACH  ARC  (COUNTER CLOCK-WISE)
      THETA1(I)=ATAN2(Z1(I),Y1(I))
      THETA2(I)=ATAN2(Z2(I),Y2(I))
  400 CONTINUE
C*****   SETUP     GEOMETRY FOR CROSS SECTION ARCS
      DO 5000 K=1,KNTARC
      I=KSEQ(K) 
      IF(KTYPE(I).EQ.5) GO TO 5000
      ISHAPE=KSHAPE(I)
      ITYPE=KTYPE(I)
      IFREE=KFREE(I)
      SGNR=ISIGN(1,ISHAPE)
      ISHAPE=IABS(ISHAPE) 
      IF(ISHAPE.GT.1) GO TO 5001
C*****     LINE CONVERSION
 1000 CONTINUE
C*****     SET SLOPE POINTS FOR LINE
      DY=SIZE*Y2(I)-SIZE*Y1(I)
      DZ=SIZE*Z2(I)-SIZE*Z1(I)
      DYX=SIZE*Y2X(I)-SIZE*Y1X(I) 
      DZX=SIZE*Z2X(I)-SIZE*Z1X(I) 
      DYXX=SIZE*Y2XX(I)-SIZE*Y1XX(I)
      DZXX=SIZE*Z2XX(I)-SIZE*Z1XX(I)
      IF(ABS(DY).GT.ABS(DZ)) GO TO 200
      DELZ=SIZE 
      DELY=DELZ*DY/DZ 
      GO TO 210 
  200 IF(DZ.NE.0.) DELY=SIZE*SIGN(1.,DZ/DY) 
      IF(DZ.EQ.0.) DELY=SIZE*SIGN(1.,DY)
      DELZ=DELY*DZ/DY 
  210 Y3(I)=Y1(I)+DELY
      Y4(I)=Y2(I)-DELY
      Z3(I)=Z1(I)+DELZ
      Z4(I)=Z2(I)-DELZ
      IF(ABS(DY).GT.ABS(DZ)) GO TO 240
      DV=DZ 
      DV31=Z3(I)-Z1(I)
      DV42=Z4(I)-Z2(I)
      GO TO 250 
  240 DV=DY 
      DV31=Y3(I)-Y1(I)
      DV42=Y4(I)-Y2(I)
  250 Y3X(I)=Y1X(I)+DV31*DYX/DV 
      Y3XX(I)=Y1XX(I)+DV31*DYXX/DV
      Z3X(I)=Z1X(I)+DV31*DZX/DV 
      Z3XX(I)=Z1XX(I)+DV31*DZXX/DV
      Y4X(I)=Y2X(I)+DV42*DYX/DV 
      Y4XX(I)=Y2XX(I)+DV42*DYXX/DV
      Z4X(I)=Z2X(I)+DV42*DZX/DV 
      Z4XX(I)=Z2XX(I)+DV42*DZXX/DV
      GO TO 5050
C*******   SET SLOPE POINTS  FOR CIRCLE AND ELLIPSE 
 5001 CONTINUE
      IF(Y2(I).NE.Y1(I)) GO TO 5002 
      DY=.0001*ABS(Y1(I)) 
      IF(DY.EQ.0.) DY=.001
      IF(THETA2(I).GT.0.) Y2(I)=Y1(I)-SGNR*DY 
      IF(THETA2(I).LE.0.) Y2(I)=Y1(I)+SGNR*DY 
 5002 IF(Z2(I).NE.Z1(I)) GO TO 5003 
      DZ=.0001*ABS(Z1(I)) 
      IF(DZ.EQ.0.) DZ=.001
      Z2(I)=Z1(I)+DZ
 5003 CONTINUE
      IF(ITYPE.EQ.4) GO TO 5020 
      IF(ITYPE.EQ.2) GO TO 5020 
      Y4(I)=Y3(I) 
      Y4X(I)=Y3X(I) 
      Y4XX(I)=Y3XX(I) 
      Z4(I)=Z3(I) 
      Z4X(I)=Z3X(I) 
      Z4XX(I)=Z3XX(I) 
      IF(ITYPE.EQ.1) GO TO 5050 
      IF(ITYPE.EQ.3) GO TO 5030 
 5020 CONTINUE
      II=1
      IF(KPTCOR(2,I).EQ.KPTCOR(2,I+II)) II=II+1 
      Y4(I)=Y3(I+II)
      Y4X(I)=Y3X(I+II)
      Y4XX(I)=Y3XX(I+II)
      Z4(I)=Z3(I+II)
      Z4X(I)=Z3X(I+II)
      Z4XX(I)=Z3XX(I+II)
      IF(ITYPE.NE.4) GO TO 5050 
 5030 CONTINUE
      II=1
      IF(KPTCOR(1,I).EQ.KPTCOR(1,I-II)) II=II+1 
      Y3(I)=Y4(I-II)
      Y3X(I)=Y4X(I-II)
      Y3XX(I)=Y4XX(I-II)
      Z3(I)=Z4(I-II)
      Z3X(I)=Z4X(I-II)
      Z3XX(I)=Z4XX(I-II)
      GO TO 5050
 5050 CALL CSMCOE(I,KSHAPE(I),ITYPE,IFREE)
 5000 CONTINUE
      RETURN
      END 
      SUBROUTINE BLGEOM(IBLCOR,X,VNOW,VXNOW,VXXNOW) 
C***********************************************************************
C*****    ASSIGNS BODY LINE MODEL POINTS AND SLOPES TO             *****
C*****    CONTROL POINT COORDINATES                                *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/BLCONF/KNTBLM,KNTBLS(25),IBLSSH(10,25),BLCOEF(7,10,25),
     1NBLCOR,IBLMX(50),IBLSX(50),BLMMIN(25),BLMMAX(25)
      COMMON/BLVALS/V(25),VX(25),VXX(25)
      VNOW=0. 
      VXNOW=0.
      VXXNOW=0. 
      IF(IBLCOR.LE.0) GO TO 100 
      INXBLM=IBLMX(IBLCOR)
      IF(INXBLM.LE.0) GO TO 100 
      VNOW=V(INXBLM)
      VXNOW=VX(INXBLM)
      VXXNOW=VXX(INXBLM)
  100 RETURN
      END 
      SUBROUTINE VDOTV(A,B,D,N) 
C***********************************************************************
C*****    COMPUTES VECTOR DOT PRODUCT                              *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      DIMENSION A(1),B(1) 
      DOUBLE C
      C=0.D0
      DO 100 I=1,N
  100 C=C+A(I)*B(I) 
      D=C 
      RETURN
      END 
      SUBROUTINE MDOTV(A,B,C,NRA,N) 
C***********************************************************************
C*****    PERFORMS MATRIX MULTIPLICATION OF A VECTOR               *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      DIMENSION A(NRA,1),B(1),C(1)
      DOUBLE SUM
      DO 100 I=1,N
      SUM=0.D0
      DO 200 J=1,N
  200 SUM=SUM+A(I,J)*B(J) 
  100 C(I)=SUM
      RETURN
      END 
      SUBROUTINE THELIM(X)
C***********************************************************************
C*****    CREATES AND CONTROLS USE-THETA ARRAYS TO ESTABLISH       *****
C*****    CONTINUITY IN THE CROSS SECTION MODEL                    *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/THETAS/THETA1(10),THETA2(10),KNTARC,UTHET1(10),UTHET2(10), 
     1MODEL 
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      PI=3.14159265358979 
      PIHALF=PI*.5
      THEOUT=PIHALF+.1
      DO 100 J=1,KNTARC 
      IF(ICSATY(J,MODEL).EQ.5) GO TO 90 
      UTHET1(J)=THETA1(J) 
      UTHET2(J)=THETA2(J) 
      IN(J)=1 
      GO TO 100 
   90 IN(J)=-1
      THETA1(J)=THEOUT
      THETA2(J)=THEOUT
  100 CONTINUE
      CALL CSMINT(X)
      CALL CSMFLT(X,ICSASH(1,MODEL),ICSATY(1,MODEL),ICSAFR(1,MODEL),
     1            ICSACC(1,1,MODEL),ISPEC(1,1,MODEL),IN)
      DO 150 J=1,KNTARC 
      IF(IN(J).EQ.1) GO TO 150
      UTHET1(J)=THEOUT
      UTHET2(J)=THEOUT
  150 CONTINUE
      I=100 
      M=0 
      BASE=-PIHALF-.1 
      DO 20 II=1,KNTARC 
      IF(II.GT.1) I=IUORDR(II-1)
      IF(I.NE.100) BASE=UTHET1(I) 
      THEMIN=PIHALF+.05 
      JMIN=100
      DO 10 J=1,KNTARC
      IF(IN(J).EQ.-1) GO TO 10
      IF(I.EQ.100) GO TO 5
      IF(J.EQ.I.OR.UTHET1(J).NE.UTHET1(I).OR.UTHET2(J).NE.UTHET2(I))
     1  GO TO 5 
      IN(J)=-1
      GO TO 10
    5 IF(UTHET1(J).GE.THEMIN.OR.UTHET1(J).LE.BASE) GO TO 10 
      THEMIN=UTHET1(J)
      JMIN=J
   10 CONTINUE
      IF(JMIN.NE.100) M=M+1 
   20 IUORDR(II)=JMIN 
      MM=M
      DO 30 I=1,KNTARC
      IF(IN(I).EQ.1) GO TO 30 
      M=M+1 
      IUORDR(M)=I 
   30 CONTINUE
      JB=IUORDR(1)
      JT=IUORDR(MM) 
      KZBDEX=2*ICSACP(1,JB,MODEL) 
      KZTDEX=2*ICSACP(2,JT,MODEL) 
      RETURN
      END 
      SUBROUTINE CSMCOE(I,KSHAPE,ITYPE,IFREE) 
C***********************************************************************
C*****    COMPOSES THE EQUATIONS WHICH ARE TO DEFINE THE CROSS     *****
C*****    SECTION GEOMETRY AT THE SPECIFIED FUSELAGE STATION       *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/CPOINT/Y1(10),Y1X(10),Y1XX(10),Z1(10),Z1X(10),Z1XX(10),
     1              Y2(10),Y2X(10),Y2XX(10),Z2(10),Z2X(10),Z2XX(10),
     2              Y3(10),Y3X(10),Y3XX(10),Z3(10),Z3X(10),Z3XX(10),
     3              Y4(10),Y4X(10),Y4XX(10),Z4(10),Z4X(10),Z4XX(10),
     4              IBLCOR(6,10)
      COMMON/WVALUE/W(4,10),WX(5,10),WXX(4,10)
      EQUIVALENCE (AA,RR),(AAX,RRX),(AAXX,RRXX) 
      PI=3.14159265358979 
      PIHALF=PI/2.
      SGNR=ISIGN(1,KSHAPE)
      ISHAPE=IABS(KSHAPE) 
      AA=0. 
      AAX=0.
      AAXX=0. 
      BB=0. 
      BBX=0.
      BBXX=0. 
      IF(ISHAPE.GT.1) GO TO 5001
      A=Z1(I)-Z2(I) 
      AX=Z1X(I)-Z2X(I)
      AXX=Z1XX(I)-Z2XX(I) 
      B=Y2(I)-Y1(I) 
      BX=Y2X(I)-Y1X(I)
      BXX=Y2XX(I)-Y1XX(I) 
      C=Y1(I)*Z2(I)-Z1(I)*Y2(I) 
      CX=Y1X(I)*Z2(I)+Y1(I)*Z2X(I)-(Z1X(I)*Y2(I)+Z1(I)*Y2X(I))
      CXX=  Y1XX(I)*Z2(I)+2.*Y1X(I)*Z2X(I)+Y1(I)*Z2XX(I)
     1    -(Z1XX(I)*Y2(I)+2.*Z1X(I)*Y2X(I)+Z1(I)*Y2XX(I)) 
      DD=A*A+B*B
      D=SQRT(DD)
      DX=(A*AX+B*BX)/D
      DXX=(AX*AX+BX*BX-DX*DX+A*AXX+B*BXX)/D 
      RO=ABS(C/D) 
      RORO=RO*RO
      ROX=(C*CX-RORO*D*DX)/(RO*DD)
      FACT=D*ROX*(D*ROX+4.*RO*DX)+RORO*(DX*DX+D*DXX)
      ROXX=(CX*CX+C*CXX-FACT)/(RO*DD) 
      IF(A.NE.0.) GO TO 1010
      HO=SIGN(PIHALF,Z3(I)) 
      GO TO 1020
 1010 IF(B.NE.0.) GO TO 1050
      HO=0. 
 1020 HOX=0.
      HOXX=0. 
      GO TO 5930
 1050 HO=ATAN2(-B,-A) 
      CHO=COS(HO) 
      SHO=SIN(HO) 
      SHOSHO=SHO*SHO
      SHOCHO=SHO*CHO
      CHOCHO=CHO*CHO
      HOX=(D*DX*CHOCHO-A*AX)/(DD*SHOCHO)
      FACT1=(DX*DX+D*DXX)*CHOCHO-(AX*AX+A*AXX)
      FACT2=D*HOX*(CHOCHO-SHOSHO)+4.*DX*SHOCHO
      HOXX=(FACT1-DX*HOX*FACT2)/(DD*SHOCHO) 
      GO TO 5930
 5001 CONTINUE
C*****     SET RELATIVE COORDINATES 
      U2=Y2(I)-Y1(I)
      U2X=Y2X(I)-Y1X(I) 
      U2XX=Y2XX(I)-Y1XX(I)
      U3=Y3(I)-Y1(I)
      U3X=Y3X(I)-Y1X(I) 
      U3XX=Y3XX(I)-Y1XX(I)
      U4=Y4(I)-Y1(I)
      U4X=Y4X(I)-Y1X(I) 
      U4XX=Y4XX(I)-Y1XX(I)
      V2=Z2(I)-Z1(I)
      V2X=Z2X(I)-Z1X(I) 
      V2XX=Z2XX(I)-Z1XX(I)
      V3=Z3(I)-Z1(I)
      V3X=Z3X(I)-Z1X(I) 
      V3XX=Z3XX(I)-Z1XX(I)
      V4=Z4(I)-Z1(I)
      V4X=Z4X(I)-Z1X(I) 
      V4XX=Z4XX(I)-Z1XX(I)
      D23=U2*V3-U3*V2 
      D23X=U2X*V3+U2*V3X-(U3X*V2+U3*V2X)
      D23XX=U2XX*V3+2.*U2X*V3X+U2*V3XX
     1 -(U3XX*V2+2.*U3X*V2X+U3*V2XX)
      D24=U2*V4-U4*V2 
      D24X=U2X*V4+U2*V4X-(U4X*V2+U4*V2X)
      D24XX=U2XX*V4+2.*U2X*V4X+U2*V4XX
     1 -(U4XX*V2+2.*U4X*V2X+U4*V2XX)
      U42=U4-U2 
      U42X=U4X-U2X
      U42XX=U4XX-U2XX 
      V42=V4-V2 
      V42X=V4X-V2X
      V42XX=V4XX-V2XX 
      IF(ISHAPE.EQ.3) GO TO 3000
C*****      CIRCLE CONVERSION 
      IF(ITYPE.GT.1) GO TO 2010 
      IF(IFREE.EQ.5) GO TO 2200 
      IF(IFREE.EQ.6) GO TO 2100 
 2010 IF(ITYPE.EQ.2) GO TO 2200 
 2100 CONTINUE
      UVT=U2*U2+(V2*V2) 
      UVTX=2.*(U2*U2X+(V2*V2X)) 
      UVTXX=2.*(U2X*U2X+U2*U2XX+(V2X*V2X+V2*V2XX))
      USUM=(UVT*U3) 
      USUMX=(UVTX*U3+UVT*U3X) 
      USUMXX=(UVTXX*U3+2.*UVTX*U3X+UVT*U3XX)
      VSUM=-1.*(UVT*V3) 
      VSUMX=-1.*(UVTX*V3+UVT*V3X) 
      VSUMXX=-1.*(UVTXX*V3+2.*UVTX*V3X+UVT*V3XX)
      DD=D23
      DDX=D23X
      DDXX=D23XX
      ISET=4
      GO TO 2300
 2200 CONTINUE
      UVT=U2*U2-(V2*V2) 
      UVTX=2.*(U2*U2X-(V2*V2X)) 
      UVTXX=2.*(U2X*U2X-U2*U2XX-(V2X*V2X-V2*V2XX))
      U2V2=2.*U2*V2 
      U2V2X=2.*(U2X*V2+U2*V2X)
      U2V2XX=2.*(U2XX*V2+2.*U2X*V2X+U2*V2XX)
      VSUM=(U2V2*U42-V42*UVT) 
      VSUMX=(U2V2X*U42+U2V2*U42X-(V42X*UVT+V42*UVTX)) 
      FACT1=U2V2XX*U42+2.*U2V2X*U42X+U2V2*U42XX 
      FACT2=V42XX*UVT+2.*V42X*UVTX+V42*UVTXX
      VSUMXX=(FACT1-FACT2)
      USUM=-1.*(U2V2*V42+U42*UVT) 
      USUMX=-1.*(U2V2X*V42+U2V2*V42X+(U42X*UVT+U42*UVTX)) 
      FACT1=U2V2XX*V42+2.*U2V2X*V42X+U2V2*V42XX 
      FACT2=U42XX*UVT+2.*U42X*UVTX+U42*UVTXX
      USUMXX=-1.*(FACT1+FACT2)
      DD=D24
      DDX=D24X
      DDXX=D24XX
      ISET=3
 2300 CONTINUE
      A=VSUM/DD 
      AX=(VSUMX-A*DDX)/DD 
      AXX=(VSUMXX-A*DDXX-2.*AX*DDX)/DD
      B=USUM/DD 
      B=USUM/DD 
      BX=(USUMX-B*DDX)/DD 
      BXX=(USUMXX-B*DDXX-2.*BX*DDX)/DD
      RR=(A*A+B*B)/4. 
      RRX=(A*AX+B*BX)/4.
      RRXX=(A*AXX+2.*(AX*AX+BX*BX)+B*BXX)/4.
      IF(ISET.EQ.4) GO TO 2400
C******      SET INITIAL SLOPE POINT
      Z3(I)=Z1(I)-A*U3/B
      Z3X(I)=Z1X(I)-(AX*U3+A*U3X+B*V3)/B
      FACT=AXX*U3+2.*AX*U3X+A*U3XX
      Z3XX(I)=Z1XX(I)-(FACT+BXX*V3+2.*BX*V3X)/B 
      Y3(I)=Y1(I)-B*V3/A
      Y3X(I)=Y1X(I)-(BX*V3+B*V3X+A*U3)/A
      FACT=BXX*V3+2.*BX*V3X+B*V3XX
      Y3XX(I)=Y1XX(I)-(FACT+AXX*U3+2.*AX*U3X)/A 
      GO TO 5900
C******   SET FINAL SLOPE POINT 
 2400 USUM=2.*U2+A
      USUMX=2.*U2X+AX 
      USUMXX=2.*U2XX+AXX
      VSUM=2.*V2+B
      VSUMX=2.*V2X+BX 
      VSUMXX=2.*V2XX+BXX
      Z4(I)=Z2(I)-USUM*U42/VSUM 
      Z4X(I)=Z2X(I)-(USUMX*U42+USUM*U42X+VSUM*V42)/VSUM 
      FACT=USUMXX*U42+2.*USUMX*U42X+USUM*U42XX
      Z4XX(I)=Z2XX(I)-(FACT+VSUMXX*V42+2.*VSUMX*V42X)/VSUM
      Y4(I)=Y2(I)-VSUM*V42/USUM 
      Y4X(I)=Y2X(I)-(VSUMX*V42+VSUM*V42X+USUM*U42)/USUM 
      FACT=VSUMXX*V42+2.*VSUMX*V42X+VSUM*V42XX
      Y4XX(I)=Y2XX(I)-(FACT+USUMXX*U42+2.*USUMX*U42X)/USUM
      GO TO 5900
C******     ELLIPSE CONVERSION
 3000 CONTINUE
      USUM=U3*D24+U42*D23 
      USUMX=U3X*D24+U3*D24X+U42X*D23+U42*D23X 
      USUMXX=U3XX*D24+U3*D24XX+U42XX*D23+U42*D23XX
     1 +2.*(U3X*D24X+U42X*D23X) 
      VSUM=V3*D24+V42*D23 
      VSUMX=V3X*D24+V3*D24X+V42X*D23+V42*D23X 
      VSUMXX=V3XX*D24+V3*D24XX+V42XX*D23+V42*D23XX
     1 +2.*(V3X*D24X+V42X*D23X) 
      YSUM=U2*V3*D24
      YSUMX=U2X*V3*D24+U2*V3X*D24+U2*V3*D24X
      YSUMXX=U2XX*V3*D24+U2*V3XX*D24+U2*V3*D24XX
     1 +2.*(U2*(V3X*D24X)+V3*(U2X*D24X)+D24*(U2X*V3X))
      ZSUM=U3*V2*D24
      ZSUMX=U3X*V2*D24+U3*V2X*D24+U3*V2*D24X
      ZSUMXX=U3XX*V2*D24+U3*V2XX*D24+U3*V2*D24XX
     1 +2.*(U3*(V2X*D24X)+V2*(U3X*D24X)+D24*(U3X*V2X))
      YO=YSUM/VSUM
      YOX=(YSUMX-YO*VSUMX)/VSUM 
      YOXX=(YSUMXX-YO*VSUMXX-2.*YOX*VSUMX)/VSUM 
      ZO=ZSUM/USUM
      ZOX=(ZSUMX-ZO*USUMX)/USUM 
      ZOXX=(ZSUMXX-ZO*USUMXX-2.*ZOX*USUMX)/USUM 
      UNEW=U2*USUM
      UNEWX=U2X*USUM+U2*USUMX 
      UNEWXX=U2XX*USUM+2.*U2X*USUMX+U2*USUMXX 
      VNEW=V2*VSUM
      VNEWX=V2X*VSUM+V2*VSUMX 
      VNEWXX=V2XX*VSUM+2.*V2X*VSUMX+V2*VSUMXX 
      C=-1.*VNEW/UNEW 
      CX=-1.*(VNEWX+C*UNEWX)/UNEW 
      CXX=-1.*(VNEWXX+C*UNEWXX+2.*CX*UNEWX)/UNEW
      YO2=YO*YO 
      ZO2=ZO*ZO 
      BB=(C*YO2+ZO2)
      BBX=(YO*(CX*YO+2.*C*YOX)+2.*ZO*ZOX) 
      FACT1=YO*(CXX*YO+4.*CX*YOX+2.*C*YOXX) 
      FACT2=2.*(C*YOX*YOX+ZOX*ZOX+ZO*ZOXX)
      BBXX=(FACT1+FACT2)
      AA=BB/C 
      AAX=(BBX-AA*CX)/C 
      AAXX=(BBXX-AA*CXX-2.*AAX*CX)/C
      YO =YO+Y1(I)
      YOX=YOX+Y1X(I)
      YOXX=YOXX+Y1XX(I) 
      ZO=ZO+Z1(I) 
      ZOX=ZOX+Z1X(I)
      ZOXX=ZOXX+Z1XX(I) 
 5900 CONTINUE
C******  CONVERT CENTER TO POLAR COORDINATES
      HO=SIGN(PIHALF,ZO)
      HOX=0.
      HOXX=0. 
      RO=0. 
      ROX=0.
      ROXX=0. 
      ROTEST=SQRT(YO*YO+ZO*ZO)
      IF(ROTEST.LT.1.E-6) GO TO 5930
      HO=ATAN2(ZO,YO) 
      RORO=YO*YO+ZO*ZO
      RO=SQRT(RORO) 
      ROX=(YO*YOX+ZO*ZOX)/RO
      HOX=(YO*ZOX-ZO*YOX)/RORO
      ROXX=(YOX*YOX+ZOX*ZOX-ROX*ROX+YO*YOXX+ZO*ZOXX)/RO 
      HOXX=(YO*ZOXX-ZO*YOXX-2.*RO*ROX*HOX)/RORO 
 5930 W(4,I)=BB 
      WX(4,I)=BBX 
      WXX(4,I)=BBXX 
      W(3,I)=AA 
      WX(3,I)=AAX 
      WXX(3,I)=AAXX 
      W(2,I)=HO 
      WX(2,I)=HOX 
      WXX(2,I)=HOXX 
      W(1,I)=RO 
      WX(1,I)=ROX 
      WXX(1,I)=ROXX 
      PRINT 100,I,KSHAPE,ITYPE,IFREE,RO,HO,AA,BB
  100 FORMAT(2X,*CROSS SECTIONAL ARC NO.*I3* HAS BEEN COMPLETED*I5,I5,I5
     1,4(2XF10.5))
      RETURN
      END 
      SUBROUTINE CSMINT(X)
C***********************************************************************
C*****    LOCATES USER SPECIFIED INTERSECTIONS BETWEEN CROSS       *****
C*****    SECTIONAL ARCS AND ADJUSTS THEIR USE-THETA LIMITS        *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE 
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/THETAS/THETA1(10),THETA2(10),KNTARC,UTHET1(10),UTHET2(10), 
     1MODEL 
      DIMENSION THE(2),TST1(6),TST2(6),TRY(2),ERR(2),TST(6) 
      KNTMAX=25 
      ITIMAX=2
      TOL1=5.E-5
      TOL2=5.E-4
      TOL3=5.E-3
      ERR(1)=1.E+10 
      ERR(2)=1.E+10 
      DO 100 J=1,KNTARC 
      IF(ICSATY(J,MODEL).EQ.5) GO TO 100
      I=1 
      IF(ICSACC(I,J,MODEL).LT.0) GO TO 110
      IN(J)=-1
      J1=ICSACC(I,J,MODEL)
      J2=J
      GO TO 120 
  110 I=2 
      IF(ICSACC(I,J,MODEL).LT.0) GO TO 100
      IN(J)=-1
      J1=J
      J2=ICSACC(I,J,MODEL)
  120 CONTINUE
      ITIME=1 
  125 DO 300 ITRY=1,6 
  300 TST(ITRY)=1000. 
      THE1=AMAX1(UTHET1(J1),UTHET1(J2)) 
      THE5=AMIN1(UTHET2(J1),UTHET2(J2)) 
      IF((THE5-THE1).LT.-TOL1)GO TO 311 
      THE3=(THE5+THE1)/2. 
      THE2=(THE3+THE1)/2. 
      THE4=(THE5+THE3)/2. 
      ITRY=1
  130 CONTINUE
      GO TO (131,132,133,134,135),ITRY
  131 THE(1)=THE1 
      THE(2)=THE5 
      GO TO 140 
  132 IF(I.EQ.1) THE(2)=THE3
      IF(I.EQ.2) THE(1)=THE3
      GO TO 140 
  133 IF(I.EQ.1) THE(2)=THE2
      IF(I.EQ.2) THE(1)=THE4
      GO TO 140 
  134 IF(I.EQ.2) GO TO 234
      THE(1)=THE2 
      THE(2)=THE3 
      GO TO 140 
  234 THE(1)=THE3 
      THE(2)=THE4 
      GO TO 140 
  135 IF(I.EQ.2) GO TO 235
      THE(1)=THE3 
      THE(2)=THE4 
      GO TO 140 
  235 THE(1)=THE2 
      THE(2)=THE3 
  140 CONTINUE
      IF(TST(ITRY).NE.1000.) GO TO 149
      CALL CSCALC(X,MODEL,J1,THE(1),R1,D,D,D,D,0) 
      CALL CSCALC(X,MODEL,J2,THE(1),R2,D,D,D,D,0) 
      TST1(ITRY)=1.-R2/R1 
      CALL CSCALC(X,MODEL,J1,THE(2),R1,D,D,D,D,0) 
      CALL CSCALC(X,MODEL,J2,THE(2),R2,D,D,D,D,0) 
      TST2(ITRY)=1.-R2/R1 
      TST(ITRY)=TST1(ITRY)*TST2(ITRY) 
      IF(ITRY.EQ.6.AND.TST(6).LE.0.) GO TO 149
      ITRY=ITRY+1 
      IF(ITRY.LE.5) GO TO 130 
      IF(ITRY.GE.7) GO TO 311 
      ITRY=0
      DO 305 IDUM=1,5 
      IF(TST(IDUM).GT.0.) GO TO 305 
      ITRY=IDUM 
  305 CONTINUE
      IF(ITRY.NE.0) GO TO 320 
      DO 310 IDUM=1,5 
      IF(ABS(TST1(IDUM)).GT.TOL1.AND. 
     1   ABS(TST2(IDUM)).GT.TOL1) GO TO 310 
      ITRY=IDUM 
      GO TO 141 
  310 CONTINUE
  311 IF(ITIME.GE.ITIMAX) GO TO 199 
      ITIME=ITIME+1 
      GO TO (312,313),I 
  312 IF(ITIME.EQ.2) J1=J1-1
      GO TO 314 
  313 IF(ITIME.EQ.2) J2=J2+1
  314 IF(J1.LT.1.OR.J2.GT.KNTARC.OR.J1.EQ.J2) GO TO 199 
      GO TO 125 
  199 DO 200 M=1,KNTARC 
      IF(M.EQ.J) GO TO 200
      IF(ICSACC(I,M,MODEL).NE.ICSACC(I,J,MODEL)) GO TO 200
      IF(ICSATY(M,MODEL).EQ.5) GO TO 200
      GO TO (210,220),I 
  210 IM=2
      IJ=1
      GO TO 230 
  220 IM=1
      IJ=2
  230 IF(ICSACP(IM,M,MODEL).NE.ICSACP(IJ,J,MODEL))GO TO 200 
      IN(J)=100+M 
      GO TO 180 
  200 CONTINUE
      GO TO 180 
C  REACHING THIS POINT MEANS AN INTERSECTION WAS DETECTED 
  320 THE(1)=THE1 
      THE(2)=THE5 
      GO TO 130 
  141 IF(ITRY.GE.6) GO TO 180 
      IF(ITRY.NE.1) GO TO 143 
      IF(ABS(TST1(1)).GT.TOL1.OR.I.EQ.2) GO TO 142
      ME=1
      TRY(ME)=THE1
      GO TO 170 
  142 IF(ABS(TST2(1)).GT.TOL1.OR.I.EQ.1) GO TO 311
      ME=1
      TRY(ME)=THE5
      GO TO 170 
  143 DTH=(THE5-THE1)/20. 
      IF(ABS(TST1(ITRY)).GT.TOL1.OR.I.EQ.2) GO TO 144 
      THE(2)=THE(1)+DTH 
      THE(1)=THE(1)-DTH 
      ITRY=6
      GO TO 140 
  144 IF(ABS(TST2(ITRY)).GT.TOL1.OR.I.EQ.1) GO TO 311 
      THE(1)=THE(2)-DTH 
      THE(2)=THE(2)+DTH 
      ITRY=6
      GO TO 140 
  149 KNT=1 
      TRY(1)=(THE(1)+THE(2))/2. 
      ME=1
      KNTHI=0 
      KNTLO=0 
  150 FKNT=KNT
      IF(TRY(ME).LT.THE(2)) GO TO 152 
      KNTHI=KNTHI+1 
      IF(MOD(KNTHI,4).EQ.0) GO TO 151 
      TRY(ME)=THE(2)-.01*(THE(2)-THE(1))/FKNT 
      GO TO 154 
  151 ME=1
      ERR(2)=1.E+10 
      TRY(ME)=THE(1)+.01*(THE(2)-THE(1))/FLOAT(KNTHI) 
      GO TO 154 
  152 IF(TRY(ME).GT.THE(1)) GO TO 154 
      KNTLO=KNTLO+1 
      IF(MOD(KNTLO,4).EQ.0) GO TO 153 
      TRY(ME)=THE(1)+.01*(THE(2)-THE(1))/FKNT 
      GO TO 154 
  153 ME=1
      ERR(2)=1.E+10 
      TRY(ME)=THE(2)-.01*(THE(2)-THE(1))/FLOAT(KNTLO) 
  154 CALL CSCALC(X,MODEL,J1,TRY(ME),R1,D,D,D,D,0)
      CALL CSCALC(X,MODEL,J2,TRY(ME),R2,D,D,D,D,0)
      ERR(ME)=1.-R2/R1
      IF(ABS(ERR(ME)).LE.TOL1) GO TO 170
      IF(ABS(ERR(2)-ERR(1)).GT.1.E-5) GO TO 155 
      IF(ABS(ERR(ME)).LE.TOL2) GO TO 170
      DTH=(THE(2)-THE(1))*.0005/FKNT
      TRY(ME)=TRY(ME)-SIGN(DTH,STEP)
      KNT=KNT+1 
      IF(KNT.GT.KNTMAX) GO TO 156 
      GO TO 150 
  155 CONTINUE
      IF(ME.EQ.2) GO TO 160 
      ME=2
      SGN=-1. 
      IF(I.EQ.2) SGN=1. 
      TRY(2)=TRY(1)+SGN*(THE(2)-THE(1))/4.
      KNT=KNT+1 
      GO TO 150 
  160 IF(ERR(1)*ERR(2).GT.0.) GO TO 165 
      THE(1)=AMIN1(TRY(1),TRY(2)) 
      THE(2)=AMAX1(TRY(1),TRY(2)) 
  165 STEP=ERR(2)*(TRY(2)-TRY(1))/(ERR(2)-ERR(1)) 
      TRYN=TRY(2)-STEP
      TRY(1)=TRY(2) 
      ERR(1)=ERR(2) 
      TRY(2)=TRYN 
      KNT=KNT+1 
      IF(KNT.LE.KNTMAX) GO TO 150 
  156 WRITE(IRITE,10) KNTMAX
      IF(ICRITE.NE.IRITE)WRITE(ICRITE,10) KNTMAX
   10 FORMAT(//15H CSMINT KNT GT ,I2,/) 
      IF(ABS(ERR(ME)).LE.TOL3) GO TO 170
      WRITE(IRITE,11) MODEL,J1,J2,X 
      IF(ICRITE.NE.IRITE)WRITE(ICRITE,11) MODEL,J1,J2,X 
   11 FORMAT(/29H CSMINT ITERATION FAILURE FOR,/7H MODEL ,
     1I2,5X,5HARCS ,I2,2H, ,I2,5X,8HAT STA. ,F10.4,//)
      GO TO 180 
  170 CONTINUE
      UTHET2(J1)=TRY(ME)
      UTHET1(J2)=TRY(ME)
      IF(UTHET2(J1).LE.UTHET1(J1)) IN(J1)=-1
      IF(UTHET1(J2).GE.UTHET2(J2)) IN(J2)=-1
  179 IN(J)=1 
  180 IF(I.EQ.1) GO TO 110
  100 CONTINUE
  390 KNT=0 
      DO 400 J=1,KNTARC 
      IF(IABS(IN(J)).LT.10) GO TO 400 
      KNT=KNT+1 
      M=IN(J)-100 
      IF(IN(M).EQ.1) IN(J)=1
      IF(IN(M).EQ.-1) IN(J)=-1
  400 CONTINUE
      IF(KNT.GT.1) GO TO 390
      RETURN
      END 
      SUBROUTINE CSCALC(X,MODEL,INXARC,H,R,RX,RH,RXX,RXH,NDERV) 
C***********************************************************************
C*****    COMPUTES RADIAL POSITION AND DERIVATIVES FOR             *****
C*****    SPECIFIED CROSS SECTION MODEL AND ARC                    *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/CSCONF/KNTCSM,KNTCSA(10),ICSASQ(10,10),ICSASH(10,10),
     1ICSATY(10,10),ICSAFR(10,10),ICSACP(3,10,10),ICSACC(2,10,10),
     2XCSMS1(10),XCSMS2(10),IZCDEX,IZBDEX(10),IZTDEX(10), 
     3NCSM,ICSMX(10),ISPEC(2,10,10),IN(10),IUORDR(10) 
      COMMON/WVALUE/W(4,10),WX(5,10),WXX(4,10)
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),KZBDEX,KZTDEX,KZCDEX
      COMMON/NORML/UNX,UNY,UNZ
      DIMENSION QX(4),QW(5),QXX(5,5),QXH(5),QXR(5)
      DATA XOLD/-1000./,IXARCO/-1/
      IF(NDERV.LT.0) GO TO 3000 
      IF(X.EQ.XOLD.AND.INXARC.EQ.IXARCO) GO TO 1050 
      PIHALF=1.5707963267649
      ISHAPE=ICSASH(INXARC,MODEL) 
      SGNR=ISIGN(1,ISHAPE)
      ISHAPE=IABS(ISHAPE) 
      RO=W(1,INXARC)
      HO=W(2,INXARC)
      AA=W(3,INXARC)
      BB=W(4,INXARC)
      SHO=SIN(HO) 
      CHO=COS(HO) 
      IF(ABS(ABS(HO)-PIHALF).LT.1.E-4) CHO=0. 
      RORO=RO*RO
      SHOSHO=SHO*SHO
      SHOCHO=SHO*CHO
      CHOCHO=CHO*CHO
      XOLD=X
      IXARCO=INXARC 
 1050 SH=SIN(H) 
      CH=COS(H) 
      IF(ABS(ABS(H)-PIHALF).LT.1.E-4) CH=0. 
      SHSH=SH*SH
      CHCH=CH*CH
      SHCH=SH*CH
      SHOH=SIN(HO-H)
      CHOH=COS(HO-H)
      SHSHO=SH*SHO
      SHCHO=SH*CHO
      CHSHO=CH*SHO
      CHCHO=CH*CHO
C*****     SOLVE FOR RADIUS ( R ) AS A FUNCTION OF THETA ( H )
      GO TO (1100,1200,1300),ISHAPE 
 1100 R=RO/CHOH 
      GO TO 1500
 1200 RFACT=RO*CHOH 
      R=RFACT+SGNR*SQRT(RFACT*RFACT+AA-RORO)
      GO TO 1500
 1300 RA=BB*CHCH+AA*SHSH
      RB=RO*(BB*CHCHO+AA*SHSHO) 
      RFACT=AA*BB*(RA-RORO*SHOH*SHOH) 
      IF(ABS(RFACT).LT.1.E-5.AND.RFACT.LT.0.) RFACT=0.
      R=(RB+SGNR*SQRT(ABS(RFACT)))/RA 
      IF(RFACT.LT.0.) WRITE(IRITE,101) RFACT,X,MODEL,INXARC,H,R,RA,RB,
     1AA,BB,RO,HO 
      IF(RFACT.LT.0..AND.IRITE.NE.ICRITE) WRITE(ICRITE,101) RFACT,X,
     1MODEL,INXARC,H,R,RA,RB,AA,BB,RO,HO
  101 FORMAT(/41H CSCALC:  SQRT TAKEN OF NEGATIVE NUMBER (,F10.4, 
     116H) FOR ELLIPSE AT,/5H X = ,F10.5,11H  ON MODEL ,I2,7H , ARC , 
     2I2,14H , AT THETA = ,F10.4,20H WITH RESULT -- R = ,F10.4, 
     3/21H RA,RB,AA,BB,RO,HO = ,6F12.4) 
 1500 CONTINUE
      IF(NDERV.EQ.0) GO TO 5000 
C*****    SET UP FOR DERIVATIVE CALCULATIONS
 3000 NSIZE=ISHAPE+1
      U=R*CH-RO*CHO 
      V=R*SH-RO*SHO 
      UCH=U*CH
      VCH=V*CH
      USH=U*SH
      VSH=V*SH
      UCHO=U*CHO
      VCHO=V*CHO
      USHO=U*SHO
      VSHO=V*SHO
      UU=U*U
      VV=V*V
C*****    CALCULATE FIRST DERIVATIVES 
      GO TO (3100,3200,3300),ISHAPE 
 3100 QX(1)=-1. 
      QX(2)=VCHO-USHO 
      QH=USHO-VCHO
      QR=CHOH 
      GO TO 3500
 3200 QX(1)=-(UCHO+VSHO)
      QX(2)=RO*(USHO-VCHO)
      QX(3)=-.5 
      QH=-R*(USH-VCH) 
      QR=UCH+VSH
      GO TO 3500
 3300 QX(1)=-(BB*UCHO+AA*VSHO)
      QX(2)=RO*(BB*USHO-AA*VCHO)
      QX(3)=.5*(VV-BB)
      QX(4)=.5*(UU-AA)
      QH   =-R*(BB*USH-AA*VCH)
      QR   =BB*UCH+AA*VSH 
 3500 CALL VDOTV(QX,WX(1,INXARC),RX,NSIZE)
      RH=-QH/QR 
      RX=-RX/QR 
      QKY=CH+SH*RH/R
      QKZ=SH-CH*RH/R
      QKX=-ZCLX(3)*QKZ-RX 
      FACT=SQRT(QKX*QKX+QKY*QKY+QKZ*QKZ)
      UNX=QKX/FACT
      UNY=QKY/FACT
      UNZ=QKZ/FACT
      IF(IABS(NDERV).LT.2) GO TO 5000 
      MSIZE=NSIZE+1 
      WX(MSIZE,INXARC)=RX 
C*****    CALCULATE SECOND DERIVATIVES
      GO TO (4100,4200,4300),ISHAPE 
 4100 QXX(1,1) =0.
      QXX(1,2) =0.
      QXX(1,3) =0.
      QXX(2,2) =-(RO+UCHO+VSHO) 
      QXX(2,3)=SHOH 
      QXX(3,3) =0.
      QXX(2,3) =-SHOH 
      QXR(1)=0. 
      QXR(2)=RH*SHOH
      QXR(3)=0. 
      QXH(1) =0.
      QXH(2) =QXR(2)+R*CHOH 
      QXH(3)=-SHOH
      GO TO 4500
 4200 QXX(1,1) =1.
      QXX(1,2) =USHO-VCHO 
      QXX(1,3) =0.
      QXX(1,4) =-CHOH 
      QXX(2,2) =RO*(RO+UCHO+VSHO) 
      QXX(2,3) =0.
      QXX(2,4) =USH-VCH 
      QXX(3,3) =0.
      QXX(3,4) =0.
      QXX(4,4) =1.
      QXR(1)=-RH*CHOH 
      QXR(2)=-RH*RO*SHOH
      QXR(3)=0. 
      QXR(4)=RH 
      QXH(1) =QXR(1)+VCHO-USHO
      QXH(2) =QXR(2)-R*RO*CHOH
      QXH(3) =0.
      QXH(4)=QXR(4)+VCH-USH 
      GO TO 4500
 4300 QXX(1,1) =BB*CHOCHO+AA*SHOSHO 
      QXX(1,2) =RO*SHOCHO*(AA-BB)+BB*USHO-AA*VCHO 
      QXX(1,3) =-VSHO 
      QXX(1,4) =-UCHO 
      QXX(1,5) =-(BB*CHCHO+AA*SHSHO)
      QXX(2,2)=RORO*(BB*SHOSHO+AA*CHOCHO)+RO*(BB*UCHO+AA*VSHO)
      QXX(2,3) =-RO*VCHO
      QXX(2,4) =RO*USHO 
      QXX(2,5) =RO*(BB*CHSHO-AA*SHCHO)
      QXX(3,3) =0.
      QXX(3,4) =-.5 
      QXX(3,5) =VSH 
      QXX(4,4) =0.
      QXX(4,5) =UCH 
      QXX(5,5) =BB*CHCH+AA*SHSH 
      QXR(1)=-RH*(BB*CHCHO+AA*SHSHO)
      QXR(2)=RH*RO*(BB*CHSHO-AA*SHCHO)
      QXR(3)=RH*VSH 
      QXR(4)=RH*UCH 
      QXR(5)=RH*(BB*CHCH+AA*SHSH) 
      QXH(1) =QXR(1)+R*(BB*SHCHO-AA*CHSHO)
      QXH(2)=QXR(2)-R*RO*(BB*SHSHO+AA*CHCHO)
      QXH(3)=QXR(3)+R*VCH 
      QXH(4)=QXR(4)-R*USH 
      QXH(5)=QXR(5)+R*SHCH*(AA-BB)+AA*VCH-BB*USH
 4500 DO 4600 L=1,MSIZE 
      DO 4600 M=L,MSIZE 
 4600 QXX(M,L)=QXX(L,M) 
      CALL MDOTV(QXX,WX(1,INXARC),QW,5,MSIZE) 
      CALL VDOTV(QX,WXX(1,INXARC),DUMMY,NSIZE)
  
      CALL VDOTV(WX(1,INXARC),QW,RXX,MSIZE) 
      RXX =-(RXX+DUMMY)/QR
      CALL VDOTV(QXH,WX(1,INXARC),RXH,MSIZE)
      RXH=-RXH/QR 
 5000 RETURN
      END 
      SUBROUTINE CSMFLT(X,KSHAPE,KTYPE,KFREE,KCOMP,KSPEC,IN)
C***********************************************************************
C*****    CREATES CONTROL POINT DEFINITIONS TO PERMIT INSERTION    *****
C*****    OF A SMOOTH FILLET BETWEEN CROSS SECTIONAL ARCS          *****
C*****    WRITTEN BY A. VACHRIS AND L. YAEGER                      *****
C***********************************************************************
      COMMON/CPOINT/Y1(10),Y1X(10),Y1XX(10),Z1(10),Z1X(10),Z1XX(10),
     1              Y2(10),Y2X(10),Y2XX(10),Z2(10),Z2X(10),Z2XX(10),
     2              Y3(10),Y3X(10),Y3XX(10),Z3(10),Z3X(10),Z3XX(10),
     3              Y4(10),Y4X(10),Y4XX(10),Z4(10),Z4X(10),Z4XX(10),
     4              IBLCOR(6,10)
      COMMON/WRITE/IREAD,IRITE,ICRITE,ITAPE,IPLOT 
      COMMON/THETAS/THETA1(10),THETA2(10),KNTARC,UTHET1(10),UTHET2(10), 
     1MODEL 
      COMMON/WVALUE/W(4,10),WX(5,10),WXX(4,10)
      COMMON/GEOMCL/ZCL(3),ZCLX(3),ZCLXX(3),IDM2,IDM3,IDM4
      DIMENSION KSHAPE(1),KTYPE(1),KFREE(1),KCOMP(2,1),KSPEC(2,1),IN(10)
      DIMENSION ITRY(2),INN(2)
      PI=3.14159265358979 
      PIHALF=PI*.5
      DO 4900 I=1,KNTARC
      IF(KTYPE(I).NE.5) GO TO 4900
      DO 4500 II=1,2
      INN(II)=-1
      ITRY(II)=1
      ICOMP=KCOMP(II,I) 
      ISP=KSPEC(II,I) 
      IF(ISP.LE.0) GO TO 4900 
      IF(ISP.EQ.3) GO TO 4900 
      IBL=ISP+2*(II-1)
      CALL BLGEOM(IBLCOR(IBL,I),X,V,VX,VXX) 
      IF(ISP.NE.2) GO TO 4010 
      V=V-ZCL(3)
      VX=VX-ZCLX(3) 
      VXX=VXX-ZCLXX(3)
 4010 CALL CSCALC(X,MODEL,ICOMP,UTHET1(ICOMP),R1C,D,D,D,D,0)
      CALL CSCALC(X,MODEL,ICOMP,UTHET2(ICOMP),R2C,D,D,D,D,0)
      Y1C=R1C*COS(UTHET1(ICOMP))
      Y2C=R2C*COS(UTHET2(ICOMP))
      Z1C=R1C*SIN(UTHET1(ICOMP))
      Z2C=R2C*SIN(UTHET2(ICOMP))
      IF(ISP.EQ.2) GO TO 4015 
      YMIN=AMIN1(Y1C,Y2C) 
      YMAX=AMAX1(Y1C,Y2C) 
      IF(V.GE.YMIN.AND.V.LE.YMAX) GO TO 4030
      GO TO 4020
 4015 IF(V.GE.Z1C.AND.V.LE.Z2C) GO TO 4030
 4020 IF(ITRY(II).GE.3)GO TO 4900 
      ITRY(II)=ITRY(II)+1 
      GO TO (4021,4022),II
 4021 IF(ITRY(II).LE.3)ICOMP=ICOMP-1
      GO TO 4025
 4022 IF(ITRY(II).LE.3)ICOMP=ICOMP+1
 4025 IF(ICOMP.GT.KNTARC.OR.ICOMP.LT.1) GO TO 4900
      GO TO (4010,4010,4900),ISP
 4030 IF(IN(ICOMP).EQ.-1) GO TO 4020
      IF(II.EQ.1) IC1=ICOMP 
      IF(II.EQ.2) IC2=ICOMP 
      ICSHP=KSHAPE(ICOMP) 
      IACSHP=IABS(ICSHP)
      RO=W(1,ICOMP) 
      ROX=WX(1,ICOMP) 
      ROXX=WXX(1,ICOMP) 
      HO=W(2,ICOMP) 
      HOX=WX(2,ICOMP) 
      HOXX=WXX(2,ICOMP) 
      SHO=SIN(HO) 
      CHO=COS(HO) 
      IF(ABS(ABS(HO)-PIHALF).LT.1.E-5) SHO=SIGN(1.,HO)
      IF(ABS(ABS(HO)-PIHALF).LT.1.E-5) CHO=0. 
      SHOX=HOX*CHO
      CHOX=-HOX*SHO 
      SHOXX=HOXX*CHO+HOX*CHOX 
      CHOXX=-HOXX*SHO-HOX*SHOX
      GO TO (4100,4200,4300),IACSHP 
C   FILLETED COMPONENT IS A LINE
 4100 GO TO (4110,4120,4130),ISP
C   Y IS SPECIFIED... SETUP FOR Z CALCULATION 
 4110 C=V*CHO 
      CX=VX*CHO+V*CHOX
      CXX=VXX*CHO+V*CHOXX+2.*VX*CHOX
      D=SHO 
      DX=SHOX 
      DXX=SHOXX 
      US=Z3(ICOMP)
      USX=Z3X(ICOMP)
      USXX=Z3XX(ICOMP)
      VS=Y3(ICOMP)
      VSX=Y3X(ICOMP)
      VSXX=Y3XX(ICOMP)
      GO TO 4140
C   Z IS SPECIFIED... SETUP FOR Y CALCULATION 
 4120 C=V*SHO 
      CX=VX*SHO+V*SHOX
      CXX=VXX*SHO+V*SHOXX+2.*VX*SHOX
      D=CHO 
      DX=CHOX 
      DXX=CHOXX 
      US=Y3(ICOMP)
      USX=Y3X(ICOMP)
      USXX=Y3XX(ICOMP)
      VS=Z3(ICOMP)
      VSX=Z3X(ICOMP)
      VSXX=Z3XX(ICOMP)
      GO TO 4140
C   DH IS SPECIFIED...
 4130 CONTINUE
      GO TO 4900
C   CALCULATE Z OR Y
 4140 E=RO-C
      EX=ROX-CX 
      EXX=ROXX-CXX
      U=E/D 
      UX=(EX-U*DX)/D
      UXX=(EXX-U*DXX-2.*UX*DX)/D
      GO TO 4400
C   FILLETED COMPONENT IS A CIRCLE
 4200 CONTINUE
      GO TO 4900
C   FILLETED COMPONENT IS AN ELLIPSE
 4300 GO TO (4310,4320,4330),ISP
C   Y IS SPECIFIED... SETUP FOR Z CALCULATION 
 4310 UO=RO*SHO 
      UOX=ROX*SHO+RO*SHOX 
      UOXX=ROXX*SHO+RO*SHOXX+2.*ROX*SHOX
      VO=RO*CHO 
      VOX=ROX*CHO+RO*CHOX 
      VOXX=ROXX*CHO+RO*CHOXX+2.*ROX*CHOX
      C=W(4,ICOMP)
      CX=WX(4,ICOMP)
      CXX=WXX(4,ICOMP)
      D=W(3,ICOMP)
      DX=WX(3,ICOMP)
      DXX=WXX(3,ICOMP)
      VT1=Y1(ICOMP) 
      UT1=Z1(ICOMP) 
      VT2=Y2(ICOMP) 
      UT2=Z2(ICOMP) 
      GO TO 4340
C   Z IS SPECIFIED... SETUP FOR Y CALCULATION 
 4320 UO=RO*CHO 
      UOX=ROX*CHO+RO*CHOX 
      UOXX=ROXX*CHO+RO*CHOXX+2.*ROX*CHOX
      VO=RO*SHO 
      VOX=ROX*SHO+RO*SHOX 
      VOXX=ROXX*SHO+RO*SHOXX+2.*ROX*SHOX
      C=W(3,ICOMP)
      CX=WX(3,ICOMP)
      CXX=WXX(3,ICOMP)
      D=W(4,ICOMP)
      DX=WX(4,ICOMP)
      DXX=WXX(4,ICOMP)
      VT1=Z1(ICOMP) 
      UT1=Y1(ICOMP) 
      VT2=Z2(ICOMP) 
      UT2=Y2(ICOMP) 
      GO TO 4340
C   DH IS SPECIFIED...
 4330 CONTINUE
      GO TO 4900
C   SET SIGN FOR CALCULATION
 4340 SGN=0.
      UTP1=0. 
      UTP2=0. 
      UTM1=0. 
      UTM2=0. 
      SRAD=C*(1.-(VT1-VO)*(VT1-VO)/D) 
      IF(SRAD.LE.1.E-8) GO TO 4350
      RAD=SQRT(SRAD)
      UTP1=UO+RAD 
      UTM1=UO-RAD 
      IF(ABS(UTP1-UT1).LT.1.E-4) SGN=1. 
      IF(ABS(UTM1-UT1).LT.1.E-4) SGN=-1.
      IF(SGN.NE.0.) GO TO 4370
 4350 SRAD=C*(1.-(VT2-VO)*(VT2-VO)/D) 
      IF(SRAD.LE.1.E-8) GO TO 4360
      RAD=SQRT(SRAD)
      UTP2=UO+RAD 
      UTM2=UO-RAD 
      IF(ABS(UTP2-UT2).LT.1.E-4) SGN=1. 
      IF(ABS(UTM2-UT2).LT.1.E-4) SGN=-1.
      IF(SGN.NE.0.) GO TO 4370
 4360 DIFP=ABS(UTP1-UT1)+ABS(UTP2-UT2)
      DIFM=ABS(UTM1-UT1)+ABS(UTM2-UT2)
      SGN=1.
      IF(DIFM.LT.DIFP) SGN=-1.
      WRITE(6,10) SGN,UT1,UTP1,UTM1,UT2,UTP2,UTM2,DIFP,DIFM 
   10 FORMAT(/6H CSFLT,F5.0,8F10.4,/) 
C   CALCULATE Z OR Y AND SLOPE POINT
 4370 E=(V-VO)*(V-VO) 
      EX=2.*(V-VO)*(VX-VOX) 
      EXX=2.*((V-VO)*(VXX-VOXX)+(VX-VOX)*(VX-VOX))
      F=1.-E/D
      FX=-(EX+(F-1.)*DX)/D
      FXX=-(EXX+(F-1.)*DXX+2.*FX*DX)/D
      HHHTST=C*F
      IF(HHHTST.LT.0.)WRITE(IRITE,100)I,II,ICOMP,ISP,MODEL,X, 
     1Y1C,Y2C,Z1C,Z2C,SGN,VO,V,VX,VXX,
     2E,EX,EXX,F,FX,FXX,D,DX,DXX
  100 FORMAT(/7H CSMFLT,5I5,F10.4,/1X,9F10.4,/1X,9F10.4,/)
      IF(HHHTST.LT.0.0.AND.ICRITE.NE.IRITE)WRITE(ICRITE,100)I,II,ICOMP, 
     1ISP,MODEL,X,
     2Y1C,Y2C,Z1C,Z2C,SGN,VO,V,VX,VXX,
     3E,EX,EXX,F,FX,FXX,D,DX,DXX
      G=SQRT(C*F) 
      GX=.5*(CX*F+C*FX)/G 
      GXX=(.5*(CXX*F+2.*CX*FX+C*FXX)-GX*GX)/G 
      U=UO+SGN*G
      UX=UOX+SGN*GX 
      UXX=UOXX+SGN*GXX
      P=(V-VO)*C
      PX=(VX-VOX)*C+(V-VO)*CX 
      PXX=(VXX-VOXX)*C+(V-VO)*CXX+2.*(VX-VOX)*CX
      Q=(U-UO)*D
      QX=(UX-UOX)*D+(U-UO)*DX 
      QXX=(UXX-UOXX)*D+(U-UO)*DXX+2.*(UX-UOX)*DX
      S=P/Q 
      SX=(PX-S*QX)/Q
      SXX=(PXX-S*QXX-2.*SX*QX)/Q
      US=U+V*S
      USX=UX+VX*S+V*SX
      USXX=UXX+VXX*S+V*SXX+2.*VX*SX 
      VS=0. 
      VSX=0.
      VSXX=0. 
C   SET FILLET END AND SLOPE POINT ARRAYS 
 4400 GO TO (4410,4420,4420),ISP
C   Z FROM Y
 4410 GO TO (4411,4412),II
C   FIRST POINT 
 4411 Y1(I)=V 
      Y1X(I)=VX 
      Y1XX(I)=VXX 
      Z1(I)=U 
      Z1X(I)=UX 
      Z1XX(I)=UXX 
      Y3(I)=VS
      Y3X(I)=VSX
      Y3XX(I)=VSXX
      Z3(I)=US
      Z3X(I)=USX
      Z3XX(I)=USXX
      GO TO 4490
C   SECOND POINT
 4412 Y2(I)=V 
      Y2X(I)=VX 
      Y2XX(I)=VXX 
      Z2(I)=U 
      Z2X(I)=UX 
      Z2XX(I)=UXX 
      Y4(I)=VS
      Y4X(I)=VSX
      Y4XX(I)=VSXX
      Z4(I)=US
      Z4X(I)=USX
      Z4XX(I)=USXX
      GO TO 4490
C   Y FROM Z
 4420 GO TO (4421,4422),II
C   FIRST POINT 
 4421 Y1(I)=U 
      Y1X(I)=UX 
      Y1XX(I)=UXX 
      Z1(I)=V 
      Z1X(I)=VX 
      Z1XX(I)=VXX 
      Y3(I)=US
      Y3X(I)=USX
      Y3XX(I)=USXX
      Z3(I)=VS
      Z3X(I)=VSX
      Z3XX(I)=VSXX
      GO TO 4490
C   SECOND POINT
 4422 Y2(I)=U 
      Y2X(I)=UX 
      Y2XX(I)=UXX 
      Z2(I)=V 
      Z2X(I)=VX 
      Z2XX(I)=VXX 
      Y4(I)=US
      Y4X(I)=USX
      Y4XX(I)=USXX
      Z4(I)=VS
      Z4X(I)=VSX
      Z4XX(I)=VSXX
 4490 INN(II)=1 
 4500 CONTINUE
      IF(INN(1).EQ.1.AND.INN(2).EQ.1) IN(I)=1 
      IF(IN(I).EQ.-1) GO TO 4900
      IF(ABS(Y3(I)-Y1(I)).LT.1.E-4) GO TO 4510
      IF(ABS(Y4(I)-Y2(I)).LT.1.E-4) GO TO 4520
      S1=(Z3(I)-Z1(I))/(Y3(I)-Y1(I))
      S2=(Z4(I)-Z2(I))/(Y4(I)-Y2(I))
      IF(ABS(S2-S1).LT.1.E-5) GO TO 4580
      YST=(Z1(I)-Z2(I)+S2*Y2(I)-S1*Y1(I))/(S2-S1) 
      ZST=Z1(I)+S1*(YST-Y1(I))
      GO TO 4530
 4510 YST=Y1(I) 
      S2=(Z4(I)-Z2(I))/(Y4(I)-Y2(I))
      ZST=Z2(I)+S2*(YST-Y2(I))
      GO TO 4530
 4520 YST=Y2(I) 
      S1=(Z3(I)-Z1(I))/(Y3(I)-Y1(I))
      ZST=Z1(I)+S1*(YST-Y1(I))
 4530 IF(ABS(Z2(I)-Z1(I)).LT.1.E-4) GO TO 4540
      DSB=(Y2(I)-Y1(I))/(Z2(I)-Z1(I)) 
      YB=Y1(I)+DSB*(ZST-Z1(I))
      IF(KSHAPE(I).LT.0.AND.YST.GE.YB) GO TO 4580 
      IF(KSHAPE(I).GT.0.AND.YST.LE.YB) GO TO 4580 
      GO TO 4590
 4540 IF(KSHAPE(I).LT.0.AND.Z2(I).LT.0..AND.ZST.LE.Z2(I))GO TO 4580 
      IF(KSHAPE(I).LT.0.AND.Z2(I).GT.0..AND.ZST.GE.Z2(I))GO TO 4580 
      IF(KSHAPE(I).GT.0.AND.Z2(I).LT.0..AND.ZST.GE.Z2(I))GO TO 4580 
      IF(KSHAPE(I).GT.0.AND.Z2(I).GT.0..AND.ZST.LE.Z2(I))GO TO 4580 
      GO TO 4590
 4580 IN(I)=-1
 4590 IF(IN(I).EQ.-1) GO TO 4900
C   SET THETA LIMITS
      THETA1(I)=ATAN2(Z1(I),Y1(I))
      THETA2(I)=ATAN2(Z2(I),Y2(I))
      UTHET1(I)=THETA1(I) 
      UTHET2(I)=THETA2(I) 
      UTHET2(IC1)=THETA1(I) 
      UTHET1(IC2)=THETA2(I) 
      IF(UTHET2(IC1).LE.UTHET1(IC1)) IN(IC1)=-1 
      IF(UTHET1(IC2).GE.UTHET2(IC2)) IN(IC2)=-1 
      IF(IC1.EQ.KCOMP(1,I)) GO TO 4600
      IF(ITRY(1).EQ.2) IN(IC1+1)=-1 
 4600 IF(IC2.EQ.KCOMP(2,I)) GO TO 4800
      IF(ITRY(2).EQ.2) IN(IC2-1)=-1 
 4800 CALL CSMCOE(I,KSHAPE(I),KTYPE(I),KFREE(I))
 4900 CONTINUE
      RETURN
      END 
