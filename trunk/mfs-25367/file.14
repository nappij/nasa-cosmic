C
      SUBROUTINE CCA (A, B, NREC, NPIX, NFEAT, LXL, NXN)
C
C     CLUSTER CODING ALGORITHM-BREAKS IMAGE INTO LXL BY NXN
C     ARRAYS AND CLUSTERS EACH ARRAY INTO A MAXIMUM OF
C     32 FEATURES, WRITES OUT A NEW TAPE WITH ORIGINAL
C     DATA REPLACED BY CLOSEST MEAN CLUSTER CENTER
C
C     THE INPUT VARIABLES ARE AS FOLLOWS:
C     A=RECORD OF DATA TO BE PUT INTO B(I,J) FORMAT
C     B(I,J)=DATA ARRAY FOR RECORD I, PIXEL J
C     NREC=NUMBER OF RECORDS DESIRED
C     NPIX=NUMBER OF PIXELS DESIRED
C     NFEAT=NUMBER OF FEATURES/ARRAY
C     LXL=ARRAY LENGTH
C     NXN=ARRAY WIDTH
C
      INTEGER A(NPIX), B(LXL,NPIX)
      DIMENSION V(32,4), IV(32), KNT(32), XBAR(32,4), N(500), NPOP(500),
     .MDEX(500), NDEX(500)
      LOGICAL*1 LM(4)
      EQUIVALENCE (IM, LM(1))
      DATA NITR, NVEC, JFAC, IMOD, JMOD /2, 500, 3, 3, 4/
C
      KOUNT=NVEC
      DO 65 KO=1,KOUNT
   65 NDEX(KO)=KO
      WRITE (6,800) NREC, NPIX, NFEAT, LXL, NXN
C
C     NLONG=LENGTH OF SUBIMAGE IN NUMBER OF LXL ARRAYS
C     NWIDE=WIDTH OF SUBIMAGE IN NUMBER OF NXN ARRAYS
C     NRLNG=NUMBER RECORDS LEFT OVER FROM INTEGER MULTIPLE
C     NRWDE=NUMBER PIXELS LEFT OVER FROM INTEGER MULTIPLE
C     IF THERE ARE PIXELS AND/OR RECORDS LEFT OVER,OUTPUT IMAGE
C     WILL BE AN ADDITIONAL ARRAY WIDE AND/OR LONG
      NLONG=NREC/LXL
      NWIDE=NPIX/NXN
      NRLNG=NREC-NLONG*LXL
      NRWDE=NPIX-NWIDE*NXN
      IF (NRLNG.NE.0) NLONG=NLONG+1
      IF (NRWDE.NE.0) NWIDE=NWIDE+1
C
C     START READING IN THE DESIRED DATA
C     NL=THE LENGTH OF THE SUBIMAGE IN LXL ARRAYS
      MXN = LXL
      DO 480 NL=1,NLONG
      IF (NL.EQ.NLONG.AND.NRLNG.NE.0) MXN=NRLNG
C
C     READ IN LXL RECORDS OF DATA (A) AND PUT INTO B
      DO 150 NR=1,MXN
      READ (10) A
      DO 130 NP=1,NPIX
  130 B(NR,NP) = A(NP)
  150 CONTINUE
C
C     THE FIRST STEP IS TO COMPUTE A FOUR-D HISTOGRAM
C     AND FIND THE MODE
C
C     EACH SUBIMAGE RECORD IS NWIDE NUMBER OF NXN ARRAYS
C     WIDE-MSTART AND MSTOP ARE THE START AND STOP PIXELS
C     IN EACH RECORD FOR EACH ARRAY
      DO 440 NW=1,NWIDE
      MSTOP=NW*NXN
      MSTART= MSTOP-NXN+1
      IF(NW.EQ.NWIDE) MSTOP=NPIX
      TOT=MXN*(MSTOP-MSTART+1)
      DO 160 KO=1,KOUNT
      L=NDEX(KO)
  160 NPOP(L)=0
      KOUNT=0
C
C     LOOP OVER MXN RECORDS
      DO 190 NR=1,MXN
C
      DO 185 NP=MSTART,MSTOP
      IM = B(NR,NP)
C
C     HASH ROUTINE
C     ACCUMULATE FOUR DIMENSIONAL HISTOGRAM
C
C     COMPUTE TABLE LOCATION FROM VECTOR COMPONENTS
      L=0
      DO 172 NC=1,4
      NXX = LM(NC)
  172 L = L*JMOD + MOD(NXX,IMOD)
      L=L*JFAC+1
C
C     CHECK FOR EMPTY TABLE LOCATION
  174 IF(NPOP(L).NE.0)GO TO 177
C
C     HAVE FOUND A NEW VECTOR, INCREMENT VECTOR COUNTER
      KOUNT=KOUNT+1
C
C     SET POPULATION OF NEW VECTOR TO ONE
      NPOP(L)=1
      NDEX(KOUNT)=L
C
C     PUT NEW VECTOR INTO TABLE
      N(L) = IM
      GO TO 180
C
C     CHECK TO SEE IF VECTOR IS IN TABLE
  177 IF (N(L).NE.IM) GO TO 179
C
C     VECTOR IS IN TABLE, INCREMENT POPULATION COUNTER
      NPOP(L)=NPOP(L)+1
      GO TO 180
C
C     VECTOR IS NOT THE SAME AS THE ONE WITH INDEX L
C     TRY THE NEXT INDEX
  179 L=L+1
C
C     CHECK TO SEE IF INDEX IS LARGER THAN END OF TABLE
C     IF SO, SET INDEX TO ONE AND START AT BEGINNING OF TABLE
      IF(L.GT.NVEC)L=1
      GO TO 174
C
C     REPLACE THE ORIGINAL DATA WITH ITS TABLE LOCATION L
  180 CONTINUE
      B(NR,NP) = L
C
C     RETURN TO NEXT VECTOR
  185 CONTINUE
C
C     RETURN TO NEXT RECORD
  190 CONTINUE
C
C     FIND NFEAT CLUSTERS
      LFEAT = MIN0 (NFEAT, KOUNT)
      DELTA = FLOAT(KOUNT-1)/FLOAT(LFEAT-1)
      DO 220 MF=1,LFEAT
      ICHEK = 1.0+(MF-1)*DELTA+0.5
      L=NDEX(ICHEK)
      IM = N(L)
      DO 210 NC=1,4
  210 V(MF,NC) = LM(NC)
  220 CONTINUE
C
C     THE NEXT STEP IS TO ITERATE TO IMPROVE INITIAL CLUSTER ESTIMATE
C     KNT(NF) = POPULATION OF CLUSTER NF
C     XBAR(NF,NC)=MEAN VECTOR OF CLUSTER NF
      DO 380 IT=1,NITR
      DO 300 NF=1,LFEAT
      KNT(NF) = 0
      DO 290 NC=1,4
  290 XBAR(NF,NC)=0.0
  300 CONTINUE
C
C     FOR EACH PIXEL VECTOR, FIND THE CLOSEST CLUSTER
      DO 340 KO=1,KOUNT
      L=NDEX(KO)
      IM = N(L)
      XMIN=100000.0
      DO 320 NF=1,LFEAT
      SUM = 0.0
      DO 310 NC=1,4
      XX = LM(NC)
      SUM = SUM + (V(NF,NC)-XX)**2
      IF (SUM.GE.XMIN) GO TO 320
  310 CONTINUE
      XMIN = SUM
      MFEAT=NF
      IF (SUM.LE.1.5) GO TO 325
  320 CONTINUE
C
C     HAVE NOW FOUND CLUSTER THAT IS CLOSEST TO A PIXEL
C     VECTOR - NEXT UPDATE CLUSTER POPULATION AND COMPUTE
C     CLUSTER MEAN VECTOR
  325 C = KNT(MFEAT)
      KNT(MFEAT) = KNT(MFEAT)+NPOP(L)
      DO 330 NC=1,4
      XX = LM(NC)*NPOP(L)
  330 XBAR(MFEAT,NC)=(C*XBAR(MFEAT,NC)+XX)/KNT(MFEAT)
C
C     RETURN TO NEXT PIXEL
  340 CONTINUE
C
C     REPLACE OLD CLUSTER VECTOR WITH NEW CLUSTER VECTOR
      DO 360 NF=1,LFEAT
      DO 360 NC=1,4
  360 V(NF,NC)=XBAR(NF,NC)
C
C     RETURN FOR NEXT ITERATION
  380 CONTINUE
C
C     AFTER COMPLETING ITERATIONS, FIND THE CLUSTER CLOSEST TO
C     EACH DATA VECTOR IN THE TABLE
      DO 420 KO=1,KOUNT
      L=NDEX(KO)
      IM = N(L)
      XMIN=100000.0
      DO 400 NF=1,LFEAT
      SUM = 0.0
      DO 390 NC=1,4
      XX = LM(NC)
      SUM = SUM + (V(NF,NC)-XX)**2
      IF (SUM.GE.XMIN) GO TO 400
  390 CONTINUE
      XMIN = SUM
      MFEAT=NF
      IF (SUM.LE.1.5) GO TO 410
  400 CONTINUE
  410 CONTINUE
C
C     STORE THE CLUSTER NUMBER IN ARRAY MDEX
      MDEX(L)=MFEAT
C
C     RETURN TO NEXT PIXEL
  420 CONTINUE
C
C     REPLACE DATA VECTORS WITH CLUSTER CENTROIDS
      DO 422 NF=1,LFEAT
      DO 421 NC=1,4
  421 LM(NC) = V(NF,NC) + 0.5
  422 IV(NF) = IM
      DO 435 NR=1,MXN
      DO 430 NP=MSTART,MSTOP
      L = B(NR,NP)
      MFEAT=MDEX(L)
      B(NR,NP) = IV(MFEAT)
  430 CONTINUE
  435 CONTINUE
C
C     RETURN TO NEXT DATA BLOCK (NXN ARRAY) ACROSS THE IMAGE
  440 CONTINUE
C
C     AFTER CLUSTERING HAS BEEN COMPLETED ACROSS THE IMAGE,
C     THE CLUSTERED DATA IS WRITTEN OUT LXL RECORDS AT A TIME BY
C     PUTTING B BACK INTO THE A DATA FORMAT
      DO 470 NR=1,MXN
      DO 460 NP=1,NPIX
  460 A(NP) = B(NR,NP)
  470 WRITE (11) A
C
C     LXL RECORDS HAVE BEEN WRITTEN THAT GO ACROSS THE
C     IMAGE. THE NEXT STEP IS TO READ IN LXL MORE DATA
C     RECORDS TO GO DOWN THE IMAGE. THIS IS ACCOMPLISHED BY
C     THE NEXT RETURN.
  480 CONTINUE
      RETURN
C
  800 FORMAT ('1',20X,'CLUSTER CODING ALGORITHM'/21X,24('*')//21X,'RECOR
     .DS USED',I12//21X,'PIXELS USED',I13//21X,'FEATURES/ARRAY',I10//21X
     .,'ARRAY LENGTH (SCANS)',I4//21X,'ARRAY WIDTH (PIXELS)',I4//)
      END
